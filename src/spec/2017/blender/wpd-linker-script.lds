/* Script for -pie -z combreloc -z now -z relro: position independent executable, combine & sort relocs */
/* Copyright (C) 2014-2018 Free Software Foundation, Inc.
Copying and distribution of this script, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.  */
OUTPUT_FORMAT("elf64-x86-64", "elf64-x86-64",
"elf64-x86-64")
OUTPUT_ARCH(i386:x86-64)
ENTRY(_start)
SEARCH_DIR("=/usr/local/lib/x86_64-linux-gnu"); SEARCH_DIR("=/lib/x86_64-linux-gnu"); SEARCH_DIR("=/usr/lib/x86_64-linux-gnu"); SEARCH_DIR("=/usr/lib/x86_64-linux-gnu64"); SEARCH_DIR("=/usr/local/lib64"); SEARCH_DIR("=/lib64"); SEARCH_DIR("=/usr/lib64"); SEARCH_DIR("=/usr/local/lib"); SEARCH_DIR("=/lib"); SEARCH_DIR("=/usr/lib"); SEARCH_DIR("=/usr/x86_64-linux-gnu/lib64"); SEARCH_DIR("=/usr/x86_64-linux-gnu/lib");
SECTIONS
{
/* Read-only sections, merged into text segment: */
PROVIDE (__executable_start = SEGMENT_START("text-segment", 0)); . = SEGMENT_START("text-segment", 0) + SIZEOF_HEADERS;
.interp         : { *(.interp) }
.note.gnu.build-id : { *(.note.gnu.build-id) }
.hash           : { *(.hash) }
.gnu.hash       : { *(.gnu.hash) }
.dynsym         : { *(.dynsym) }
.dynstr         : { *(.dynstr) }
.gnu.version    : { *(.gnu.version) }
.gnu.version_d  : { *(.gnu.version_d) }
.gnu.version_r  : { *(.gnu.version_r) }
.rela.dyn       :
{
*(.rela.init)
*(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
*(.rela.fini)
*(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
*(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
*(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
*(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
*(.rela.ctors)
*(.rela.dtors)
*(.rela.got)
*(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)
*(.rela.ldata .rela.ldata.* .rela.gnu.linkonce.l.*)
*(.rela.lbss .rela.lbss.* .rela.gnu.linkonce.lb.*)
*(.rela.lrodata .rela.lrodata.* .rela.gnu.linkonce.lr.*)
*(.rela.ifunc)
}
.rela.plt       :
{
*(.rela.plt)
PROVIDE_HIDDEN (__rela_iplt_start = .);
*(.rela.iplt)
PROVIDE_HIDDEN (__rela_iplt_end = .);
}
.init           :
{
KEEP (*(SORT_NONE(.init)))
}
.plt            : { *(.plt) *(.iplt) }
.plt.got        : { *(.plt.got) }
.plt.sec        : { *(.plt.sec) }
.text ALIGN(0x1000):
{
*(.text.unlikely .text.*_unlikely .text.unlikely.*)
*(.text.exit .text.exit.*)
*(.text.startup .text.startup.*)
*(.text.hot .text.hot.*)
*(.stub .gnu.linkonce.t.*)
*(.text)
. = ALIGN(0x1000);
*(.text.IMB_tile_cache_params)
. = ALIGN(0x1000);
*(.text.colormanagement_init)
. = ALIGN(0x1000);
*(.text.BKE_modifier_init)
. = ALIGN(0x1000);
*(.text.internalAdd)
. = ALIGN(0x1000);
*(.text.BLI_argsParse)
. = ALIGN(0x1000);
*(.text.init_nodesystem)
. = ALIGN(0x1000);
*(.text.WM_init)
. = ALIGN(0x1000);
*(.text.BLI_ghash_free)
. = ALIGN(0x1000);
*(.text.WM_init_game)
. = ALIGN(0x1000);
*(.text.WM_main)
. = ALIGN(0x1000);
*(.text.register_standard_node_socket_types)
. = ALIGN(0x1000);
*(.text.node_type_base)
. = ALIGN(0x1000);
*(.text.node_type_storage)
. = ALIGN(0x1000);
*(.text.register_node_type_cmp_group)
. = ALIGN(0x1000);
*(.text.node_type_socket_templates)
. = ALIGN(0x1000);
*(.text.register_node_type_sh_group)
. = ALIGN(0x1000);
*(.text.register_node_type_tex_group)
. = ALIGN(0x1000);
*(.text.pbvh_update_BB_redraw)
. = ALIGN(0x1000);
*(.text.wm_cursor_arrow_move .text.wm_drags_check_ops .text.wm_event_do_notifiers .text.wm_event_do_handlers .text.wm_handlers_do .text.wm_handlers_do_intern .text.wm_eventmatch .text.wm_handler_operator_call .text.wm_autosave_timer .text.wm_jobs_timer .text.wm_tweakevent_test .text.wm_window_process_events .text.ED_view3d_screen_datamask .text.ED_screen_do_listen .text.ED_screen_set_subwinactive .text.ED_screen_delete)
. = ALIGN(0x1000);
*(.text.wm_operatortype_init)
. = ALIGN(0x1000);
*(.text.ED_spacetypes_init)
. = ALIGN(0x1000);
*(.text.ED_node_init_butfuncs)
. = ALIGN(0x1000);
*(.text.ED_spacemacros_init)
. = ALIGN(0x1000);
*(.text.WM_operatortype_remove_ptr)
. = ALIGN(0x1000);
*(.text.ED_fileselect_init_layout)
. = ALIGN(0x1000);
*(.text.index_to_framebuffer)
. = ALIGN(0x1000);
*(.text.cpack)
. = ALIGN(0x1000);
*(.text.ED_spacetype_outliner)
. = ALIGN(0x1000);
*(.text.ED_spacetype_time)
. = ALIGN(0x1000);
*(.text.ED_spacetype_view3d)
. = ALIGN(0x1000);
*(.text.ED_spacetype_ipo)
. = ALIGN(0x1000);
*(.text.ED_spacetype_image)
. = ALIGN(0x1000);
*(.text.ED_spacetype_node)
. = ALIGN(0x1000);
*(.text.ED_spacetype_buttons)
. = ALIGN(0x1000);
*(.text.ED_spacetype_info)
. = ALIGN(0x1000);
*(.text.ED_spacetype_file)
. = ALIGN(0x1000);
*(.text.ED_spacetype_action)
. = ALIGN(0x1000);
*(.text.ED_spacetype_nla)
. = ALIGN(0x1000);
*(.text.ED_spacetype_script)
. = ALIGN(0x1000);
*(.text.ED_spacetype_text)
. = ALIGN(0x1000);
*(.text.ED_spacetype_sequencer)
. = ALIGN(0x1000);
*(.text.ED_spacetype_logic)
. = ALIGN(0x1000);
*(.text.ED_spacetype_console)
. = ALIGN(0x1000);
*(.text.ED_spacetype_userpref)
. = ALIGN(0x1000);
*(.text.ED_spacetype_clip)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_screen)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_anim)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_animchannels)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_gpencil)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_object)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_mesh)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_sculpt)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_uvedit)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_paint)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_physics)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_curve)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_armature)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_marker)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_metaball)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_sound)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_render)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_logic)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_mask)
. = ALIGN(0x1000);
*(.text.ED_operatortypes_view2d)
. = ALIGN(0x1000);
*(.text.UI_buttons_operatortypes)
. = ALIGN(0x1000);
*(.text.ED_operatormacros_armature)
. = ALIGN(0x1000);
*(.text.ED_operatormacros_mesh)
. = ALIGN(0x1000);
*(.text.WM_operatortype_append_macro)
. = ALIGN(0x1000);
*(.text.WM_operatortype_macro_define)
. = ALIGN(0x1000);
*(.text.ED_operatormacros_node)
. = ALIGN(0x1000);
*(.text.ED_operatormacros_object)
. = ALIGN(0x1000);
*(.text.ED_operatormacros_curve)
. = ALIGN(0x1000);
*(.text.ED_operatormacros_mask)
. = ALIGN(0x1000);
*(.text.ANIM_channel_draw_widgets .text.draw_setting_widget)
. = ALIGN(0x1000);
*(.text.draw_image_buffer)
. = ALIGN(0x1000);
*(.text.glPixelZoom)
. = ALIGN(0x1000);
*(.text.UI_view2d_view_to_region)
. = ALIGN(0x1000);
*(.text.ED_region_info_draw)
. = ALIGN(0x1000);
*(.text.file_draw_check_exists)
. = ALIGN(0x1000);
*(.text.ED_fileselect_layout_tilepos)
. = ALIGN(0x1000);
*(.text.UI_ThemeColor4)
. = ALIGN(0x1000);
*(.text.file_panels_register)
. = ALIGN(0x1000);
*(.text.graph_buttons_register)
. = ALIGN(0x1000);
*(.text.draw_brick_actuator)
. = ALIGN(0x1000);
*(.text.uiTemplateGameStates)
. = ALIGN(0x1000);
*(.text.UI_view2d_totRect_set)
. = ALIGN(0x1000);
*(.text.ANIM_channel_draw)
. = ALIGN(0x1000);
*(.text.nla_buttons_register)
. = ALIGN(0x1000);
*(.text.ED_view3d_global_to_vector)
. = ALIGN(0x1000);
*(.text.UI_view2d_scale_get_inverse)
. = ALIGN(0x1000);
*(.text.weight_to_rgb)
. = ALIGN(0x1000);
*(.text.glPointSize)
. = ALIGN(0x1000);
*(.text.node_buttons_register)
. = ALIGN(0x1000);
*(.text.outliner_build_tree)
. = ALIGN(0x1000);
*(.text.outliner_height)
. = ALIGN(0x1000);
*(.text.outliner_rna_width)
. = ALIGN(0x1000);
*(.text.outliner_find_tree_element)
. = ALIGN(0x1000);
*(.text.outliner_add_library_contents)
. = ALIGN(0x1000);
*(.text.outliner_add_element .text.outliner_add_scene_contents .text.outliner_add_bone .text.BKE_treehash_create_from_treestore .text.BKE_treehash_add_element)
. = ALIGN(0x1000);
*(.text.outliner_sort)
. = ALIGN(0x1000);
*(.text.outliner_filter_tree)
. = ALIGN(0x1000);
*(.text.init_userdef_do_versions)
. = ALIGN(0x1000);
*(.text.ui_shadowbox)
. = ALIGN(0x1000);
*(.text.glPopMatrix)
. = ALIGN(0x1000);
*(.text.mul_mat3_m4_fl)
. = ALIGN(0x1000);
*(.text.GPU_select_load_id)
. = ALIGN(0x1000);
*(.text.UI_ThemeColorBlend)
. = ALIGN(0x1000);
*(.text.drawcircball)
. = ALIGN(0x1000);
*(.text.mid_v3_v3v3)
. = ALIGN(0x1000);
*(.text.glRasterPos3fv)
. = ALIGN(0x1000);
*(.text.draw_motion_paths_init)
. = ALIGN(0x1000);
*(.text.draw_pose_bones)
. = ALIGN(0x1000);
*(.text.glFrontFace)
. = ALIGN(0x1000);
*(.text.draw_mesh_paint)
. = ALIGN(0x1000);
*(.text.glColorMaterial)
. = ALIGN(0x1000);
*(.text.draw_mesh_face_select)
. = ALIGN(0x1000);
*(.text.set_inverted_drawing)
. = ALIGN(0x1000);
*(.text.draw_mesh_paint_weight_edges)
. = ALIGN(0x1000);
*(.text.glGenLists)
. = ALIGN(0x1000);
*(.text.gluNewQuadric)
. = ALIGN(0x1000);
*(.text.ED_view3d_clipping_disable)
. = ALIGN(0x1000);
*(.text.glMultMatrixf)
. = ALIGN(0x1000);
*(.text.GPU_begin_object_materials)
. = ALIGN(0x1000);
*(.text.draw_empty_image)
. = ALIGN(0x1000);
*(.text.drawaxes)
. = ALIGN(0x1000);
*(.text.GPU_texture_create_1D)
. = ALIGN(0x1000);
*(.text.glGetBooleanv)
. = ALIGN(0x1000);
*(.text.view3d_buttons_register)
. = ALIGN(0x1000);
*(.text.glClipPlane)
. = ALIGN(0x1000);
*(.text.view3d_viewmatrix_set)
. = ALIGN(0x1000);
*(.text.UI_view2d_scale_get)
. = ALIGN(0x1000);
*(.text.get_bone_from_selectbuffer)
. = ALIGN(0x1000);
*(.text.wmOrtho2_region_pixelspace)
. = ALIGN(0x1000);
*(.text.UI_SetTheme)
. = ALIGN(0x1000);
*(.text.BLF_size)
. = ALIGN(0x1000);
*(.text.BLF_width_and_height)
. = ALIGN(0x1000);
*(.text.glRecti)
. = ALIGN(0x1000);
*(.text.glLogicOp)
. = ALIGN(0x1000);
*(.text.glRasterPos2f)
. = ALIGN(0x1000);
*(.text.glVertex3fv)
. = ALIGN(0x1000);
*(.text.glVertex3f)
. = ALIGN(0x1000);
*(.text.glVertex2fv)
. = ALIGN(0x1000);
*(.text.glTexEnvi)
. = ALIGN(0x1000);
*(.text.glaDrawImBuf_glsl)
. = ALIGN(0x1000);
*(.text.paint_stroke_operator_properties)
. = ALIGN(0x1000);
*(.text.paint_calc_redraw_planes)
. = ALIGN(0x1000);
*(.text.RNA_def_int_array)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_border)
. = ALIGN(0x1000);
*(.text.uiDefIconTextButO_ptr)
. = ALIGN(0x1000);
*(.text.antialias_tagbuf)
. = ALIGN(0x1000);
*(.text.icon_draw_size)
. = ALIGN(0x1000);
*(.text.blf_draw__start)
. = ALIGN(0x1000);
*(.text.uiStyleFontDrawExt)
. = ALIGN(0x1000);
*(.text.BKE_curve_forward_diff_bezier)
. = ALIGN(0x1000);
*(.text.rgb_to_hsv_compat_v)
. = ALIGN(0x1000);
*(.text.UI_view2d_view_to_region_rcti_clip)
. = ALIGN(0x1000);
*(.text.RIG_printArc .text.RIG_printLinkedCtrl)
. = ALIGN(0x1000);
*(.text.retargetSubgraph .text.findCorrespondingArc .text.matchMultiResolutionArc)
. = ALIGN(0x1000);
*(.text.sk_drawSketch)
. = ALIGN(0x1000);
*(.text.glClear)
. = ALIGN(0x1000);
*(.text.BKE_tracking_sample_pattern)
. = ALIGN(0x1000);
*(.text.unit_scale_str)
. = ALIGN(0x1000);
*(.text.rna_raw_access)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_raw_array)
. = ALIGN(0x1000);
*(.text.RNA_function_call_direct_va)
. = ALIGN(0x1000);
*(.text.rna_function_parameter_parse)
. = ALIGN(0x1000);
*(.text.glScalef)
. = ALIGN(0x1000);
*(.text.BLI_dlrbTree_linkedlist_sync)
. = ALIGN(0x1000);
*(.text.draw_keylist)
. = ALIGN(0x1000);
*(.text.mask_draw_curve_type)
. = ALIGN(0x1000);
*(.text.ED_clip_point_undistorted_pos)
. = ALIGN(0x1000);
*(.text.BM_face_exists_multi)
. = ALIGN(0x1000);
*(.text.bm_mesh_calc_volume_face)
. = ALIGN(0x1000);
*(.text.BKE_camera_view_frame_ex)
. = ALIGN(0x1000);
*(.text.CTX_data_dir_get_ex)
. = ALIGN(0x1000);
*(.text.BKE_nurb_handles_autocalc)
. = ALIGN(0x1000);
*(.text.IMB_moviecache_get_cache_segments)
. = ALIGN(0x1000);
*(.text.GPU_create_gl_tex)
. = ALIGN(0x1000);
*(.text.glTexGeni)
. = ALIGN(0x1000);
*(.text.GPU_material_matcap)
. = ALIGN(0x1000);
*(.text.GPU_disable_material)
. = ALIGN(0x1000);
*(.text.GPU_shader_bind)
. = ALIGN(0x1000);
*(.text.GPU_framebuffer_blur)
. = ALIGN(0x1000);
*(.text.glLightfv)
. = ALIGN(0x1000);
*(.text.glSelectBuffer)
. = ALIGN(0x1000);
*(.text.glLoadName)
. = ALIGN(0x1000);
*(.text.glPopName)
. = ALIGN(0x1000);
*(.text.glPopAttrib)
. = ALIGN(0x1000);
*(.text.blo_read_blendafterruntime)
. = ALIGN(0x1000);
*(.text.imb_global_cache_get_tile .text.imb_loadtile)
. = ALIGN(0x1000);
*(.text.colormanage_load_config)
. = ALIGN(0x1000);
*(.text.colormanage_colorspace_add)
. = ALIGN(0x1000);
*(.text.imb_filterx)
. = ALIGN(0x1000);
*(.text.IMB_double_fast_x)
. = ALIGN(0x1000);
*(.text.IMB_double_fast_y)
. = ALIGN(0x1000);
*(.text.gzseek64)
. = ALIGN(0x1000);
*(.text.BLI_ghash_clear_ex)
. = ALIGN(0x1000);
*(.text.BLI_convexhull_2d_sorted)
. = ALIGN(0x1000);
*(.text.BLI_convexhull_2d)
. = ALIGN(0x1000);
*(.text.flagSubgraph)
. = ALIGN(0x1000);
*(.text.BLI_subtreeLength)
. = ALIGN(0x1000);
*(.text.rgb_float_set_hue_float_offset)
. = ALIGN(0x1000);
*(.text.invert_m3_m3_ex)
. = ALIGN(0x1000);
*(.text.mk_wcswidth)
. = ALIGN(0x1000);
*(.text.voronoi_checkCircle)
. = ALIGN(0x1000);
*(.text.voronoi_finishEdge)
. = ALIGN(0x1000);
*(.text.voronoi_addTriangulationPoint)
. = ALIGN(0x1000);
*(.text.voronoi_clampEdgeVertex)
. = ALIGN(0x1000);
*(.text.glewContextInit)
. = ALIGN(0x1000);
*(.text._ZNSt6vectorI10STR_StringSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_)
. = ALIGN(0x1000);
*(.text._ZNSt6vectorI10STR_StringSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_)
. = ALIGN(0x1000);
*(.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPK10STR_StringPS2_EET0_T_S7_S6_)
. = ALIGN(0x1000);
*(.text.colamd_recommended)
. = ALIGN(0x1000);
*(.text.colamd)
. = ALIGN(0x1000);
*(.text.print_report)
. = ALIGN(0x1000);
*(.text.blf_font_init)
. = ALIGN(0x1000);
*(.text.blf_font_exit)
. = ALIGN(0x1000);
*(.text.FT_Attach_Stream)
. = ALIGN(0x1000);
*(.text.FT_Done_FreeType)
. = ALIGN(0x1000);
*(.text.blf_glyph_render .text.blf_glyph_cache_texture .text.blf_texture3_draw .text.blf_texture5_draw .text.blf_next_p2)
. = ALIGN(0x1000);
*(.text.FT_Load_Glyph)
. = ALIGN(0x1000);
*(.text._ZNSt8_Rb_treeIN9RangeTreeIjE5RangeES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_)
. = ALIGN(0x1000);
*(.text._ZNSt8_Rb_treeIN9RangeTreeIjE5RangeES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_)
. = ALIGN(0x1000);
*(.text._ZNK9RangeTreeIjE5printEv)
. = ALIGN(0x1000);
*(.text.glGetString)
. = ALIGN(0x1000);
*(.text.crc32_combine_)
. = ALIGN(0x1000);
*(.text.inflateReset2)
. = ALIGN(0x1000);
*(.text.png_fixed_error)
. = ALIGN(0x1000);
*(.text.png_xy_from_XYZ)
. = ALIGN(0x1000);
*(.text.png_set_cHRM_XYZ_fixed)
. = ALIGN(0x1000);
*(.text.png_ascii_from_fp)
. = ALIGN(0x1000);
*(.text.png_ascii_from_fixed)
. = ALIGN(0x1000);
*(.text.png_push_read_sig)
. = ALIGN(0x1000);
*(.text.png_push_read_chunk)
. = ALIGN(0x1000);
*(.text.png_push_read_IDAT .text.png_process_IDAT_data .text.png_push_process_row .text.png_read_push_finish_row)
. = ALIGN(0x1000);
*(.text.png_free .text.png_push_save_buffer)
. = ALIGN(0x1000);
*(.text.png_push_crc_finish)
. = ALIGN(0x1000);
*(.text.png_read_transform_info)
. = ALIGN(0x1000);
*(.text.png_init_filter_heuristics)
. = ALIGN(0x1000);
*(.text.png_set_alpha_mode_fixed)
. = ALIGN(0x1000);
*(.text.spec_genrand_int32)
. = ALIGN(0x1000);
*(.text.node_poll_default)
. = ALIGN(0x1000);
*(.text.node_poll_instance_default)
. = ALIGN(0x1000);
*(.text.unique_socket_template_identifier_check)
. = ALIGN(0x1000);
*(.text.node_undefined_poll)
. = ALIGN(0x1000);
*(.text.unlink_object__unlinkModifierLinks)
. = ALIGN(0x1000);
*(.text.extern_local_object__modifiersForeachIDLink)
. = ALIGN(0x1000);
*(.text.copy_object__forwardModifierLinks)
. = ALIGN(0x1000);
*(.text.make_duplis_group)
. = ALIGN(0x1000);
*(.text.make_duplis_font)
. = ALIGN(0x1000);
*(.text.make_duplis_particles .text.psys_check_group_weights .text.psys_get_dupli_texture .text.psys_get_dupli_path_transform)
. = ALIGN(0x1000);
*(.text.make_duplis_verts)
. = ALIGN(0x1000);
*(.text.make_child_duplis_verts)
. = ALIGN(0x1000);
*(.text.make_child_duplis_faces)
. = ALIGN(0x1000);
*(.text.vertex_dupli__mapFunc)
. = ALIGN(0x1000);
*(.text.make_duplis_faces)
. = ALIGN(0x1000);
*(.text.make_child_duplis)
. = ALIGN(0x1000);
*(.text.make_duplis_frames)
. = ALIGN(0x1000);
*(.text.sph_force_cb)
. = ALIGN(0x1000);
*(.text.sphclassical_force_cb)
. = ALIGN(0x1000);
*(.text.sph_density_accum_cb)
. = ALIGN(0x1000);
*(.text.sphclassical_density_accum_cb)
. = ALIGN(0x1000);
*(.text.sphclassical_neighbour_accum_cb)
. = ALIGN(0x1000);
*(.text.BKE_psys_collision_neartest_cb .text.collision_newton_rhapson .text.collision_interpolate_element)
. = ALIGN(0x1000);
*(.text.nr_signed_distance_to_plane)
. = ALIGN(0x1000);
*(.text.nr_distance_to_edge)
. = ALIGN(0x1000);
*(.text.distribute_compare_orig_index)
. = ALIGN(0x1000);
*(.text.basic_force_cb)
. = ALIGN(0x1000);
*(.text.update_search_cb)
. = ALIGN(0x1000);
*(.text.Action_fcurves_begin)
. = ALIGN(0x1000);
*(.text.Action_fcurves_next)
. = ALIGN(0x1000);
*(.text.Action_fcurves_end)
. = ALIGN(0x1000);
*(.text.Action_fcurves_get)
. = ALIGN(0x1000);
*(.text.Action_fcurves_lookup_int)
. = ALIGN(0x1000);
*(.text.ActionFCurves_remove_call)
. = ALIGN(0x1000);
*(.text.rna_Action_fcurve_remove)
. = ALIGN(0x1000);
*(.text.ActionFCurves_new_call)
. = ALIGN(0x1000);
*(.text.ActionFCurves_rna_type_get)
. = ALIGN(0x1000);
*(.text.ActionFCurves_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ActionFCurves_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ActionFCurves_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ActionFCurves_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ActionFCurves_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Action_id_root_get)
. = ALIGN(0x1000);
*(.text.Action_id_root_set)
. = ALIGN(0x1000);
*(.text.Action_frame_range_get)
. = ALIGN(0x1000);
*(.text.Action_pose_markers_begin)
. = ALIGN(0x1000);
*(.text.Action_pose_markers_next)
. = ALIGN(0x1000);
*(.text.Action_pose_markers_end)
. = ALIGN(0x1000);
*(.text.Action_pose_markers_get)
. = ALIGN(0x1000);
*(.text.Action_pose_markers_lookup_int)
. = ALIGN(0x1000);
*(.text.Action_pose_markers_lookup_string)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_remove_call)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_new_call)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_active_index_get)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Action_active_pose_marker_index_range)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_active_get)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_active_set)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_rna_type_get)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ActionPoseMarkers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ActionGroup_name_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_name_length)
. = ALIGN(0x1000);
*(.text.ActionGroup_name_set)
. = ALIGN(0x1000);
*(.text.ActionGroup_rna_type_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_channels_begin)
. = ALIGN(0x1000);
*(.text.ActionGroup_channels_next)
. = ALIGN(0x1000);
*(.text.ActionGroup_channels_end)
. = ALIGN(0x1000);
*(.text.ActionGroup_channels_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_select_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_select_set)
. = ALIGN(0x1000);
*(.text.ActionGroup_lock_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_lock_set)
. = ALIGN(0x1000);
*(.text.ActionGroup_show_expanded_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_show_expanded_set)
. = ALIGN(0x1000);
*(.text.ActionGroup_color_set_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_color_set_set)
. = ALIGN(0x1000);
*(.text.ActionGroup_is_custom_color_set_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_colors_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ActionGroup_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ActionGroup_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ActionGroup_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ActionGroup_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_speakers_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_speakers_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_nodes_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_nodes_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_armatures_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_armatures_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_metaballs_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_metaballs_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_particles_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_particles_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_scenes_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_scenes_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_worlds_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_worlds_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_curves_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_curves_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_textures_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_textures_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_linestyles_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_linestyles_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_lamps_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_lamps_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_materials_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_materials_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_cameras_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_cameras_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_lattices_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_lattices_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_meshes_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_meshes_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_modifiers_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_modifiers_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_shapekeys_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_shapekeys_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_transforms_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_transforms_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_expanded_summary_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_expanded_summary_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_summary_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_summary_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_missing_nla_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_missing_nla_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_filter_fcurve_name_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_filter_fcurve_name_length)
. = ALIGN(0x1000);
*(.text.DopeSheet_filter_fcurve_name_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_matching_fcurves_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_matching_fcurves_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_filter_group_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_filter_group_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_group_objects_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_group_objects_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_errors_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_errors_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_hidden_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_hidden_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_selected_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_only_selected_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_datablock_filters_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_show_datablock_filters_set)
. = ALIGN(0x1000);
*(.text.DopeSheet_source_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_rna_type_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DopeSheet_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DopeSheet_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DopeSheet_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DopeSheet_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ActionGroups_remove_call)
. = ALIGN(0x1000);
*(.text.ActionGroups_new_call)
. = ALIGN(0x1000);
*(.text.ActionGroups_rna_type_get)
. = ALIGN(0x1000);
*(.text.ActionGroups_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ActionGroups_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ActionGroups_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ActionGroups_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ActionGroups_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Action_groups_begin)
. = ALIGN(0x1000);
*(.text.Action_groups_next)
. = ALIGN(0x1000);
*(.text.Action_groups_end)
. = ALIGN(0x1000);
*(.text.Action_groups_get)
. = ALIGN(0x1000);
*(.text.Action_groups_lookup_int)
. = ALIGN(0x1000);
*(.text.Action_groups_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Action_id_poll)
. = ALIGN(0x1000);
*(.text.rna_Action_actedit_assign_poll)
. = ALIGN(0x1000);
*(.text.rna_Actuator_refine)
. = ALIGN(0x1000);
*(.text.Actuator_unlink_call)
. = ALIGN(0x1000);
*(.text.Actuator_link_call)
. = ALIGN(0x1000);
*(.text.MouseActuator_max_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_max_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_min_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_min_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_max_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_max_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_min_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_min_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_sensitivity_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_sensitivity_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_sensitivity_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_sensitivity_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_object_axis_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_object_axis_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_object_axis_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_object_axis_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_threshold_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_threshold_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_threshold_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_threshold_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_local_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_local_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_local_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_local_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_reset_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_reset_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_reset_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_reset_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_use_axis_y_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_use_axis_y_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_use_axis_x_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_use_axis_x_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_visible_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_visible_set)
. = ALIGN(0x1000);
*(.text.MouseActuator_mode_get)
. = ALIGN(0x1000);
*(.text.MouseActuator_mode_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_normal_up_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_normal_up_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_facing_axis_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_facing_axis_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_facing_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_facing_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_navmesh_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_navmesh_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_update_period_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_update_period_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_show_visualization_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_show_visualization_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_self_terminated_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_self_terminated_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_target_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_target_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_distance_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_distance_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_turn_speed_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_turn_speed_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_acceleration_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_acceleration_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_velocity_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_velocity_set)
. = ALIGN(0x1000);
*(.text.SteeringActuator_mode_get)
. = ALIGN(0x1000);
*(.text.SteeringActuator_mode_set)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_influence_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_influence_set)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_weight_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_weight_set)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_secondary_target_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_secondary_target_set)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_target_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_target_set)
. = ALIGN(0x1000);
*(.text.rna_Actuator_Armature_update)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_constraint_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_constraint_length)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_constraint_set)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_bone_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_bone_length)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_bone_set)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_mode_get)
. = ALIGN(0x1000);
*(.text.ArmatureActuator_mode_set)
. = ALIGN(0x1000);
*(.text.StateActuator_states_get)
. = ALIGN(0x1000);
*(.text.StateActuator_states_set)
. = ALIGN(0x1000);
*(.text.StateActuator_operation_get)
. = ALIGN(0x1000);
*(.text.StateActuator_operation_set)
. = ALIGN(0x1000);
*(.text.ParentActuator_use_ghost_get)
. = ALIGN(0x1000);
*(.text.ParentActuator_use_ghost_set)
. = ALIGN(0x1000);
*(.text.ParentActuator_use_compound_get)
. = ALIGN(0x1000);
*(.text.ParentActuator_use_compound_set)
. = ALIGN(0x1000);
*(.text.ParentActuator_object_get)
. = ALIGN(0x1000);
*(.text.ParentActuator_object_set)
. = ALIGN(0x1000);
*(.text.ParentActuator_mode_get)
. = ALIGN(0x1000);
*(.text.ParentActuator_mode_set)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_use_motion_blur_get)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_use_motion_blur_set)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_motion_blur_factor_get)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_motion_blur_factor_set)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_filter_pass_get)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_filter_pass_set)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_glsl_shader_get)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_glsl_shader_set)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_mode_get)
. = ALIGN(0x1000);
*(.text.Filter2DActuator_mode_set)
. = ALIGN(0x1000);
*(.text.VisibilityActuator_apply_to_children_get)
. = ALIGN(0x1000);
*(.text.VisibilityActuator_apply_to_children_set)
. = ALIGN(0x1000);
*(.text.VisibilityActuator_use_occlusion_get)
. = ALIGN(0x1000);
*(.text.VisibilityActuator_use_occlusion_set)
. = ALIGN(0x1000);
*(.text.VisibilityActuator_use_visible_get)
. = ALIGN(0x1000);
*(.text.VisibilityActuator_use_visible_set)
. = ALIGN(0x1000);
*(.text.GameActuator_filename_get)
. = ALIGN(0x1000);
*(.text.GameActuator_filename_length)
. = ALIGN(0x1000);
*(.text.GameActuator_filename_set)
. = ALIGN(0x1000);
*(.text.GameActuator_mode_get)
. = ALIGN(0x1000);
*(.text.GameActuator_mode_set)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_property_get)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_property_length)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_property_set)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_message_get)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_message_length)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_message_set)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_type_get)
. = ALIGN(0x1000);
*(.text.MessageActuator_body_type_set)
. = ALIGN(0x1000);
*(.text.MessageActuator_subject_get)
. = ALIGN(0x1000);
*(.text.MessageActuator_subject_length)
. = ALIGN(0x1000);
*(.text.MessageActuator_subject_set)
. = ALIGN(0x1000);
*(.text.MessageActuator_to_property_get)
. = ALIGN(0x1000);
*(.text.MessageActuator_to_property_length)
. = ALIGN(0x1000);
*(.text.MessageActuator_to_property_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_half_life_time_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_half_life_time_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_standard_derivation_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_standard_derivation_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_mean_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_mean_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_max_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_max_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_min_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_min_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_value_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_float_value_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_mean_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_mean_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_max_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_max_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_min_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_min_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_value_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_int_value_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_chance_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_chance_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_use_always_true_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_use_always_true_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_distribution_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_distribution_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_property_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_property_length)
. = ALIGN(0x1000);
*(.text.RandomActuator_property_set)
. = ALIGN(0x1000);
*(.text.RandomActuator_seed_get)
. = ALIGN(0x1000);
*(.text.RandomActuator_seed_set)
. = ALIGN(0x1000);
*(.text.SceneActuator_scene_get)
. = ALIGN(0x1000);
*(.text.SceneActuator_scene_set)
. = ALIGN(0x1000);
*(.text.SceneActuator_camera_get)
. = ALIGN(0x1000);
*(.text.SceneActuator_camera_set)
. = ALIGN(0x1000);
*(.text.SceneActuator_mode_get)
. = ALIGN(0x1000);
*(.text.SceneActuator_mode_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_3d_tracking_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_3d_tracking_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_replace_physics_mesh_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_replace_physics_mesh_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_replace_display_mesh_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_replace_display_mesh_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_local_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_local_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_local_linear_velocity_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_use_local_linear_velocity_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_linear_velocity_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_linear_velocity_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_mass_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_mass_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_time_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_time_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_mesh_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_mesh_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_track_object_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_track_object_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_object_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_object_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_track_axis_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_track_axis_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_up_axis_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_up_axis_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_dynamic_operation_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_dynamic_operation_set)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_mode_get)
. = ALIGN(0x1000);
*(.text.EditObjectActuator_mode_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_fh_normal_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_fh_normal_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_fh_paralel_axis_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_fh_paralel_axis_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_material_detect_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_material_detect_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_persistent_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_persistent_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_normal_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_normal_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_local_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_local_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_force_distance_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_use_force_distance_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_fh_damping_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_fh_damping_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_fh_force_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_fh_force_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_fh_height_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_fh_height_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_angle_max_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_angle_max_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_angle_min_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_angle_min_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_rotation_max_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_rotation_max_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_direction_axis_pos_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_direction_axis_pos_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_damping_rotation_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_damping_rotation_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_time_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_time_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_property_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_property_length)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_property_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_material_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_material_length)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_material_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_distance_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_distance_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_range_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_range_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_damping_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_damping_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_limit_max_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_limit_max_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_limit_min_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_limit_min_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_direction_axis_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_direction_axis_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_direction_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_direction_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_limit_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_limit_set)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_mode_get)
. = ALIGN(0x1000);
*(.text.ConstraintActuator_mode_set)
. = ALIGN(0x1000);
*(.text.PropertyActuator_object_property_get)
. = ALIGN(0x1000);
*(.text.PropertyActuator_object_property_length)
. = ALIGN(0x1000);
*(.text.PropertyActuator_object_property_set)
. = ALIGN(0x1000);
*(.text.PropertyActuator_object_get)
. = ALIGN(0x1000);
*(.text.PropertyActuator_object_set)
. = ALIGN(0x1000);
*(.text.PropertyActuator_value_get)
. = ALIGN(0x1000);
*(.text.PropertyActuator_value_length)
. = ALIGN(0x1000);
*(.text.PropertyActuator_value_set)
. = ALIGN(0x1000);
*(.text.PropertyActuator_property_get)
. = ALIGN(0x1000);
*(.text.PropertyActuator_property_length)
. = ALIGN(0x1000);
*(.text.PropertyActuator_property_set)
. = ALIGN(0x1000);
*(.text.PropertyActuator_mode_get)
. = ALIGN(0x1000);
*(.text.PropertyActuator_mode_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_use_sound_3d_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_use_sound_3d_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_cone_inner_angle_3d_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_cone_inner_angle_3d_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_cone_outer_angle_3d_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_cone_outer_angle_3d_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_cone_outer_gain_3d_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_cone_outer_gain_3d_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_rolloff_factor_3d_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_rolloff_factor_3d_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_distance_3d_max_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_distance_3d_max_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_distance_3d_reference_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_distance_3d_reference_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_gain_3d_max_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_gain_3d_max_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_gain_3d_min_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_gain_3d_min_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_pitch_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_pitch_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_volume_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_volume_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_mode_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_mode_set)
. = ALIGN(0x1000);
*(.text.SoundActuator_sound_get)
. = ALIGN(0x1000);
*(.text.SoundActuator_sound_set)
. = ALIGN(0x1000);
*(.text.CameraActuator_axis_get)
. = ALIGN(0x1000);
*(.text.CameraActuator_axis_set)
. = ALIGN(0x1000);
*(.text.CameraActuator_damping_get)
. = ALIGN(0x1000);
*(.text.CameraActuator_damping_set)
. = ALIGN(0x1000);
*(.text.CameraActuator_max_get)
. = ALIGN(0x1000);
*(.text.CameraActuator_max_set)
. = ALIGN(0x1000);
*(.text.CameraActuator_min_get)
. = ALIGN(0x1000);
*(.text.CameraActuator_min_set)
. = ALIGN(0x1000);
*(.text.CameraActuator_height_get)
. = ALIGN(0x1000);
*(.text.CameraActuator_height_set)
. = ALIGN(0x1000);
*(.text.CameraActuator_object_get)
. = ALIGN(0x1000);
*(.text.CameraActuator_object_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_character_jump_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_character_jump_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_servo_limit_z_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_servo_limit_z_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_servo_limit_y_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_servo_limit_y_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_servo_limit_x_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_servo_limit_x_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_add_character_location_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_add_character_location_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_add_linear_velocity_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_add_linear_velocity_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_linear_velocity_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_linear_velocity_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_torque_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_torque_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_force_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_force_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_rotation_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_rotation_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_location_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_use_local_location_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_linear_velocity_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_linear_velocity_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_torque_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_torque_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_offset_rotation_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_offset_rotation_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_offset_location_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_offset_location_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_min_z_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_min_z_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_max_z_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_max_z_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_min_y_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_min_y_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_max_y_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_max_y_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_min_x_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_min_x_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_max_x_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_force_max_x_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_derivate_coefficient_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_derivate_coefficient_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_integral_coefficient_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_integral_coefficient_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_proportional_coefficient_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_proportional_coefficient_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_damping_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_damping_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_reference_object_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_reference_object_set)
. = ALIGN(0x1000);
*(.text.ObjectActuator_mode_get)
. = ALIGN(0x1000);
*(.text.ObjectActuator_mode_set)
. = ALIGN(0x1000);
*(.text.Actuator_name_get)
. = ALIGN(0x1000);
*(.text.Actuator_name_length)
. = ALIGN(0x1000);
*(.text.Actuator_name_set)
. = ALIGN(0x1000);
*(.text.Actuator_rna_type_get)
. = ALIGN(0x1000);
*(.text.Actuator_type_get)
. = ALIGN(0x1000);
*(.text.Actuator_type_set)
. = ALIGN(0x1000);
*(.text.rna_Actuator_type_itemf)
. = ALIGN(0x1000);
*(.text.Actuator_pin_get)
. = ALIGN(0x1000);
*(.text.Actuator_pin_set)
. = ALIGN(0x1000);
*(.text.Actuator_show_expanded_get)
. = ALIGN(0x1000);
*(.text.Actuator_show_expanded_set)
. = ALIGN(0x1000);
*(.text.Actuator_active_get)
. = ALIGN(0x1000);
*(.text.Actuator_active_set)
. = ALIGN(0x1000);
*(.text.Actuator_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Actuator_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Actuator_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Actuator_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Actuator_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ActionActuator_blend_mode_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_blend_mode_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_apply_to_children_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_apply_to_children_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_local_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_local_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_force_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_force_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_additive_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_additive_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_property_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_property_length)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_property_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_layer_weight_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_layer_weight_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_layer_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_layer_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_priority_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_priority_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_blend_in_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_blend_in_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_end_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_end_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_start_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_frame_start_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_property_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_property_length)
. = ALIGN(0x1000);
*(.text.ActionActuator_property_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_continue_last_frame_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_use_continue_last_frame_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_action_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_action_set)
. = ALIGN(0x1000);
*(.text.ActionActuator_play_mode_get)
. = ALIGN(0x1000);
*(.text.ActionActuator_play_mode_set)
. = ALIGN(0x1000);
*(.text.AnimData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AnimData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AnimData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AnimData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AnimData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.AnimData_rna_type_get)
. = ALIGN(0x1000);
*(.text.AnimData_nla_tracks_begin)
. = ALIGN(0x1000);
*(.text.AnimData_nla_tracks_next)
. = ALIGN(0x1000);
*(.text.AnimData_nla_tracks_end)
. = ALIGN(0x1000);
*(.text.AnimData_nla_tracks_get)
. = ALIGN(0x1000);
*(.text.AnimData_nla_tracks_lookup_int)
. = ALIGN(0x1000);
*(.text.AnimData_nla_tracks_lookup_string)
. = ALIGN(0x1000);
*(.text.NlaTracks_remove_call)
. = ALIGN(0x1000);
*(.text.NlaTracks_new_call)
. = ALIGN(0x1000);
*(.text.NlaTracks_active_get)
. = ALIGN(0x1000);
*(.text.NlaTracks_active_set)
. = ALIGN(0x1000);
*(.text.NlaTracks_rna_type_get)
. = ALIGN(0x1000);
*(.text.NlaTracks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NlaTracks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NlaTracks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NlaTracks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NlaTracks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.AnimData_use_nla_get)
. = ALIGN(0x1000);
*(.text.AnimData_use_nla_set)
. = ALIGN(0x1000);
*(.text.AnimData_drivers_begin)
. = ALIGN(0x1000);
*(.text.AnimData_drivers_next)
. = ALIGN(0x1000);
*(.text.AnimData_drivers_end)
. = ALIGN(0x1000);
*(.text.AnimData_drivers_get)
. = ALIGN(0x1000);
*(.text.AnimData_drivers_lookup_int)
. = ALIGN(0x1000);
*(.text.AnimData_action_influence_get)
. = ALIGN(0x1000);
*(.text.AnimData_action_influence_set)
. = ALIGN(0x1000);
*(.text.AnimData_action_blend_type_get)
. = ALIGN(0x1000);
*(.text.AnimData_action_blend_type_set)
. = ALIGN(0x1000);
*(.text.AnimData_action_extrapolation_get)
. = ALIGN(0x1000);
*(.text.AnimData_action_extrapolation_set)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_from_existing_call)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_rna_type_get)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AnimDataDrivers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSet_refresh_call)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_label_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_label_length)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_label_set)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_idname_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_idname_length)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_idname_set)
. = ALIGN(0x1000);
*(.text.KeyingSet_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_description_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_description_length)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_description_set)
. = ALIGN(0x1000);
*(.text.KeyingSet_type_info_get)
. = ALIGN(0x1000);
*(.text.rna_KeyingSetInfo_refine)
. = ALIGN(0x1000);
*(.text.rna_KeyingSetInfo_register)
. = ALIGN(0x1000);
*(.text.rna_KeyingSetInfo_unregister)
. = ALIGN(0x1000);
*(.text.ANIM_keyingset_info_unregister)
. = ALIGN(0x1000);
*(.text.RKS_POLL_rna_internal)
. = ALIGN(0x1000);
*(.text.RKS_ITER_rna_internal)
. = ALIGN(0x1000);
*(.text.RKS_GEN_rna_internal)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_label_get)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_label_length)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_label_set)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_idname_get)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_idname_length)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_idname_set)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_description_get)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_description_length)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_description_set)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_options_get)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_bl_options_set)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyingSetInfo_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_data_path_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_data_path_length)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_data_path_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_group_method_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_group_method_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_group_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_group_length)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_group_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_id_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_id_type_set)
. = ALIGN(0x1000);
*(.text.rna_ksPath_id_editable)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_id_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_id_set)
. = ALIGN(0x1000);
*(.text.rna_ksPath_id_typef)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_array_index_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_array_index_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_use_entire_array_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_use_entire_array_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_bl_options_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_bl_options_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPath_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSet_paths_begin)
. = ALIGN(0x1000);
*(.text.KeyingSet_paths_next)
. = ALIGN(0x1000);
*(.text.KeyingSet_paths_end)
. = ALIGN(0x1000);
*(.text.KeyingSet_paths_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_paths_lookup_int)
. = ALIGN(0x1000);
*(.text.KeyingSet_paths_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSet_is_path_absolute_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_options_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_bl_options_set)
. = ALIGN(0x1000);
*(.text.KeyingSet_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyingSet_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyingSet_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyingSet_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyingSet_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_clear_call)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_remove_call)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_add_call)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_active_index_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_KeyingSet_active_ksPath_index_range)
. = ALIGN(0x1000);
*(.text.rna_KeyingSet_active_ksPath_editable)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_active_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_active_set)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyingSetPaths_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_AnimData_update)
. = ALIGN(0x1000);
*(.text.rna_AnimData_action_editable)
. = ALIGN(0x1000);
*(.text.AnimData_action_get)
. = ALIGN(0x1000);
*(.text.AnimData_action_set)
. = ALIGN(0x1000);
*(.text.AnimViz_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AnimViz_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AnimViz_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AnimViz_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AnimViz_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.AnimViz_rna_type_get)
. = ALIGN(0x1000);
*(.text.AnimViz_onion_skin_frames_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_after_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_after_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_before_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_before_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_end_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_end_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_start_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_start_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_step_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_frame_step_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_show_only_selected_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_show_only_selected_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_type_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_type_set)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_rna_type_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AnimVizOnionSkinning_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_after_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_after_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_before_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_before_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_end_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_end_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_start_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_start_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_step_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_frame_step_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_keyframe_action_all_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_keyframe_action_all_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_keyframe_numbers_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_keyframe_numbers_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_keyframe_highlight_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_keyframe_highlight_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_frame_numbers_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_show_frame_numbers_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_bake_location_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_bake_location_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_type_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_type_set)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_rna_type_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AnimVizMotionPaths_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MotionPath_is_modified_get)
. = ALIGN(0x1000);
*(.text.MotionPath_is_modified_set)
. = ALIGN(0x1000);
*(.text.MotionPath_use_bone_head_get)
. = ALIGN(0x1000);
*(.text.MotionPath_length_get)
. = ALIGN(0x1000);
*(.text.MotionPath_frame_end_get)
. = ALIGN(0x1000);
*(.text.MotionPath_frame_start_get)
. = ALIGN(0x1000);
*(.text.MotionPath_points_begin)
. = ALIGN(0x1000);
*(.text.MotionPath_points_next)
. = ALIGN(0x1000);
*(.text.MotionPath_points_end)
. = ALIGN(0x1000);
*(.text.MotionPath_points_get)
. = ALIGN(0x1000);
*(.text.MotionPath_points_length)
. = ALIGN(0x1000);
*(.text.MotionPath_points_lookup_int)
. = ALIGN(0x1000);
*(.text.MotionPath_rna_type_get)
. = ALIGN(0x1000);
*(.text.MotionPath_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MotionPath_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MotionPath_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MotionPath_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MotionPath_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MotionPathVert_select_get)
. = ALIGN(0x1000);
*(.text.MotionPathVert_select_set)
. = ALIGN(0x1000);
*(.text.MotionPathVert_co_get)
. = ALIGN(0x1000);
*(.text.MotionPathVert_co_set)
. = ALIGN(0x1000);
*(.text.MotionPathVert_rna_type_get)
. = ALIGN(0x1000);
*(.text.MotionPathVert_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MotionPathVert_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MotionPathVert_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MotionPathVert_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MotionPathVert_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.AnimViz_motion_path_get)
. = ALIGN(0x1000);
*(.text.Armature_bones_begin)
. = ALIGN(0x1000);
*(.text.Armature_bones_next)
. = ALIGN(0x1000);
*(.text.Armature_bones_end)
. = ALIGN(0x1000);
*(.text.Armature_bones_get)
. = ALIGN(0x1000);
*(.text.Armature_bones_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Bone_path)
. = ALIGN(0x1000);
*(.text.rna_Bone_idprops)
. = ALIGN(0x1000);
*(.text.Bone_evaluate_envelope_call)
. = ALIGN(0x1000);
*(.text.rna_Bone_update_renamed)
. = ALIGN(0x1000);
*(.text.Bone_name_get)
. = ALIGN(0x1000);
*(.text.Bone_name_length)
. = ALIGN(0x1000);
*(.text.Bone_name_set)
. = ALIGN(0x1000);
*(.text.Bone_children_begin)
. = ALIGN(0x1000);
*(.text.Bone_children_next)
. = ALIGN(0x1000);
*(.text.Bone_children_end)
. = ALIGN(0x1000);
*(.text.Bone_children_get)
. = ALIGN(0x1000);
*(.text.Bone_children_lookup_int)
. = ALIGN(0x1000);
*(.text.Bone_children_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Armature_redraw_data)
. = ALIGN(0x1000);
*(.text.Bone_parent_get)
. = ALIGN(0x1000);
*(.text.Bone_rna_type_get)
. = ALIGN(0x1000);
*(.text.Bone_layers_get)
. = ALIGN(0x1000);
*(.text.Bone_layers_set)
. = ALIGN(0x1000);
*(.text.rna_Armature_update_data)
. = ALIGN(0x1000);
*(.text.Bone_use_connect_get)
. = ALIGN(0x1000);
*(.text.Bone_use_inherit_rotation_get)
. = ALIGN(0x1000);
*(.text.Bone_use_inherit_rotation_set)
. = ALIGN(0x1000);
*(.text.Bone_use_envelope_multiply_get)
. = ALIGN(0x1000);
*(.text.Bone_use_envelope_multiply_set)
. = ALIGN(0x1000);
*(.text.Bone_use_deform_get)
. = ALIGN(0x1000);
*(.text.Bone_use_deform_set)
. = ALIGN(0x1000);
*(.text.Bone_use_inherit_scale_get)
. = ALIGN(0x1000);
*(.text.Bone_use_inherit_scale_set)
. = ALIGN(0x1000);
*(.text.Bone_use_local_location_get)
. = ALIGN(0x1000);
*(.text.Bone_use_local_location_set)
. = ALIGN(0x1000);
*(.text.Bone_use_relative_parent_get)
. = ALIGN(0x1000);
*(.text.Bone_use_relative_parent_set)
. = ALIGN(0x1000);
*(.text.Bone_show_wire_get)
. = ALIGN(0x1000);
*(.text.Bone_show_wire_set)
. = ALIGN(0x1000);
*(.text.Bone_use_cyclic_offset_get)
. = ALIGN(0x1000);
*(.text.Bone_use_cyclic_offset_set)
. = ALIGN(0x1000);
*(.text.Bone_hide_select_get)
. = ALIGN(0x1000);
*(.text.Bone_hide_select_set)
. = ALIGN(0x1000);
*(.text.Bone_envelope_distance_get)
. = ALIGN(0x1000);
*(.text.Bone_envelope_distance_set)
. = ALIGN(0x1000);
*(.text.Bone_envelope_weight_get)
. = ALIGN(0x1000);
*(.text.Bone_envelope_weight_set)
. = ALIGN(0x1000);
*(.text.Bone_head_radius_get)
. = ALIGN(0x1000);
*(.text.Bone_head_radius_set)
. = ALIGN(0x1000);
*(.text.Bone_tail_radius_get)
. = ALIGN(0x1000);
*(.text.Bone_tail_radius_set)
. = ALIGN(0x1000);
*(.text.Bone_bbone_segments_get)
. = ALIGN(0x1000);
*(.text.Bone_bbone_segments_set)
. = ALIGN(0x1000);
*(.text.Bone_bbone_in_get)
. = ALIGN(0x1000);
*(.text.Bone_bbone_in_set)
. = ALIGN(0x1000);
*(.text.Bone_bbone_out_get)
. = ALIGN(0x1000);
*(.text.Bone_bbone_out_set)
. = ALIGN(0x1000);
*(.text.Bone_bbone_x_get)
. = ALIGN(0x1000);
*(.text.Bone_bbone_x_set)
. = ALIGN(0x1000);
*(.text.Bone_bbone_z_get)
. = ALIGN(0x1000);
*(.text.Bone_bbone_z_set)
. = ALIGN(0x1000);
*(.text.Bone_hide_get)
. = ALIGN(0x1000);
*(.text.Bone_hide_set)
. = ALIGN(0x1000);
*(.text.rna_Bone_select_update)
. = ALIGN(0x1000);
*(.text.Bone_select_get)
. = ALIGN(0x1000);
*(.text.Bone_select_set)
. = ALIGN(0x1000);
*(.text.Bone_select_head_get)
. = ALIGN(0x1000);
*(.text.Bone_select_head_set)
. = ALIGN(0x1000);
*(.text.Bone_select_tail_get)
. = ALIGN(0x1000);
*(.text.Bone_select_tail_set)
. = ALIGN(0x1000);
*(.text.Bone_matrix_get)
. = ALIGN(0x1000);
*(.text.Bone_matrix_set)
. = ALIGN(0x1000);
*(.text.Bone_matrix_local_get)
. = ALIGN(0x1000);
*(.text.Bone_matrix_local_set)
. = ALIGN(0x1000);
*(.text.Bone_tail_get)
. = ALIGN(0x1000);
*(.text.Bone_tail_set)
. = ALIGN(0x1000);
*(.text.Bone_tail_local_get)
. = ALIGN(0x1000);
*(.text.Bone_tail_local_set)
. = ALIGN(0x1000);
*(.text.Bone_head_get)
. = ALIGN(0x1000);
*(.text.Bone_head_set)
. = ALIGN(0x1000);
*(.text.Bone_head_local_get)
. = ALIGN(0x1000);
*(.text.Bone_head_local_set)
. = ALIGN(0x1000);
*(.text.Bone_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Bone_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Bone_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Bone_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Bone_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_remove_call)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_new_call)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_active_get)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_active_set)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_rna_type_get)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ArmatureEditBones_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_EditBone_idprops)
. = ALIGN(0x1000);
*(.text.EditBone_align_roll_call)
. = ALIGN(0x1000);
*(.text.EditBone_name_get)
. = ALIGN(0x1000);
*(.text.EditBone_name_length)
. = ALIGN(0x1000);
*(.text.EditBone_name_set)
. = ALIGN(0x1000);
*(.text.rna_Armature_editbone_transform_update)
. = ALIGN(0x1000);
*(.text.EditBone_tail_get)
. = ALIGN(0x1000);
*(.text.EditBone_tail_set)
. = ALIGN(0x1000);
*(.text.EditBone_head_get)
. = ALIGN(0x1000);
*(.text.EditBone_head_set)
. = ALIGN(0x1000);
*(.text.EditBone_roll_get)
. = ALIGN(0x1000);
*(.text.EditBone_roll_set)
. = ALIGN(0x1000);
*(.text.EditBone_parent_get)
. = ALIGN(0x1000);
*(.text.EditBone_parent_set)
. = ALIGN(0x1000);
*(.text.EditBone_rna_type_get)
. = ALIGN(0x1000);
*(.text.EditBone_layers_get)
. = ALIGN(0x1000);
*(.text.EditBone_layers_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_connect_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_connect_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_inherit_rotation_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_inherit_rotation_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_envelope_multiply_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_envelope_multiply_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_deform_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_deform_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_inherit_scale_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_inherit_scale_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_local_location_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_local_location_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_relative_parent_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_relative_parent_set)
. = ALIGN(0x1000);
*(.text.EditBone_show_wire_get)
. = ALIGN(0x1000);
*(.text.EditBone_show_wire_set)
. = ALIGN(0x1000);
*(.text.EditBone_use_cyclic_offset_get)
. = ALIGN(0x1000);
*(.text.EditBone_use_cyclic_offset_set)
. = ALIGN(0x1000);
*(.text.EditBone_hide_select_get)
. = ALIGN(0x1000);
*(.text.EditBone_hide_select_set)
. = ALIGN(0x1000);
*(.text.EditBone_envelope_distance_get)
. = ALIGN(0x1000);
*(.text.EditBone_envelope_distance_set)
. = ALIGN(0x1000);
*(.text.EditBone_envelope_weight_get)
. = ALIGN(0x1000);
*(.text.EditBone_envelope_weight_set)
. = ALIGN(0x1000);
*(.text.EditBone_head_radius_get)
. = ALIGN(0x1000);
*(.text.EditBone_head_radius_set)
. = ALIGN(0x1000);
*(.text.EditBone_tail_radius_get)
. = ALIGN(0x1000);
*(.text.EditBone_tail_radius_set)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_segments_get)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_segments_set)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_in_get)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_in_set)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_out_get)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_out_set)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_x_get)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_x_set)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_z_get)
. = ALIGN(0x1000);
*(.text.EditBone_bbone_z_set)
. = ALIGN(0x1000);
*(.text.EditBone_hide_get)
. = ALIGN(0x1000);
*(.text.EditBone_hide_set)
. = ALIGN(0x1000);
*(.text.EditBone_lock_get)
. = ALIGN(0x1000);
*(.text.EditBone_lock_set)
. = ALIGN(0x1000);
*(.text.EditBone_select_get)
. = ALIGN(0x1000);
*(.text.EditBone_select_set)
. = ALIGN(0x1000);
*(.text.EditBone_select_head_get)
. = ALIGN(0x1000);
*(.text.EditBone_select_head_set)
. = ALIGN(0x1000);
*(.text.EditBone_select_tail_get)
. = ALIGN(0x1000);
*(.text.EditBone_select_tail_set)
. = ALIGN(0x1000);
*(.text.EditBone_matrix_get .text.ED_armature_ebone_to_mat4)
. = ALIGN(0x1000);
*(.text.EditBone_matrix_set .text.ED_armature_ebone_from_mat4)
. = ALIGN(0x1000);
*(.text.EditBone_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.EditBone_rna_properties_next)
. = ALIGN(0x1000);
*(.text.EditBone_rna_properties_end)
. = ALIGN(0x1000);
*(.text.EditBone_rna_properties_get)
. = ALIGN(0x1000);
*(.text.EditBone_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ArmatureBones_active_get)
. = ALIGN(0x1000);
*(.text.ArmatureBones_active_set)
. = ALIGN(0x1000);
*(.text.ArmatureBones_rna_type_get)
. = ALIGN(0x1000);
*(.text.ArmatureBones_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ArmatureBones_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ArmatureBones_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ArmatureBones_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ArmatureBones_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Armature_transform_call)
. = ALIGN(0x1000);
*(.text.ED_armature_transform)
. = ALIGN(0x1000);
*(.text.Armature_is_editmode_get)
. = ALIGN(0x1000);
*(.text.Armature_ghost_frame_end_get)
. = ALIGN(0x1000);
*(.text.Armature_ghost_frame_end_set)
. = ALIGN(0x1000);
*(.text.Armature_ghost_frame_start_get)
. = ALIGN(0x1000);
*(.text.Armature_ghost_frame_start_set)
. = ALIGN(0x1000);
*(.text.Armature_ghost_size_get)
. = ALIGN(0x1000);
*(.text.Armature_ghost_size_set)
. = ALIGN(0x1000);
*(.text.Armature_ghost_step_get)
. = ALIGN(0x1000);
*(.text.Armature_ghost_step_set)
. = ALIGN(0x1000);
*(.text.Armature_show_only_ghost_selected_get)
. = ALIGN(0x1000);
*(.text.Armature_show_only_ghost_selected_set)
. = ALIGN(0x1000);
*(.text.Armature_show_group_colors_get)
. = ALIGN(0x1000);
*(.text.Armature_show_group_colors_set)
. = ALIGN(0x1000);
*(.text.Armature_show_bone_custom_shapes_get)
. = ALIGN(0x1000);
*(.text.Armature_show_bone_custom_shapes_set)
. = ALIGN(0x1000);
*(.text.Armature_use_auto_ik_get)
. = ALIGN(0x1000);
*(.text.Armature_use_auto_ik_set)
. = ALIGN(0x1000);
*(.text.Armature_use_mirror_x_get)
. = ALIGN(0x1000);
*(.text.Armature_use_mirror_x_set)
. = ALIGN(0x1000);
*(.text.Armature_use_deform_delay_get)
. = ALIGN(0x1000);
*(.text.Armature_use_deform_delay_set)
. = ALIGN(0x1000);
*(.text.Armature_show_names_get)
. = ALIGN(0x1000);
*(.text.Armature_show_names_set)
. = ALIGN(0x1000);
*(.text.Armature_show_axes_get)
. = ALIGN(0x1000);
*(.text.Armature_show_axes_set)
. = ALIGN(0x1000);
*(.text.Armature_layers_protected_get)
. = ALIGN(0x1000);
*(.text.Armature_layers_protected_set)
. = ALIGN(0x1000);
*(.text.rna_Armature_update_layers)
. = ALIGN(0x1000);
*(.text.Armature_layers_get)
. = ALIGN(0x1000);
*(.text.Armature_layers_set)
. = ALIGN(0x1000);
*(.text.Armature_ghost_type_get)
. = ALIGN(0x1000);
*(.text.Armature_ghost_type_set)
. = ALIGN(0x1000);
*(.text.Armature_deform_method_get)
. = ALIGN(0x1000);
*(.text.Armature_deform_method_set)
. = ALIGN(0x1000);
*(.text.Armature_draw_type_get)
. = ALIGN(0x1000);
*(.text.Armature_draw_type_set)
. = ALIGN(0x1000);
*(.text.Armature_pose_position_get)
. = ALIGN(0x1000);
*(.text.Armature_pose_position_set)
. = ALIGN(0x1000);
*(.text.Armature_animation_data_get)
. = ALIGN(0x1000);
*(.text.Armature_edit_bones_begin)
. = ALIGN(0x1000);
*(.text.Armature_edit_bones_next)
. = ALIGN(0x1000);
*(.text.Armature_edit_bones_end)
. = ALIGN(0x1000);
*(.text.Armature_edit_bones_get)
. = ALIGN(0x1000);
*(.text.Armature_edit_bones_lookup_int)
. = ALIGN(0x1000);
*(.text.Armature_edit_bones_lookup_string)
. = ALIGN(0x1000);
*(.text.BoidRule_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BoidRule_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BoidRule_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BoidRule_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BoidRule_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BoidRule_rna_type_get)
. = ALIGN(0x1000);
*(.text.BoidRule_name_get)
. = ALIGN(0x1000);
*(.text.BoidRule_name_length)
. = ALIGN(0x1000);
*(.text.BoidRule_name_set)
. = ALIGN(0x1000);
*(.text.BoidRule_type_get)
. = ALIGN(0x1000);
*(.text.rna_Boids_reset)
. = ALIGN(0x1000);
*(.text.BoidRule_use_in_air_get)
. = ALIGN(0x1000);
*(.text.BoidRule_use_in_air_set)
. = ALIGN(0x1000);
*(.text.BoidRule_use_on_land_get)
. = ALIGN(0x1000);
*(.text.BoidRule_use_on_land_set)
. = ALIGN(0x1000);
*(.text.BoidState_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BoidState_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BoidState_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BoidState_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BoidState_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BoidState_rna_type_get)
. = ALIGN(0x1000);
*(.text.BoidState_name_get)
. = ALIGN(0x1000);
*(.text.BoidState_name_length)
. = ALIGN(0x1000);
*(.text.BoidState_name_set)
. = ALIGN(0x1000);
*(.text.BoidState_ruleset_type_get)
. = ALIGN(0x1000);
*(.text.BoidState_ruleset_type_set)
. = ALIGN(0x1000);
*(.text.BoidState_rules_begin)
. = ALIGN(0x1000);
*(.text.BoidState_rules_next)
. = ALIGN(0x1000);
*(.text.BoidState_rules_end)
. = ALIGN(0x1000);
*(.text.BoidState_rules_get)
. = ALIGN(0x1000);
*(.text.BoidState_rules_lookup_int)
. = ALIGN(0x1000);
*(.text.BoidState_rules_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_BoidRule_refine)
. = ALIGN(0x1000);
*(.text.rna_BoidRule_path)
. = ALIGN(0x1000);
*(.text.BoidRuleFight_flee_distance_get)
. = ALIGN(0x1000);
*(.text.BoidRuleFight_flee_distance_set)
. = ALIGN(0x1000);
*(.text.BoidRuleFight_distance_get)
. = ALIGN(0x1000);
*(.text.BoidRuleFight_distance_set)
. = ALIGN(0x1000);
*(.text.BoidState_falloff_get)
. = ALIGN(0x1000);
*(.text.BoidState_falloff_set)
. = ALIGN(0x1000);
*(.text.BoidState_volume_get)
. = ALIGN(0x1000);
*(.text.BoidState_volume_set)
. = ALIGN(0x1000);
*(.text.BoidState_rule_fuzzy_get)
. = ALIGN(0x1000);
*(.text.BoidState_rule_fuzzy_set)
. = ALIGN(0x1000);
*(.text.BoidState_active_boid_rule_index_get)
. = ALIGN(0x1000);
*(.text.BoidState_active_boid_rule_index_set)
. = ALIGN(0x1000);
*(.text.rna_BoidState_active_boid_rule_index_range)
. = ALIGN(0x1000);
*(.text.rna_BoidSettings_path)
. = ALIGN(0x1000);
*(.text.BoidSettings_use_climb_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_use_climb_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_use_land_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_use_land_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_use_flight_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_use_flight_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_stick_force_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_stick_force_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_personal_space_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_personal_space_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_ave_max_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_ave_max_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_acc_max_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_acc_max_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_speed_max_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_speed_max_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_jump_speed_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_jump_speed_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_personal_space_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_personal_space_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_ave_max_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_ave_max_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_acc_max_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_acc_max_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_speed_max_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_speed_max_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_speed_min_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_air_speed_min_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_range_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_range_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_accuracy_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_accuracy_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_aggression_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_aggression_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_strength_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_strength_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_health_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_health_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_active_boid_state_index_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_active_boid_state_index_set)
. = ALIGN(0x1000);
*(.text.rna_BoidSettings_active_boid_state_index_range)
. = ALIGN(0x1000);
*(.text.BoidSettings_active_boid_state_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_states_begin)
. = ALIGN(0x1000);
*(.text.BoidSettings_states_next)
. = ALIGN(0x1000);
*(.text.BoidSettings_states_end)
. = ALIGN(0x1000);
*(.text.BoidSettings_states_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_states_lookup_int)
. = ALIGN(0x1000);
*(.text.BoidSettings_states_lookup_string)
. = ALIGN(0x1000);
*(.text.BoidSettings_height_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_height_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_pitch_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_pitch_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_bank_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_bank_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_smooth_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_land_smooth_set)
. = ALIGN(0x1000);
*(.text.BoidSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BoidSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BoidSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BoidSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BoidSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BoidRuleAverageSpeed_speed_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAverageSpeed_speed_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAverageSpeed_level_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAverageSpeed_level_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAverageSpeed_wander_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAverageSpeed_wander_set)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_use_line_get)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_use_line_set)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_queue_count_get)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_queue_count_set)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_distance_get)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_distance_set)
. = ALIGN(0x1000);
*(.text.rna_Boids_reset_deps)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_object_get)
. = ALIGN(0x1000);
*(.text.BoidRuleFollowLeader_object_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoidCollision_look_ahead_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoidCollision_look_ahead_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoidCollision_use_avoid_collision_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoidCollision_use_avoid_collision_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoidCollision_use_avoid_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoidCollision_use_avoid_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoid_fear_factor_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoid_fear_factor_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoid_use_predict_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoid_use_predict_set)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoid_object_get)
. = ALIGN(0x1000);
*(.text.BoidRuleAvoid_object_set)
. = ALIGN(0x1000);
*(.text.BoidRuleGoal_use_predict_get)
. = ALIGN(0x1000);
*(.text.BoidRuleGoal_use_predict_set)
. = ALIGN(0x1000);
*(.text.BoidRuleGoal_object_get)
. = ALIGN(0x1000);
*(.text.BoidRuleGoal_object_set)
. = ALIGN(0x1000);
*(.text.BoidState_active_boid_rule_get)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_mask_map_mode_get)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_mask_map_mode_set)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_tex_paint_map_mode_get)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_tex_paint_map_mode_set)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_map_mode_get)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_map_mode_set)
. = ALIGN(0x1000);
*(.text.rna_TextureSlot_brush_angle_update)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_angle_get)
. = ALIGN(0x1000);
*(.text.BrushTextureSlot_angle_set)
. = ALIGN(0x1000);
*(.text.Brush_image_paint_capabilities_get)
. = ALIGN(0x1000);
*(.text.Brush_sculpt_capabilities_get)
. = ALIGN(0x1000);
*(.text.Brush_brush_capabilities_get)
. = ALIGN(0x1000);
*(.text.rna_Brush_update)
. = ALIGN(0x1000);
*(.text.Brush_clone_offset_get)
. = ALIGN(0x1000);
*(.text.Brush_clone_offset_set)
. = ALIGN(0x1000);
*(.text.Brush_clone_alpha_get)
. = ALIGN(0x1000);
*(.text.Brush_clone_alpha_set)
. = ALIGN(0x1000);
*(.text.Brush_clone_image_get)
. = ALIGN(0x1000);
*(.text.Brush_clone_image_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_icon_update)
. = ALIGN(0x1000);
*(.text.Brush_icon_filepath_get)
. = ALIGN(0x1000);
*(.text.Brush_icon_filepath_length)
. = ALIGN(0x1000);
*(.text.Brush_icon_filepath_set)
. = ALIGN(0x1000);
*(.text.Brush_use_custom_icon_get)
. = ALIGN(0x1000);
*(.text.Brush_use_custom_icon_set)
. = ALIGN(0x1000);
*(.text.Brush_cursor_color_subtract_get)
. = ALIGN(0x1000);
*(.text.Brush_cursor_color_subtract_set)
. = ALIGN(0x1000);
*(.text.Brush_cursor_color_add_get)
. = ALIGN(0x1000);
*(.text.Brush_cursor_color_add_set)
. = ALIGN(0x1000);
*(.text.Brush_cursor_overlay_alpha_get)
. = ALIGN(0x1000);
*(.text.Brush_cursor_overlay_alpha_set)
. = ALIGN(0x1000);
*(.text.Brush_mask_overlay_alpha_get)
. = ALIGN(0x1000);
*(.text.Brush_mask_overlay_alpha_set)
. = ALIGN(0x1000);
*(.text.Brush_texture_overlay_alpha_get)
. = ALIGN(0x1000);
*(.text.Brush_texture_overlay_alpha_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_secondary_tex_update)
. = ALIGN(0x1000);
*(.text.Brush_mask_texture_get)
. = ALIGN(0x1000);
*(.text.Brush_mask_texture_set)
. = ALIGN(0x1000);
*(.text.Brush_mask_texture_slot_get)
. = ALIGN(0x1000);
*(.text.rna_Brush_main_tex_update)
. = ALIGN(0x1000);
*(.text.Brush_texture_get)
. = ALIGN(0x1000);
*(.text.Brush_texture_set)
. = ALIGN(0x1000);
*(.text.Brush_texture_slot_get)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_image_get)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_image_set)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_weight_get)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_weight_set)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_vertex_get)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_vertex_set)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_sculpt_get)
. = ALIGN(0x1000);
*(.text.Brush_use_paint_sculpt_set)
. = ALIGN(0x1000);
*(.text.Brush_use_secondary_overlay_override_get)
. = ALIGN(0x1000);
*(.text.Brush_use_secondary_overlay_override_set)
. = ALIGN(0x1000);
*(.text.Brush_use_primary_overlay_override_get)
. = ALIGN(0x1000);
*(.text.Brush_use_primary_overlay_override_set)
. = ALIGN(0x1000);
*(.text.Brush_use_cursor_overlay_override_get)
. = ALIGN(0x1000);
*(.text.Brush_use_cursor_overlay_override_set)
. = ALIGN(0x1000);
*(.text.Brush_use_cursor_overlay_get)
. = ALIGN(0x1000);
*(.text.Brush_use_cursor_overlay_set)
. = ALIGN(0x1000);
*(.text.Brush_use_secondary_overlay_get)
. = ALIGN(0x1000);
*(.text.Brush_use_secondary_overlay_set)
. = ALIGN(0x1000);
*(.text.Brush_use_primary_overlay_get)
. = ALIGN(0x1000);
*(.text.Brush_use_primary_overlay_set)
. = ALIGN(0x1000);
*(.text.Brush_gradient_fill_mode_get)
. = ALIGN(0x1000);
*(.text.Brush_gradient_fill_mode_set)
. = ALIGN(0x1000);
*(.text.Brush_gradient_stroke_mode_get)
. = ALIGN(0x1000);
*(.text.Brush_gradient_stroke_mode_set)
. = ALIGN(0x1000);
*(.text.Brush_gradient_get)
. = ALIGN(0x1000);
*(.text.Brush_paint_curve_get)
. = ALIGN(0x1000);
*(.text.Brush_paint_curve_set)
. = ALIGN(0x1000);
*(.text.Brush_curve_get)
. = ALIGN(0x1000);
*(.text.Brush_use_alpha_get)
. = ALIGN(0x1000);
*(.text.Brush_use_alpha_set)
. = ALIGN(0x1000);
*(.text.Brush_use_restore_mesh_get)
. = ALIGN(0x1000);
*(.text.Brush_use_restore_mesh_set)
. = ALIGN(0x1000);
*(.text.Brush_use_edge_to_edge_get)
. = ALIGN(0x1000);
*(.text.Brush_use_edge_to_edge_set)
. = ALIGN(0x1000);
*(.text.Brush_use_locked_size_get)
. = ALIGN(0x1000);
*(.text.Brush_use_locked_size_set)
. = ALIGN(0x1000);
*(.text.Brush_use_adaptive_space_get)
. = ALIGN(0x1000);
*(.text.Brush_use_adaptive_space_set)
. = ALIGN(0x1000);
*(.text.Brush_use_space_attenuation_get)
. = ALIGN(0x1000);
*(.text.Brush_use_space_attenuation_set)
. = ALIGN(0x1000);
*(.text.Brush_use_accumulate_get)
. = ALIGN(0x1000);
*(.text.Brush_use_accumulate_set)
. = ALIGN(0x1000);
*(.text.Brush_use_persistent_get)
. = ALIGN(0x1000);
*(.text.Brush_use_persistent_set)
. = ALIGN(0x1000);
*(.text.Brush_use_smooth_stroke_get)
. = ALIGN(0x1000);
*(.text.Brush_use_smooth_stroke_set)
. = ALIGN(0x1000);
*(.text.Brush_use_curve_get)
. = ALIGN(0x1000);
*(.text.Brush_use_curve_set)
. = ALIGN(0x1000);
*(.text.Brush_use_line_get)
. = ALIGN(0x1000);
*(.text.Brush_use_line_set)
. = ALIGN(0x1000);
*(.text.Brush_use_space_get)
. = ALIGN(0x1000);
*(.text.Brush_use_space_set)
. = ALIGN(0x1000);
*(.text.Brush_use_anchor_get)
. = ALIGN(0x1000);
*(.text.Brush_use_anchor_set)
. = ALIGN(0x1000);
*(.text.Brush_use_frontface_get)
. = ALIGN(0x1000);
*(.text.Brush_use_frontface_set)
. = ALIGN(0x1000);
*(.text.Brush_use_plane_trim_get)
. = ALIGN(0x1000);
*(.text.Brush_use_plane_trim_set)
. = ALIGN(0x1000);
*(.text.Brush_use_random_rotation_get)
. = ALIGN(0x1000);
*(.text.Brush_use_random_rotation_set)
. = ALIGN(0x1000);
*(.text.Brush_use_relative_jitter_get)
. = ALIGN(0x1000);
*(.text.Brush_use_relative_jitter_set)
. = ALIGN(0x1000);
*(.text.Brush_use_rake_get)
. = ALIGN(0x1000);
*(.text.Brush_use_rake_set)
. = ALIGN(0x1000);
*(.text.Brush_use_inverse_smooth_pressure_get)
. = ALIGN(0x1000);
*(.text.Brush_use_inverse_smooth_pressure_set)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_masking_get)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_masking_set)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_spacing_get)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_spacing_set)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_jitter_get)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_jitter_set)
. = ALIGN(0x1000);
*(.text.Brush_use_gradient_get)
. = ALIGN(0x1000);
*(.text.Brush_use_gradient_set)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_size_get)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_size_set)
. = ALIGN(0x1000);
*(.text.Brush_use_offset_pressure_get)
. = ALIGN(0x1000);
*(.text.Brush_use_offset_pressure_set)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_strength_get)
. = ALIGN(0x1000);
*(.text.Brush_use_pressure_strength_set)
. = ALIGN(0x1000);
*(.text.Brush_use_wrap_get)
. = ALIGN(0x1000);
*(.text.Brush_use_wrap_set)
. = ALIGN(0x1000);
*(.text.Brush_use_original_normal_get)
. = ALIGN(0x1000);
*(.text.Brush_use_original_normal_set)
. = ALIGN(0x1000);
*(.text.Brush_use_airbrush_get)
. = ALIGN(0x1000);
*(.text.Brush_use_airbrush_set)
. = ALIGN(0x1000);
*(.text.Brush_blur_mode_get)
. = ALIGN(0x1000);
*(.text.Brush_blur_mode_set)
. = ALIGN(0x1000);
*(.text.Brush_blur_kernel_radius_get)
. = ALIGN(0x1000);
*(.text.Brush_blur_kernel_radius_set)
. = ALIGN(0x1000);
*(.text.Brush_fill_threshold_get)
. = ALIGN(0x1000);
*(.text.Brush_fill_threshold_set)
. = ALIGN(0x1000);
*(.text.Brush_sharp_threshold_get)
. = ALIGN(0x1000);
*(.text.Brush_sharp_threshold_set)
. = ALIGN(0x1000);
*(.text.Brush_mask_stencil_dimension_get)
. = ALIGN(0x1000);
*(.text.Brush_mask_stencil_dimension_set)
. = ALIGN(0x1000);
*(.text.Brush_mask_stencil_pos_get)
. = ALIGN(0x1000);
*(.text.Brush_mask_stencil_pos_set)
. = ALIGN(0x1000);
*(.text.Brush_stencil_dimension_get)
. = ALIGN(0x1000);
*(.text.Brush_stencil_dimension_set)
. = ALIGN(0x1000);
*(.text.Brush_stencil_pos_get)
. = ALIGN(0x1000);
*(.text.Brush_stencil_pos_set)
. = ALIGN(0x1000);
*(.text.Brush_auto_smooth_factor_get)
. = ALIGN(0x1000);
*(.text.Brush_auto_smooth_factor_set)
. = ALIGN(0x1000);
*(.text.Brush_crease_pinch_factor_get)
. = ALIGN(0x1000);
*(.text.Brush_crease_pinch_factor_set)
. = ALIGN(0x1000);
*(.text.Brush_normal_weight_get)
. = ALIGN(0x1000);
*(.text.Brush_normal_weight_set)
. = ALIGN(0x1000);
*(.text.Brush_texture_sample_bias_get)
. = ALIGN(0x1000);
*(.text.Brush_texture_sample_bias_set)
. = ALIGN(0x1000);
*(.text.Brush_height_get)
. = ALIGN(0x1000);
*(.text.Brush_height_set)
. = ALIGN(0x1000);
*(.text.Brush_plane_trim_get)
. = ALIGN(0x1000);
*(.text.Brush_plane_trim_set)
. = ALIGN(0x1000);
*(.text.Brush_plane_offset_get)
. = ALIGN(0x1000);
*(.text.Brush_plane_offset_set)
. = ALIGN(0x1000);
*(.text.Brush_strength_get)
. = ALIGN(0x1000);
*(.text.Brush_strength_set)
. = ALIGN(0x1000);
*(.text.Brush_weight_get)
. = ALIGN(0x1000);
*(.text.Brush_weight_set)
. = ALIGN(0x1000);
*(.text.Brush_secondary_color_get)
. = ALIGN(0x1000);
*(.text.Brush_secondary_color_set)
. = ALIGN(0x1000);
*(.text.Brush_color_get)
. = ALIGN(0x1000);
*(.text.Brush_color_set)
. = ALIGN(0x1000);
*(.text.Brush_rate_get)
. = ALIGN(0x1000);
*(.text.Brush_rate_set)
. = ALIGN(0x1000);
*(.text.Brush_smooth_stroke_factor_get)
. = ALIGN(0x1000);
*(.text.Brush_smooth_stroke_factor_set)
. = ALIGN(0x1000);
*(.text.Brush_smooth_stroke_radius_get)
. = ALIGN(0x1000);
*(.text.Brush_smooth_stroke_radius_set)
. = ALIGN(0x1000);
*(.text.Brush_grad_spacing_get)
. = ALIGN(0x1000);
*(.text.Brush_grad_spacing_set)
. = ALIGN(0x1000);
*(.text.Brush_spacing_get)
. = ALIGN(0x1000);
*(.text.Brush_spacing_set)
. = ALIGN(0x1000);
*(.text.Brush_jitter_absolute_get)
. = ALIGN(0x1000);
*(.text.Brush_jitter_absolute_set)
. = ALIGN(0x1000);
*(.text.Brush_jitter_get)
. = ALIGN(0x1000);
*(.text.Brush_jitter_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_size_update)
. = ALIGN(0x1000);
*(.text.Brush_unprojected_radius_get)
. = ALIGN(0x1000);
*(.text.Brush_unprojected_radius_set)
. = ALIGN(0x1000);
*(.text.Brush_size_get)
. = ALIGN(0x1000);
*(.text.Brush_size_set)
. = ALIGN(0x1000);
*(.text.Brush_mask_tool_get)
. = ALIGN(0x1000);
*(.text.Brush_mask_tool_set)
. = ALIGN(0x1000);
*(.text.Brush_sculpt_plane_get)
. = ALIGN(0x1000);
*(.text.Brush_sculpt_plane_set)
. = ALIGN(0x1000);
*(.text.Brush_texture_angle_source_no_random_get)
. = ALIGN(0x1000);
*(.text.Brush_texture_angle_source_no_random_set)
. = ALIGN(0x1000);
*(.text.Brush_texture_angle_source_random_get)
. = ALIGN(0x1000);
*(.text.Brush_texture_angle_source_random_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_stroke_update)
. = ALIGN(0x1000);
*(.text.Brush_stroke_method_get)
. = ALIGN(0x1000);
*(.text.Brush_stroke_method_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_stroke_itemf)
. = ALIGN(0x1000);
*(.text.Brush_direction_get)
. = ALIGN(0x1000);
*(.text.Brush_direction_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_direction_itemf)
. = ALIGN(0x1000);
*(.text.rna_Brush_imagepaint_tool_update)
. = ALIGN(0x1000);
*(.text.Brush_image_tool_get)
. = ALIGN(0x1000);
*(.text.Brush_image_tool_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_vertex_tool_update)
. = ALIGN(0x1000);
*(.text.Brush_vertex_tool_get)
. = ALIGN(0x1000);
*(.text.Brush_vertex_tool_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_sculpt_tool_update)
. = ALIGN(0x1000);
*(.text.BKE_previewimg_free_id)
. = ALIGN(0x1000);
*(.text.Brush_sculpt_tool_get)
. = ALIGN(0x1000);
*(.text.Brush_sculpt_tool_set)
. = ALIGN(0x1000);
*(.text.Brush_blend_get)
. = ALIGN(0x1000);
*(.text.Brush_blend_set)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_has_smooth_stroke_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_has_spacing_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_has_texture_angle_source_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_has_texture_angle_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_has_random_texture_angle_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_has_overlay_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_rna_type_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BrushCapabilities_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_has_radius_get)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_has_space_attenuation_get)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_has_accumulate_get)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_rna_type_get)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ImapaintToolCapabilities_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_gravity_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_strength_pressure_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_space_attenuation_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_smooth_stroke_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_secondary_color_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_sculpt_plane_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_random_texture_angle_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_plane_offset_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_pinch_factor_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_persistence_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_normal_weight_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_jitter_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_height_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_auto_smooth_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_has_accumulate_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_rna_type_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SculptToolCapabilities_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Camera_update)
. = ALIGN(0x1000);
*(.text.Camera_type_get)
. = ALIGN(0x1000);
*(.text.Camera_type_set)
. = ALIGN(0x1000);
*(.text.Camera_show_guide_get)
. = ALIGN(0x1000);
*(.text.Camera_show_guide_set)
. = ALIGN(0x1000);
*(.text.Camera_sensor_fit_get)
. = ALIGN(0x1000);
*(.text.Camera_sensor_fit_set)
. = ALIGN(0x1000);
*(.text.Camera_passepartout_alpha_get)
. = ALIGN(0x1000);
*(.text.Camera_passepartout_alpha_set)
. = ALIGN(0x1000);
*(.text.Camera_angle_x_get)
. = ALIGN(0x1000);
*(.text.Camera_angle_x_set)
. = ALIGN(0x1000);
*(.text.Camera_angle_y_get)
. = ALIGN(0x1000);
*(.text.Camera_angle_y_set)
. = ALIGN(0x1000);
*(.text.Camera_angle_get)
. = ALIGN(0x1000);
*(.text.Camera_angle_set)
. = ALIGN(0x1000);
*(.text.Camera_clip_start_get)
. = ALIGN(0x1000);
*(.text.Camera_clip_start_set)
. = ALIGN(0x1000);
*(.text.Camera_clip_end_get)
. = ALIGN(0x1000);
*(.text.Camera_clip_end_set)
. = ALIGN(0x1000);
*(.text.Camera_lens_get)
. = ALIGN(0x1000);
*(.text.Camera_lens_set)
. = ALIGN(0x1000);
*(.text.Camera_sensor_width_get)
. = ALIGN(0x1000);
*(.text.Camera_sensor_width_set)
. = ALIGN(0x1000);
*(.text.Camera_sensor_height_get)
. = ALIGN(0x1000);
*(.text.Camera_sensor_height_set)
. = ALIGN(0x1000);
*(.text.Camera_ortho_scale_get)
. = ALIGN(0x1000);
*(.text.Camera_ortho_scale_set)
. = ALIGN(0x1000);
*(.text.Camera_draw_size_get)
. = ALIGN(0x1000);
*(.text.Camera_draw_size_set)
. = ALIGN(0x1000);
*(.text.Camera_shift_x_get)
. = ALIGN(0x1000);
*(.text.Camera_shift_x_set)
. = ALIGN(0x1000);
*(.text.Camera_shift_y_get)
. = ALIGN(0x1000);
*(.text.Camera_shift_y_set)
. = ALIGN(0x1000);
*(.text.Camera_dof_distance_get)
. = ALIGN(0x1000);
*(.text.Camera_dof_distance_set)
. = ALIGN(0x1000);
*(.text.Camera_show_limits_get)
. = ALIGN(0x1000);
*(.text.Camera_show_limits_set)
. = ALIGN(0x1000);
*(.text.Camera_show_mist_get)
. = ALIGN(0x1000);
*(.text.Camera_show_mist_set)
. = ALIGN(0x1000);
*(.text.Camera_show_passepartout_get)
. = ALIGN(0x1000);
*(.text.Camera_show_passepartout_set)
. = ALIGN(0x1000);
*(.text.Camera_show_title_safe_get)
. = ALIGN(0x1000);
*(.text.Camera_show_title_safe_set)
. = ALIGN(0x1000);
*(.text.Camera_show_name_get)
. = ALIGN(0x1000);
*(.text.Camera_show_name_set)
. = ALIGN(0x1000);
*(.text.Camera_show_sensor_get)
. = ALIGN(0x1000);
*(.text.Camera_show_sensor_set)
. = ALIGN(0x1000);
*(.text.Camera_lens_unit_get)
. = ALIGN(0x1000);
*(.text.Camera_lens_unit_set)
. = ALIGN(0x1000);
*(.text.Camera_animation_data_get)
. = ALIGN(0x1000);
*(.text.Camera_dof_object_get)
. = ALIGN(0x1000);
*(.text.Camera_dof_object_set)
. = ALIGN(0x1000);
*(.text.Camera_view_frame_call)
. = ALIGN(0x1000);
*(.text.ClothSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ClothSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ClothSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ClothSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ClothSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_cloth_update)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_min_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_min_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_max_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_max_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_default_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_default_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_spring_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_spring_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_friction_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_goal_friction_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_internal_friction_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_internal_friction_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_collider_friction_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_collider_friction_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_mass_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_mass_set)
. = ALIGN(0x1000);
*(.text.rna_cloth_pinning_changed)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_mass_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_mass_length)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_mass_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_gravity_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_gravity_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_air_damping_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_air_damping_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_vel_damping_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_vel_damping_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_use_pin_cloth_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_use_pin_cloth_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_pin_stiffness_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_pin_stiffness_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_quality_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_quality_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_shrink_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_shrink_length)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_shrink_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_shrink_min_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_shrink_min_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_shrink_max_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_shrink_max_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_use_stiffness_scale_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_use_stiffness_scale_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_spring_damping_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_spring_damping_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_structural_stiffness_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_structural_stiffness_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_structural_stiffness_max_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_structural_stiffness_max_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_sewing_force_max_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_sewing_force_max_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_structural_stiffness_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_structural_stiffness_length)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_structural_stiffness_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_bending_stiffness_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_bending_stiffness_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_bending_stiffness_max_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_bending_stiffness_max_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_use_sewing_springs_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_use_sewing_springs_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_bending_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_bending_length)
. = ALIGN(0x1000);
*(.text.ClothSettings_vertex_group_bending_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_effector_weights_get)
. = ALIGN(0x1000);
*(.text.rna_cloth_reset)
. = ALIGN(0x1000);
*(.text.ClothSettings_pre_roll_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_pre_roll_set)
. = ALIGN(0x1000);
*(.text.ClothSettings_rest_shape_key_get .text.rna_object_shapekey_index_get)
. = ALIGN(0x1000);
*(.text.ClothSettings_rest_shape_key_set .text.rna_object_shapekey_index_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_use_collision_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_use_collision_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_repel_force_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_repel_force_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_distance_repel_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_distance_repel_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_distance_min_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_distance_min_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_friction_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_friction_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_collision_quality_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_collision_quality_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_use_self_collision_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_use_self_collision_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_self_distance_min_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_self_distance_min_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_self_friction_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_self_friction_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_self_collision_quality_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_self_collision_quality_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_group_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_group_set)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_vertex_group_self_collisions_get)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_vertex_group_self_collisions_length)
. = ALIGN(0x1000);
*(.text.ClothCollisionSettings_vertex_group_self_collisions_set)
. = ALIGN(0x1000);
*(.text.rna_ClothCollisionSettings_path)
. = ALIGN(0x1000);
*(.text.rna_ClothSettings_path)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_location_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_location_set)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_handle_type_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_handle_type_set)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_select_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoint_select_set)
. = ALIGN(0x1000);
*(.text.CurveMap_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CurveMap_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CurveMap_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CurveMap_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CurveMap_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.CurveMap_rna_type_get)
. = ALIGN(0x1000);
*(.text.CurveMap_extend_get)
. = ALIGN(0x1000);
*(.text.CurveMap_extend_set)
. = ALIGN(0x1000);
*(.text.CurveMap_points_begin)
. = ALIGN(0x1000);
*(.text.CurveMap_points_next)
. = ALIGN(0x1000);
*(.text.CurveMap_points_end)
. = ALIGN(0x1000);
*(.text.CurveMap_points_get)
. = ALIGN(0x1000);
*(.text.CurveMap_points_length)
. = ALIGN(0x1000);
*(.text.CurveMap_points_lookup_int)
. = ALIGN(0x1000);
*(.text.CurveMap_evaluate_call)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_remove_call)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_new_call)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CurveMapPoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.CurveMapping_initialize_call)
. = ALIGN(0x1000);
*(.text.CurveMapping_update_call)
. = ALIGN(0x1000);
*(.text.CurveMapping_white_level_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_white_level_set)
. = ALIGN(0x1000);
*(.text.CurveMapping_black_level_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_black_level_set)
. = ALIGN(0x1000);
*(.text.CurveMapping_curves_begin)
. = ALIGN(0x1000);
*(.text.CurveMapping_curves_next)
. = ALIGN(0x1000);
*(.text.CurveMapping_curves_end)
. = ALIGN(0x1000);
*(.text.CurveMapping_curves_get)
. = ALIGN(0x1000);
*(.text.rna_CurveMapping_curves_length)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_max_y_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_max_y_set)
. = ALIGN(0x1000);
*(.text.rna_CurveMapping_clipmaxy_range)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_max_x_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_max_x_set)
. = ALIGN(0x1000);
*(.text.rna_CurveMapping_clipmaxx_range)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_min_y_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_min_y_set)
. = ALIGN(0x1000);
*(.text.rna_CurveMapping_clipminy_range)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_min_x_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_clip_min_x_set)
. = ALIGN(0x1000);
*(.text.rna_CurveMapping_clipminx_range)
. = ALIGN(0x1000);
*(.text.CurveMapping_use_clip_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_use_clip_set)
. = ALIGN(0x1000);
*(.text.CurveMapping_rna_type_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CurveMapping_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CurveMapping_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CurveMapping_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CurveMapping_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ColorRampElement_path)
. = ALIGN(0x1000);
*(.text.rna_ColorRamp_path .text.BKE_linestyle_path_to_color_ramp)
. = ALIGN(0x1000);
*(.text.rna_ColorRamp_update)
. = ALIGN(0x1000);
*(.text.ColorRampElement_position_get)
. = ALIGN(0x1000);
*(.text.ColorRampElement_position_set)
. = ALIGN(0x1000);
*(.text.ColorRampElement_alpha_get)
. = ALIGN(0x1000);
*(.text.ColorRampElement_alpha_set)
. = ALIGN(0x1000);
*(.text.ColorRampElement_color_get)
. = ALIGN(0x1000);
*(.text.ColorRampElement_color_set)
. = ALIGN(0x1000);
*(.text.ColorRampElement_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorRampElement_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorRampElement_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorRampElement_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorRampElement_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorRampElement_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ColorRamp_evaluate_call)
. = ALIGN(0x1000);
*(.text.ColorRamp_color_mode_get)
. = ALIGN(0x1000);
*(.text.ColorRamp_color_mode_set)
. = ALIGN(0x1000);
*(.text.ColorRamp_hue_interpolation_get)
. = ALIGN(0x1000);
*(.text.ColorRamp_hue_interpolation_set)
. = ALIGN(0x1000);
*(.text.ColorRamp_interpolation_get)
. = ALIGN(0x1000);
*(.text.ColorRamp_interpolation_set)
. = ALIGN(0x1000);
*(.text.ColorRamp_elements_begin)
. = ALIGN(0x1000);
*(.text.ColorRamp_elements_next)
. = ALIGN(0x1000);
*(.text.ColorRamp_elements_end)
. = ALIGN(0x1000);
*(.text.ColorRamp_elements_get)
. = ALIGN(0x1000);
*(.text.ColorRamp_elements_length)
. = ALIGN(0x1000);
*(.text.ColorRamp_elements_lookup_int)
. = ALIGN(0x1000);
*(.text.ColorRamp_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorRamp_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorRamp_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorRamp_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorRamp_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorRamp_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ColorRampElements_remove_call)
. = ALIGN(0x1000);
*(.text.ColorRampElements_new_call)
. = ALIGN(0x1000);
*(.text.ColorRampElements_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorRampElements_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorRampElements_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorRampElements_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorRampElements_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorRampElements_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Histogram_show_line_get)
. = ALIGN(0x1000);
*(.text.Histogram_show_line_set)
. = ALIGN(0x1000);
*(.text.Histogram_mode_get)
. = ALIGN(0x1000);
*(.text.Histogram_mode_set)
. = ALIGN(0x1000);
*(.text.mem_error_cb)
. = ALIGN(0x1000);
*(.text.end_arguments)
. = ALIGN(0x1000);
*(.text.print_help .text.BLI_argsPrintArgDoc .text.BLI_argsPrintOtherDoc)
. = ALIGN(0x1000);
*(.text.print_version)
. = ALIGN(0x1000);
*(.text.enable_python)
. = ALIGN(0x1000);
*(.text.disable_python)
. = ALIGN(0x1000);
*(.text.disable_crash_handler)
. = ALIGN(0x1000);
*(.text.background_mode)
. = ALIGN(0x1000);
*(.text.set_env)
. = ALIGN(0x1000);
*(.text.playback_mode .text.WM_main_playanim .text.GHOST_CreateSystem .text.GHOST_CreateEventConsumer .text.GHOST_CreateWindow)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_ISystem12createSystemEv)
. = ALIGN(0x1000);
*(.text.debug_mode)
. = ALIGN(0x1000);
*(.text.debug_mode_generic)
. = ALIGN(0x1000);
*(.text.set_fpe)
. = ALIGN(0x1000);
*(.text.debug_mode_memory)
. = ALIGN(0x1000);
*(.text.set_debug_value)
. = ALIGN(0x1000);
*(.text.set_verbosity)
. = ALIGN(0x1000);
*(.text.set_factory_startup)
. = ALIGN(0x1000);
*(.text.prefsize)
. = ALIGN(0x1000);
*(.text.with_borders)
. = ALIGN(0x1000);
*(.text.without_borders)
. = ALIGN(0x1000);
*(.text.start_with_console)
. = ALIGN(0x1000);
*(.text.register_extension)
. = ALIGN(0x1000);
*(.text.native_pixels)
. = ALIGN(0x1000);
*(.text.no_joystick)
. = ALIGN(0x1000);
*(.text.no_glsl)
. = ALIGN(0x1000);
*(.text.no_audio)
. = ALIGN(0x1000);
*(.text.set_audio)
. = ALIGN(0x1000);
*(.text.set_ge_parameters)
. = ALIGN(0x1000);
*(.text.render_frame)
. = ALIGN(0x1000);
*(.text.render_animation)
. = ALIGN(0x1000);
*(.text.set_scene)
. = ALIGN(0x1000);
*(.text.set_start_frame)
. = ALIGN(0x1000);
*(.text.set_end_frame)
. = ALIGN(0x1000);
*(.text.set_skip_frame)
. = ALIGN(0x1000);
*(.text.run_python_file)
. = ALIGN(0x1000);
*(.text.run_python_text)
. = ALIGN(0x1000);
*(.text.run_python_console)
. = ALIGN(0x1000);
*(.text.set_addons)
. = ALIGN(0x1000);
*(.text.set_output)
. = ALIGN(0x1000);
*(.text.set_engine)
. = ALIGN(0x1000);
*(.text.set_image_type .text.BKE_imtype_from_arg)
. = ALIGN(0x1000);
*(.text.set_threads)
. = ALIGN(0x1000);
*(.text.set_extension)
. = ALIGN(0x1000);
*(.text.blender_crash_handler)
. = ALIGN(0x1000);
*(.text.WM_cursor_modal_restore)
. = ALIGN(0x1000);
*(.text.load_file)
. = ALIGN(0x1000);
*(.text.ghost_event_proc)
. = ALIGN(0x1000);
*(.text.wm_history_read_exec)
. = ALIGN(0x1000);
*(.text.wm_read_history .text.BLI_file_read_as_lines)
. = ALIGN(0x1000);
*(.text.fsmenu_insert_entry .text.fsmenu_read_bookmarks)
. = ALIGN(0x1000);
*(.text.wm_homefile_read_exec)
. = ALIGN(0x1000);
*(.text.BLO_update_defaults_startup_blend)
. = ALIGN(0x1000);
*(.text.wm_homefile_read)
. = ALIGN(0x1000);
*(.text.WM_main_remove_notifier_reference)
. = ALIGN(0x1000);
*(.text.WM_gesture_lasso_invoke)
. = ALIGN(0x1000);
*(.text.WM_gesture_lines_invoke)
. = ALIGN(0x1000);
*(.text.WM_gesture_lines_modal)
. = ALIGN(0x1000);
*(.text.WM_gesture_lasso_modal)
. = ALIGN(0x1000);
*(.text.WM_gesture_lasso_cancel)
. = ALIGN(0x1000);
*(.text.WM_gesture_lines_cancel)
. = ALIGN(0x1000);
*(.text.wm_operator_winactive_normal)
. = ALIGN(0x1000);
*(.text.WM_OT_read_homefile)
. = ALIGN(0x1000);
*(.text.wm_userpref_autoexec_add_exec)
. = ALIGN(0x1000);
*(.text.wm_exit_blender_exec)
. = ALIGN(0x1000);
*(.text.WM_OT_open_mainfile)
. = ALIGN(0x1000);
*(.text.wm_revert_mainfile_exec)
. = ALIGN(0x1000);
*(.text.wm_revert_mainfile_poll)
. = ALIGN(0x1000);
*(.text.WM_OT_link)
. = ALIGN(0x1000);
*(.text.WM_OT_append)
. = ALIGN(0x1000);
*(.text.wm_recover_last_session_exec)
. = ALIGN(0x1000);
*(.text.WM_recover_last_session)
. = ALIGN(0x1000);
*(.text.wm_recover_auto_save_exec)
. = ALIGN(0x1000);
*(.text.wm_recover_auto_save_invoke)
. = ALIGN(0x1000);
*(.text.WM_OT_save_as_mainfile)
. = ALIGN(0x1000);
*(.text.WM_OT_save_mainfile)
. = ALIGN(0x1000);
*(.text.WM_OT_redraw_timer)
. = ALIGN(0x1000);
*(.text.memory_statistics_exec)
. = ALIGN(0x1000);
*(.text.dependency_relations_exec .text.DAG_print_dependencies)
. = ALIGN(0x1000);
*(.text.wm_operator_defaults_exec .text.WM_operator_properties_reset)
. = ALIGN(0x1000);
*(.text.wm_splash_invoke)
. = ALIGN(0x1000);
*(.text.wm_homefile_write_exec)
. = ALIGN(0x1000);
*(.text.wm_userpref_write_exec)
. = ALIGN(0x1000);
*(.text.draw_filled_lasso_px_cb)
. = ALIGN(0x1000);
*(.text.wm_block_create_splash)
. = ALIGN(0x1000);
*(.text.wm_block_splash_close)
. = ALIGN(0x1000);
*(.text.wm_block_splash_refreshmenu)
. = ALIGN(0x1000);
*(.text.wm_debug_menu_invoke)
. = ALIGN(0x1000);
*(.text.wm_debug_menu_exec)
. = ALIGN(0x1000);
*(.text.redraw_timer_exec)
. = ALIGN(0x1000);
*(.text.wm_save_mainfile_invoke)
. = ALIGN(0x1000);
*(.text.wm_file_write .text.wm_save_as_mainfile_exec)
. = ALIGN(0x1000);
*(.text.blend_save_check)
. = ALIGN(0x1000);
*(.text.wm_save_as_mainfile_invoke)
. = ALIGN(0x1000);
*(.text.wm_link_append_invoke)
. = ALIGN(0x1000);
*(.text.wm_link_append_exec .text.BLO_library_append_named_part_ex)
. = ALIGN(0x1000);
*(.text.append_named_part)
. = ALIGN(0x1000);
*(.text.wm_link_append_poll)
. = ALIGN(0x1000);
*(.text.wm_open_mainfile_invoke)
. = ALIGN(0x1000);
*(.text.wm_open_mainfile_exec)
. = ALIGN(0x1000);
*(.text.wm_open_init_use_scripts)
. = ALIGN(0x1000);
*(.text.wm_open_init_load_ui)
. = ALIGN(0x1000);
*(.text.write_history)
. = ALIGN(0x1000);
*(.text.WM_file_read)
. = ALIGN(0x1000);
*(.text.WM_file_autoexec_init)
. = ALIGN(0x1000);
*(.text.wm_add_default .text.wm_window_match_init .text.wm_window_match_do .text.ED_editors_init .text.BKE_reports_prependf .text.BKE_read_file)
. = ALIGN(0x1000);
*(.text.wm_close_and_free .text.wm_autosave_timer_ended)
. = ALIGN(0x1000);
*(.text.wm_open_mainfile_check)
. = ALIGN(0x1000);
*(.text.wm_open_mainfile_ui)
. = ALIGN(0x1000);
*(.text.wm_userpref_autoexec_remove_exec)
. = ALIGN(0x1000);
*(.text.RNA_action_itemf)
. = ALIGN(0x1000);
*(.text.RNA_group_itemf)
. = ALIGN(0x1000);
*(.text.RNA_group_local_itemf)
. = ALIGN(0x1000);
*(.text.RNA_image_itemf)
. = ALIGN(0x1000);
*(.text.RNA_scene_itemf)
. = ALIGN(0x1000);
*(.text.RNA_scene_local_itemf)
. = ALIGN(0x1000);
*(.text.RNA_movieclip_itemf)
. = ALIGN(0x1000);
*(.text.RNA_mask_itemf)
. = ALIGN(0x1000);
*(.text.do_job_thread)
. = ALIGN(0x1000);
*(.text.actkeys_insertkey_exec)
. = ALIGN(0x1000);
*(.text.actkeys_duplicate_invoke)
. = ALIGN(0x1000);
*(.text.actkeys_duplicate_exec .text.ED_gplayer_frames_duplicate)
. = ALIGN(0x1000);
*(.text.actkeys_delete_exec)
. = ALIGN(0x1000);
*(.text.actkeys_clean_exec)
. = ALIGN(0x1000);
*(.text.actkeys_sample_exec)
. = ALIGN(0x1000);
*(.text.actkeys_expo_exec)
. = ALIGN(0x1000);
*(.text.actkeys_ipo_exec)
. = ALIGN(0x1000);
*(.text.actkeys_handletype_exec)
. = ALIGN(0x1000);
*(.text.wm_macro_exec)
. = ALIGN(0x1000);
*(.text.wm_macro_invoke)
. = ALIGN(0x1000);
*(.text.wm_macro_modal)
. = ALIGN(0x1000);
*(.text.wm_macro_cancel)
. = ALIGN(0x1000);
*(.text.WM_enum_search_invoke)
. = ALIGN(0x1000);
*(.text.wm_enum_search_menu .text.uiDefSearchButO_ptr)
. = ALIGN(0x1000);
*(.text.WM_operator_confirm)
. = ALIGN(0x1000);
*(.text.WM_operator_winactive)
. = ALIGN(0x1000);
*(.text.wm_operator_ui_create)
. = ALIGN(0x1000);
*(.text.wm_operator_ui_popup_cancel)
. = ALIGN(0x1000);
*(.text.wm_block_dialog_create)
. = ALIGN(0x1000);
*(.text.wm_operator_ui_popup_ok)
. = ALIGN(0x1000);
*(.text.dialog_check_cb)
. = ALIGN(0x1000);
*(.text.dialog_exec_cb)
. = ALIGN(0x1000);
*(.text.wm_block_create_redo)
. = ALIGN(0x1000);
*(.text.wm_block_redo_cancel_cb)
. = ALIGN(0x1000);
*(.text.wm_block_redo_cb)
. = ALIGN(0x1000);
*(.text.WM_operator_props_popup)
. = ALIGN(0x1000);
*(.text.WM_border_select_invoke)
. = ALIGN(0x1000);
*(.text.WM_border_select_cancel)
. = ALIGN(0x1000);
*(.text.WM_gesture_circle_invoke)
. = ALIGN(0x1000);
*(.text.WM_gesture_circle_modal)
. = ALIGN(0x1000);
*(.text.WM_gesture_circle_cancel)
. = ALIGN(0x1000);
*(.text.file_exec)
. = ALIGN(0x1000);
*(.text.FILE_OT_execute)
. = ALIGN(0x1000);
*(.text.file_parent_exec)
. = ALIGN(0x1000);
*(.text.file_previous_exec)
. = ALIGN(0x1000);
*(.text.file_next_exec)
. = ALIGN(0x1000);
*(.text.file_smoothscroll_invoke)
. = ALIGN(0x1000);
*(.text.file_directory_new_exec)
. = ALIGN(0x1000);
*(.text.FILE_OT_directory_new)
. = ALIGN(0x1000);
*(.text.file_directory_enter_handle)
. = ALIGN(0x1000);
*(.text.file_filename_enter_handle)
. = ALIGN(0x1000);
*(.text.file_expand_directory)
. = ALIGN(0x1000);
*(.text.uiButActiveOnly)
. = ALIGN(0x1000);
*(.text.file_refresh_exec)
. = ALIGN(0x1000);
*(.text.file_hidedot_exec)
. = ALIGN(0x1000);
*(.text.file_bookmark_toggle_exec)
. = ALIGN(0x1000);
*(.text.file_filenum_exec)
. = ALIGN(0x1000);
*(.text.file_rename_exec)
. = ALIGN(0x1000);
*(.text.file_rename_poll)
. = ALIGN(0x1000);
*(.text.file_delete_exec)
. = ALIGN(0x1000);
*(.text.ED_fileselect_clear)
. = ALIGN(0x1000);
*(.text.file_delete_poll)
. = ALIGN(0x1000);
*(.text.file_panel_system)
. = ALIGN(0x1000);
*(.text.file_panel_system_bookmarks)
. = ALIGN(0x1000);
*(.text.file_panel_system_bookmarks_poll)
. = ALIGN(0x1000);
*(.text.file_panel_bookmarks)
. = ALIGN(0x1000);
*(.text.file_panel_recent)
. = ALIGN(0x1000);
*(.text.file_panel_category)
. = ALIGN(0x1000);
*(.text.file_panel_recent_poll)
. = ALIGN(0x1000);
*(.text.file_panel_operator_poll)
. = ALIGN(0x1000);
*(.text.file_panel_operator_header)
. = ALIGN(0x1000);
*(.text.file_panel_operator)
. = ALIGN(0x1000);
*(.text.file_panel_check_prop)
. = ALIGN(0x1000);
*(.text.file_panel_cb)
. = ALIGN(0x1000);
*(.text.filelist_read_library .text.filelist_from_library .text.BLO_blendhandle_get_previews .text.BLO_blendhandle_get_linkable_groups)
. = ALIGN(0x1000);
*(.text.filelist_read_dir .text.BLI_dir_contents)
. = ALIGN(0x1000);
*(.text.BLI_make_exist)
. = ALIGN(0x1000);
*(.text.filelist_read_main .text.filelist_from_main)
. = ALIGN(0x1000);
*(.text.is_filtered_file)
. = ALIGN(0x1000);
*(.text.is_filtered_lib)
. = ALIGN(0x1000);
*(.text.BLO_is_a_library)
. = ALIGN(0x1000);
*(.text.is_filtered_main)
. = ALIGN(0x1000);
*(.text.compare_name)
. = ALIGN(0x1000);
*(.text.wm_search_menu_invoke)
. = ALIGN(0x1000);
*(.text.wm_search_menu_exec)
. = ALIGN(0x1000);
*(.text.wm_search_menu_poll)
. = ALIGN(0x1000);
*(.text.wm_call_menu_exec .text.uiPupMenuInvoke)
. = ALIGN(0x1000);
*(.text.wm_call_pie_menu_invoke)
. = ALIGN(0x1000);
*(.text.wm_call_pie_menu_exec)
. = ALIGN(0x1000);
*(.text.uiPieMenuInvoke)
. = ALIGN(0x1000);
*(.text.WM_OT_radial_control)
. = ALIGN(0x1000);
*(.text.radial_control_invoke .text.radial_control_get_path .text.BKE_brush_gen_radial_control_imbuf)
. = ALIGN(0x1000);
*(.text.radial_control_modal)
. = ALIGN(0x1000);
*(.text.radial_control_cancel)
. = ALIGN(0x1000);
*(.text.WM_event_add_notifier)
. = ALIGN(0x1000);
*(.text.radial_control_paint_cursor)
. = ALIGN(0x1000);
*(.text.wm_block_search_menu)
. = ALIGN(0x1000);
*(.text.compare_extension)
. = ALIGN(0x1000);
*(.text.compare_date)
. = ALIGN(0x1000);
*(.text.compare_size)
. = ALIGN(0x1000);
*(.text.thumbnails_free)
. = ALIGN(0x1000);
*(.text.thumbnails_startjob)
. = ALIGN(0x1000);
*(.text.thumbnails_update)
. = ALIGN(0x1000);
*(.text.autocomplete_directory)
. = ALIGN(0x1000);
*(.text.autocomplete_file)
. = ALIGN(0x1000);
*(.text.wm_window_copy .text.wm_window_duplicate_exec)
. = ALIGN(0x1000);
*(.text.wm_window_fullscreen_toggle_exec)
. = ALIGN(0x1000);
*(.text.wm_window_testbreak)
. = ALIGN(0x1000);
*(.text.wm_event_add_ghostevent .text.wm_event_cursor_other_windows .text.wm_eventemulation .text.ghost_event_proc.625)
. = ALIGN(0x1000);
*(.text.path_extension_type)
. = ALIGN(0x1000);
*(.text.wm_event_free_all .text.wm_window_free)
. = ALIGN(0x1000);
*(.text.ED_editors_exit .text.ED_undo_paint_free .text.BKE_reset_undo)
. = ALIGN(0x1000);
*(.text.fsmenu_free)
. = ALIGN(0x1000);
*(.text.colormanage_free_config)
. = ALIGN(0x1000);
*(.text.imb_tile_cache_exit)
. = ALIGN(0x1000);
*(.text.gpu_codegen_exit)
. = ALIGN(0x1000);
*(.text.GPU_simple_shaders_exit)
. = ALIGN(0x1000);
*(.text.filelist_free_icons)
. = ALIGN(0x1000);
*(.text.spacetype_free)
. = ALIGN(0x1000);
*(.text.operatortype_ghash_free_cb)
. = ALIGN(0x1000);
*(.text.BKE_undo_save_file)
. = ALIGN(0x1000);
*(.text.free_nodesystem .text.WM_uilisttype_free .text.WM_menutype_free .text.WM_exit_ext .text.WM_exit .text.wm_autosave_delete .text.RNA_exit .text.RNA_define_free .text.RNA_free .text.free_blender .text.BKE_mask_clipboard_free .text.IMB_exit)
. = ALIGN(0x1000);
*(.text.wm_window_close)
. = ALIGN(0x1000);
*(.text.xxx_new)
. = ALIGN(0x1000);
*(.text.xxx_free)
. = ALIGN(0x1000);
*(.text.xxx_init)
. = ALIGN(0x1000);
*(.text.xxx_duplicate)
. = ALIGN(0x1000);
*(.text.xxx_operatortypes)
. = ALIGN(0x1000);
*(.text.xxx_keymap)
. = ALIGN(0x1000);
*(.text.act_new_exec)
. = ALIGN(0x1000);
*(.text.act_markers_make_local_exec)
. = ALIGN(0x1000);
*(.text.act_markers_make_local_poll)
. = ALIGN(0x1000);
*(.text.actkeys_previewrange_exec)
. = ALIGN(0x1000);
*(.text.actkeys_viewall_exec)
. = ALIGN(0x1000);
*(.text.actkeys_viewsel_exec)
. = ALIGN(0x1000);
*(.text.get_keyframe_extents)
. = ALIGN(0x1000);
*(.text.actkeys_viewall)
. = ALIGN(0x1000);
*(.text.actkeys_copy_exec)
. = ALIGN(0x1000);
*(.text.ACTION_OT_paste)
. = ALIGN(0x1000);
*(.text.actkeys_paste_exec)
. = ALIGN(0x1000);
*(.text.image_scopes_toggle_exec .text.image_has_tools_region)
. = ALIGN(0x1000);
*(.text.space_image_main_area_poll)
. = ALIGN(0x1000);
*(.text.actkeys_keytype_exec)
. = ALIGN(0x1000);
*(.text.actkeys_framejump_exec)
. = ALIGN(0x1000);
*(.text.actkeys_framejump_poll)
. = ALIGN(0x1000);
*(.text.actkeys_snap_exec .text.ED_gplayer_snap_frames .text.ED_masklayer_snap_frames)
. = ALIGN(0x1000);
*(.text.actkeys_mirror_exec)
. = ALIGN(0x1000);
*(.text.action_operatortypes)
. = ALIGN(0x1000);
*(.text.action_keymap)
. = ALIGN(0x1000);
*(.text.actkeys_deselectall_exec)
. = ALIGN(0x1000);
*(.text.ACTION_OT_select_border)
. = ALIGN(0x1000);
*(.text.actkeys_borderselect_exec)
. = ALIGN(0x1000);
*(.text.actkeys_columnselect_exec)
. = ALIGN(0x1000);
*(.text.actkeys_select_linked_exec)
. = ALIGN(0x1000);
*(.text.actkeys_select_more_exec)
. = ALIGN(0x1000);
*(.text.actkeys_select_less_exec)
. = ALIGN(0x1000);
*(.text.select_moreless_action_keys)
. = ALIGN(0x1000);
*(.text.ACTION_OT_select_leftright)
. = ALIGN(0x1000);
*(.text.actkeys_select_leftright_invoke)
. = ALIGN(0x1000);
*(.text.ED_gplayer_frames_select_border .text.ED_masklayer_frames_select_border)
. = ALIGN(0x1000);
*(.text.actkeys_select_leftright_exec)
. = ALIGN(0x1000);
*(.text.ACTION_OT_clickselect)
. = ALIGN(0x1000);
*(.text.actkeys_clickselect_invoke .text.gpl_to_keylist)
. = ALIGN(0x1000);
*(.text.deselect_action_keys)
. = ALIGN(0x1000);
*(.text.ANIM_fcurve_keyframes_loop)
. = ALIGN(0x1000);
*(.text.ANIM_animchannel_keyframes_loop)
. = ALIGN(0x1000);
*(.text.summary_to_keylist)
. = ALIGN(0x1000);
*(.text.action_new)
. = ALIGN(0x1000);
*(.text.action_free)
. = ALIGN(0x1000);
*(.text.action_init)
. = ALIGN(0x1000);
*(.text.action_duplicate)
. = ALIGN(0x1000);
*(.text.action_listener)
. = ALIGN(0x1000);
*(.text.action_refresh)
. = ALIGN(0x1000);
*(.text.action_main_area_init)
. = ALIGN(0x1000);
*(.text.action_main_area_draw)
. = ALIGN(0x1000);
*(.text.action_main_area_listener)
. = ALIGN(0x1000);
*(.text.action_header_area_init)
. = ALIGN(0x1000);
*(.text.action_header_area_draw)
. = ALIGN(0x1000);
*(.text.action_header_area_listener)
. = ALIGN(0x1000);
*(.text.action_channel_area_init)
. = ALIGN(0x1000);
*(.text.action_channel_area_draw)
. = ALIGN(0x1000);
*(.text.action_channel_area_listener)
. = ALIGN(0x1000);
*(.text.buttons_context)
. = ALIGN(0x1000);
*(.text.pin_cb)
. = ALIGN(0x1000);
*(.text.buttons_context_draw .text.buttons_panel_context)
. = ALIGN(0x1000);
*(.text.toolbox_invoke)
. = ALIGN(0x1000);
*(.text.file_browse_invoke)
. = ALIGN(0x1000);
*(.text.file_browse_exec)
. = ALIGN(0x1000);
*(.text.file_browse_cancel)
. = ALIGN(0x1000);
*(.text.texture_context_check_modifier_foreach)
. = ALIGN(0x1000);
*(.text.buttons_texture_modifier_foreach)
. = ALIGN(0x1000);
*(.text.template_texture_user_menu)
. = ALIGN(0x1000);
*(.text.template_texture_show)
. = ALIGN(0x1000);
*(.text.template_texture_select)
. = ALIGN(0x1000);
*(.text.buttons_new)
. = ALIGN(0x1000);
*(.text.buttons_free)
. = ALIGN(0x1000);
*(.text.buttons_init)
. = ALIGN(0x1000);
*(.text.buttons_duplicate)
. = ALIGN(0x1000);
*(.text.buttons_operatortypes)
. = ALIGN(0x1000);
*(.text.buttons_keymap)
. = ALIGN(0x1000);
*(.text.buttons_area_listener)
. = ALIGN(0x1000);
*(.text.buttons_main_area_init)
. = ALIGN(0x1000);
*(.text.buttons_main_area_draw)
. = ALIGN(0x1000);
*(.text.buttons_header_area_init)
. = ALIGN(0x1000);
*(.text.buttons_header_area_draw .text.CTX_wm_space_buts)
. = ALIGN(0x1000);
*(.text.buttons_context_compute .text.buttons_context_path .text.buttons_context_path_data .text.buttons_context_path_material .text.buttons_texture_context_compute .text.buttons_texture_users_find_nodetree)
. = ALIGN(0x1000);
*(.text.console_textview_begin)
. = ALIGN(0x1000);
*(.text.console_textview_end)
. = ALIGN(0x1000);
*(.text.console_textview_step)
. = ALIGN(0x1000);
*(.text.console_textview_line_get)
. = ALIGN(0x1000);
*(.text.console_textview_line_color)
. = ALIGN(0x1000);
*(.text.UI_GetThemeColor3ubv)
. = ALIGN(0x1000);
*(.text.console_textview_const_colors)
. = ALIGN(0x1000);
*(.text.console_move_exec)
. = ALIGN(0x1000);
*(.text.console_insert_invoke)
. = ALIGN(0x1000);
*(.text.console_insert_exec)
. = ALIGN(0x1000);
*(.text.console_indent_exec)
. = ALIGN(0x1000);
*(.text.console_unindent_exec)
. = ALIGN(0x1000);
*(.text.console_delete_exec)
. = ALIGN(0x1000);
*(.text.console_clear_line_exec)
. = ALIGN(0x1000);
*(.text.CONSOLE_OT_clear)
. = ALIGN(0x1000);
*(.text.console_clear_exec)
. = ALIGN(0x1000);
*(.text.CONSOLE_OT_history_cycle)
. = ALIGN(0x1000);
*(.text.console_history_cycle_exec)
. = ALIGN(0x1000);
*(.text.CONSOLE_OT_history_append)
. = ALIGN(0x1000);
*(.text.console_history_append_exec)
. = ALIGN(0x1000);
*(.text.CONSOLE_OT_scrollback_append)
. = ALIGN(0x1000);
*(.text.console_scrollback_append_exec)
. = ALIGN(0x1000);
*(.text.console_copy_exec)
. = ALIGN(0x1000);
*(.text.console_paste_exec)
. = ALIGN(0x1000);
*(.text.console_textview_height)
. = ALIGN(0x1000);
*(.text.console_modal_select_invoke)
. = ALIGN(0x1000);
*(.text.console_modal_select)
. = ALIGN(0x1000);
*(.text.console_char_pick .text.console_modal_select_apply)
. = ALIGN(0x1000);
*(.text.console_modal_select_cancel)
. = ALIGN(0x1000);
*(.text.console_new)
. = ALIGN(0x1000);
*(.text.console_free)
. = ALIGN(0x1000);
*(.text.console_init)
. = ALIGN(0x1000);
*(.text.console_duplicate)
. = ALIGN(0x1000);
*(.text.console_operatortypes)
. = ALIGN(0x1000);
*(.text.console_keymap)
. = ALIGN(0x1000);
*(.text.console_dropboxes)
. = ALIGN(0x1000);
*(.text.console_main_area_init)
. = ALIGN(0x1000);
*(.text.console_main_area_draw)
. = ALIGN(0x1000);
*(.text.console_cursor)
. = ALIGN(0x1000);
*(.text.console_main_area_listener)
. = ALIGN(0x1000);
*(.text.console_header_area_init)
. = ALIGN(0x1000);
*(.text.console_header_area_draw)
. = ALIGN(0x1000);
*(.text.id_drop_poll)
. = ALIGN(0x1000);
*(.text.id_drop_copy)
. = ALIGN(0x1000);
*(.text.path_drop_poll)
. = ALIGN(0x1000);
*(.text.path_drop_copy)
. = ALIGN(0x1000);
*(.text.file_border_select_exec)
. = ALIGN(0x1000);
*(.text.file_border_select_modal)
. = ALIGN(0x1000);
*(.text.WM_border_select_modal .text.border_apply_rect)
. = ALIGN(0x1000);
*(.text.FILE_OT_select)
. = ALIGN(0x1000);
*(.text.file_select_invoke)
. = ALIGN(0x1000);
*(.text.ED_fileselect_layout_offset_rect .text.file_selection_get)
. = ALIGN(0x1000);
*(.text.file_select)
. = ALIGN(0x1000);
*(.text.file_select_all_exec)
. = ALIGN(0x1000);
*(.text.filelist_select)
. = ALIGN(0x1000);
*(.text.FILE_OT_select_bookmark)
. = ALIGN(0x1000);
*(.text.bookmark_select_exec)
. = ALIGN(0x1000);
*(.text.file_change_dir)
. = ALIGN(0x1000);
*(.text.bookmark_add_exec)
. = ALIGN(0x1000);
*(.text.bookmark_delete_exec)
. = ALIGN(0x1000);
*(.text.reset_recent_exec)
. = ALIGN(0x1000);
*(.text.fsmenu_write_file)
. = ALIGN(0x1000);
*(.text.file_highlight_set .text.file_highlight_invoke)
. = ALIGN(0x1000);
*(.text.file_cancel_exec)
. = ALIGN(0x1000);
*(.text.file_operator_poll)
. = ALIGN(0x1000);
*(.text.file_draw_check_cb)
. = ALIGN(0x1000);
*(.text.file_operator_to_sfile)
. = ALIGN(0x1000);
*(.text.file_sfile_to_operator .text.RNA_property_collection_clear)
. = ALIGN(0x1000);
*(.text.node_composit_buts_hue_sat)
. = ALIGN(0x1000);
*(.text.node_buts_texture)
. = ALIGN(0x1000);
*(.text.node_composit_buts_dilateerode)
. = ALIGN(0x1000);
*(.text.node_composit_buts_inpaint)
. = ALIGN(0x1000);
*(.text.node_composit_buts_despeckle)
. = ALIGN(0x1000);
*(.text.node_composit_buts_file_output)
. = ALIGN(0x1000);
*(.text.node_composit_buts_file_output_ex)
. = ALIGN(0x1000);
*(.text.node_composit_buts_diff_matte)
. = ALIGN(0x1000);
*(.text.node_composit_buts_distance_matte)
. = ALIGN(0x1000);
*(.text.node_composit_buts_color_spill)
. = ALIGN(0x1000);
*(.text.node_composit_buts_chroma_matte)
. = ALIGN(0x1000);
*(.text.node_composit_buts_color_matte)
. = ALIGN(0x1000);
*(.text.node_composit_buts_scale)
. = ALIGN(0x1000);
*(.text.node_composit_buts_rotate)
. = ALIGN(0x1000);
*(.text.node_composit_buts_channel_matte)
. = ALIGN(0x1000);
*(.text.node_composit_buts_luma_matte)
. = ALIGN(0x1000);
*(.text.node_composit_buts_map_uv)
. = ALIGN(0x1000);
*(.text.node_composit_buts_id_mask)
. = ALIGN(0x1000);
*(.text.node_composit_buts_double_edge_mask)
. = ALIGN(0x1000);
*(.text.node_buts_math)
. = ALIGN(0x1000);
*(.text.node_composit_buts_invert)
. = ALIGN(0x1000);
*(.text.node_composit_buts_premulkey)
. = ALIGN(0x1000);
*(.text.node_composit_buts_view_levels)
. = ALIGN(0x1000);
*(.text.node_composit_buts_colorbalance)
. = ALIGN(0x1000);
*(.text.node_composit_buts_colorbalance_ex)
. = ALIGN(0x1000);
*(.text.node_composit_buts_huecorrect)
. = ALIGN(0x1000);
*(.text.node_composit_buts_zcombine)
. = ALIGN(0x1000);
*(.text.node_composit_buts_ycc)
. = ALIGN(0x1000);
*(.text.node_composit_buts_movieclip)
. = ALIGN(0x1000);
*(.text.node_composit_buts_movieclip_ex)
. = ALIGN(0x1000);
*(.text.node_composit_buts_stabilize2d)
. = ALIGN(0x1000);
*(.text.node_composit_buts_transform)
. = ALIGN(0x1000);
*(.text.node_composit_buts_translate)
. = ALIGN(0x1000);
*(.text.node_composit_buts_moviedistortion)
. = ALIGN(0x1000);
*(.text.node_composit_buts_colorcorrection)
. = ALIGN(0x1000);
*(.text.node_composit_buts_colorcorrection_ex)
. = ALIGN(0x1000);
*(.text.node_composit_buts_switch)
. = ALIGN(0x1000);
*(.text.node_composit_buts_boxmask)
. = ALIGN(0x1000);
*(.text.node_composit_backdrop_boxmask)
. = ALIGN(0x1000);
*(.text.node_composit_buts_ellipsemask)
. = ALIGN(0x1000);
*(.text.node_composit_backdrop_ellipsemask)
. = ALIGN(0x1000);
*(.text.node_composit_buts_bokehimage)
. = ALIGN(0x1000);
*(.text.node_composit_buts_bokehblur)
. = ALIGN(0x1000);
*(.text.node_composit_buts_viewer)
. = ALIGN(0x1000);
*(.text.node_composit_buts_viewer_ex)
. = ALIGN(0x1000);
*(.text.node_composit_backdrop_viewer)
. = ALIGN(0x1000);
*(.text.node_composit_buts_composite)
. = ALIGN(0x1000);
*(.text.node_composit_buts_mask)
. = ALIGN(0x1000);
*(.text.node_composit_buts_keyingscreen)
. = ALIGN(0x1000);
*(.text.node_composit_buts_keying)
. = ALIGN(0x1000);
*(.text.node_composit_buts_trackpos)
. = ALIGN(0x1000);
*(.text.node_composit_buts_planetrackdeform)
. = ALIGN(0x1000);
*(.text.node_composit_buts_cornerpin)
. = ALIGN(0x1000);
*(.text.node_composit_buts_sunbeams)
. = ALIGN(0x1000);
*(.text.node_shader_buts_mapping)
. = ALIGN(0x1000);
*(.text.node_shader_buts_vect_math)
. = ALIGN(0x1000);
*(.text.node_shader_buts_vect_transform)
. = ALIGN(0x1000);
*(.text.node_shader_buts_geometry)
. = ALIGN(0x1000);
*(.text.node_shader_buts_lamp)
. = ALIGN(0x1000);
*(.text.node_shader_buts_attribute)
. = ALIGN(0x1000);
*(.text.node_shader_buts_wireframe)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_sky)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_image)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_image_ex)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_environment)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_gradient)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_magic)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_brick)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_wave)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_musgrave)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_voronoi)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tex_coord)
. = ALIGN(0x1000);
*(.text.node_shader_buts_bump)
. = ALIGN(0x1000);
*(.text.node_shader_buts_normal_map)
. = ALIGN(0x1000);
*(.text.node_shader_buts_tangent)
. = ALIGN(0x1000);
*(.text.node_shader_buts_anisotropic)
. = ALIGN(0x1000);
*(.text.node_shader_buts_subsurface)
. = ALIGN(0x1000);
*(.text.node_shader_buts_toon)
. = ALIGN(0x1000);
*(.text.node_shader_buts_hair)
. = ALIGN(0x1000);
*(.text.node_shader_buts_script_ex)
. = ALIGN(0x1000);
*(.text.node_shader_buts_script)
. = ALIGN(0x1000);
*(.text.node_shader_buts_uvmap)
. = ALIGN(0x1000);
*(.text.node_shader_buts_uvalongstroke)
. = ALIGN(0x1000);
*(.text.node_buts_output_linestyle)
. = ALIGN(0x1000);
*(.text.node_texture_buts_proc)
. = ALIGN(0x1000);
*(.text.node_shader_buts_glossy)
. = ALIGN(0x1000);
*(.text.node_shader_buts_material)
. = ALIGN(0x1000);
*(.text.node_texture_buts_bricks)
. = ALIGN(0x1000);
*(.text.node_texture_buts_image)
. = ALIGN(0x1000);
*(.text.node_texture_buts_image_ex)
. = ALIGN(0x1000);
*(.text.node_texture_buts_output)
. = ALIGN(0x1000);
*(.text.node_property_update_default)
. = ALIGN(0x1000);
*(.text.node_socket_button_label)
. = ALIGN(0x1000);
*(.text.std_node_socket_draw)
. = ALIGN(0x1000);
*(.text.std_node_socket_draw_color)
. = ALIGN(0x1000);
*(.text.std_node_socket_interface_draw)
. = ALIGN(0x1000);
*(.text.std_node_socket_interface_draw_color)
. = ALIGN(0x1000);
*(.text.node_socket_virtual_draw_color)
. = ALIGN(0x1000);
*(.text.NODE_OT_add_reroute)
. = ALIGN(0x1000);
*(.text.add_reroute_exec .text.add_reroute_do_socket_section)
. = ALIGN(0x1000);
*(.text.NODE_OT_add_file)
. = ALIGN(0x1000);
*(.text.node_add_file_invoke)
. = ALIGN(0x1000);
*(.text.node_add_file_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_add_mask)
. = ALIGN(0x1000);
*(.text.node_add_mask_exec)
. = ALIGN(0x1000);
*(.text.node_add_mask_poll)
. = ALIGN(0x1000);
*(.text.NODE_OT_new_node_tree)
. = ALIGN(0x1000);
*(.text.new_node_tree_exec)
. = ALIGN(0x1000);
*(.text.new_node_tree_type_itemf)
. = ALIGN(0x1000);
*(.text.node_sockets_panel)
. = ALIGN(0x1000);
*(.text.node_sockets_poll)
. = ALIGN(0x1000);
*(.text.node_tree_interface_panel)
. = ALIGN(0x1000);
*(.text.node_tree_interface_poll)
. = ALIGN(0x1000);
*(.text.active_nodetree_poll)
. = ALIGN(0x1000);
*(.text.node_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.node_properties_poll)
. = ALIGN(0x1000);
*(.text.node_update_default)
. = ALIGN(0x1000);
*(.text.node_select_area_default)
. = ALIGN(0x1000);
*(.text.node_tweak_area_default)
. = ALIGN(0x1000);
*(.text.node_draw_default)
. = ALIGN(0x1000);
*(.text.compo_freejob)
. = ALIGN(0x1000);
*(.text.compo_startjob)
. = ALIGN(0x1000);
*(.text.compo_initjob .text.compo_tag_output_nodes)
. = ALIGN(0x1000);
*(.text.compo_updatejob)
. = ALIGN(0x1000);
*(.text.compo_redrawjob)
. = ALIGN(0x1000);
*(.text.composite_node_active)
. = ALIGN(0x1000);
*(.text.composite_node_editable)
. = ALIGN(0x1000);
*(.text.node_resize_invoke)
. = ALIGN(0x1000);
*(.text.node_resize_modal)
. = ALIGN(0x1000);
*(.text.node_resize_cancel)
. = ALIGN(0x1000);
*(.text.NODE_OT_duplicate)
. = ALIGN(0x1000);
*(.text.node_duplicate_exec .text.node_duplicate_reparent_recursive)
. = ALIGN(0x1000);
*(.text.node_read_renderlayers_exec)
. = ALIGN(0x1000);
*(.text.node_read_fullsamplelayers_exec .text.RE_MergeFullSample)
. = ALIGN(0x1000);
*(.text.node_hide_toggle_exec)
. = ALIGN(0x1000);
*(.text.node_preview_toggle_exec)
. = ALIGN(0x1000);
*(.text.node_options_toggle_exec)
. = ALIGN(0x1000);
*(.text.node_socket_toggle_exec)
. = ALIGN(0x1000);
*(.text.node_mute_exec)
. = ALIGN(0x1000);
*(.text.node_delete_exec)
. = ALIGN(0x1000);
*(.text.node_delete_reconnect_exec)
. = ALIGN(0x1000);
*(.text.node_output_file_add_socket_exec)
. = ALIGN(0x1000);
*(.text.node_output_file_remove_active_socket_exec)
. = ALIGN(0x1000);
*(.text.node_output_file_move_active_socket_exec)
. = ALIGN(0x1000);
*(.text.node_copy_color_exec)
. = ALIGN(0x1000);
*(.text.node_clipboard_copy_exec .text.BKE_node_clipboard_add_node)
. = ALIGN(0x1000);
*(.text.node_clipboard_paste_exec)
. = ALIGN(0x1000);
*(.text.ntree_socket_add_exec)
. = ALIGN(0x1000);
*(.text.ntree_socket_remove_exec)
. = ALIGN(0x1000);
*(.text.ntree_socket_move_exec)
. = ALIGN(0x1000);
*(.text.node_shader_script_update_exec .text.node_shader_script_update_text_recursive)
. = ALIGN(0x1000);
*(.text.node_shader_script_update_poll)
. = ALIGN(0x1000);
*(.text.viewer_border_exec)
. = ALIGN(0x1000);
*(.text.clear_viewer_border_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_group_edit)
. = ALIGN(0x1000);
*(.text.node_group_edit_exec)
. = ALIGN(0x1000);
*(.text.node_group_operator_active)
. = ALIGN(0x1000);
*(.text.node_group_ungroup_exec)
. = ALIGN(0x1000);
*(.text.node_group_operator_editable)
. = ALIGN(0x1000);
*(.text.node_group_separate_invoke)
. = ALIGN(0x1000);
*(.text.node_group_separate_exec .text.node_group_separate_selected)
. = ALIGN(0x1000);
*(.text.node_group_make_exec)
. = ALIGN(0x1000);
*(.text.node_group_insert_exec)
. = ALIGN(0x1000);
*(.text.action_move_fcurves_by_basepath .text.BKE_animdata_separate_by_basepath)
. = ALIGN(0x1000);
*(.text.node_group_make_test_selected .text.node_group_make_insert_selected)
. = ALIGN(0x1000);
*(.text.node_operatortypes)
. = ALIGN(0x1000);
*(.text.node_keymap)
. = ALIGN(0x1000);
*(.text.node_active_link_viewer_exec)
. = ALIGN(0x1000);
*(.text.node_link_invoke)
. = ALIGN(0x1000);
*(.text.node_link_modal)
. = ALIGN(0x1000);
*(.text.node_link_cancel)
. = ALIGN(0x1000);
*(.text.node_make_link_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_links_cut)
. = ALIGN(0x1000);
*(.text.cut_links_exec.3941)
. = ALIGN(0x1000);
*(.text.file_new)
. = ALIGN(0x1000);
*(.text.file_free)
. = ALIGN(0x1000);
*(.text.file_init)
. = ALIGN(0x1000);
*(.text.ED_fileselect_exit .text.file_exit)
. = ALIGN(0x1000);
*(.text.filelist_free)
. = ALIGN(0x1000);
*(.text.file_duplicate)
. = ALIGN(0x1000);
*(.text.file_listener)
. = ALIGN(0x1000);
*(.text.file_operatortypes)
. = ALIGN(0x1000);
*(.text.file_keymap)
. = ALIGN(0x1000);
*(.text.file_main_area_init)
. = ALIGN(0x1000);
*(.text.file_main_area_draw)
. = ALIGN(0x1000);
*(.text.filelist_filter)
. = ALIGN(0x1000);
*(.text.filelist_setfilter_types .text.thumbnails_start .text.file_refresh)
. = ALIGN(0x1000);
*(.text.file_main_area_listener)
. = ALIGN(0x1000);
*(.text.file_header_area_init)
. = ALIGN(0x1000);
*(.text.file_header_area_draw)
. = ALIGN(0x1000);
*(.text.file_ui_area_listener)
. = ALIGN(0x1000);
*(.text.file_ui_area_init)
. = ALIGN(0x1000);
*(.text.file_ui_area_draw)
. = ALIGN(0x1000);
*(.text.file_channel_area_listener)
. = ALIGN(0x1000);
*(.text.file_channel_area_init)
. = ALIGN(0x1000);
*(.text.file_channel_area_draw)
. = ALIGN(0x1000);
*(.text.graph_panel_view)
. = ALIGN(0x1000);
*(.text.graph_panel_properties)
. = ALIGN(0x1000);
*(.text.graph_panel_poll)
. = ALIGN(0x1000);
*(.text.graph_panel_key_properties)
. = ALIGN(0x1000);
*(.text.graph_panel_drivers)
. = ALIGN(0x1000);
*(.text.graph_panel_drivers_poll)
. = ALIGN(0x1000);
*(.text.graph_panel_modifiers)
. = ALIGN(0x1000);
*(.text.do_graph_region_modifier_buttons)
. = ALIGN(0x1000);
*(.text.do_graph_region_driver_buttons)
. = ALIGN(0x1000);
*(.text.driver_update_flags_cb)
. = ALIGN(0x1000);
*(.text.driver_remove_cb)
. = ALIGN(0x1000);
*(.text.driver_add_var_cb)
. = ALIGN(0x1000);
*(.text.driver_delete_var_cb)
. = ALIGN(0x1000);
*(.text.graphedit_activekey_update_cb)
. = ALIGN(0x1000);
*(.text.graphedit_activekey_left_handle_coord_cb)
. = ALIGN(0x1000);
*(.text.graphedit_activekey_handles_cb)
. = ALIGN(0x1000);
*(.text.graphedit_activekey_right_handle_coord_cb)
. = ALIGN(0x1000);
*(.text.graph_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_previewrange_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_view_all)
. = ALIGN(0x1000);
*(.text.graphkeys_viewall_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_view_selected)
. = ALIGN(0x1000);
*(.text.graphkeys_view_selected_exec)
. = ALIGN(0x1000);
*(.text.get_graph_keyframe_extents .text.calc_fcurve_bounds)
. = ALIGN(0x1000);
*(.text.graphkeys_create_ghostcurves_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_clear_ghostcurves_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_insertkey_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_click_insert)
. = ALIGN(0x1000);
*(.text.graphkeys_click_insert_invoke)
. = ALIGN(0x1000);
*(.text.graphkeys_click_insert_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_copy_exec)
. = ALIGN(0x1000);
*(.text.copy_animedit_keys)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_paste)
. = ALIGN(0x1000);
*(.text.graphkeys_paste_exec)
. = ALIGN(0x1000);
*(.text.paste_animedit_keys .text.paste_animedit_keys_fcurve)
. = ALIGN(0x1000);
*(.text.graphkeys_duplicate_invoke)
. = ALIGN(0x1000);
*(.text.duplicate_fcurve_keys)
. = ALIGN(0x1000);
*(.text.graphkeys_duplicate_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_delete_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_clean_exec)
. = ALIGN(0x1000);
*(.text.clean_fcurve)
. = ALIGN(0x1000);
*(.text.graphkeys_bake_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_sound_bake)
. = ALIGN(0x1000);
*(.text.graphkeys_sound_bake_invoke)
. = ALIGN(0x1000);
*(.text.graphkeys_sound_bake_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_sample_exec)
. = ALIGN(0x1000);
*(.text.sample_fcurve)
. = ALIGN(0x1000);
*(.text.graphkeys_expo_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_ipo_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_easing_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_handletype_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_euler_filter_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_framejump_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_framejump_poll)
. = ALIGN(0x1000);
*(.text.graphkeys_snap_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_mirror_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_smooth_exec .text.smooth_fcurve)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_fmodifier_add)
. = ALIGN(0x1000);
*(.text.graph_fmodifier_add_exec)
. = ALIGN(0x1000);
*(.text.graph_fmodifier_itemf)
. = ALIGN(0x1000);
*(.text.graph_fmodifier_copy_exec)
. = ALIGN(0x1000);
*(.text.graph_fmodifier_paste_exec)
. = ALIGN(0x1000);
*(.text.graphedit_operatortypes)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_cursor_set)
. = ALIGN(0x1000);
*(.text.graphview_cursor_exec)
. = ALIGN(0x1000);
*(.text.graphview_cursor_invoke)
. = ALIGN(0x1000);
*(.text.graphview_cursor_modal)
. = ALIGN(0x1000);
*(.text.graphview_cursor_setprops)
. = ALIGN(0x1000);
*(.text.graphview_cursor_poll)
. = ALIGN(0x1000);
*(.text.graphedit_keymap)
. = ALIGN(0x1000);
*(.text.graphkeys_deselectall_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_select_border)
. = ALIGN(0x1000);
*(.text.graphkeys_borderselect_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_select_lasso)
. = ALIGN(0x1000);
*(.text.graphkeys_lassoselect_exec)
. = ALIGN(0x1000);
*(.text.borderselect_graphkeys)
. = ALIGN(0x1000);
*(.text.graphkeys_columnselect_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_select_linked_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_select_more_exec)
. = ALIGN(0x1000);
*(.text.graphkeys_select_less_exec)
. = ALIGN(0x1000);
*(.text.select_moreless_graph_keys)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_select_leftright)
. = ALIGN(0x1000);
*(.text.graphkeys_select_leftright_invoke)
. = ALIGN(0x1000);
*(.text.graphkeys_select_leftright_exec)
. = ALIGN(0x1000);
*(.text.GRAPH_OT_clickselect)
. = ALIGN(0x1000);
*(.text.graphkeys_clickselect_invoke .text.find_nearest_fcurve_vert .text.mouse_graph_keys .text.nearest_fcurve_vert_store)
. = ALIGN(0x1000);
*(.text.deselect_graph_keys)
. = ALIGN(0x1000);
*(.text.graphop_visible_keyframes_poll)
. = ALIGN(0x1000);
*(.text.graphop_editable_keyframes_poll)
. = ALIGN(0x1000);
*(.text.graphop_active_fcurve_poll)
. = ALIGN(0x1000);
*(.text.graphop_selected_fcurve_poll)
. = ALIGN(0x1000);
*(.text.graph_new)
. = ALIGN(0x1000);
*(.text.graph_free)
. = ALIGN(0x1000);
*(.text.graph_init)
. = ALIGN(0x1000);
*(.text.graph_duplicate)
. = ALIGN(0x1000);
*(.text.graph_listener)
. = ALIGN(0x1000);
*(.text.graph_refresh)
. = ALIGN(0x1000);
*(.text.ANIM_sync_animchannels_to_data)
. = ALIGN(0x1000);
*(.text.graph_main_area_init)
. = ALIGN(0x1000);
*(.text.graph_main_area_draw)
. = ALIGN(0x1000);
*(.text.graph_region_listener)
. = ALIGN(0x1000);
*(.text.graph_header_area_init)
. = ALIGN(0x1000);
*(.text.graph_header_area_draw)
. = ALIGN(0x1000);
*(.text.graph_channel_area_init)
. = ALIGN(0x1000);
*(.text.graph_channel_area_draw)
. = ALIGN(0x1000);
*(.text.graph_buttons_area_init)
. = ALIGN(0x1000);
*(.text.graph_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.rna_update_cb)
. = ALIGN(0x1000);
*(.text.image_multi_declay_cb)
. = ALIGN(0x1000);
*(.text.image_multi_inclay_cb)
. = ALIGN(0x1000);
*(.text.image_multi_decpass_cb)
. = ALIGN(0x1000);
*(.text.image_multi_incpass_cb)
. = ALIGN(0x1000);
*(.text.ui_imageuser_slot_menu)
. = ALIGN(0x1000);
*(.text.image_multi_cb)
. = ALIGN(0x1000);
*(.text.ui_imageuser_layer_menu)
. = ALIGN(0x1000);
*(.text.ui_imageuser_pass_menu)
. = ALIGN(0x1000);
*(.text.image_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_image_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_image_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_add_image_strip_exec .text.BKE_sequencer_add_image_strip)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_effect_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_effect_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_add_effect_strip_exec)
. = ALIGN(0x1000);
*(.text.sequencer_grease_pencil_panel_poll)
. = ALIGN(0x1000);
*(.text.sequencer_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_gap_remove)
. = ALIGN(0x1000);
*(.text.sequencer_gap_remove_exec .text.BKE_sequencer_evaluate_frame)
. = ALIGN(0x1000);
*(.text.sequencer_edit_poll)
. = ALIGN(0x1000);
*(.text.sequencer_gap_insert_exec)
. = ALIGN(0x1000);
*(.text.sequencer_strip_has_path_poll)
. = ALIGN(0x1000);
*(.text.sequencer_view_poll)
. = ALIGN(0x1000);
*(.text.sequencer_snap_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_snap_exec)
. = ALIGN(0x1000);
*(.text.sequencer_slip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_slip_modal)
. = ALIGN(0x1000);
*(.text.sequencer_slip_exec)
. = ALIGN(0x1000);
*(.text.sequencer_slip_recursively)
. = ALIGN(0x1000);
*(.text.slip_count_sequences_rec .text.slip_add_sequences_rec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_mute)
. = ALIGN(0x1000);
*(.text.sequencer_mute_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_unmute)
. = ALIGN(0x1000);
*(.text.sequencer_unmute_exec)
. = ALIGN(0x1000);
*(.text.sequencer_lock_exec)
. = ALIGN(0x1000);
*(.text.sequencer_unlock_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_reload)
. = ALIGN(0x1000);
*(.text.sequencer_reload_exec)
. = ALIGN(0x1000);
*(.text.sequencer_refresh_all_exec)
. = ALIGN(0x1000);
*(.text.sequencer_reassign_inputs_exec .text.seq_is_predecessor)
. = ALIGN(0x1000);
*(.text.seq_effect_find_selected)
. = ALIGN(0x1000);
*(.text.sequencer_effect_poll)
. = ALIGN(0x1000);
*(.text.sequencer_swap_inputs_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_cut)
. = ALIGN(0x1000);
*(.text.sequencer_cut_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_cut_exec)
. = ALIGN(0x1000);
*(.text.sequencer_add_duplicate_exec)
. = ALIGN(0x1000);
*(.text.apply_unique_name_cb)
. = ALIGN(0x1000);
*(.text.image_view_pan_exec)
. = ALIGN(0x1000);
*(.text.image_view_pan_invoke)
. = ALIGN(0x1000);
*(.text.image_view_pan_modal)
. = ALIGN(0x1000);
*(.text.image_view_pan_cancel)
. = ALIGN(0x1000);
*(.text.image_view_zoom_exec)
. = ALIGN(0x1000);
*(.text.image_view_zoom_invoke)
. = ALIGN(0x1000);
*(.text.image_view_zoom_modal)
. = ALIGN(0x1000);
*(.text.image_view_zoom_cancel)
. = ALIGN(0x1000);
*(.text.image_view_ndof_invoke)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_view_all)
. = ALIGN(0x1000);
*(.text.image_view_all_exec)
. = ALIGN(0x1000);
*(.text.image_view_selected_exec)
. = ALIGN(0x1000);
*(.text.image_view_selected_poll)
. = ALIGN(0x1000);
*(.text.image_view_zoom_in_invoke)
. = ALIGN(0x1000);
*(.text.image_view_zoom_in_exec)
. = ALIGN(0x1000);
*(.text.image_view_zoom_out_invoke)
. = ALIGN(0x1000);
*(.text.image_view_zoom_out_exec)
. = ALIGN(0x1000);
*(.text.sima_zoom_set)
. = ALIGN(0x1000);
*(.text.image_view_zoom_ratio_exec)
. = ALIGN(0x1000);
*(.text.image_open_invoke)
. = ALIGN(0x1000);
*(.text.image_open_exec)
. = ALIGN(0x1000);
*(.text.image_open_cancel)
. = ALIGN(0x1000);
*(.text.image_match_len_exec)
. = ALIGN(0x1000);
*(.text.image_replace_invoke)
. = ALIGN(0x1000);
*(.text.image_replace_exec)
. = ALIGN(0x1000);
*(.text.space_image_poll)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_save_as)
. = ALIGN(0x1000);
*(.text.image_save_as_check)
. = ALIGN(0x1000);
*(.text.image_save_as_invoke)
. = ALIGN(0x1000);
*(.text.image_save_as_exec)
. = ALIGN(0x1000);
*(.text.image_save_as_cancel)
. = ALIGN(0x1000);
*(.text.image_save_as_draw)
. = ALIGN(0x1000);
*(.text.image_save_as_poll)
. = ALIGN(0x1000);
*(.text.image_save_as_draw_check_prop)
. = ALIGN(0x1000);
*(.text.image_save_exec)
. = ALIGN(0x1000);
*(.text.save_image_options_init .text.save_image_doit)
. = ALIGN(0x1000);
*(.text.space_image_file_exists_poll)
. = ALIGN(0x1000);
*(.text.BLI_file_is_writable)
. = ALIGN(0x1000);
*(.text.image_save_sequence_exec)
. = ALIGN(0x1000);
*(.text.space_image_buffer_exists_poll)
. = ALIGN(0x1000);
*(.text.image_reload_exec)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_new)
. = ALIGN(0x1000);
*(.text.image_new_exec)
. = ALIGN(0x1000);
*(.text.image_new_invoke)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_invert)
. = ALIGN(0x1000);
*(.text.image_invert_exec)
. = ALIGN(0x1000);
*(.text.image_invert_poll)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_pack)
. = ALIGN(0x1000);
*(.text.image_pack_invoke)
. = ALIGN(0x1000);
*(.text.image_pack_exec)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_unpack)
. = ALIGN(0x1000);
*(.text.image_unpack_invoke)
. = ALIGN(0x1000);
*(.text.image_unpack_exec)
. = ALIGN(0x1000);
*(.text.image_sample_invoke)
. = ALIGN(0x1000);
*(.text.image_sample_modal)
. = ALIGN(0x1000);
*(.text.image_sample_apply)
. = ALIGN(0x1000);
*(.text.image_sample_cancel)
. = ALIGN(0x1000);
*(.text.image_sample_poll)
. = ALIGN(0x1000);
*(.text.image_sample_draw)
. = ALIGN(0x1000);
*(.text.image_sample_line_invoke)
. = ALIGN(0x1000);
*(.text.image_sample_line_exec)
. = ALIGN(0x1000);
*(.text.space_image_main_area_not_uv_brush_poll)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_cycle_render_slot)
. = ALIGN(0x1000);
*(.text.image_cycle_render_slot_exec)
. = ALIGN(0x1000);
*(.text.image_cycle_render_slot_poll)
. = ALIGN(0x1000);
*(.text.change_frame_exec)
. = ALIGN(0x1000);
*(.text.change_frame_invoke)
. = ALIGN(0x1000);
*(.text.change_frame_modal)
. = ALIGN(0x1000);
*(.text.change_frame_poll)
. = ALIGN(0x1000);
*(.text.image_read_renderlayers_exec)
. = ALIGN(0x1000);
*(.text.RE_ReadRenderResult)
. = ALIGN(0x1000);
*(.text.IMAGE_OT_render_border)
. = ALIGN(0x1000);
*(.text.render_border_exec)
. = ALIGN(0x1000);
*(.text.clear_render_border_exec)
. = ALIGN(0x1000);
*(.text.image_new)
. = ALIGN(0x1000);
*(.text.image_free)
. = ALIGN(0x1000);
*(.text.image_init)
. = ALIGN(0x1000);
*(.text.image_duplicate)
. = ALIGN(0x1000);
*(.text.image_operatortypes)
. = ALIGN(0x1000);
*(.text.image_keymap)
. = ALIGN(0x1000);
*(.text.image_dropboxes)
. = ALIGN(0x1000);
*(.text.image_refresh)
. = ALIGN(0x1000);
*(.text.BM_mesh_active_face_get)
. = ALIGN(0x1000);
*(.text.image_listener)
. = ALIGN(0x1000);
*(.text.image_context)
. = ALIGN(0x1000);
*(.text.image_main_area_init)
. = ALIGN(0x1000);
*(.text.image_main_area_draw)
. = ALIGN(0x1000);
*(.text.image_main_area_listener)
. = ALIGN(0x1000);
*(.text.image_buttons_area_listener)
. = ALIGN(0x1000);
*(.text.image_buttons_area_init)
. = ALIGN(0x1000);
*(.text.image_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.image_tools_area_listener)
. = ALIGN(0x1000);
*(.text.image_tools_area_init)
. = ALIGN(0x1000);
*(.text.ED_space_image_release_buffer .text.image_tools_area_draw)
. = ALIGN(0x1000);
*(.text.BKE_histogram_update_sample_line)
. = ALIGN(0x1000);
*(.text.image_header_area_listener)
. = ALIGN(0x1000);
*(.text.image_header_area_init)
. = ALIGN(0x1000);
*(.text.image_header_area_draw)
. = ALIGN(0x1000);
*(.text.image_drop_poll)
. = ALIGN(0x1000);
*(.text.image_drop_copy)
. = ALIGN(0x1000);
*(.text.pack_libraries_exec)
. = ALIGN(0x1000);
*(.text.unpack_libraries_invoke)
. = ALIGN(0x1000);
*(.text.unpackLibraries .text.unpack_libraries_exec)
. = ALIGN(0x1000);
*(.text.autopack_toggle_exec)
. = ALIGN(0x1000);
*(.text.pack_all_exec)
. = ALIGN(0x1000);
*(.text.pack_all_invoke)
. = ALIGN(0x1000);
*(.text.packAll)
. = ALIGN(0x1000);
*(.text.unpack_all_exec)
. = ALIGN(0x1000);
*(.text.unpack_all_invoke)
. = ALIGN(0x1000);
*(.text.FILE_OT_unpack_item)
. = ALIGN(0x1000);
*(.text.unpack_item_exec)
. = ALIGN(0x1000);
*(.text.unpackVFont)
. = ALIGN(0x1000);
*(.text.unpack_item_invoke)
. = ALIGN(0x1000);
*(.text.make_paths_relative_exec)
. = ALIGN(0x1000);
*(.text.make_paths_absolute_exec)
. = ALIGN(0x1000);
*(.text.report_missing_files_exec)
. = ALIGN(0x1000);
*(.text.FILE_OT_find_missing_files)
. = ALIGN(0x1000);
*(.text.find_missing_files_exec .text.BKE_bpath_missing_files_find)
. = ALIGN(0x1000);
*(.text.find_missing_files_invoke)
. = ALIGN(0x1000);
*(.text.update_reports_display_invoke)
. = ALIGN(0x1000);
*(.text.report_textview_begin)
. = ALIGN(0x1000);
*(.text.report_textview_end)
. = ALIGN(0x1000);
*(.text.report_textview_step)
. = ALIGN(0x1000);
*(.text.report_textview_line_get)
. = ALIGN(0x1000);
*(.text.report_textview_line_color)
. = ALIGN(0x1000);
*(.text.report_replay_exec)
. = ALIGN(0x1000);
*(.text.select_report_pick_invoke)
. = ALIGN(0x1000);
*(.text.select_report_pick_exec)
. = ALIGN(0x1000);
*(.text.report_select_all_toggle_exec)
. = ALIGN(0x1000);
*(.text.borderselect_exec)
. = ALIGN(0x1000);
*(.text.textview_draw)
. = ALIGN(0x1000);
*(.text.report_delete_exec)
. = ALIGN(0x1000);
*(.text.report_copy_exec)
. = ALIGN(0x1000);
*(.text.info_new)
. = ALIGN(0x1000);
*(.text.info_free)
. = ALIGN(0x1000);
*(.text.info_init)
. = ALIGN(0x1000);
*(.text.info_duplicate)
. = ALIGN(0x1000);
*(.text.info_operatortypes)
. = ALIGN(0x1000);
*(.text.info_keymap)
. = ALIGN(0x1000);
*(.text.info_main_area_init)
. = ALIGN(0x1000);
*(.text.info_main_area_draw)
. = ALIGN(0x1000);
*(.text.info_main_area_listener)
. = ALIGN(0x1000);
*(.text.info_header_listener)
. = ALIGN(0x1000);
*(.text.info_header_area_init)
. = ALIGN(0x1000);
*(.text.info_header_area_draw)
. = ALIGN(0x1000);
*(.text.recent_files_menu_draw)
. = ALIGN(0x1000);
*(.text.BLO_has_bfile_extension)
. = ALIGN(0x1000);
*(.text.logic_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_links_cut)
. = ALIGN(0x1000);
*(.text.cut_links_exec .text.ui_delete_linkline .text.ui_link_bezier_points)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_sensor_remove)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_sensor_add)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_sensor_move)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_controller_remove)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_controller_add)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_controller_move)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_actuator_remove)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_actuator_add)
. = ALIGN(0x1000);
*(.text.LOGIC_OT_actuator_move)
. = ALIGN(0x1000);
*(.text.logic_view_all_exec)
. = ALIGN(0x1000);
*(.text.actuator_move_invoke)
. = ALIGN(0x1000);
*(.text.actuator_move_exec)
. = ALIGN(0x1000);
*(.text.sca_move_actuator)
. = ALIGN(0x1000);
*(.text.edit_actuator_poll)
. = ALIGN(0x1000);
*(.text.actuator_add_exec)
. = ALIGN(0x1000);
*(.text.actuator_remove_invoke)
. = ALIGN(0x1000);
*(.text.actuator_remove_exec)
. = ALIGN(0x1000);
*(.text.edit_actuator_property_get)
. = ALIGN(0x1000);
*(.text.controller_move_invoke)
. = ALIGN(0x1000);
*(.text.controller_move_exec)
. = ALIGN(0x1000);
*(.text.sca_move_controller)
. = ALIGN(0x1000);
*(.text.edit_controller_poll)
. = ALIGN(0x1000);
*(.text.controller_add_exec)
. = ALIGN(0x1000);
*(.text.controller_remove_invoke)
. = ALIGN(0x1000);
*(.text.controller_remove_exec)
. = ALIGN(0x1000);
*(.text.edit_controller_property_get)
. = ALIGN(0x1000);
*(.text.sensor_move_invoke)
. = ALIGN(0x1000);
*(.text.sensor_move_exec)
. = ALIGN(0x1000);
*(.text.sca_move_sensor)
. = ALIGN(0x1000);
*(.text.edit_sensor_poll)
. = ALIGN(0x1000);
*(.text.sensor_add_exec)
. = ALIGN(0x1000);
*(.text.sensor_remove_invoke)
. = ALIGN(0x1000);
*(.text.sensor_remove_exec)
. = ALIGN(0x1000);
*(.text.edit_sensor_property_get)
. = ALIGN(0x1000);
*(.text.vergname)
. = ALIGN(0x1000);
*(.text.do_logic_buts)
. = ALIGN(0x1000);
*(.text.make_unique_prop_names)
. = ALIGN(0x1000);
*(.text.unlink_controller)
. = ALIGN(0x1000);
*(.text.unlink_actuator)
. = ALIGN(0x1000);
*(.text.controller_menu)
. = ALIGN(0x1000);
*(.text.controller_state_mask_menu)
. = ALIGN(0x1000);
*(.text.sensor_menu)
. = ALIGN(0x1000);
*(.text.actuator_menu)
. = ALIGN(0x1000);
*(.text.do_actuator_menu)
. = ALIGN(0x1000);
*(.text.do_sensor_menu)
. = ALIGN(0x1000);
*(.text.check_controller_state_mask)
. = ALIGN(0x1000);
*(.text.do_controller_menu)
. = ALIGN(0x1000);
*(.text.get_selected_and_linked_obs)
. = ALIGN(0x1000);
*(.text.logic_new)
. = ALIGN(0x1000);
*(.text.logic_free)
. = ALIGN(0x1000);
*(.text.logic_init)
. = ALIGN(0x1000);
*(.text.logic_duplicate)
. = ALIGN(0x1000);
*(.text.logic_operatortypes)
. = ALIGN(0x1000);
*(.text.logic_keymap)
. = ALIGN(0x1000);
*(.text.logic_refresh)
. = ALIGN(0x1000);
*(.text.logic_context)
. = ALIGN(0x1000);
*(.text.logic_main_area_init)
. = ALIGN(0x1000);
*(.text.logic_main_area_draw)
. = ALIGN(0x1000);
*(.text.logic_listener)
. = ALIGN(0x1000);
*(.text.logic_buttons_area_init)
. = ALIGN(0x1000);
*(.text.logic_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.logic_header_area_init)
. = ALIGN(0x1000);
*(.text.logic_header_area_draw)
. = ALIGN(0x1000);
*(.text.nla_panel_animdata)
. = ALIGN(0x1000);
*(.text.nla_animdata_panel_poll)
. = ALIGN(0x1000);
*(.text.nla_panel_track)
. = ALIGN(0x1000);
*(.text.nla_track_panel_poll)
. = ALIGN(0x1000);
*(.text.nla_panel_properties)
. = ALIGN(0x1000);
*(.text.nla_strip_panel_poll)
. = ALIGN(0x1000);
*(.text.nla_panel_actclip)
. = ALIGN(0x1000);
*(.text.nla_strip_actclip_panel_poll)
. = ALIGN(0x1000);
*(.text.nla_panel_evaluation)
. = ALIGN(0x1000);
*(.text.nla_strip_eval_panel_poll)
. = ALIGN(0x1000);
*(.text.nla_panel_modifiers)
. = ALIGN(0x1000);
*(.text.ANIM_uiTemplate_fmodifier_draw)
. = ALIGN(0x1000);
*(.text.do_nla_region_buttons)
. = ALIGN(0x1000);
*(.text.nla_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.NLA_OT_channels_click)
. = ALIGN(0x1000);
*(.text.nlachannels_mouseclick_invoke)
. = ALIGN(0x1000);
*(.text.nlachannels_pushdown_exec)
. = ALIGN(0x1000);
*(.text.BKE_nla_action_pushdown)
. = ALIGN(0x1000);
*(.text.nla_panel_context)
. = ALIGN(0x1000);
*(.text.NLA_OT_tracks_add)
. = ALIGN(0x1000);
*(.text.nlaedit_add_tracks_existing .text.nlaedit_add_tracks_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_delete_tracks_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_objects_add_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_enable_tweakmode_exec .text.BKE_nla_tweakmode_enter)
. = ALIGN(0x1000);
*(.text.nlaedit_disable_tweakmode_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_disable_tweakmode .text.BKE_nla_tweakmode_exit)
. = ALIGN(0x1000);
*(.text.nlaedit_previewrange_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_viewall_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_viewsel_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_viewall)
. = ALIGN(0x1000);
*(.text.nlaedit_add_actionclip_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_add_transition_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_add_sound_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_add_meta_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_remove_meta_exec)
. = ALIGN(0x1000);
*(.text.NLA_OT_duplicate)
. = ALIGN(0x1000);
*(.text.nlaedit_duplicate_invoke)
. = ALIGN(0x1000);
*(.text.nlaedit_duplicate_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_delete_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_split_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_toggle_mute_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_swap_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_move_up_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_move_down_exec)
. = ALIGN(0x1000);
*(.text.NLA_OT_action_sync_length)
. = ALIGN(0x1000);
*(.text.nlaedit_sync_actlen_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_make_single_user_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_apply_scale_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_clear_scale_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_snap_exec)
. = ALIGN(0x1000);
*(.text.NLA_OT_fmodifier_add)
. = ALIGN(0x1000);
*(.text.nla_fmodifier_add_invoke)
. = ALIGN(0x1000);
*(.text.nla_fmodifier_add_exec)
. = ALIGN(0x1000);
*(.text.nla_fmodifier_copy_exec)
. = ALIGN(0x1000);
*(.text.nla_fmodifier_paste_exec)
. = ALIGN(0x1000);
*(.text.ANIM_fmodifiers_paste_from_buf)
. = ALIGN(0x1000);
*(.text.nlaop_poll_tweakmode_off)
. = ALIGN(0x1000);
*(.text.nlaop_poll_tweakmode_on)
. = ALIGN(0x1000);
*(.text.nla_operatortypes)
. = ALIGN(0x1000);
*(.text.nla_keymap)
. = ALIGN(0x1000);
*(.text.nlaedit_deselectall_exec .text.deselect_nla_strips)
. = ALIGN(0x1000);
*(.text.nlaedit_borderselect_exec)
. = ALIGN(0x1000);
*(.text.NLA_OT_select_leftright)
. = ALIGN(0x1000);
*(.text.nlaedit_select_leftright_invoke)
. = ALIGN(0x1000);
*(.text.nlaedit_select_leftright_exec)
. = ALIGN(0x1000);
*(.text.nlaedit_clickselect_invoke)
. = ALIGN(0x1000);
*(.text.nla_new)
. = ALIGN(0x1000);
*(.text.nla_free)
. = ALIGN(0x1000);
*(.text.nla_init)
. = ALIGN(0x1000);
*(.text.nla_duplicate)
. = ALIGN(0x1000);
*(.text.nla_listener)
. = ALIGN(0x1000);
*(.text.nla_main_area_init)
. = ALIGN(0x1000);
*(.text.nla_main_area_draw)
. = ALIGN(0x1000);
*(.text.nla_main_area_listener)
. = ALIGN(0x1000);
*(.text.nla_header_area_init)
. = ALIGN(0x1000);
*(.text.nla_header_area_draw)
. = ALIGN(0x1000);
*(.text.nla_channel_area_init)
. = ALIGN(0x1000);
*(.text.nla_channel_area_draw)
. = ALIGN(0x1000);
*(.text.nla_channel_area_listener)
. = ALIGN(0x1000);
*(.text.nla_region_listener)
. = ALIGN(0x1000);
*(.text.nla_buttons_area_init)
. = ALIGN(0x1000);
*(.text.nla_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.node_resize_area_default)
. = ALIGN(0x1000);
*(.text.node_socket_undefined_draw)
. = ALIGN(0x1000);
*(.text.node_socket_undefined_draw_color)
. = ALIGN(0x1000);
*(.text.node_socket_undefined_interface_draw)
. = ALIGN(0x1000);
*(.text.node_socket_undefined_interface_draw_color)
. = ALIGN(0x1000);
*(.text.node_draw_buttons_group)
. = ALIGN(0x1000);
*(.text.node_draw_frame)
. = ALIGN(0x1000);
*(.text.node_draw_shadow)
. = ALIGN(0x1000);
*(.text.UI_GetThemeColor4ubv)
. = ALIGN(0x1000);
*(.text.node_draw_frame_prepare)
. = ALIGN(0x1000);
*(.text.node_buts_frame_ex)
. = ALIGN(0x1000);
*(.text.node_resize_area_frame)
. = ALIGN(0x1000);
*(.text.node_socket_circle_draw .text.node_draw_reroute .text.RNA_pointer_create)
. = ALIGN(0x1000);
*(.text.glColor4fv)
. = ALIGN(0x1000);
*(.text.uiEndBlock)
. = ALIGN(0x1000);
*(.text.node_draw_reroute_prepare)
. = ALIGN(0x1000);
*(.text.node_tweak_area_reroute)
. = ALIGN(0x1000);
*(.text.node_composit_buts_image)
. = ALIGN(0x1000);
*(.text.node_buts_image_user)
. = ALIGN(0x1000);
*(.text.node_composit_buts_image_ex)
. = ALIGN(0x1000);
*(.text.node_composit_buts_renderlayers)
. = ALIGN(0x1000);
*(.text.node_buts_normal)
. = ALIGN(0x1000);
*(.text.node_buts_curvevec)
. = ALIGN(0x1000);
*(.text.node_buts_curvecol)
. = ALIGN(0x1000);
*(.text.node_buts_value)
. = ALIGN(0x1000);
*(.text.node_buts_rgb)
. = ALIGN(0x1000);
*(.text.node_composit_buts_flip)
. = ALIGN(0x1000);
*(.text.node_composit_buts_splitviewer)
. = ALIGN(0x1000);
*(.text.node_buts_mix_rgb)
. = ALIGN(0x1000);
*(.text.node_buts_colorramp)
. = ALIGN(0x1000);
*(.text.node_composit_buts_crop)
. = ALIGN(0x1000);
*(.text.node_composit_buts_blur)
. = ALIGN(0x1000);
*(.text.node_composit_buts_dblur)
. = ALIGN(0x1000);
*(.text.node_composit_buts_bilateralblur)
. = ALIGN(0x1000);
*(.text.node_composit_buts_defocus)
. = ALIGN(0x1000);
*(.text.node_composit_buts_glare)
. = ALIGN(0x1000);
*(.text.node_composit_buts_tonemap)
. = ALIGN(0x1000);
*(.text.node_composit_buts_lensdist)
. = ALIGN(0x1000);
*(.text.node_composit_buts_vecblur)
. = ALIGN(0x1000);
*(.text.node_composit_buts_filter)
. = ALIGN(0x1000);
*(.text.node_composit_buts_map_value)
. = ALIGN(0x1000);
*(.text.node_composit_buts_map_range)
. = ALIGN(0x1000);
*(.text.node_buts_time)
. = ALIGN(0x1000);
*(.text.node_composit_buts_alphaover)
. = ALIGN(0x1000);
*(.text.clip_view_ndof_invoke)
. = ALIGN(0x1000);
*(.text.clip_prefetch_invoke .text.clip_start_prefetch_job)
. = ALIGN(0x1000);
*(.text.clip_prefetch_modal)
. = ALIGN(0x1000);
*(.text.clip_set_scene_frames_exec)
. = ALIGN(0x1000);
*(.text.clip_set_2d_cursor_exec)
. = ALIGN(0x1000);
*(.text.clip_set_2d_cursor_invoke)
. = ALIGN(0x1000);
*(.text.properties_exec)
. = ALIGN(0x1000);
*(.text.properties_poll)
. = ALIGN(0x1000);
*(.text.tools_exec)
. = ALIGN(0x1000);
*(.text.tools_poll)
. = ALIGN(0x1000);
*(.text.clip_panel_operator_redo_header)
. = ALIGN(0x1000);
*(.text.clip_panel_operator_redo .text.clip_panel_operator_redo_operator)
. = ALIGN(0x1000);
*(.text.clip_new)
. = ALIGN(0x1000);
*(.text.clip_free)
. = ALIGN(0x1000);
*(.text.clip_init)
. = ALIGN(0x1000);
*(.text.clip_duplicate)
. = ALIGN(0x1000);
*(.text.clip_operatortypes)
. = ALIGN(0x1000);
*(.text.clip_keymap)
. = ALIGN(0x1000);
*(.text.clip_listener)
. = ALIGN(0x1000);
*(.text.clip_context)
. = ALIGN(0x1000);
*(.text.clip_dropboxes)
. = ALIGN(0x1000);
*(.text.clip_refresh)
. = ALIGN(0x1000);
*(.text.init_preview_region)
. = ALIGN(0x1000);
*(.text.clip_main_area_init)
. = ALIGN(0x1000);
*(.text.clip_main_area_draw)
. = ALIGN(0x1000);
*(.text.clip_main_area_listener)
. = ALIGN(0x1000);
*(.text.clip_preview_area_init)
. = ALIGN(0x1000);
*(.text.clip_preview_area_draw)
. = ALIGN(0x1000);
*(.text.clip_preview_area_listener)
. = ALIGN(0x1000);
*(.text.clip_properties_area_init)
. = ALIGN(0x1000);
*(.text.clip_properties_area_draw .text.CTX_wm_space_clip .text.BKE_movieclip_update_scopes)
. = ALIGN(0x1000);
*(.text.clip_properties_area_listener)
. = ALIGN(0x1000);
*(.text.clip_props_area_listener)
. = ALIGN(0x1000);
*(.text.clip_tools_area_init)
. = ALIGN(0x1000);
*(.text.clip_tools_area_draw)
. = ALIGN(0x1000);
*(.text.clip_header_area_init)
. = ALIGN(0x1000);
*(.text.clip_header_area_draw)
. = ALIGN(0x1000);
*(.text.clip_header_area_listener)
. = ALIGN(0x1000);
*(.text.clip_channels_area_listener)
. = ALIGN(0x1000);
*(.text.clip_channels_area_init)
. = ALIGN(0x1000);
*(.text.clip_channels_area_draw)
. = ALIGN(0x1000);
*(.text.BKE_tracking_dopesheet_update)
. = ALIGN(0x1000);
*(.text.clip_drop_poll)
. = ALIGN(0x1000);
*(.text.clip_drop_copy)
. = ALIGN(0x1000);
*(.text.add_marker_invoke)
. = ALIGN(0x1000);
*(.text.add_marker_exec)
. = ALIGN(0x1000);
*(.text.add_marker_at_click_invoke)
. = ALIGN(0x1000);
*(.text.add_marker_at_click_modal)
. = ALIGN(0x1000);
*(.text.add_marker)
. = ALIGN(0x1000);
*(.text.delete_track_exec)
. = ALIGN(0x1000);
*(.text.delete_marker_exec)
. = ALIGN(0x1000);
*(.text.slide_marker_invoke)
. = ALIGN(0x1000);
*(.text.slide_marker_modal)
. = ALIGN(0x1000);
*(.text.CLIP_OT_track_markers)
. = ALIGN(0x1000);
*(.text.track_markers_invoke)
. = ALIGN(0x1000);
*(.text.track_markers_exec .text.track_init_markers .text.BKE_tracking_context_new)
. = ALIGN(0x1000);
*(.text.track_markers_modal)
. = ALIGN(0x1000);
*(.text.track_markers_freejob)
. = ALIGN(0x1000);
*(.text.BKE_tracking_context_free)
. = ALIGN(0x1000);
*(.text.track_markers_startjob)
. = ALIGN(0x1000);
*(.text.BKE_tracking_context_step)
. = ALIGN(0x1000);
*(.text.track_markers_updatejob)
. = ALIGN(0x1000);
*(.text.track_markers_endjob)
. = ALIGN(0x1000);
*(.text.BKE_tracking_context_finish)
. = ALIGN(0x1000);
*(.text.refine_marker_exec .text.BKE_tracking_refine_marker)
. = ALIGN(0x1000);
*(.text.BKE_tracking_track_get_mask .text.PLX_raskterize)
. = ALIGN(0x1000);
*(.text.BKE_tracking_get_search_imbuf)
. = ALIGN(0x1000);
*(.text.tracking_context_get_reference_ibuf .text.track_get_search_floatbuf .text.configure_and_run_tracker)
. = ALIGN(0x1000);
*(.text.solve_camera_exec)
. = ALIGN(0x1000);
*(.text.solve_camera_invoke)
. = ALIGN(0x1000);
*(.text.tracks_map_new)
. = ALIGN(0x1000);
*(.text.solve_camera_initjob .text.BKE_tracking_reconstruction_check .text.BKE_tracking_reconstruction_context_new)
. = ALIGN(0x1000);
*(.text.solve_camera_modal)
. = ALIGN(0x1000);
*(.text.solve_camera_freejob .text.BKE_tracking_reconstruction_context_free .text.BKE_tracking_reconstruction_finish)
. = ALIGN(0x1000);
*(.text.tracks_map_merge)
. = ALIGN(0x1000);
*(.text.solve_camera_startjob)
. = ALIGN(0x1000);
*(.text.solve_camera_updatejob)
. = ALIGN(0x1000);
*(.text.clear_solution_exec)
. = ALIGN(0x1000);
*(.text.CLIP_OT_clear_track_path)
. = ALIGN(0x1000);
*(.text.clear_track_path_exec .text.BKE_tracking_track_path_clear)
. = ALIGN(0x1000);
*(.text.disable_markers_exec)
. = ALIGN(0x1000);
*(.text.set_origin_exec)
. = ALIGN(0x1000);
*(.text.set_orientation_poll)
. = ALIGN(0x1000);
*(.text.set_plane_exec)
. = ALIGN(0x1000);
*(.text.set_axis_exec)
. = ALIGN(0x1000);
*(.text.object_solver_inverted_matrix)
. = ALIGN(0x1000);
*(.text.set_axis)
. = ALIGN(0x1000);
*(.text.set_scale_exec)
. = ALIGN(0x1000);
*(.text.set_scale_invoke)
. = ALIGN(0x1000);
*(.text.set_solution_scale_exec)
. = ALIGN(0x1000);
*(.text.set_solution_scale_invoke)
. = ALIGN(0x1000);
*(.text.set_solution_scale_poll)
. = ALIGN(0x1000);
*(.text.apply_solution_scale_exec)
. = ALIGN(0x1000);
*(.text.apply_solution_scale_invoke)
. = ALIGN(0x1000);
*(.text.do_set_scale)
. = ALIGN(0x1000);
*(.text.apply_solution_scale_poll)
. = ALIGN(0x1000);
*(.text.set_center_principal_exec)
. = ALIGN(0x1000);
*(.text.hide_tracks_exec)
. = ALIGN(0x1000);
*(.text.hide_tracks_clear_exec)
. = ALIGN(0x1000);
*(.text.CLIP_OT_detect_features)
. = ALIGN(0x1000);
*(.text.detect_features_exec)
. = ALIGN(0x1000);
*(.text.frame_jump_exec)
. = ALIGN(0x1000);
*(.text.join_tracks_exec .text.BKE_tracking_tracks_join)
. = ALIGN(0x1000);
*(.text.lock_tracks_exec)
. = ALIGN(0x1000);
*(.text.set_solver_keyframe_exec)
. = ALIGN(0x1000);
*(.text.track_copy_color_exec)
. = ALIGN(0x1000);
*(.text.stabilize_2d_add_exec)
. = ALIGN(0x1000);
*(.text.stabilize_2d_poll)
. = ALIGN(0x1000);
*(.text.stabilize_2d_remove_exec)
. = ALIGN(0x1000);
*(.text.stabilize_2d_select_exec)
. = ALIGN(0x1000);
*(.text.stabilize_2d_set_rotation_exec)
. = ALIGN(0x1000);
*(.text.CLIP_OT_clean_tracks)
. = ALIGN(0x1000);
*(.text.clean_tracks_invoke)
. = ALIGN(0x1000);
*(.text.clean_tracks_exec)
. = ALIGN(0x1000);
*(.text.tracking_object_new_exec)
. = ALIGN(0x1000);
*(.text.tracking_object_remove_exec)
. = ALIGN(0x1000);
*(.text.copy_tracks_exec .text.BKE_tracking_clipboard_copy_tracks)
. = ALIGN(0x1000);
*(.text.paste_tracks_exec)
. = ALIGN(0x1000);
*(.text.paste_tracks_poll)
. = ALIGN(0x1000);
*(.text.create_plane_track_tracks_exec .text.BKE_tracking_plane_track_add)
. = ALIGN(0x1000);
*(.text.slide_plane_marker_invoke)
. = ALIGN(0x1000);
*(.text.slide_plane_marker_modal)
. = ALIGN(0x1000);
*(.text.keyframe_insert_exec)
. = ALIGN(0x1000);
*(.text.keyframe_delete_exec)
. = ALIGN(0x1000);
*(.text.keyframe_set_flag .text.BKE_tracking_retrack_plane_from_existing_motion_at_segment)
. = ALIGN(0x1000);
*(.text.CLIP_OT_select)
. = ALIGN(0x1000);
*(.text.select_invoke.7398)
. = ALIGN(0x1000);
*(.text.select_exec.7397 .text.BKE_tracking_track_select)
. = ALIGN(0x1000);
*(.text.tracking_marker_check_slide)
. = ALIGN(0x1000);
*(.text.select_poll)
. = ALIGN(0x1000);
*(.text.border_select_exec)
. = ALIGN(0x1000);
*(.text.CLIP_OT_select_lasso)
. = ALIGN(0x1000);
*(.text.clip_lasso_select_exec)
. = ALIGN(0x1000);
*(.text.CLIP_OT_select_circle)
. = ALIGN(0x1000);
*(.text.circle_select_exec)
. = ALIGN(0x1000);
*(.text.select_all_exec)
. = ALIGN(0x1000);
*(.text.select_groped_exec)
. = ALIGN(0x1000);
*(.text.applyTrackball)
. = ALIGN(0x1000);
*(.text.applyResize)
. = ALIGN(0x1000);
*(.text.applyRotation)
. = ALIGN(0x1000);
*(.text.postInputRotation)
. = ALIGN(0x1000);
*(.text.applyVertSlide)
. = ALIGN(0x1000);
*(.text.handleEventVertSlide)
. = ALIGN(0x1000);
*(.text.freeVertSlideVerts)
. = ALIGN(0x1000);
*(.text.applyEdgeSlide)
. = ALIGN(0x1000);
*(.text.handleEventEdgeSlide)
. = ALIGN(0x1000);
*(.text.applyAspectRatio .text.applyTranslation .text.headerTranslation .text.applyTranslationValue)
. = ALIGN(0x1000);
*(.text.clipUVTransform .text.clipUVData)
. = ALIGN(0x1000);
*(.text.drawTransformApply)
. = ALIGN(0x1000);
*(.text.drawTransformView .text.drawConstraint)
. = ALIGN(0x1000);
*(.text.drawTransformPixel .text.ED_region_visible_rect .text.BLF_width_and_height_default)
. = ALIGN(0x1000);
*(.text.UI_ThemeColorShade)
. = ALIGN(0x1000);
*(.text.helpline_poll)
. = ALIGN(0x1000);
*(.text.drawHelpline)
. = ALIGN(0x1000);
*(.text.applySkinResize)
. = ALIGN(0x1000);
*(.text.headerResize)
. = ALIGN(0x1000);
*(.text.applyToSphere)
. = ALIGN(0x1000);
*(.text.applyShear)
. = ALIGN(0x1000);
*(.text.handleEventShear .text.initMouseInputMode)
. = ALIGN(0x1000);
*(.text.postInputShear)
. = ALIGN(0x1000);
*(.text.Bend)
. = ALIGN(0x1000);
*(.text.handleEventBend)
. = ALIGN(0x1000);
*(.text.applyShrinkFatten)
. = ALIGN(0x1000);
*(.text.applyTilt)
. = ALIGN(0x1000);
*(.text.applyCurveShrinkFatten)
. = ALIGN(0x1000);
*(.text.applyMaskShrinkFatten)
. = ALIGN(0x1000);
*(.text.applyPushPull)
. = ALIGN(0x1000);
*(.text.applyCrease)
. = ALIGN(0x1000);
*(.text.applyBoneEnvelope)
. = ALIGN(0x1000);
*(.text.applyBoneSize)
. = ALIGN(0x1000);
*(.text.applyBoneRoll)
. = ALIGN(0x1000);
*(.text.applyTimeTranslate)
. = ALIGN(0x1000);
*(.text.applyTimeSlide)
. = ALIGN(0x1000);
*(.text.applyTimeScale)
. = ALIGN(0x1000);
*(.text.doAnimEdit_SnapFrame .text.BKE_nla_tweakedit_remap)
. = ALIGN(0x1000);
*(.text.applyBakeTime)
. = ALIGN(0x1000);
*(.text.applyMirror)
. = ALIGN(0x1000);
*(.text.ElementResize)
. = ALIGN(0x1000);
*(.text.applyBevelWeight)
. = ALIGN(0x1000);
*(.text.applyAlign)
. = ALIGN(0x1000);
*(.text.constraintTransLim)
. = ALIGN(0x1000);
*(.text.ElementRotation .text.protectedQuaternionBits .text.protectedAxisAngleBits .text.constraintRotLim)
. = ALIGN(0x1000);
*(.text.applySeqSlide)
. = ALIGN(0x1000);
*(.text.applyAxisConstraintVec)
. = ALIGN(0x1000);
*(.text.applyAxisConstraintSize)
. = ALIGN(0x1000);
*(.text.applyAxisConstraintRot)
. = ALIGN(0x1000);
*(.text.drawObjectConstraint)
. = ALIGN(0x1000);
*(.text.applyObjectConstraintVec)
. = ALIGN(0x1000);
*(.text.removeAspectRatio)
. = ALIGN(0x1000);
*(.text.snapGridIncrementAction)
. = ALIGN(0x1000);
*(.text.axisProjection .text.postConstraintChecks .text.getViewVector)
. = ALIGN(0x1000);
*(.text.applyObjectConstraintSize)
. = ALIGN(0x1000);
*(.text.applyObjectConstraintRot)
. = ALIGN(0x1000);
*(.text.trans_data_compare_dist)
. = ALIGN(0x1000);
*(.text.trans_data_compare_rdist)
. = ALIGN(0x1000);
*(.text.freeSeqData)
. = ALIGN(0x1000);
*(.text.shuffle_seq_time_offset)
. = ALIGN(0x1000);
*(.text.transDataTrackingFree)
. = ALIGN(0x1000);
*(.text.InputSpring)
. = ALIGN(0x1000);
*(.text.InputSpringDelta)
. = ALIGN(0x1000);
*(.text.InputAngleSpring)
. = ALIGN(0x1000);
*(.text.InputAngle)
. = ALIGN(0x1000);
*(.text.InputTrackBall)
. = ALIGN(0x1000);
*(.text.InputHorizontalRatio)
. = ALIGN(0x1000);
*(.text.InputHorizontalAbsolute)
. = ALIGN(0x1000);
*(.text.InputVerticalRatio)
. = ALIGN(0x1000);
*(.text.InputVerticalAbsolute)
. = ALIGN(0x1000);
*(.text.InputCustomRatio)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_translate)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_rotate)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_tosphere)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_resize)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_skin_resize)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_shear)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_bend)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_shrink_fatten)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_push_pull)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_tilt)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_trackball)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_mirror)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_edge_slide)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_vert_slide)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_edge_crease)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_edge_bevelweight)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_seq_slide)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_transform)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_select_orientation)
. = ALIGN(0x1000);
*(.text.TRANSFORM_OT_create_orientation)
. = ALIGN(0x1000);
*(.text.delete_orientation_invoke)
. = ALIGN(0x1000);
*(.text.delete_orientation_exec)
. = ALIGN(0x1000);
*(.text.BIF_removeTransformOrientationIndex)
. = ALIGN(0x1000);
*(.text.delete_orientation_poll)
. = ALIGN(0x1000);
*(.text.create_orientation_exec .text.BIF_createTransformOrientation .text.addMatrixSpace)
. = ALIGN(0x1000);
*(.text.select_orientation_invoke)
. = ALIGN(0x1000);
*(.text.select_orientation_exec)
. = ALIGN(0x1000);
*(.text.transform_invoke)
. = ALIGN(0x1000);
*(.text.transform_exec)
. = ALIGN(0x1000);
*(.text.transformEvent .text.transform_event_xyz_constraint .text.transform_modal .text.handleSnapping .text.removeSnapPoint)
. = ALIGN(0x1000);
*(.text.freeEdgeSlideVerts)
. = ALIGN(0x1000);
*(.text.IDP_SyncGroupTypes)
. = ALIGN(0x1000);
*(.text.transform_cancel)
. = ALIGN(0x1000);
*(.text.edge_bevelweight_invoke)
. = ALIGN(0x1000);
*(.text.edge_bevelweight_exec)
. = ALIGN(0x1000);
*(.text.gimbal_axis .text.axis_angle_to_gimbal_axis)
. = ALIGN(0x1000);
*(.text.initTransform .text.transformops_data .text.initTransformOrientation)
. = ALIGN(0x1000);
*(.text.initTranslation .text.initEdgeSlide .text.initVertSlide .text.get_next_loop .text.transformApply .text.setUserConstraint .text.calculatePropRatio .text.initSnapping .text.BMBVH_EdgeVisible .text.BM_mesh_copy_init_customdata)
. = ALIGN(0x1000);
*(.text.InputCustomRatioFlip)
. = ALIGN(0x1000);
*(.text.InputVector)
. = ALIGN(0x1000);
*(.text.convertViewVec)
. = ALIGN(0x1000);
*(.text.InputSpringFlip)
. = ALIGN(0x1000);
*(.text.setNearestAxis)
. = ALIGN(0x1000);
*(.text.setConstraint)
. = ALIGN(0x1000);
*(.text.setAxisMatrixConstraint)
. = ALIGN(0x1000);
*(.text.restoreElement)
. = ALIGN(0x1000);
*(.text.doEdgeSlide)
. = ALIGN(0x1000);
*(.text.viewRedrawForce)
. = ALIGN(0x1000);
*(.text.add_nlastrip_to_stack)
. = ALIGN(0x1000);
*(.text.BKE_sequence_invalidate_dependent)
. = ALIGN(0x1000);
*(.text.BKE_sequence_tx_handle_xlimits)
. = ALIGN(0x1000);
*(.text.node_link_bezier_points)
. = ALIGN(0x1000);
*(.text.restoreBones .text.flushTransParticles .text.flushTransSeq .text.flushTransUVs .text.remake_graph_transdata .text.flushTransGraphData .text.flushTransTracking .text.flushTransMasking .text.recalcData .text.recalcData_objects .text.clipMirrorModifier .text.animrecord_check_state .text.applyProject)
. = ALIGN(0x1000);
*(.text.ED_node_link_intersect_test)
. = ALIGN(0x1000);
*(.text.applyGridAbsolute)
. = ALIGN(0x1000);
*(.text.saveTransform .text.transformEnd .text.transformops_exit)
. = ALIGN(0x1000);
*(.text.skin_resize_poll)
. = ALIGN(0x1000);
*(.text.uniqueOrientationNameCheck)
. = ALIGN(0x1000);
*(.text.CalcSnapGeometry .text.ED_uvedit_nearest_uv)
. = ALIGN(0x1000);
*(.text.snapNodes)
. = ALIGN(0x1000);
*(.text.ApplySnapTranslation)
. = ALIGN(0x1000);
*(.text.TranslationBetween)
. = ALIGN(0x1000);
*(.text.ApplySnapRotation)
. = ALIGN(0x1000);
*(.text.RotationBetween)
. = ALIGN(0x1000);
*(.text.TargetSnapMedian)
. = ALIGN(0x1000);
*(.text.ApplySnapResize)
. = ALIGN(0x1000);
*(.text.ResizeBetween)
. = ALIGN(0x1000);
*(.text.TargetSnapClosest)
. = ALIGN(0x1000);
*(.text.TargetSnapCenter)
. = ALIGN(0x1000);
*(.text.TargetSnapActive)
. = ALIGN(0x1000);
*(.text.set_mapped_co)
. = ALIGN(0x1000);
*(.text.ED_transverts_poll)
. = ALIGN(0x1000);
*(.text.ED_region_draw_mouse_line_cb)
. = ALIGN(0x1000);
*(.text.ED_OT_undo)
. = ALIGN(0x1000);
*(.text.WM_operator_stack_clear .text.ed_undo_exec)
. = ALIGN(0x1000);
*(.text.ED_OT_undo_push)
. = ALIGN(0x1000);
*(.text.ed_undo_push_exec)
. = ALIGN(0x1000);
*(.text.ED_OT_redo)
. = ALIGN(0x1000);
*(.text.ed_redo_exec)
. = ALIGN(0x1000);
*(.text.ED_undo_operator_repeat_cb_evt)
. = ALIGN(0x1000);
*(.text.ED_OT_undo_history)
. = ALIGN(0x1000);
*(.text.undo_history_invoke .text.ED_undo_paint_get_name)
. = ALIGN(0x1000);
*(.text.undo_editmode_number .text.undo_history_exec .text.PE_undo_number .text.BKE_undo_number)
. = ALIGN(0x1000);
*(.text.get_undo_system)
. = ALIGN(0x1000);
*(.text.image_panel_uv)
. = ALIGN(0x1000);
*(.text.image_panel_uv_poll)
. = ALIGN(0x1000);
*(.text.do_uvedit_vertex)
. = ALIGN(0x1000);
*(.text.uvedit_center)
. = ALIGN(0x1000);
*(.text.detach_links_exec)
. = ALIGN(0x1000);
*(.text.snode_dag_update)
. = ALIGN(0x1000);
*(.text.snode_notify)
. = ALIGN(0x1000);
*(.text.node_parent_set_exec)
. = ALIGN(0x1000);
*(.text.node_parent_clear_exec)
. = ALIGN(0x1000);
*(.text.node_join_exec .text.node_join_attach_recursive)
. = ALIGN(0x1000);
*(.text.node_add_node)
. = ALIGN(0x1000);
*(.text.node_attach_invoke)
. = ALIGN(0x1000);
*(.text.node_detach_exec .text.node_detach_recursive)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_grouped)
. = ALIGN(0x1000);
*(.text.node_select_grouped_exec)
. = ALIGN(0x1000);
*(.text.BLI_str_partition_ex_utf8)
. = ALIGN(0x1000);
*(.text.NODE_OT_select)
. = ALIGN(0x1000);
*(.text.node_select_invoke)
. = ALIGN(0x1000);
*(.text.node_select_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_border)
. = ALIGN(0x1000);
*(.text.node_border_select_invoke)
. = ALIGN(0x1000);
*(.text.node_borderselect_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_circle)
. = ALIGN(0x1000);
*(.text.node_circleselect_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_lasso)
. = ALIGN(0x1000);
*(.text.node_lasso_select_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_all)
. = ALIGN(0x1000);
*(.text.node_select_all_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_linked_to)
. = ALIGN(0x1000);
*(.text.node_select_linked_to_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_linked_from)
. = ALIGN(0x1000);
*(.text.node_select_linked_from_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_select_same_type_step)
. = ALIGN(0x1000);
*(.text.node_select_same_type_step_exec)
. = ALIGN(0x1000);
*(.text.NODE_OT_find_node)
. = ALIGN(0x1000);
*(.text.node_find_node_invoke)
. = ALIGN(0x1000);
*(.text.node_find_menu)
. = ALIGN(0x1000);
*(.text.node_find_cb)
. = ALIGN(0x1000);
*(.text.node_find_call_cb)
. = ALIGN(0x1000);
*(.text.ED_node_set_active)
. = ALIGN(0x1000);
*(.text.ED_node_sort)
. = ALIGN(0x1000);
*(.text.node_select_single)
. = ALIGN(0x1000);
*(.text.ui_template_node_link_menu)
. = ALIGN(0x1000);
*(.text.node_menu_column_foreach_cb)
. = ALIGN(0x1000);
*(.text.ui_node_menu_column)
. = ALIGN(0x1000);
*(.text.ui_node_link .text.node_remove_linked .text.node_tag_recursive .text.node_clear_recursive)
. = ALIGN(0x1000);
*(.text.node_toolbar_toggle_exec)
. = ALIGN(0x1000);
*(.text.node_toolbar_poll)
. = ALIGN(0x1000);
*(.text.node_view_all_exec)
. = ALIGN(0x1000);
*(.text.node_view_selected_exec)
. = ALIGN(0x1000);
*(.text.space_node_view_flag)
. = ALIGN(0x1000);
*(.text.snode_bg_viewmove_invoke)
. = ALIGN(0x1000);
*(.text.snode_bg_viewmove_modal)
. = ALIGN(0x1000);
*(.text.snode_bg_viewmove_cancel)
. = ALIGN(0x1000);
*(.text.backimage_zoom_exec)
. = ALIGN(0x1000);
*(.text.backimage_fit_exec)
. = ALIGN(0x1000);
*(.text.sample_invoke)
. = ALIGN(0x1000);
*(.text.sample_modal)
. = ALIGN(0x1000);
*(.text.sample_apply)
. = ALIGN(0x1000);
*(.text.sample_cancel)
. = ALIGN(0x1000);
*(.text.sample_draw)
. = ALIGN(0x1000);
*(.text.node_new)
. = ALIGN(0x1000);
*(.text.node_free)
. = ALIGN(0x1000);
*(.text.node_init)
. = ALIGN(0x1000);
*(.text.node_duplicate)
. = ALIGN(0x1000);
*(.text.node_area_listener)
. = ALIGN(0x1000);
*(.text.node_area_refresh)
. = ALIGN(0x1000);
*(.text.ED_node_composite_job)
. = ALIGN(0x1000);
*(.text.node_render_changed_exec)
. = ALIGN(0x1000);
*(.text.node_context)
. = ALIGN(0x1000);
*(.text.node_dropboxes)
. = ALIGN(0x1000);
*(.text.node_main_area_init)
. = ALIGN(0x1000);
*(.text.node_main_area_draw)
. = ALIGN(0x1000);
*(.text.node_region_listener)
. = ALIGN(0x1000);
*(.text.node_set_cursor .text.node_cursor)
. = ALIGN(0x1000);
*(.text.node_find_indicated_socket)
. = ALIGN(0x1000);
*(.text.node_header_area_init)
. = ALIGN(0x1000);
*(.text.node_header_area_draw)
. = ALIGN(0x1000);
*(.text.node_buttons_area_init)
. = ALIGN(0x1000);
*(.text.node_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.node_toolbar_area_init)
. = ALIGN(0x1000);
*(.text.node_toolbar_area_draw)
. = ALIGN(0x1000);
*(.text.node_ima_drop_poll)
. = ALIGN(0x1000);
*(.text.node_id_path_drop_copy)
. = ALIGN(0x1000);
*(.text.node_mask_drop_poll)
. = ALIGN(0x1000);
*(.text.node_id_drop_copy)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_item_openclose)
. = ALIGN(0x1000);
*(.text.outliner_item_openclose .text.do_outliner_item_openclose)
. = ALIGN(0x1000);
*(.text.item_rename_cb)
. = ALIGN(0x1000);
*(.text.outliner_item_rename .text.do_outliner_item_rename)
. = ALIGN(0x1000);
*(.text.do_item_rename)
. = ALIGN(0x1000);
*(.text.object_toggle_visibility_cb)
. = ALIGN(0x1000);
*(.text.restrictbutton_gr_restrict_flag .text.group_toggle_visibility_cb)
. = ALIGN(0x1000);
*(.text.outliner_toggle_visibility_exec)
. = ALIGN(0x1000);
*(.text.object_toggle_selectability_cb)
. = ALIGN(0x1000);
*(.text.group_toggle_selectability_cb)
. = ALIGN(0x1000);
*(.text.outliner_toggle_selectability_exec)
. = ALIGN(0x1000);
*(.text.object_toggle_renderability_cb)
. = ALIGN(0x1000);
*(.text.group_toggle_renderability_cb)
. = ALIGN(0x1000);
*(.text.outliner_toggle_renderability_exec)
. = ALIGN(0x1000);
*(.text.outliner_toggle_expanded_exec)
. = ALIGN(0x1000);
*(.text.outliner_toggle_selected_exec)
. = ALIGN(0x1000);
*(.text.outliner_show_active_exec .text.outliner_find_id)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_scroll_page)
. = ALIGN(0x1000);
*(.text.outliner_scroll_page_exec)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_show_one_level)
. = ALIGN(0x1000);
*(.text.outliner_one_level_exec .text.outliner_openclose_level .text.outliner_count_levels)
. = ALIGN(0x1000);
*(.text.outliner_show_hierarchy_exec .text.tree_element_show_hierarchy .text.subtree_has_objects)
. = ALIGN(0x1000);
*(.text.outliner_drivers_addsel_exec)
. = ALIGN(0x1000);
*(.text.ed_operator_outliner_datablocks_active)
. = ALIGN(0x1000);
*(.text.outliner_drivers_deletesel_exec)
. = ALIGN(0x1000);
*(.text.do_outliner_drivers_editop)
. = ALIGN(0x1000);
*(.text.outliner_keyingset_additems_exec)
. = ALIGN(0x1000);
*(.text.outliner_keyingset_removeitems_exec)
. = ALIGN(0x1000);
*(.text.tree_element_to_path .text.RNA_path_append)
. = ALIGN(0x1000);
*(.text.do_outliner_keyingset_editop)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_parent_drop)
. = ALIGN(0x1000);
*(.text.parent_drop_invoke)
. = ALIGN(0x1000);
*(.text.parent_drop_exec)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_parent_clear)
. = ALIGN(0x1000);
*(.text.parent_clear_invoke)
. = ALIGN(0x1000);
*(.text.outliner_parenting_poll)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_scene_drop)
. = ALIGN(0x1000);
*(.text.scene_drop_invoke)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_material_drop)
. = ALIGN(0x1000);
*(.text.material_drop_invoke)
. = ALIGN(0x1000);
*(.text.outliner_operatortypes)
. = ALIGN(0x1000);
*(.text.outliner_keymap)
. = ALIGN(0x1000);
*(.text.outliner_item_activate)
. = ALIGN(0x1000);
*(.text.outliner_border_select_exec .text.outliner_item_border_select)
. = ALIGN(0x1000);
*(.text.outliner_object_operation_exec)
. = ALIGN(0x1000);
*(.text.outliner_do_object_operation)
. = ALIGN(0x1000);
*(.text.outliner_storage_cleanup)
. = ALIGN(0x1000);
*(.text.object_select_cb)
. = ALIGN(0x1000);
*(.text.object_select_hierarchy_cb)
. = ALIGN(0x1000);
*(.text.tree_element_active .text.tree_element_set_active_object .text.tree_element_type_active .text.do_outliner_bone_select_recursive .text.outliner_item_do_activate .text.do_outliner_item_activate .text.outliner_select)
. = ALIGN(0x1000);
*(.text.object_deselect_cb)
. = ALIGN(0x1000);
*(.text.object_delete_cb)
. = ALIGN(0x1000);
*(.text.id_local_cb)
. = ALIGN(0x1000);
*(.text.outliner_group_operation_exec)
. = ALIGN(0x1000);
*(.text.unlink_group_cb)
. = ALIGN(0x1000);
*(.text.group_linkobs2scene_cb)
. = ALIGN(0x1000);
*(.text.group_instance_cb)
. = ALIGN(0x1000);
*(.text.outliner_id_operation_exec)
. = ALIGN(0x1000);
*(.text.outliner_do_libdata_operation)
. = ALIGN(0x1000);
*(.text.unlink_action_cb)
. = ALIGN(0x1000);
*(.text.unlink_material_cb)
. = ALIGN(0x1000);
*(.text.unlink_texture_cb)
. = ALIGN(0x1000);
*(.text.unlink_world_cb)
. = ALIGN(0x1000);
*(.text.singleuser_action_cb)
. = ALIGN(0x1000);
*(.text.singleuser_world_cb)
. = ALIGN(0x1000);
*(.text.id_fake_user_set_cb)
. = ALIGN(0x1000);
*(.text.id_fake_user_clear_cb)
. = ALIGN(0x1000);
*(.text.id_select_linked_cb)
. = ALIGN(0x1000);
*(.text.OUTLINER_OT_action_set)
. = ALIGN(0x1000);
*(.text.outliner_action_set_exec .text.outliner_do_id_set_operation)
. = ALIGN(0x1000);
*(.text.outliner_animdata_operation_exec)
. = ALIGN(0x1000);
*(.text.clear_animdata_cb)
. = ALIGN(0x1000);
*(.text.unlinkact_animdata_cb)
. = ALIGN(0x1000);
*(.text.BKE_animdata_set_action)
. = ALIGN(0x1000);
*(.text.refreshdrivers_animdata_cb)
. = ALIGN(0x1000);
*(.text.cleardrivers_animdata_cb)
. = ALIGN(0x1000);
*(.text.outliner_data_operation_exec)
. = ALIGN(0x1000);
*(.text.outliner_do_data_operation)
. = ALIGN(0x1000);
*(.text.pchan_cb)
. = ALIGN(0x1000);
*(.text.bone_cb)
. = ALIGN(0x1000);
*(.text.ebone_cb)
. = ALIGN(0x1000);
*(.text.sequence_cb)
. = ALIGN(0x1000);
*(.text.data_select_linked_cb)
. = ALIGN(0x1000);
*(.text.ED_object_select_linked_by_id)
. = ALIGN(0x1000);
*(.text.outliner_operation .text.do_outliner_operation_event)
. = ALIGN(0x1000);
*(.text.set_operation_types)
. = ALIGN(0x1000);
*(.text.outliner_has_one_flag)
. = ALIGN(0x1000);
*(.text.outliner_set_flag)
. = ALIGN(0x1000);
*(.text.treesort_alpha)
. = ALIGN(0x1000);
*(.text.treesort_alpha_ob)
. = ALIGN(0x1000);
*(.text.outliner_new)
. = ALIGN(0x1000);
*(.text.outliner_free)
. = ALIGN(0x1000);
*(.text.outliner_free_tree)
. = ALIGN(0x1000);
*(.text.outliner_init)
. = ALIGN(0x1000);
*(.text.outliner_duplicate)
. = ALIGN(0x1000);
*(.text.outliner_dropboxes)
. = ALIGN(0x1000);
*(.text.outliner_main_area_init)
. = ALIGN(0x1000);
*(.text.outliner_main_area_draw)
. = ALIGN(0x1000);
*(.text.outliner_main_area_free)
. = ALIGN(0x1000);
*(.text.outliner_main_area_listener)
. = ALIGN(0x1000);
*(.text.outliner_header_area_init)
. = ALIGN(0x1000);
*(.text.outliner_header_area_draw)
. = ALIGN(0x1000);
*(.text.outliner_header_area_free)
. = ALIGN(0x1000);
*(.text.outliner_header_area_listener)
. = ALIGN(0x1000);
*(.text.outliner_parent_drop_poll)
. = ALIGN(0x1000);
*(.text.outliner_parent_drop_copy)
. = ALIGN(0x1000);
*(.text.outliner_parent_clear_poll)
. = ALIGN(0x1000);
*(.text.outliner_parent_clear_copy)
. = ALIGN(0x1000);
*(.text.outliner_scene_drop_poll)
. = ALIGN(0x1000);
*(.text.outliner_scene_drop_copy)
. = ALIGN(0x1000);
*(.text.outliner_material_drop_poll)
. = ALIGN(0x1000);
*(.text.outliner_dropzone_element)
. = ALIGN(0x1000);
*(.text.outliner_material_drop_copy)
. = ALIGN(0x1000);
*(.text.SCRIPT_OT_python_file_run)
. = ALIGN(0x1000);
*(.text.run_pyfile_exec)
. = ALIGN(0x1000);
*(.text.script_reload_exec)
. = ALIGN(0x1000);
*(.text.script_autoexec_warn_clear_exec)
. = ALIGN(0x1000);
*(.text.script_operatortypes)
. = ALIGN(0x1000);
*(.text.script_keymap)
. = ALIGN(0x1000);
*(.text.script_new)
. = ALIGN(0x1000);
*(.text.script_free)
. = ALIGN(0x1000);
*(.text.script_init)
. = ALIGN(0x1000);
*(.text.script_duplicate)
. = ALIGN(0x1000);
*(.text.script_main_area_init)
. = ALIGN(0x1000);
*(.text.script_main_area_draw)
. = ALIGN(0x1000);
*(.text.script_main_area_listener)
. = ALIGN(0x1000);
*(.text.script_header_area_init)
. = ALIGN(0x1000);
*(.text.script_header_area_draw)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_scene_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_scene_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_add_scene_strip_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_movieclip_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_movieclip_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_add_movieclip_strip_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_mask_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_mask_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_add_mask_strip_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_movie_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_movie_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_add_movie_strip_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_sound_strip_add)
. = ALIGN(0x1000);
*(.text.sequencer_add_sound_strip_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_generic_invoke_xy__internal .text.sequencer_generic_invoke_path__internal)
. = ALIGN(0x1000);
*(.text.sequencer_add_sound_strip_exec)
. = ALIGN(0x1000);
*(.text.seq_load_operator_info)
. = ALIGN(0x1000);
*(.text.sequencer_add_generic_strip_exec)
. = ALIGN(0x1000);
*(.text.operator_enum_call_cb)
. = ALIGN(0x1000);
*(.text.eyedropper_invoke)
. = ALIGN(0x1000);
*(.text.ED_space_image_color_sample .text.ED_space_node_color_sample .text.eyedropper_modal .text.eyedropper_color_sample_fl .text.ED_space_clip_color_sample)
. = ALIGN(0x1000);
*(.text.eyedropper_cancel)
. = ALIGN(0x1000);
*(.text.eyedropper_exec)
. = ALIGN(0x1000);
*(.text.eyedropper_init)
. = ALIGN(0x1000);
*(.text.eyedropper_poll)
. = ALIGN(0x1000);
*(.text.datadropper_invoke)
. = ALIGN(0x1000);
*(.text.datadropper_modal .text.datadropper_id_sample_pt)
. = ALIGN(0x1000);
*(.text.datadropper_cancel)
. = ALIGN(0x1000);
*(.text.datadropper_exec)
. = ALIGN(0x1000);
*(.text.datadropper_init)
. = ALIGN(0x1000);
*(.text.datadropper_poll)
. = ALIGN(0x1000);
*(.text.datadropper_draw_cb)
. = ALIGN(0x1000);
*(.text.ui_handler_region_menu)
. = ALIGN(0x1000);
*(.text.popup_change_shortcut_func)
. = ALIGN(0x1000);
*(.text.remove_shortcut_func)
. = ALIGN(0x1000);
*(.text.popup_add_shortcut_func)
. = ALIGN(0x1000);
*(.text.ui_handler_region_drag_toggle)
. = ALIGN(0x1000);
*(.text.ui_handler_region_drag_toggle_remove)
. = ALIGN(0x1000);
*(.text.menu_add_shortcut)
. = ALIGN(0x1000);
*(.text.menu_add_shortcut_cancel)
. = ALIGN(0x1000);
*(.text.but_shortcut_name_func)
. = ALIGN(0x1000);
*(.text.ui_but_add_shortcut)
. = ALIGN(0x1000);
*(.text.menu_change_shortcut)
. = ALIGN(0x1000);
*(.text.ui_panel_menu .text.ui_handler_region .text.ui_handler_panel_region .text.ui_handle_panel_header)
. = ALIGN(0x1000);
*(.text.ui_handler_remove_region)
. = ALIGN(0x1000);
*(.text.sequencer_delete_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_delete_exec .text.del_seq_find_replace_recurs)
. = ALIGN(0x1000);
*(.text.sequencer_offset_clear_exec)
. = ALIGN(0x1000);
*(.text.sequencer_separate_images_exec)
. = ALIGN(0x1000);
*(.text.sequencer_meta_toggle_exec)
. = ALIGN(0x1000);
*(.text.sequencer_meta_make_exec)
. = ALIGN(0x1000);
*(.text.sequencer_meta_separate_exec .text.seq_depends_on_meta)
. = ALIGN(0x1000);
*(.text.recurs_del_seq_flag)
. = ALIGN(0x1000);
*(.text.sequencer_view_all_exec)
. = ALIGN(0x1000);
*(.text.sequencer_view_all_preview_exec)
. = ALIGN(0x1000);
*(.text.sequencer_view_zoom_ratio_exec)
. = ALIGN(0x1000);
*(.text.sequencer_view_toggle_exec)
. = ALIGN(0x1000);
*(.text.sequencer_view_selected_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_strip_jump)
. = ALIGN(0x1000);
*(.text.sequencer_strip_jump_exec)
. = ALIGN(0x1000);
*(.text.sequencer_strip_jump_poll)
. = ALIGN(0x1000);
*(.text.sequencer_swap_exec)
. = ALIGN(0x1000);
*(.text.sequencer_rendersize_exec)
. = ALIGN(0x1000);
*(.text.sequencer_copy_exec .text.seq_copy_del_sound .text.BKE_sequencer_base_clipboard_pointers_store)
. = ALIGN(0x1000);
*(.text.BKE_sequence_base_isolated_sel_check)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_base_clipboard_pointers_free)
. = ALIGN(0x1000);
*(.text.sequencer_paste_exec .text.BKE_sequencer_base_clipboard_pointers_restore .text.BKE_sequence_sound_init)
. = ALIGN(0x1000);
*(.text.seqclipboard_ptr_restore)
. = ALIGN(0x1000);
*(.text.sequencer_swap_data_exec)
. = ALIGN(0x1000);
*(.text.view_ghost_border_exec)
. = ALIGN(0x1000);
*(.text.sequencer_rebuild_proxy_exec)
. = ALIGN(0x1000);
*(.text.BKE_sequence_dupli_recursive)
. = ALIGN(0x1000);
*(.text.proxy_freejob)
. = ALIGN(0x1000);
*(.text.proxy_startjob .text.BKE_sequencer_proxy_rebuild .text.seq_proxy_build_frame)
. = ALIGN(0x1000);
*(.text.proxy_endjob)
. = ALIGN(0x1000);
*(.text.seq_free_sequence_recurse)
. = ALIGN(0x1000);
*(.text.sequencer_change_effect_input_exec)
. = ALIGN(0x1000);
*(.text.sequencer_change_effect_type_exec)
. = ALIGN(0x1000);
*(.text.sequencer_change_path_exec)
. = ALIGN(0x1000);
*(.text.sequencer_change_path_invoke)
. = ALIGN(0x1000);
*(.text.strip_modifier_add_exec)
. = ALIGN(0x1000);
*(.text.strip_modifier_active_poll)
. = ALIGN(0x1000);
*(.text.strip_modifier_remove_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_strip_modifier_move)
. = ALIGN(0x1000);
*(.text.strip_modifier_move_exec)
. = ALIGN(0x1000);
*(.text.sequencer_operatortypes)
. = ALIGN(0x1000);
*(.text.sequencer_keymap)
. = ALIGN(0x1000);
*(.text.sequencer_de_select_all_exec)
. = ALIGN(0x1000);
*(.text.sequencer_select_inverse_exec)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_select)
. = ALIGN(0x1000);
*(.text.find_neighboring_sequence .text.sequencer_select_invoke)
. = ALIGN(0x1000);
*(.text.sequencer_select_more_exec)
. = ALIGN(0x1000);
*(.text.sequencer_select_less_exec)
. = ALIGN(0x1000);
*(.text.sequencer_select_linked_pick_invoke)
. = ALIGN(0x1000);
*(.text.ED_sequencer_deselect_all)
. = ALIGN(0x1000);
*(.text.sequencer_select_linked_exec)
. = ALIGN(0x1000);
*(.text.select_more_less_seq__internal)
. = ALIGN(0x1000);
*(.text.sequencer_select_handles_exec)
. = ALIGN(0x1000);
*(.text.sequencer_select_active_side_exec)
. = ALIGN(0x1000);
*(.text.sequencer_borderselect_exec)
. = ALIGN(0x1000);
*(.text.recurs_sel_seq)
. = ALIGN(0x1000);
*(.text.SEQUENCER_OT_select_grouped)
. = ALIGN(0x1000);
*(.text.sequencer_select_grouped_exec)
. = ALIGN(0x1000);
*(.text.sample_invoke.5091)
. = ALIGN(0x1000);
*(.text.sample_modal.5092)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_transform_v4)
. = ALIGN(0x1000);
*(.text.sample_apply.5094)
. = ALIGN(0x1000);
*(.text.sample_cancel.5093)
. = ALIGN(0x1000);
*(.text.sample_poll)
. = ALIGN(0x1000);
*(.text.sample_draw.5096)
. = ALIGN(0x1000);
*(.text.sequencer_new)
. = ALIGN(0x1000);
*(.text.sequencer_free)
. = ALIGN(0x1000);
*(.text.sequencer_init)
. = ALIGN(0x1000);
*(.text.sequencer_duplicate)
. = ALIGN(0x1000);
*(.text.sequencer_context)
. = ALIGN(0x1000);
*(.text.sequencer_dropboxes)
. = ALIGN(0x1000);
*(.text.sequencer_refresh)
. = ALIGN(0x1000);
*(.text.sequencer_listener)
. = ALIGN(0x1000);
*(.text.sequencer_main_area_init)
. = ALIGN(0x1000);
*(.text.draw_timeline_seq .text.sequencer_main_area_draw)
. = ALIGN(0x1000);
*(.text.sequencer_main_area_listener)
. = ALIGN(0x1000);
*(.text.sequencer_preview_area_init)
. = ALIGN(0x1000);
*(.text.draw_image_seq .text.make_waveform_view_from_ibuf .text.make_sep_waveform_view_from_ibuf .text.make_zebra_view_from_ibuf .text.make_histogram_view_from_ibuf .text.make_vectorscope_view_from_ibuf .text.sequencer_preview_area_draw)
. = ALIGN(0x1000);
*(.text.sequencer_ibuf_get .text.BKE_sequencer_give_ibuf_threaded)
. = ALIGN(0x1000);
*(.text.glColor4ub)
. = ALIGN(0x1000);
*(.text.UI_GetThemeColor3fv)
. = ALIGN(0x1000);
*(.text.sequencer_preview_area_listener)
. = ALIGN(0x1000);
*(.text.sequencer_buttons_area_listener)
. = ALIGN(0x1000);
*(.text.sequencer_buttons_area_init)
. = ALIGN(0x1000);
*(.text.sequencer_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.sequencer_header_area_init)
. = ALIGN(0x1000);
*(.text.sequencer_header_area_draw)
. = ALIGN(0x1000);
*(.text.image_drop_poll.5109)
. = ALIGN(0x1000);
*(.text.sequencer_drop_copy)
. = ALIGN(0x1000);
*(.text.movie_drop_poll)
. = ALIGN(0x1000);
*(.text.sound_drop_poll)
. = ALIGN(0x1000);
*(.text.find_nearest_seq)
. = ALIGN(0x1000);
*(.text.text_new)
. = ALIGN(0x1000);
*(.text.text_free)
. = ALIGN(0x1000);
*(.text.text_init)
. = ALIGN(0x1000);
*(.text.text_duplicate)
. = ALIGN(0x1000);
*(.text.text_operatortypes)
. = ALIGN(0x1000);
*(.text.text_keymap)
. = ALIGN(0x1000);
*(.text.text_listener)
. = ALIGN(0x1000);
*(.text.text_context)
. = ALIGN(0x1000);
*(.text.text_dropboxes)
. = ALIGN(0x1000);
*(.text.text_main_area_init)
. = ALIGN(0x1000);
*(.text.text_main_area_draw)
. = ALIGN(0x1000);
*(.text.text_cursor)
. = ALIGN(0x1000);
*(.text.text_properties_area_init)
. = ALIGN(0x1000);
*(.text.text_properties_area_draw)
. = ALIGN(0x1000);
*(.text.text_header_area_init)
. = ALIGN(0x1000);
*(.text.text_header_area_draw)
. = ALIGN(0x1000);
*(.text.text_drop_poll)
. = ALIGN(0x1000);
*(.text.text_drop_copy)
. = ALIGN(0x1000);
*(.text.text_drop_paste_poll)
. = ALIGN(0x1000);
*(.text.text_drop_paste)
. = ALIGN(0x1000);
*(.text.text_autocomplete_invoke .text.texttool_suggest_add .text.BLI_str_utf8_as_unicode_and_size_safe)
. = ALIGN(0x1000);
*(.text.text_autocomplete_cancel)
. = ALIGN(0x1000);
*(.text.text_do_suggest_select .text.text_autocomplete_modal)
. = ALIGN(0x1000);
*(.text.txtfmt_lua_format_identifier)
. = ALIGN(0x1000);
*(.text.txtfmt_lua_format_line)
. = ALIGN(0x1000);
*(.text.txtfmt_lua_find_specialvar .text.txtfmt_lua_find_keyword)
. = ALIGN(0x1000);
*(.text.txtfmt_osl_format_identifier)
. = ALIGN(0x1000);
*(.text.txtfmt_osl_format_line)
. = ALIGN(0x1000);
*(.text.txtfmt_osl_find_builtinfunc .text.txtfmt_osl_find_reserved)
. = ALIGN(0x1000);
*(.text.txtfmt_py_format_identifier)
. = ALIGN(0x1000);
*(.text.txtfmt_py_format_line)
. = ALIGN(0x1000);
*(.text.txtfmt_py_find_builtinfunc)
. = ALIGN(0x1000);
*(.text.text_check_delim)
. = ALIGN(0x1000);
*(.text.text_properties_exec)
. = ALIGN(0x1000);
*(.text.text_properties_poll)
. = ALIGN(0x1000);
*(.text.text_text_search_exec)
. = ALIGN(0x1000);
*(.text.text_space_edit_poll)
. = ALIGN(0x1000);
*(.text.text_new_exec)
. = ALIGN(0x1000);
*(.text.text_new_poll)
. = ALIGN(0x1000);
*(.text.TEXT_OT_open)
. = ALIGN(0x1000);
*(.text.text_open_invoke)
. = ALIGN(0x1000);
*(.text.text_open_exec)
. = ALIGN(0x1000);
*(.text.text_open_cancel)
. = ALIGN(0x1000);
*(.text.text_edit_poll)
. = ALIGN(0x1000);
*(.text.text_unlink_exec)
. = ALIGN(0x1000);
*(.text.text_unlink_poll)
. = ALIGN(0x1000);
*(.text.text_make_internal_exec)
. = ALIGN(0x1000);
*(.text.text_save_exec)
. = ALIGN(0x1000);
*(.text.text_save_poll)
. = ALIGN(0x1000);
*(.text.text_save_as_invoke)
. = ALIGN(0x1000);
*(.text.text_save_as_exec)
. = ALIGN(0x1000);
*(.text.text_run_script_poll)
. = ALIGN(0x1000);
*(.text.text_run_script_exec)
. = ALIGN(0x1000);
*(.text.text_refresh_pyconstraints_exec)
. = ALIGN(0x1000);
*(.text.text_paste_exec)
. = ALIGN(0x1000);
*(.text.text_duplicate_line_exec)
. = ALIGN(0x1000);
*(.text.text_copy_exec)
. = ALIGN(0x1000);
*(.text.text_cut_exec)
. = ALIGN(0x1000);
*(.text.txt_copy_clipboard)
. = ALIGN(0x1000);
*(.text.text_indent_exec)
. = ALIGN(0x1000);
*(.text.text_unindent_exec)
. = ALIGN(0x1000);
*(.text.text_line_break_exec .text.txt_setcurr_tab_spaces)
. = ALIGN(0x1000);
*(.text.text_comment_exec)
. = ALIGN(0x1000);
*(.text.text_uncomment_exec)
. = ALIGN(0x1000);
*(.text.text_convert_whitespace_exec)
. = ALIGN(0x1000);
*(.text.flatten_string)
. = ALIGN(0x1000);
*(.text.text_select_all_exec)
. = ALIGN(0x1000);
*(.text.text_select_line_exec)
. = ALIGN(0x1000);
*(.text.text_select_word_exec)
. = ALIGN(0x1000);
*(.text.move_lines_exec)
. = ALIGN(0x1000);
*(.text.text_move_exec)
. = ALIGN(0x1000);
*(.text.text_move_select_exec)
. = ALIGN(0x1000);
*(.text.wrap_offset_in_line)
. = ALIGN(0x1000);
*(.text.text_move_cursor .text.text_get_cursor_rel .text.cursor_skip .text.txt_jump_left .text.txt_jump_right)
. = ALIGN(0x1000);
*(.text.TEXT_OT_jump)
. = ALIGN(0x1000);
*(.text.text_jump_invoke)
. = ALIGN(0x1000);
*(.text.text_jump_exec)
. = ALIGN(0x1000);
*(.text.text_delete_exec .text.txt_backspace_word)
. = ALIGN(0x1000);
*(.text.text_toggle_overwrite_exec)
. = ALIGN(0x1000);
*(.text.text_scroll_invoke)
. = ALIGN(0x1000);
*(.text.text_scroll_modal)
. = ALIGN(0x1000);
*(.text.text_scroll_cancel)
. = ALIGN(0x1000);
*(.text.text_scroll_poll)
. = ALIGN(0x1000);
*(.text.text_scroll_bar_invoke)
. = ALIGN(0x1000);
*(.text.text_scroll_apply)
. = ALIGN(0x1000);
*(.text.text_scroll_exec)
. = ALIGN(0x1000);
*(.text.text_region_scroll_poll)
. = ALIGN(0x1000);
*(.text.text_set_selection_invoke)
. = ALIGN(0x1000);
*(.text.text_set_selection_modal)
. = ALIGN(0x1000);
*(.text.text_cursor_set_apply)
. = ALIGN(0x1000);
*(.text.text_set_selection_cancel)
. = ALIGN(0x1000);
*(.text.text_region_edit_poll)
. = ALIGN(0x1000);
*(.text.TEXT_OT_cursor_set)
. = ALIGN(0x1000);
*(.text.text_cursor_set_invoke)
. = ALIGN(0x1000);
*(.text.text_cursor_set_exec)
. = ALIGN(0x1000);
*(.text.text_cursor_set_to_pos)
. = ALIGN(0x1000);
*(.text.text_line_number_invoke)
. = ALIGN(0x1000);
*(.text.text_insert_invoke)
. = ALIGN(0x1000);
*(.text.text_insert_exec .text.txt_replace_char)
. = ALIGN(0x1000);
*(.text.RNA_string_length)
. = ALIGN(0x1000);
*(.text.text_find_exec)
. = ALIGN(0x1000);
*(.text.text_replace_exec)
. = ALIGN(0x1000);
*(.text.text_find_set_selected_exec)
. = ALIGN(0x1000);
*(.text.text_find_and_replace .text.txt_find_string)
. = ALIGN(0x1000);
*(.text.text_replace_set_selected_exec)
. = ALIGN(0x1000);
*(.text.text_resolve_conflict_exec)
. = ALIGN(0x1000);
*(.text.text_update_drawcache)
. = ALIGN(0x1000);
*(.text.txt_write_file)
. = ALIGN(0x1000);
*(.text.text_reload_exec .text.BKE_text_reload)
. = ALIGN(0x1000);
*(.text.text_resolve_conflict_invoke)
. = ALIGN(0x1000);
*(.text.text_to_3d_object_exec .text.ED_text_to_object .text.txt_add_object)
. = ALIGN(0x1000);
*(.text.time_new)
. = ALIGN(0x1000);
*(.text.time_free)
. = ALIGN(0x1000);
*(.text.time_init)
. = ALIGN(0x1000);
*(.text.time_duplicate)
. = ALIGN(0x1000);
*(.text.time_listener)
. = ALIGN(0x1000);
*(.text.time_refresh)
. = ALIGN(0x1000);
*(.text.time_main_area_init)
. = ALIGN(0x1000);
*(.text.time_main_area_draw)
. = ALIGN(0x1000);
*(.text.time_main_area_listener)
. = ALIGN(0x1000);
*(.text.time_header_area_init)
. = ALIGN(0x1000);
*(.text.time_header_area_draw)
. = ALIGN(0x1000);
*(.text.time_header_area_listener)
. = ALIGN(0x1000);
*(.text.time_operatortypes)
. = ALIGN(0x1000);
*(.text.time_view_all_exec)
. = ALIGN(0x1000);
*(.text.time_set_efra_exec)
. = ALIGN(0x1000);
*(.text.time_set_sfra_exec)
. = ALIGN(0x1000);
*(.text.time_keymap)
. = ALIGN(0x1000);
*(.text.userpref_new)
. = ALIGN(0x1000);
*(.text.userpref_free)
. = ALIGN(0x1000);
*(.text.userpref_init)
. = ALIGN(0x1000);
*(.text.userpref_duplicate)
. = ALIGN(0x1000);
*(.text.userpref_operatortypes)
. = ALIGN(0x1000);
*(.text.userpref_keymap)
. = ALIGN(0x1000);
*(.text.userpref_main_area_init)
. = ALIGN(0x1000);
*(.text.userpref_main_area_draw)
. = ALIGN(0x1000);
*(.text.userpref_main_area_listener)
. = ALIGN(0x1000);
*(.text.userpref_header_listener)
. = ALIGN(0x1000);
*(.text.userpref_header_area_init)
. = ALIGN(0x1000);
*(.text.userpref_header_area_draw)
. = ALIGN(0x1000);
*(.text.wpaint__setSolidDrawOptions_facemask)
. = ALIGN(0x1000);
*(.text.view3d_new)
. = ALIGN(0x1000);
*(.text.view3d_free)
. = ALIGN(0x1000);
*(.text.view3d_init)
. = ALIGN(0x1000);
*(.text.space_view3d_listener)
. = ALIGN(0x1000);
*(.text.view3d_duplicate)
. = ALIGN(0x1000);
*(.text.view3d_dropboxes)
. = ALIGN(0x1000);
*(.text.view3d_context)
. = ALIGN(0x1000);
*(.text.view3d_main_area_init)
. = ALIGN(0x1000);
*(.text.view3d_main_area_exit)
. = ALIGN(0x1000);
*(.text.view3d_main_area_free)
. = ALIGN(0x1000);
*(.text.view3d_main_area_duplicate)
. = ALIGN(0x1000);
*(.text.view3d_main_area_listener)
. = ALIGN(0x1000);
*(.text.view3d_main_area_cursor)
. = ALIGN(0x1000);
*(.text.view3d_buttons_area_listener)
. = ALIGN(0x1000);
*(.text.view3d_buttons_area_init)
. = ALIGN(0x1000);
*(.text.view3d_buttons_area_draw)
. = ALIGN(0x1000);
*(.text.view3d_tools_area_init)
. = ALIGN(0x1000);
*(.text.ED_region_panels_init)
. = ALIGN(0x1000);
*(.text.view3d_tools_area_draw .text.CTX_data_mode_string)
. = ALIGN(0x1000);
*(.text.UI_panel_category_active_set)
. = ALIGN(0x1000);
*(.text.UI_view2d_view_ortho)
. = ALIGN(0x1000);
*(.text.view2d_map_cur_using_mask)
. = ALIGN(0x1000);
*(.text.ED_region_panels .text.uiBeginPanels .text.UI_panel_category_add .text.UI_view2d_tab_set)
. = ALIGN(0x1000);
*(.text.view3d_props_area_listener)
. = ALIGN(0x1000);
*(.text.view3d_header_area_listener)
. = ALIGN(0x1000);
*(.text.view3d_header_area_init)
. = ALIGN(0x1000);
*(.text.UI_view2d_region_reinit)
. = ALIGN(0x1000);
*(.text.UI_view2d_totRect_set_resize)
. = ALIGN(0x1000);
*(.text.view3d_header_area_draw)
. = ALIGN(0x1000);
*(.text.UI_ThemeClearColor)
. = ALIGN(0x1000);
*(.text.ED_region_header .text.ED_screen_area_active .text.UI_GetStyleDraw)
. = ALIGN(0x1000);
*(.text.view3d_ob_drop_poll)
. = ALIGN(0x1000);
*(.text.view3d_ob_drop_copy)
. = ALIGN(0x1000);
*(.text.view3d_mat_drop_poll)
. = ALIGN(0x1000);
*(.text.view3d_id_drop_copy)
. = ALIGN(0x1000);
*(.text.view3d_ima_mesh_drop_poll)
. = ALIGN(0x1000);
*(.text.view3d_id_path_drop_copy)
. = ALIGN(0x1000);
*(.text.view3d_ima_empty_drop_poll)
. = ALIGN(0x1000);
*(.text.view3d_ima_bg_drop_poll)
. = ALIGN(0x1000);
*(.text.view3d_group_drop_poll)
. = ALIGN(0x1000);
*(.text.view3d_group_drop_copy)
. = ALIGN(0x1000);
*(.text.view3d_panel_transform .text.v3d_transform_butsR)
. = ALIGN(0x1000);
*(.text.view3d_panel_transform_poll)
. = ALIGN(0x1000);
*(.text.view3d_panel_vgroup)
. = ALIGN(0x1000);
*(.text.view3d_panel_vgroup_poll)
. = ALIGN(0x1000);
*(.text.do_view3d_vgroup_buttons .text.ED_vgroup_vert_active_mirror)
. = ALIGN(0x1000);
*(.text.do_view3d_region_buttons)
. = ALIGN(0x1000);
*(.text.v3d_editvertex_buts)
. = ALIGN(0x1000);
*(.text.view3d_properties_toggle_exec)
. = ALIGN(0x1000);
*(.text.view3d_main_area_draw)
. = ALIGN(0x1000);
*(.text.glBlendFunc)
. = ALIGN(0x1000);
*(.text.GPU_default_lights)
. = ALIGN(0x1000);
*(.text.glLightModeli)
. = ALIGN(0x1000);
*(.text.glPolygonMode)
. = ALIGN(0x1000);
*(.text.gp_draw_data)
. = ALIGN(0x1000);
*(.text.setlinestyle)
. = ALIGN(0x1000);
*(.text.viewrotate_invoke)
. = ALIGN(0x1000);
*(.text.viewrotate_modal)
. = ALIGN(0x1000);
*(.text.viewrotate_apply .text.ED_view3d_quat_to_axis_view)
. = ALIGN(0x1000);
*(.text.viewrotate_cancel)
. = ALIGN(0x1000);
*(.text.ndof_orbit_invoke)
. = ALIGN(0x1000);
*(.text.ndof_pan_invoke)
. = ALIGN(0x1000);
*(.text.ndof_all_invoke)
. = ALIGN(0x1000);
*(.text.view3d_ndof_pan_zoom)
. = ALIGN(0x1000);
*(.text.view3d_ndof_orbit)
. = ALIGN(0x1000);
*(.text.ndof_orbit_zoom_invoke)
. = ALIGN(0x1000);
*(.text.viewmove_invoke)
. = ALIGN(0x1000);
*(.text.viewmove_modal)
. = ALIGN(0x1000);
*(.text.viewmove_apply)
. = ALIGN(0x1000);
*(.text.viewmove_cancel)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_zoom)
. = ALIGN(0x1000);
*(.text.viewzoom_invoke)
. = ALIGN(0x1000);
*(.text.viewzoom_exec)
. = ALIGN(0x1000);
*(.text.viewzoom_modal)
. = ALIGN(0x1000);
*(.text.view_zoom_mouseloc)
. = ALIGN(0x1000);
*(.text.viewzoom_apply)
. = ALIGN(0x1000);
*(.text.viewzoom_cancel)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_dolly)
. = ALIGN(0x1000);
*(.text.viewdolly_invoke)
. = ALIGN(0x1000);
*(.text.viewdolly_exec)
. = ALIGN(0x1000);
*(.text.viewdolly_modal)
. = ALIGN(0x1000);
*(.text.viewdolly_apply)
. = ALIGN(0x1000);
*(.text.viewdolly_cancel)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_view_all)
. = ALIGN(0x1000);
*(.text.view3d_all_exec)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_view_selected)
. = ALIGN(0x1000);
*(.text.viewselected_exec .text.ED_view3d_minmax_verts .text.paintface_minmax)
. = ALIGN(0x1000);
*(.text.view3d_from_minmax)
. = ALIGN(0x1000);
*(.text.view_lock_clear_exec)
. = ALIGN(0x1000);
*(.text.view_lock_to_active_exec)
. = ALIGN(0x1000);
*(.text.viewcenter_cursor_exec)
. = ALIGN(0x1000);
*(.text.viewcenter_pick_invoke)
. = ALIGN(0x1000);
*(.text.view3d_center_camera_exec)
. = ALIGN(0x1000);
*(.text.view3d_camera_user_poll)
. = ALIGN(0x1000);
*(.text.view3d_center_lock_exec)
. = ALIGN(0x1000);
*(.text.view3d_lock_poll)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_render_border)
. = ALIGN(0x1000);
*(.text.render_border_exec.6051)
. = ALIGN(0x1000);
*(.text.clear_render_border_exec.6058)
. = ALIGN(0x1000);
*(.text.view3d_zoom_border_invoke)
. = ALIGN(0x1000);
*(.text.view3d_zoom_border_exec)
. = ALIGN(0x1000);
*(.text.view3d_zoom_1_to_1_camera_exec)
. = ALIGN(0x1000);
*(.text.ED_view3d_calc_camera_border_size)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_viewnumpad)
. = ALIGN(0x1000);
*(.text.viewnumpad_exec .text.axis_set_view)
. = ALIGN(0x1000);
*(.text.getTransformOrientation .text.count_bone_select .text.BM_vert_tri_calc_plane)
. = ALIGN(0x1000);
*(.text.ED_getTransformOrientationMatrix)
. = ALIGN(0x1000);
*(.text.vieworbit_exec)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_view_roll)
. = ALIGN(0x1000);
*(.text.viewroll_invoke)
. = ALIGN(0x1000);
*(.text.view3d_orbit_calc_center)
. = ALIGN(0x1000);
*(.text.viewops_data_create_ex)
. = ALIGN(0x1000);
*(.text.viewroll_exec)
. = ALIGN(0x1000);
*(.text.viewroll_modal)
. = ALIGN(0x1000);
*(.text.viewroll_apply)
. = ALIGN(0x1000);
*(.text.viewroll_cancel)
. = ALIGN(0x1000);
*(.text.viewpan_exec)
. = ALIGN(0x1000);
*(.text.viewpersportho_exec)
. = ALIGN(0x1000);
*(.text.view3d_navigate_invoke)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_background_image_add)
. = ALIGN(0x1000);
*(.text.background_image_add_invoke)
. = ALIGN(0x1000);
*(.text.background_image_add_exec)
. = ALIGN(0x1000);
*(.text.background_image_remove_exec)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_clip_border)
. = ALIGN(0x1000);
*(.text.view3d_clipping_invoke)
. = ALIGN(0x1000);
*(.text.view3d_clipping_exec .text.CTX_wm_region_view3d)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_border_to_rcti)
. = ALIGN(0x1000);
*(.text.view3d_cursor3d_invoke)
. = ALIGN(0x1000);
*(.text.manipulator_invoke)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_enable_manipulator)
. = ALIGN(0x1000);
*(.text.enable_manipulator_invoke)
. = ALIGN(0x1000);
*(.text.depth_segment_cb)
. = ALIGN(0x1000);
*(.text.fly_invoke)
. = ALIGN(0x1000);
*(.text.fly_cancel)
. = ALIGN(0x1000);
*(.text.fly_modal)
. = ALIGN(0x1000);
*(.text.flyEvent)
. = ALIGN(0x1000);
*(.text.drawFlyPixel)
. = ALIGN(0x1000);
*(.text.walk_invoke)
. = ALIGN(0x1000);
*(.text.BKE_object_tfm_backup .text.ED_view3d_cameracontrol_acquire)
. = ALIGN(0x1000);
*(.text.walk_cancel)
. = ALIGN(0x1000);
*(.text.walk_modal)
. = ALIGN(0x1000);
*(.text.ED_view3d_cameracontrol_release)
. = ALIGN(0x1000);
*(.text.walkEnd)
. = ALIGN(0x1000);
*(.text.walkEvent)
. = ALIGN(0x1000);
*(.text.ED_view3d_camera_autokey)
. = ALIGN(0x1000);
*(.text.ED_view3d_cameracontrol_update .text.view3d_ndof_fly)
. = ALIGN(0x1000);
*(.text.drawWalkPixel)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_layers)
. = ALIGN(0x1000);
*(.text.view3d_layers_invoke)
. = ALIGN(0x1000);
*(.text.view3d_layers_exec .text.view3d_layers_editmode_ensure)
. = ALIGN(0x1000);
*(.text.view3d_layers_poll)
. = ALIGN(0x1000);
*(.text.do_view3d_header_buttons)
. = ALIGN(0x1000);
*(.text.meshobject_foreachScreenVert__mapFunc)
. = ALIGN(0x1000);
*(.text.mesh_foreachScreenVert__mapFunc)
. = ALIGN(0x1000);
*(.text.mesh_foreachScreenEdge__mapFunc)
. = ALIGN(0x1000);
*(.text.mesh_foreachScreenFace__mapFunc)
. = ALIGN(0x1000);
*(.text.transform_operatortypes .text.view3d_operatortypes)
. = ALIGN(0x1000);
*(.text.WM_operatortype_append)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_gesture_border)
. = ALIGN(0x1000);
*(.text.Transform_Properties)
. = ALIGN(0x1000);
*(.text.view3d_pastebuffer_exec .text.BKE_copybuffer_paste .text.BLO_library_append_all)
. = ALIGN(0x1000);
*(.text.BLO_library_append_begin .text.BLO_library_append_end)
. = ALIGN(0x1000);
*(.text.view3d_copybuffer_exec .text.BKE_copybuffer_save)
. = ALIGN(0x1000);
*(.text.BKE_main_id_flag_all)
. = ALIGN(0x1000);
*(.text.BKE_bpath_absolute_convert)
. = ALIGN(0x1000);
*(.text.BKE_bpath_relative_convert)
. = ALIGN(0x1000);
*(.text.BKE_bpath_list_backup .text.BLO_write_file)
. = ALIGN(0x1000);
*(.text.viewrotate_modal_keymap .text.viewmove_modal_keymap .text.viewzoom_modal_keymap .text.viewdolly_modal_keymap .text.fly_modal_keymap .text.walk_modal_keymap .text.view3d_keymap)
. = ALIGN(0x1000);
*(.text.view3d_ruler_invoke)
. = ALIGN(0x1000);
*(.text.view3d_ruler_cancel)
. = ALIGN(0x1000);
*(.text.snapObjectsEx .text.view3d_ruler_modal .text.view3d_ruler_item_mousemove)
. = ALIGN(0x1000);
*(.text.ruler_info_draw_pixel)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_select_lasso)
. = ALIGN(0x1000);
*(.text.view3d_lasso_select_exec .text.PE_lasso_select)
. = ALIGN(0x1000);
*(.text.view3d_selectable_data)
. = ALIGN(0x1000);
*(.text.do_lasso_select_meshobject__doSelectVert)
. = ALIGN(0x1000);
*(.text.do_lasso_select_pose__doSelectBone)
. = ALIGN(0x1000);
*(.text.do_lasso_select_curve__doSelect)
. = ALIGN(0x1000);
*(.text.do_lasso_select_lattice__doSelect)
. = ALIGN(0x1000);
*(.text.do_lasso_select_armature__doSelectBone)
. = ALIGN(0x1000);
*(.text.BLI_lasso_is_edge_inside)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_select_menu)
. = ALIGN(0x1000);
*(.text.object_select_menu_exec)
. = ALIGN(0x1000);
*(.text.object_select_menu_enum_itemf)
. = ALIGN(0x1000);
*(.text.view3d_opengl_read_pixels .text.view3d_borderselect_exec .text.PE_border_select .text.do_paintface_box_select)
. = ALIGN(0x1000);
*(.text.ED_view3d_init_mats_rv3d .text.ED_curve_deselect_all .text.glLoadMatrixf)
. = ALIGN(0x1000);
*(.text.do_nurbs_box_select__doSelect)
. = ALIGN(0x1000);
*(.text.do_lattice_box_select__doSelect)
. = ALIGN(0x1000);
*(.text.do_paintvert_box_select__doSelectVert)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_select)
. = ALIGN(0x1000);
*(.text.view3d_select_invoke)
. = ALIGN(0x1000);
*(.text.lattice_foreachScreenVert)
. = ALIGN(0x1000);
*(.text.view3d_select_exec .text.object_mouse_select_menu .text.PE_mouse_particles .text.mouse_nurb .text.mouse_font .text.uiIconFromID .text.EDBM_select_pick .text.mouse_lattice .text.mouse_armature .text.BIF_sk_selectStroke)
. = ALIGN(0x1000);
*(.text.VIEW3D_OT_select_circle)
. = ALIGN(0x1000);
*(.text.view3d_circle_select_exec .text.PE_circle_select)
. = ALIGN(0x1000);
*(.text.meshobject_foreachScreenVert)
. = ALIGN(0x1000);
*(.text.key_inside_test)
. = ALIGN(0x1000);
*(.text.armature_foreachScreenBone .text.pose_foreachScreenBone)
. = ALIGN(0x1000);
*(.text.mesh_circle_doSelectVert)
. = ALIGN(0x1000);
*(.text.mesh_circle_doSelectEdge)
. = ALIGN(0x1000);
*(.text.mesh_circle_doSelectFace)
. = ALIGN(0x1000);
*(.text.nurbscurve_circle_doSelect)
. = ALIGN(0x1000);
*(.text.do_circle_select_armature__doSelectBone)
. = ALIGN(0x1000);
*(.text.paint_vertsel_circle_select_doSelectVert)
. = ALIGN(0x1000);
*(.text.do_circle_select_pose__doSelectBone)
. = ALIGN(0x1000);
*(.text.snap_sel_to_grid_exec)
. = ALIGN(0x1000);
*(.text.snap_sel_to_curs_exec)
. = ALIGN(0x1000);
*(.text.snap_curs_to_grid_exec)
. = ALIGN(0x1000);
*(.text.snap_curs_to_sel_exec)
. = ALIGN(0x1000);
*(.text.snap_curs_to_sel_ex)
. = ALIGN(0x1000);
*(.text.snap_curs_to_active_exec)
. = ALIGN(0x1000);
*(.text.snap_curs_to_center_exec)
. = ALIGN(0x1000);
*(.text.view3d_panel_tool_shelf)
. = ALIGN(0x1000);
*(.text.tool_search_menu)
. = ALIGN(0x1000);
*(.text.operator_search_cb)
. = ALIGN(0x1000);
*(.text.operator_call_cb)
. = ALIGN(0x1000);
*(.text.view3d_panel_operator_redo_header)
. = ALIGN(0x1000);
*(.text.view3d_panel_operator_redo .text.view3d_panel_operator_redo_operator)
. = ALIGN(0x1000);
*(.text.ED_undo_valid)
. = ALIGN(0x1000);
*(.text.uiLayoutOperatorButs)
. = ALIGN(0x1000);
*(.text.view3d_has_tools_region .text.view3d_toolshelf_toggle_exec)
. = ALIGN(0x1000);
*(.text.region_blend_start)
. = ALIGN(0x1000);
*(.text.view3d_smoothview_invoke)
. = ALIGN(0x1000);
*(.text.view3d_camera_to_view_exec)
. = ALIGN(0x1000);
*(.text.view3d_camera_to_view_poll)
. = ALIGN(0x1000);
*(.text.BKE_scene_foreach_display_point .text.view3d_camera_to_view_selected_exec .text.BKE_camera_view_frame_fit_to_scene)
. = ALIGN(0x1000);
*(.text.ED_operator_rv3d_user_region_poll)
. = ALIGN(0x1000);
*(.text.view3d_setobjectascamera_exec)
. = ALIGN(0x1000);
*(.text.localview_exec)
. = ALIGN(0x1000);
*(.text.ED_view3d_smooth_view_ex)
. = ALIGN(0x1000);
*(.text.ED_view3d_camera_lock_init)
. = ALIGN(0x1000);
*(.text.ED_view3d_camera_lock_sync)
. = ALIGN(0x1000);
*(.text.BKE_object_tfm_protected_restore)
. = ALIGN(0x1000);
*(.text.game_engine_exec)
. = ALIGN(0x1000);
*(.text.game_engine_poll)
. = ALIGN(0x1000);
*(.text.clip_grease_pencil_panel_poll)
. = ALIGN(0x1000);
*(.text.marker_update_cb)
. = ALIGN(0x1000);
*(.text.marker_block_handler)
. = ALIGN(0x1000);
*(.text.BKE_tracking_marker_clamp)
. = ALIGN(0x1000);
*(.text.CLIP_OT_dopesheet_select_channel)
. = ALIGN(0x1000);
*(.text.dopesheet_select_channel_invoke)
. = ALIGN(0x1000);
*(.text.dopesheet_select_channel_exec)
. = ALIGN(0x1000);
*(.text.dopesheet_select_channel_poll)
. = ALIGN(0x1000);
*(.text.dopesheet_view_all_exec)
. = ALIGN(0x1000);
*(.text.space_clip_dopesheet_poll)
. = ALIGN(0x1000);
*(.text.ED_space_clip_poll)
. = ALIGN(0x1000);
*(.text.ED_space_clip_view_clip_poll)
. = ALIGN(0x1000);
*(.text.ED_space_clip_tracking_poll)
. = ALIGN(0x1000);
*(.text.ED_space_clip_maskedit_mask_poll)
. = ALIGN(0x1000);
*(.text.prefetch_freejob)
. = ALIGN(0x1000);
*(.text.prefetch_startjob)
. = ALIGN(0x1000);
*(.text.prefetch_task_func)
. = ALIGN(0x1000);
*(.text.BKE_movieclip_has_cached_frame)
. = ALIGN(0x1000);
*(.text.tracking_segment_knot_cb)
. = ALIGN(0x1000);
*(.text.tracking_error_segment_point_cb .text.BKE_tracking_get_projection_matrix .text.mul_v4_m4v4 .text.glVertex2f)
. = ALIGN(0x1000);
*(.text.tracking_error_segment_start_cb)
. = ALIGN(0x1000);
*(.text.glLineWidth)
. = ALIGN(0x1000);
*(.text.tracking_error_segment_end_cb)
. = ALIGN(0x1000);
*(.text.glEnd)
. = ALIGN(0x1000);
*(.text.CLIP_OT_graph_select)
. = ALIGN(0x1000);
*(.text.select_invoke)
. = ALIGN(0x1000);
*(.text.clip_graph_tracking_iterate .text.select_exec)
. = ALIGN(0x1000);
*(.text.clip_graph_knots_poll)
. = ALIGN(0x1000);
*(.text.find_nearest_tracking_knot_cb)
. = ALIGN(0x1000);
*(.text.toggle_selection_cb)
. = ALIGN(0x1000);
*(.text.find_nearest_tracking_segment_cb)
. = ALIGN(0x1000);
*(.text.find_nearest_tracking_segment_end_cb)
. = ALIGN(0x1000);
*(.text.border_select_graph_exec)
. = ALIGN(0x1000);
*(.text.border_select_cb)
. = ALIGN(0x1000);
*(.text.graph_select_all_markers_exec)
. = ALIGN(0x1000);
*(.text.delete_curve_exec)
. = ALIGN(0x1000);
*(.text.delete_knot_exec)
. = ALIGN(0x1000);
*(.text.clip_delete_track)
. = ALIGN(0x1000);
*(.text.clip_delete_marker)
. = ALIGN(0x1000);
*(.text.view_all_exec)
. = ALIGN(0x1000);
*(.text.clip_graph_tracking_values_iterate_track)
. = ALIGN(0x1000);
*(.text.clip_graph_tracking_values_iterate)
. = ALIGN(0x1000);
*(.text.ED_space_clip_graph_poll)
. = ALIGN(0x1000);
*(.text.view_all_cb)
. = ALIGN(0x1000);
*(.text.center_current_frame_exec)
. = ALIGN(0x1000);
*(.text.graph_disable_markers_exec)
. = ALIGN(0x1000);
*(.text.open_invoke)
. = ALIGN(0x1000);
*(.text.open_exec)
. = ALIGN(0x1000);
*(.text.BLI_parent_dir)
. = ALIGN(0x1000);
*(.text.open_cancel)
. = ALIGN(0x1000);
*(.text.reload_exec)
. = ALIGN(0x1000);
*(.text.view_pan_exec)
. = ALIGN(0x1000);
*(.text.view_pan_invoke)
. = ALIGN(0x1000);
*(.text.view_pan_modal)
. = ALIGN(0x1000);
*(.text.view_pan_cancel)
. = ALIGN(0x1000);
*(.text.view_zoom_exec)
. = ALIGN(0x1000);
*(.text.view_zoom_invoke)
. = ALIGN(0x1000);
*(.text.view_zoom_modal .text.view_zoom_apply)
. = ALIGN(0x1000);
*(.text.view_zoom_cancel)
. = ALIGN(0x1000);
*(.text.view_zoom_in_exec)
. = ALIGN(0x1000);
*(.text.view_zoom_in_invoke)
. = ALIGN(0x1000);
*(.text.view_zoom_out_exec)
. = ALIGN(0x1000);
*(.text.view_zoom_out_invoke)
. = ALIGN(0x1000);
*(.text.view_zoom_ratio_exec)
. = ALIGN(0x1000);
*(.text.CLIP_OT_view_all)
. = ALIGN(0x1000);
*(.text.view_all_exec.6847)
. = ALIGN(0x1000);
*(.text.sclip_zoom_set)
. = ALIGN(0x1000);
*(.text.view_selected_exec)
. = ALIGN(0x1000);
*(.text.ED_clip_view_selection)
. = ALIGN(0x1000);
*(.text.change_frame_exec.6857)
. = ALIGN(0x1000);
*(.text.change_frame_invoke.6858)
. = ALIGN(0x1000);
*(.text.change_frame_modal.6859)
. = ALIGN(0x1000);
*(.text.change_frame_poll.6860)
. = ALIGN(0x1000);
*(.text.clip_rebuild_proxy_exec)
. = ALIGN(0x1000);
*(.text.proxy_freejob.6869)
. = ALIGN(0x1000);
*(.text.proxy_startjob.6870 .text.BKE_movieclip_build_proxy_frame)
. = ALIGN(0x1000);
*(.text.proxy_endjob.6871)
. = ALIGN(0x1000);
*(.text.proxy_task_func .text.BKE_movieclip_build_proxy_frame_for_ibuf)
. = ALIGN(0x1000);
*(.text.movieclip_build_proxy_ibuf .text.IMB_scaleImBuf_threaded)
. = ALIGN(0x1000);
*(.text.mode_set_exec)
. = ALIGN(0x1000);
*(.text.show_pose_bone_cb)
. = ALIGN(0x1000);
*(.text.pose_flip_quats_exec)
. = ALIGN(0x1000);
*(.text.poselib_new_exec)
. = ALIGN(0x1000);
*(.text.poselib_unlink_exec)
. = ALIGN(0x1000);
*(.text.has_poselib_pose_data_poll)
. = ALIGN(0x1000);
*(.text.poselib_sanitize_exec)
. = ALIGN(0x1000);
*(.text.POSELIB_OT_pose_add)
. = ALIGN(0x1000);
*(.text.poselib_add_menu_invoke)
. = ALIGN(0x1000);
*(.text.poselib_add_exec)
. = ALIGN(0x1000);
*(.text.poselib_add_menu_invoke__replacemenu)
. = ALIGN(0x1000);
*(.text.POSELIB_OT_pose_remove)
. = ALIGN(0x1000);
*(.text.poselib_remove_exec)
. = ALIGN(0x1000);
*(.text.poselib_stored_pose_itemf)
. = ALIGN(0x1000);
*(.text.POSELIB_OT_pose_rename)
. = ALIGN(0x1000);
*(.text.poselib_rename_invoke)
. = ALIGN(0x1000);
*(.text.poselib_rename_exec)
. = ALIGN(0x1000);
*(.text.poselib_preview_invoke)
. = ALIGN(0x1000);
*(.text.poselib_preview_modal .text.poselib_preview_get_next .text.poselib_preview_handle_search)
. = ALIGN(0x1000);
*(.text.poselib_preview_cancel)
. = ALIGN(0x1000);
*(.text.poselib_preview_exec)
. = ALIGN(0x1000);
*(.text.poselib_preview_cleanup)
. = ALIGN(0x1000);
*(.text.poselib_preview_apply)
. = ALIGN(0x1000);
*(.text.poselib_preview_init_data)
. = ALIGN(0x1000);
*(.text.pose_group_add_exec)
. = ALIGN(0x1000);
*(.text.pose_group_remove_exec .text.BKE_pose_remove_group_index)
. = ALIGN(0x1000);
*(.text.pose_groups_menu_invoke)
. = ALIGN(0x1000);
*(.text.pose_group_assign_exec)
. = ALIGN(0x1000);
*(.text.pose_group_unassign_exec)
. = ALIGN(0x1000);
*(.text.group_move_exec)
. = ALIGN(0x1000);
*(.text.group_sort_exec)
. = ALIGN(0x1000);
*(.text.compare_agroup)
. = ALIGN(0x1000);
*(.text.pose_group_select_exec)
. = ALIGN(0x1000);
*(.text.pose_group_deselect_exec)
. = ALIGN(0x1000);
*(.text.BKE_object_pose_armature_get .text.pose_select_connected_invoke .text.get_nearest_bone)
. = ALIGN(0x1000);
*(.text.pose_select_linked_poll)
. = ALIGN(0x1000);
*(.text.pose_de_select_all_exec)
. = ALIGN(0x1000);
*(.text.pose_select_parent_exec)
. = ALIGN(0x1000);
*(.text.pose_select_constraint_target_exec)
. = ALIGN(0x1000);
*(.text.POSE_OT_select_hierarchy)
. = ALIGN(0x1000);
*(.text.pose_select_hierarchy_exec)
. = ALIGN(0x1000);
*(.text.POSE_OT_select_grouped)
. = ALIGN(0x1000);
*(.text.pose_select_grouped_exec)
. = ALIGN(0x1000);
*(.text.POSE_OT_select_mirror)
. = ALIGN(0x1000);
*(.text.pose_select_mirror_exec .text.BKE_pose_channel_get_mirrored)
. = ALIGN(0x1000);
*(.text.POSE_OT_push)
. = ALIGN(0x1000);
*(.text.pose_slide_push_exec)
. = ALIGN(0x1000);
*(.text.pose_slide_push_invoke)
. = ALIGN(0x1000);
*(.text.pose_slide_modal)
. = ALIGN(0x1000);
*(.text.pose_slide_cancel)
. = ALIGN(0x1000);
*(.text.POSE_OT_relax)
. = ALIGN(0x1000);
*(.text.pose_slide_relax_exec)
. = ALIGN(0x1000);
*(.text.pose_slide_relax_invoke)
. = ALIGN(0x1000);
*(.text.POSE_OT_breakdown)
. = ALIGN(0x1000);
*(.text.pose_slide_breakdown_exec)
. = ALIGN(0x1000);
*(.text.poseAnim_mapping_autoKeyframe)
. = ALIGN(0x1000);
*(.text.pose_slide_breakdown_invoke)
. = ALIGN(0x1000);
*(.text.pose_slide_init)
. = ALIGN(0x1000);
*(.text.pose_slide_apply .text.pose_slide_apply_val)
. = ALIGN(0x1000);
*(.text.poseAnim_mapping_free)
. = ALIGN(0x1000);
*(.text.pose_slide_invoke_common)
. = ALIGN(0x1000);
*(.text.POSE_OT_propagate)
. = ALIGN(0x1000);
*(.text.pose_propagate_exec .text.actkeyblock_is_valid)
. = ALIGN(0x1000);
*(.text.poseAnim_mapping_refresh)
. = ALIGN(0x1000);
*(.text.poseAnim_mapping_get .text.fcurves_to_pchan_links_get .text.action_get_item_transforms)
. = ALIGN(0x1000);
*(.text.ED_markers_make_cfra_list)
. = ALIGN(0x1000);
*(.text.apply_armature_pose2bones_exec)
. = ALIGN(0x1000);
*(.text.pose_visual_transform_apply_exec)
. = ALIGN(0x1000);
*(.text.pose_copy_exec)
. = ALIGN(0x1000);
*(.text.POSE_OT_paste)
. = ALIGN(0x1000);
*(.text.pose_paste_exec)
. = ALIGN(0x1000);
*(.text.ED_autokeyframe_pchan)
. = ALIGN(0x1000);
*(.text.pose_clear_scale_exec)
. = ALIGN(0x1000);
*(.text.pchan_clear_scale)
. = ALIGN(0x1000);
*(.text.pchan_clear_loc)
. = ALIGN(0x1000);
*(.text.pchan_clear_transforms)
. = ALIGN(0x1000);
*(.text.pchan_clear_rot)
. = ALIGN(0x1000);
*(.text.pose_clear_rot_exec)
. = ALIGN(0x1000);
*(.text.pose_clear_loc_exec)
. = ALIGN(0x1000);
*(.text.pose_clear_transforms_exec)
. = ALIGN(0x1000);
*(.text.pose_clear_transform_generic_exec)
. = ALIGN(0x1000);
*(.text.pose_clear_user_transforms_exec)
. = ALIGN(0x1000);
*(.text.pose_bone_do_paste)
. = ALIGN(0x1000);
*(.text.REEB_freeArc)
. = ALIGN(0x1000);
*(.text.REEB_RadialSymmetry)
. = ALIGN(0x1000);
*(.text.REEB_AxialSymmetry)
. = ALIGN(0x1000);
*(.text.headNode)
. = ALIGN(0x1000);
*(.text.tailNode)
. = ALIGN(0x1000);
*(.text.peekBucket)
. = ALIGN(0x1000);
*(.text.nextBucket)
. = ALIGN(0x1000);
*(.text.nextNBucket)
. = ALIGN(0x1000);
*(.text.previousBucket)
. = ALIGN(0x1000);
*(.text.iteratorStopped.14806)
. = ALIGN(0x1000);
*(.text.surface_slot_add_exec)
. = ALIGN(0x1000);
*(.text.surface_slot_remove_exec)
. = ALIGN(0x1000);
*(.text.type_toggle_exec .text.dynamicPaint_freeCanvas)
. = ALIGN(0x1000);
*(.text.output_toggle_exec)
. = ALIGN(0x1000);
*(.text.dynamicpaint_bake_exec .text.dynamicPaint_createUVSurface .text.dynamicPaint_outputSurfaceImage)
. = ALIGN(0x1000);
*(.text.rule_add_exec)
. = ALIGN(0x1000);
*(.text.rule_del_exec)
. = ALIGN(0x1000);
*(.text.rule_move_up_exec)
. = ALIGN(0x1000);
*(.text.rule_move_down_exec)
. = ALIGN(0x1000);
*(.text.state_add_exec)
. = ALIGN(0x1000);
*(.text.state_del_exec)
. = ALIGN(0x1000);
*(.text.state_move_up_exec)
. = ALIGN(0x1000);
*(.text.state_move_down_exec)
. = ALIGN(0x1000);
*(.text.PE_poll)
. = ALIGN(0x1000);
*(.text.PE_hair_poll)
. = ALIGN(0x1000);
*(.text.PE_poll_view3d)
. = ALIGN(0x1000);
*(.text.pe_select_all_exec)
. = ALIGN(0x1000);
*(.text.toggle_key_select)
. = ALIGN(0x1000);
*(.text.deselect_key_select)
. = ALIGN(0x1000);
*(.text.extend_key_select)
. = ALIGN(0x1000);
*(.text.select_roots_exec)
. = ALIGN(0x1000);
*(.text.select_tips_exec)
. = ALIGN(0x1000);
*(.text.PARTICLE_OT_select_random)
. = ALIGN(0x1000);
*(.text.select_random_exec)
. = ALIGN(0x1000);
*(.text.PARTICLE_OT_select_linked)
. = ALIGN(0x1000);
*(.text.select_linked_invoke.14930)
. = ALIGN(0x1000);
*(.text.for_mouse_hit_keys)
. = ALIGN(0x1000);
*(.text.select_linked_exec.14929)
. = ALIGN(0x1000);
*(.text.select_keys)
. = ALIGN(0x1000);
*(.text.hide_exec.14945)
. = ALIGN(0x1000);
*(.text.reveal_exec.14952)
. = ALIGN(0x1000);
*(.text.select_less_exec.14956)
. = ALIGN(0x1000);
*(.text.select_more_exec.14960)
. = ALIGN(0x1000);
*(.text.rekey_exec)
. = ALIGN(0x1000);
*(.text.subdivide_exec.14971)
. = ALIGN(0x1000);
*(.text.remove_doubles_exec)
. = ALIGN(0x1000);
*(.text.weight_set_exec)
. = ALIGN(0x1000);
*(.text.delete_exec.14992)
. = ALIGN(0x1000);
*(.text.mirror_exec)
. = ALIGN(0x1000);
*(.text.brush_edit_exec)
. = ALIGN(0x1000);
*(.text.brush_edit_invoke)
. = ALIGN(0x1000);
*(.text.PE_minmax)
. = ALIGN(0x1000);
*(.text.ED_view3d_depth_update .text.PE_set_view3d_data)
. = ALIGN(0x1000);
*(.text.brush_edit_init)
. = ALIGN(0x1000);
*(.text.brush_edit_modal)
. = ALIGN(0x1000);
*(.text.brush_edit_apply .text.foreach_mouse_hit_key .text.brush_cut .text.foreach_mouse_hit_point)
. = ALIGN(0x1000);
*(.text.PE_mirror_x .text.mesh_get_x_mirror_faces)
. = ALIGN(0x1000);
*(.text.remove_tagged_particles)
. = ALIGN(0x1000);
*(.text.gluProject)
. = ALIGN(0x1000);
*(.text.brush_edit_cancel)
. = ALIGN(0x1000);
*(.text.brush_comb)
. = ALIGN(0x1000);
*(.text.brush_length)
. = ALIGN(0x1000);
*(.text.brush_puff)
. = ALIGN(0x1000);
*(.text.brush_smooth_get)
. = ALIGN(0x1000);
*(.text.brush_smooth_do)
. = ALIGN(0x1000);
*(.text.BKE_brush_weight_get.16802)
. = ALIGN(0x1000);
*(.text.particle_edit_toggle_exec)
. = ALIGN(0x1000);
*(.text.particle_edit_toggle_poll)
. = ALIGN(0x1000);
*(.text.brush_drawcursor)
. = ALIGN(0x1000);
*(.text.clear_edited_exec)
. = ALIGN(0x1000);
*(.text.clear_edited_invoke)
. = ALIGN(0x1000);
*(.text.particle_system_add_exec)
. = ALIGN(0x1000);
*(.text.object_remove_particle_system .text.particle_system_remove_exec)
. = ALIGN(0x1000);
*(.text.new_particle_settings_exec)
. = ALIGN(0x1000);
*(.text.psys_poll)
. = ALIGN(0x1000);
*(.text.new_particle_target_exec)
. = ALIGN(0x1000);
*(.text.remove_particle_target_exec)
. = ALIGN(0x1000);
*(.text.target_move_up_exec)
. = ALIGN(0x1000);
*(.text.target_move_down_exec)
. = ALIGN(0x1000);
*(.text.dupliob_move_up_exec)
. = ALIGN(0x1000);
*(.text.copy_particle_dupliob_exec)
. = ALIGN(0x1000);
*(.text.remove_particle_dupliob_exec)
. = ALIGN(0x1000);
*(.text.dupliob_move_down_exec)
. = ALIGN(0x1000);
*(.text.disconnect_hair_exec .text.disconnect_hair)
. = ALIGN(0x1000);
*(.text.connect_hair_exec .text.connect_hair)
. = ALIGN(0x1000);
*(.text.fluid_bake_invoke)
. = ALIGN(0x1000);
*(.text.fluid_bake_exec)
. = ALIGN(0x1000);
*(.text.ptcache_bake_all_exec)
. = ALIGN(0x1000);
*(.text.ptcache_bake_all_poll)
. = ALIGN(0x1000);
*(.text.cache_break_test)
. = ALIGN(0x1000);
*(.text.bake_console_progress)
. = ALIGN(0x1000);
*(.text.bake_console_progress_end)
. = ALIGN(0x1000);
*(.text.ptcache_free_bake_all_exec)
. = ALIGN(0x1000);
*(.text.ptcache_bake_exec)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_bake)
. = ALIGN(0x1000);
*(.text.ptcache_poll)
. = ALIGN(0x1000);
*(.text.ptcache_free_bake_exec)
. = ALIGN(0x1000);
*(.text.PE_free_ptcache_edit)
. = ALIGN(0x1000);
*(.text.ptcache_bake_from_cache_exec)
. = ALIGN(0x1000);
*(.text.ptcache_add_new_exec)
. = ALIGN(0x1000);
*(.text.ptcache_remove_exec)
. = ALIGN(0x1000);
*(.text.rigidbody_con_add_exec)
. = ALIGN(0x1000);
*(.text.rigidbody_con_remove_exec)
. = ALIGN(0x1000);
*(.text.ED_operator_rigidbody_con_active_poll)
. = ALIGN(0x1000);
*(.text.rigidbody_object_add_exec)
. = ALIGN(0x1000);
*(.text.ED_operator_rigidbody_add_poll)
. = ALIGN(0x1000);
*(.text.rigidbody_object_remove_exec)
. = ALIGN(0x1000);
*(.text.ED_operator_rigidbody_active_poll)
. = ALIGN(0x1000);
*(.text.rigidbody_objects_add_exec)
. = ALIGN(0x1000);
*(.text.rigidbody_objects_remove_exec)
. = ALIGN(0x1000);
*(.text.rigidbody_objects_shape_change_exec)
. = ALIGN(0x1000);
*(.text.RIGIDBODY_OT_mass_calculate)
. = ALIGN(0x1000);
*(.text.rigidbody_objects_calc_mass_exec)
. = ALIGN(0x1000);
*(.text.rigidbody_materials_itemf)
. = ALIGN(0x1000);
*(.text.rigidbody_world_add_exec)
. = ALIGN(0x1000);
*(.text.ED_rigidbody_world_add_poll)
. = ALIGN(0x1000);
*(.text.rigidbody_world_remove_exec)
. = ALIGN(0x1000);
*(.text.ED_rigidbody_world_active_poll)
. = ALIGN(0x1000);
*(.text.rigidbody_world_export_invoke)
. = ALIGN(0x1000);
*(.text.rigidbody_world_export_exec)
. = ALIGN(0x1000);
*(.text.RENDER_OT_render)
. = ALIGN(0x1000);
*(.text.screen_render_invoke .text.RE_is_rendering_allowed .text.node_tree_has_composite_output)
. = ALIGN(0x1000);
*(.text.screen_render_modal)
. = ALIGN(0x1000);
*(.text.screen_render_cancel)
. = ALIGN(0x1000);
*(.text.screen_render_exec)
. = ALIGN(0x1000);
*(.text.screen_render_scene_layer_set)
. = ALIGN(0x1000);
*(.text.render_break)
. = ALIGN(0x1000);
*(.text.render_freejob)
. = ALIGN(0x1000);
*(.text.render_startjob)
. = ALIGN(0x1000);
*(.text.RE_BlenderAnim)
. = ALIGN(0x1000);
*(.text.render_endjob .text.ntreeCompositClearTags)
. = ALIGN(0x1000);
*(.text.render_breakjob)
. = ALIGN(0x1000);
*(.text.render_drawlock)
. = ALIGN(0x1000);
*(.text.image_rect_update)
. = ALIGN(0x1000);
*(.text.current_scene_update)
. = ALIGN(0x1000);
*(.text.image_renderinfo_cb)
. = ALIGN(0x1000);
*(.text.render_progress_update)
. = ALIGN(0x1000);
*(.text.render_view3d_update)
. = ALIGN(0x1000);
*(.text.render_view3d_free)
. = ALIGN(0x1000);
*(.text.render_view3d_startjob .text.RE_DataBase_IncrementalView .text.RE_ChangeResolution)
. = ALIGN(0x1000);
*(.text.render_view3d_break)
. = ALIGN(0x1000);
*(.text.render_view3d_display_update)
. = ALIGN(0x1000);
*(.text.render_view3d_renderinfo_cb)
. = ALIGN(0x1000);
*(.text.make_renderinfo_string)
. = ALIGN(0x1000);
*(.text.render_view3d_draw .text.IMB_colormanagement_buffer_make_display_space)
. = ALIGN(0x1000);
*(.text.ED_view3d_viewplane_get)
. = ALIGN(0x1000);
*(.text.render_view3d_do .text.compare_m4m4)
. = ALIGN(0x1000);
*(.text.RENDER_OT_opengl)
. = ALIGN(0x1000);
*(.text.screen_opengl_render_invoke)
. = ALIGN(0x1000);
*(.text.screen_opengl_render_exec)
. = ALIGN(0x1000);
*(.text.screen_opengl_render_init .text.GPU_offscreen_create)
. = ALIGN(0x1000);
*(.text.ED_view3d_draw_offscreen_init .text.screen_opengl_render_modal .text.screen_opengl_render_apply)
. = ALIGN(0x1000);
*(.text.draw_glsl_material)
. = ALIGN(0x1000);
*(.text.gpu_update_lamps_shadows .text.gpu_render_lamp_update .text.GPU_lamp_update .text.GPU_lamp_shadow_buffer_bind .text.GPU_lamp_shadow_layer)
. = ALIGN(0x1000);
*(.text.mul_m4_m4m4)
. = ALIGN(0x1000);
*(.text.ED_view3d_draw_offscreen_imbuf_simple .text.BKE_camera_params_from_object .text.BKE_camera_params_compute_viewplane .text.BKE_camera_params_compute_matrix)
. = ALIGN(0x1000);
*(.text.screen_opengl_render_cancel)
. = ALIGN(0x1000);
*(.text.screen_opengl_render_end)
. = ALIGN(0x1000);
*(.text.ED_preview_draw .text.ed_preview_draw_rect .text.RE_AcquiredResultGet32)
. = ALIGN(0x1000);
*(.text.ED_preview_shader_job)
. = ALIGN(0x1000);
*(.text.shader_preview_update)
. = ALIGN(0x1000);
*(.text.shader_preview_break)
. = ALIGN(0x1000);
*(.text.icon_preview_free)
. = ALIGN(0x1000);
*(.text.icon_preview_startjob_all_sizes)
. = ALIGN(0x1000);
*(.text.shader_preview_updatejob)
. = ALIGN(0x1000);
*(.text.BKE_node_preview_verify .text.node_preview_init_tree_recursive)
. = ALIGN(0x1000);
*(.text.BLI_get_folder)
. = ALIGN(0x1000);
*(.text.get_path_system)
. = ALIGN(0x1000);
*(.text.get_path_user)
. = ALIGN(0x1000);
*(.text.get_brush_icon .text.common_preview_startjob .text.icon_copy_rect .text.shader_preview_render .text.preview_prepare_scene .text.preview_mat_has_sss .text.RE_ResultGet32 .text.RE_PreviewRender .text.localize_lamp)
. = ALIGN(0x1000);
*(.text.shader_preview_free)
. = ALIGN(0x1000);
*(.text.icon_preview_endjob)
. = ALIGN(0x1000);
*(.text.material_slot_add_exec)
. = ALIGN(0x1000);
*(.text.material_slot_remove_exec)
. = ALIGN(0x1000);
*(.text.material_slot_assign_exec)
. = ALIGN(0x1000);
*(.text.material_slot_select_exec)
. = ALIGN(0x1000);
*(.text.material_slot_deselect_exec)
. = ALIGN(0x1000);
*(.text.material_slot_de_select)
. = ALIGN(0x1000);
*(.text.material_slot_copy_exec)
. = ALIGN(0x1000);
*(.text.new_material_exec)
. = ALIGN(0x1000);
*(.text.new_texture_exec)
. = ALIGN(0x1000);
*(.text.new_world_exec)
. = ALIGN(0x1000);
*(.text.render_layer_add_exec)
. = ALIGN(0x1000);
*(.text.render_layer_remove_exec)
. = ALIGN(0x1000);
*(.text.texture_slot_move_exec)
. = ALIGN(0x1000);
*(.text.TEXTURE_OT_envmap_save .text.RNA_def_float_array)
. = ALIGN(0x1000);
*(.text.envmap_save_invoke)
. = ALIGN(0x1000);
*(.text.envmap_save_exec)
. = ALIGN(0x1000);
*(.text.envmap_save_poll)
. = ALIGN(0x1000);
*(.text.envmap_clear_exec)
. = ALIGN(0x1000);
*(.text.envmap_clear_poll)
. = ALIGN(0x1000);
*(.text.envmap_clear_all_exec)
. = ALIGN(0x1000);
*(.text.copy_material_exec .text.free_matcopybuf .text.copy_matcopybuf)
. = ALIGN(0x1000);
*(.text.paste_material_exec .text.paste_matcopybuf)
. = ALIGN(0x1000);
*(.text.copy_mtex_exec)
. = ALIGN(0x1000);
*(.text.copy_mtex_poll)
. = ALIGN(0x1000);
*(.text.paste_mtex_exec)
. = ALIGN(0x1000);
*(.text.ED_render_scene_update)
. = ALIGN(0x1000);
*(.text.render_view_cancel_exec)
. = ALIGN(0x1000);
*(.text.render_view_show_invoke)
. = ALIGN(0x1000);
*(.text.render_view_open)
. = ALIGN(0x1000);
*(.text.ed_screen_context)
. = ALIGN(0x1000);
*(.text.ED_operator_regionactive)
. = ALIGN(0x1000);
*(.text.ED_operator_areaactive)
. = ALIGN(0x1000);
*(.text.ED_operator_screenactive)
. = ALIGN(0x1000);
*(.text.ED_operator_screen_mainwinactive)
. = ALIGN(0x1000);
*(.text.ED_operator_scene_editable)
. = ALIGN(0x1000);
*(.text.ED_operator_objectmode)
. = ALIGN(0x1000);
*(.text.ED_operator_view3d_active)
. = ALIGN(0x1000);
*(.text.ED_operator_region_view3d_active)
. = ALIGN(0x1000);
*(.text.ED_operator_animview_active)
. = ALIGN(0x1000);
*(.text.ED_operator_timeline_active)
. = ALIGN(0x1000);
*(.text.ED_operator_outliner_active)
. = ALIGN(0x1000);
*(.text.ED_operator_outliner_active_no_editobject)
. = ALIGN(0x1000);
*(.text.ED_operator_file_active)
. = ALIGN(0x1000);
*(.text.ED_operator_action_active)
. = ALIGN(0x1000);
*(.text.ED_operator_buttons_active)
. = ALIGN(0x1000);
*(.text.ED_operator_node_active)
. = ALIGN(0x1000);
*(.text.ED_operator_node_editable)
. = ALIGN(0x1000);
*(.text.ED_operator_graphedit_active)
. = ALIGN(0x1000);
*(.text.ED_operator_sequencer_active)
. = ALIGN(0x1000);
*(.text.ED_operator_sequencer_active_editable)
. = ALIGN(0x1000);
*(.text.ED_operator_image_active)
. = ALIGN(0x1000);
*(.text.ED_operator_nla_active)
. = ALIGN(0x1000);
*(.text.ED_operator_logic_active)
. = ALIGN(0x1000);
*(.text.ED_operator_info_active)
. = ALIGN(0x1000);
*(.text.ED_operator_console_active)
. = ALIGN(0x1000);
*(.text.ED_operator_object_active)
. = ALIGN(0x1000);
*(.text.ED_operator_object_active_editable)
. = ALIGN(0x1000);
*(.text.ED_operator_object_active_editable_mesh)
. = ALIGN(0x1000);
*(.text.ED_operator_object_active_editable_font)
. = ALIGN(0x1000);
*(.text.ED_operator_editmesh)
. = ALIGN(0x1000);
*(.text.ED_operator_editmesh_view3d)
. = ALIGN(0x1000);
*(.text.ED_operator_editmesh_region_view3d)
. = ALIGN(0x1000);
*(.text.ED_operator_editarmature)
. = ALIGN(0x1000);
*(.text.ED_operator_posemode_exclusive)
. = ALIGN(0x1000);
*(.text.ED_operator_posemode_context)
. = ALIGN(0x1000);
*(.text.ED_pose_object_from_context)
. = ALIGN(0x1000);
*(.text.ED_operator_posemode)
. = ALIGN(0x1000);
*(.text.ED_operator_uvedit)
. = ALIGN(0x1000);
*(.text.ED_operator_uvedit_space_image)
. = ALIGN(0x1000);
*(.text.ED_operator_uvmap)
. = ALIGN(0x1000);
*(.text.ED_operator_editsurfcurve)
. = ALIGN(0x1000);
*(.text.ED_operator_editsurfcurve_region_view3d)
. = ALIGN(0x1000);
*(.text.ED_operator_editcurve)
. = ALIGN(0x1000);
*(.text.ED_operator_editcurve_3d)
. = ALIGN(0x1000);
*(.text.ED_operator_editsurf)
. = ALIGN(0x1000);
*(.text.ED_operator_editfont)
. = ALIGN(0x1000);
*(.text.ED_operator_editlattice)
. = ALIGN(0x1000);
*(.text.ED_operator_editmball)
. = ALIGN(0x1000);
*(.text.ED_operator_mask)
. = ALIGN(0x1000);
*(.text.SCREEN_OT_area_move)
. = ALIGN(0x1000);
*(.text.SCREEN_OT_area_split)
. = ALIGN(0x1000);
*(.text.SCREEN_OT_area_join)
. = ALIGN(0x1000);
*(.text.SCREEN_OT_animation_play)
. = ALIGN(0x1000);
*(.text.scene_delete_exec)
. = ALIGN(0x1000);
*(.text.scene_new_exec .text.ED_object_single_users .text.BKE_scene_copy .text.BKE_keyingsets_copy .text.BKE_freestyle_config_copy)
. = ALIGN(0x1000);
*(.text.BKE_color_managed_display_settings_copy .text.BKE_color_managed_view_settings_copy)
. = ALIGN(0x1000);
*(.text.BKE_sculptsession_bm_to_me_for_render .text.ED_editors_flush_edits)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_dupe_animdata)
. = ALIGN(0x1000);
*(.text.seq_dupli)
. = ALIGN(0x1000);
*(.text.BKE_sequence_base_dupli_recursive)
. = ALIGN(0x1000);
*(.text.screen_delete_exec)
. = ALIGN(0x1000);
*(.text.screen_new_exec)
. = ALIGN(0x1000);
*(.text.ED_screen_duplicate)
. = ALIGN(0x1000);
*(.text.screen_animation_cancel_exec)
. = ALIGN(0x1000);
*(.text.ED_screen_animation_play .text.screen_animation_play_exec)
. = ALIGN(0x1000);
*(.text.ED_operator_screenactive_norender)
. = ALIGN(0x1000);
*(.text.screen_animation_step)
. = ALIGN(0x1000);
*(.text.marker_jump_exec)
. = ALIGN(0x1000);
*(.text.keyframe_jump_exec)
. = ALIGN(0x1000);
*(.text.recursive_tree_free_nodes)
. = ALIGN(0x1000);
*(.text.linkedlist_sync_add_node)
. = ALIGN(0x1000);
*(.text.insert_check_1)
. = ALIGN(0x1000);
*(.text.fcurve_to_keylist .text.set_touched_actkeycolumn .text.set_touched_actkeyblock)
. = ALIGN(0x1000);
*(.text.mask_to_keylist)
. = ALIGN(0x1000);
*(.text.frame_jump_exec.15935)
. = ALIGN(0x1000);
*(.text.frame_offset_exec)
. = ALIGN(0x1000);
*(.text.region_blend_invoke)
. = ALIGN(0x1000);
*(.text.userpref_show_invoke)
. = ALIGN(0x1000);
*(.text.WM_window_open_temp)
. = ALIGN(0x1000);
*(.text.spacedata_cleanup_exec)
. = ALIGN(0x1000);
*(.text.fullscreen_back_exec)
. = ALIGN(0x1000);
*(.text.screen_maximize_area_exec)
. = ALIGN(0x1000);
*(.text.screen_set_exec)
. = ALIGN(0x1000);
*(.text.ED_screen_full_restore)
. = ALIGN(0x1000);
*(.text.header_toolbox_invoke)
. = ALIGN(0x1000);
*(.text.ED_screens_header_tools_menu_create)
. = ALIGN(0x1000);
*(.text.header_toggle_menus_exec)
. = ALIGN(0x1000);
*(.text.header_exec)
. = ALIGN(0x1000);
*(.text.header_flip_exec)
. = ALIGN(0x1000);
*(.text.region_flip_exec)
. = ALIGN(0x1000);
*(.text.region_scale_invoke)
. = ALIGN(0x1000);
*(.text.region_scale_modal)
. = ALIGN(0x1000);
*(.text.region_scale_cancel)
. = ALIGN(0x1000);
*(.text.region_quadview_exec)
. = ALIGN(0x1000);
*(.text.area_swap_invoke)
. = ALIGN(0x1000);
*(.text.ED_area_swapspace .text.area_swap_modal)
. = ALIGN(0x1000);
*(.text.area_swap_cancel)
. = ALIGN(0x1000);
*(.text.area_dupli_invoke)
. = ALIGN(0x1000);
*(.text.gpu_extensions_init)
. = ALIGN(0x1000);
*(.text.WM_check .text.wm_window_add_ghostwindows)
. = ALIGN(0x1000);
*(.text.WM_keymap_init .text.wm_window_keymap .text.WM_keyconfig_new .text.ED_spacetypes_keymap .text.ED_keymap_physics .text.ED_keymap_screen .text.ED_keymap_paint .text.set_brush_rc_props .text.ed_keymap_stencil .text.paint_stroke_modal_keymap .text.ED_keymap_uvedit .text.ED_keymap_curve .text.ED_keymap_gpencil .text.ED_keymap_view2d .text.knifetool_modal_keymap .text.ED_keymap_mesh .text.ED_keymap_metaball .text.ED_keymap_object .text.ED_keymap_proportional_editmode .text.ED_keymap_armature .text.RNA_enum_set_identifier .text.ED_keymap_animchannels .text.ED_keymap_marker .text.ED_keymap_mask)
. = ALIGN(0x1000);
*(.text.wm_window_title)
. = ALIGN(0x1000);
*(.text.GHOST_GetClientBounds)
. = ALIGN(0x1000);
*(.text.WM_dropbox_add)
. = ALIGN(0x1000);
*(.text.WM_dropboxmap_find)
. = ALIGN(0x1000);
*(.text.transform_modal_keymap .text.transform_keymap_for_space)
. = ALIGN(0x1000);
*(.text.WM_keymap_verify_item)
. = ALIGN(0x1000);
*(.text.screen_area_options_invoke)
. = ALIGN(0x1000);
*(.text.area_join_exec)
. = ALIGN(0x1000);
*(.text.area_join_invoke)
. = ALIGN(0x1000);
*(.text.area_join_init)
. = ALIGN(0x1000);
*(.text.area_join_modal)
. = ALIGN(0x1000);
*(.text.screen_active_editable)
. = ALIGN(0x1000);
*(.text.area_join_cancel)
. = ALIGN(0x1000);
*(.text.area_split_exec)
. = ALIGN(0x1000);
*(.text.area_split_invoke)
. = ALIGN(0x1000);
*(.text.area_split_modal)
. = ALIGN(0x1000);
*(.text.area_split_apply)
. = ALIGN(0x1000);
*(.text.area_split_cancel)
. = ALIGN(0x1000);
*(.text.screen_area_join)
. = ALIGN(0x1000);
*(.text.area_split_exit)
. = ALIGN(0x1000);
*(.text.area_move_exec)
. = ALIGN(0x1000);
*(.text.area_move_invoke)
. = ALIGN(0x1000);
*(.text.area_move_set_limits)
. = ALIGN(0x1000);
*(.text.area_move_init)
. = ALIGN(0x1000);
*(.text.area_move_modal)
. = ALIGN(0x1000);
*(.text.area_move_apply_do)
. = ALIGN(0x1000);
*(.text.area_move_cancel)
. = ALIGN(0x1000);
*(.text.redo_last_invoke)
. = ALIGN(0x1000);
*(.text.repeat_history_invoke)
. = ALIGN(0x1000);
*(.text.uiItemIntO)
. = ALIGN(0x1000);
*(.text.repeat_history_exec)
. = ALIGN(0x1000);
*(.text.repeat_last_exec)
. = ALIGN(0x1000);
*(.text.actionzone_invoke)
. = ALIGN(0x1000);
*(.text.actionzone_modal)
. = ALIGN(0x1000);
*(.text.is_in_area_actionzone)
. = ALIGN(0x1000);
*(.text.screen_find_active_scredge)
. = ALIGN(0x1000);
*(.text.actionzone_area_poll)
. = ALIGN(0x1000);
*(.text.actionzone_cancel)
. = ALIGN(0x1000);
*(.text.open_file_drop_poll)
. = ALIGN(0x1000);
*(.text.open_file_drop_copy)
. = ALIGN(0x1000);
*(.text.SCREEN_OT_screenshot)
. = ALIGN(0x1000);
*(.text.screenshot_invoke)
. = ALIGN(0x1000);
*(.text.screenshot_check)
. = ALIGN(0x1000);
*(.text.WM_operator_filesel_ensure_ext_imtype)
. = ALIGN(0x1000);
*(.text.screenshot_exec)
. = ALIGN(0x1000);
*(.text.screenshot_cancel)
. = ALIGN(0x1000);
*(.text.screenshot_draw)
. = ALIGN(0x1000);
*(.text.screenshot_poll)
. = ALIGN(0x1000);
*(.text.screenshot_draw_check_prop)
. = ALIGN(0x1000);
*(.text.SCREEN_OT_screencast)
. = ALIGN(0x1000);
*(.text.screencast_exec)
. = ALIGN(0x1000);
*(.text.screenshot_startjob)
. = ALIGN(0x1000);
*(.text.screenshot_freejob)
. = ALIGN(0x1000);
*(.text.screenshot_updatejob)
. = ALIGN(0x1000);
*(.text.screenshot_endjob)
. = ALIGN(0x1000);
*(.text.screencast_draw_cursor)
. = ALIGN(0x1000);
*(.text.paint_draw_cursor)
. = ALIGN(0x1000);
*(.text.paint_curve_poll)
. = ALIGN(0x1000);
*(.text.paintcurve_new_exec)
. = ALIGN(0x1000);
*(.text.paintcurve_add_point_invoke)
. = ALIGN(0x1000);
*(.text.paintcurve_add_point_exec)
. = ALIGN(0x1000);
*(.text.paintcurve_point_add)
. = ALIGN(0x1000);
*(.text.paintcurve_undo_restore)
. = ALIGN(0x1000);
*(.text.paintcurve_undo_delete)
. = ALIGN(0x1000);
*(.text.paintcurve_delete_point_exec)
. = ALIGN(0x1000);
*(.text.PAINTCURVE_OT_select)
. = ALIGN(0x1000);
*(.text.paintcurve_select_point_invoke)
. = ALIGN(0x1000);
*(.text.paintcurve_select_point_exec)
. = ALIGN(0x1000);
*(.text.paintcurve_point_select)
. = ALIGN(0x1000);
*(.text.PAINTCURVE_OT_slide)
. = ALIGN(0x1000);
*(.text.paintcurve_slide_invoke)
. = ALIGN(0x1000);
*(.text.paintcurve_undo_begin)
. = ALIGN(0x1000);
*(.text.paintcurve_slide_modal)
. = ALIGN(0x1000);
*(.text.paintcurve_draw_exec)
. = ALIGN(0x1000);
*(.text.ED_view3d_cursor3d_update .text.paintcurve_cursor_invoke)
. = ALIGN(0x1000);
*(.text.PAINT_OT_hide_show)
. = ALIGN(0x1000);
*(.text.hide_show_invoke)
. = ALIGN(0x1000);
*(.text.hide_show_exec)
. = ALIGN(0x1000);
*(.text.CTX_data_active_object)
. = ALIGN(0x1000);
*(.text.ED_image_undo_restore)
. = ALIGN(0x1000);
*(.text.ED_image_undo_free)
. = ALIGN(0x1000);
*(.text.paint_invoke)
. = ALIGN(0x1000);
*(.text.paint_exec)
. = ALIGN(0x1000);
*(.text.paint_stroke_test_start)
. = ALIGN(0x1000);
*(.text.paint_brush_init_tex .text.texture_paint_init .text.paint_2d_new_stroke .text.paint_proj_new_stroke)
. = ALIGN(0x1000);
*(.text.paint_stroke_update_step .text.paint_2d_stroke .text.brush_painter_2d_tex_mapping .text.brush_painter_imbuf_partial_update .text.paint_2d_torus_split_region .text.brush_painter_imbuf_update)
. = ALIGN(0x1000);
*(.text.paint_stroke_redraw .text.paint_2d_redraw)
. = ALIGN(0x1000);
*(.text.paint_stroke_done .text.paint_2d_stroke_done .text.paint_2d_gradient_fill .text.paint_proj_stroke_done)
. = ALIGN(0x1000);
*(.text.paint_proj_redraw)
. = ALIGN(0x1000);
*(.text.paint_brush_color_get .text.paint_proj_stroke)
. = ALIGN(0x1000);
*(.text.gradient_draw_line)
. = ALIGN(0x1000);
*(.text.grab_clone_exec)
. = ALIGN(0x1000);
*(.text.grab_clone_invoke)
. = ALIGN(0x1000);
*(.text.grab_clone_modal)
. = ALIGN(0x1000);
*(.text.grab_clone_cancel)
. = ALIGN(0x1000);
*(.text.image_paint_2d_clone_poll)
. = ALIGN(0x1000);
*(.text.PAINT_OT_sample_color)
. = ALIGN(0x1000);
*(.text.RNA_def_int_vector)
. = ALIGN(0x1000);
*(.text.sample_color_exec)
. = ALIGN(0x1000);
*(.text.WM_event_add_modal_handler .text.sample_color_invoke)
. = ALIGN(0x1000);
*(.text.wm_drags_draw .text.wm_draw_update .text.wm_method_draw_overlap_all .text.wm_paintcursor_draw .text.split_width .text.wm_gesture_draw .text.wm_gesture_draw_rect .text.wm_gesture_draw_lasso .text.WM_window_pixels_x .text.WM_window_pixels_y .text.ED_screen_draw)
. = ALIGN(0x1000);
*(.text.glTranslatef)
. = ALIGN(0x1000);
*(.text.wm_draw_window_clear)
. = ALIGN(0x1000);
*(.text.ED_view3d_calc_render_border)
. = ALIGN(0x1000);
*(.text.glClearColor)
. = ALIGN(0x1000);
*(.text.WM_redraw_windows .text.WM_paint_cursor_tag_redraw)
. = ALIGN(0x1000);
*(.text.sample_color_modal)
. = ALIGN(0x1000);
*(.text.paint_sample_color)
. = ALIGN(0x1000);
*(.text.glReadBuffer)
. = ALIGN(0x1000);
*(.text.sample_color_poll)
. = ALIGN(0x1000);
*(.text.texture_paint_toggle_exec)
. = ALIGN(0x1000);
*(.text.texture_paint_toggle_poll)
. = ALIGN(0x1000);
*(.text.brush_colors_flip_exec)
. = ALIGN(0x1000);
*(.text.brush_colors_flip_poll)
. = ALIGN(0x1000);
*(.text.image_texture_paint_poll)
. = ALIGN(0x1000);
*(.text.image_paint_poll)
. = ALIGN(0x1000);
*(.text.facemask_paint_poll)
. = ALIGN(0x1000);
*(.text.vert_paint_poll)
. = ALIGN(0x1000);
*(.text.mask_paint_poll)
. = ALIGN(0x1000);
*(.text.float_z_sort_flip)
. = ALIGN(0x1000);
*(.text.float_z_sort)
. = ALIGN(0x1000);
*(.text.PAINT_OT_project_image)
. = ALIGN(0x1000);
*(.text.texture_paint_camera_project_exec)
. = ALIGN(0x1000);
*(.text.do_projectpaint_thread .text.project_paint_face_init .text.project_paint_PickColor .text.line_clip_rect2f .text.project_bucket_point_occluded .text.project_paint_uvpixel_mask .text.project_paint_uvpixel_init .text.project_paint_occlude_ptv .text.project_paint_occlude_ptv_clip .text.BKE_brush_sample_masktex .text.barycentric_weights_v2_persp)
. = ALIGN(0x1000);
*(.text.project_paint_op)
. = ALIGN(0x1000);
*(.text.project_paint_end)
. = ALIGN(0x1000);
*(.text.paint_new_blur_kernel .text.project_state_init .text.project_paint_begin)
. = ALIGN(0x1000);
*(.text.texture_paint_image_from_view_exec)
. = ALIGN(0x1000);
*(.text.PAINT_OT_add_texture_paint_slot)
. = ALIGN(0x1000);
*(.text.texture_paint_add_texture_paint_slot_invoke)
. = ALIGN(0x1000);
*(.text.texture_paint_add_texture_paint_slot_exec .text.proj_paint_image_create)
. = ALIGN(0x1000);
*(.text.texture_paint_delete_texture_paint_slot_exec)
. = ALIGN(0x1000);
*(.text.PAINT_OT_mask_flood_fill)
. = ALIGN(0x1000);
*(.text.mask_flood_fill_exec)
. = ALIGN(0x1000);
*(.text.PAINT_OT_mask_lasso_gesture)
. = ALIGN(0x1000);
*(.text.ED_view3d_ob_project_mat_get .text.paint_mask_gesture_lasso_exec .text.CTX_data_tool_settings .text.BLI_lasso_boundbox)
. = ALIGN(0x1000);
*(.text.CTX_data_scene)
. = ALIGN(0x1000);
*(.text.fill_poly_v2i_n)
. = ALIGN(0x1000);
*(.text.view3d_get_transformation)
. = ALIGN(0x1000);
*(.text.gluUnProject)
. = ALIGN(0x1000);
*(.text.ED_view3d_clipping_calc)
. = ALIGN(0x1000);
*(.text.mask_lasso_px_cb)
. = ALIGN(0x1000);
*(.text.BRUSH_OT_stencil_control)
. = ALIGN(0x1000);
*(.text.BRUSH_OT_stencil_fit_image_aspect)
. = ALIGN(0x1000);
*(.text.PAINT_OT_brush_select)
. = ALIGN(0x1000);
*(.text.vertex_color_smooth_exec .text.ED_vpaint_smooth)
. = ALIGN(0x1000);
*(.text.vertex_color_set_exec .text.ED_vpaint_fill)
. = ALIGN(0x1000);
*(.text.brush_uv_sculpt_tool_set_exec)
. = ALIGN(0x1000);
*(.text.brush_select_exec)
. = ALIGN(0x1000);
*(.text.stencil_reset_transform_exec)
. = ALIGN(0x1000);
*(.text.stencil_control_poll)
. = ALIGN(0x1000);
*(.text.stencil_fit_image_aspect_exec)
. = ALIGN(0x1000);
*(.text.stencil_control_invoke)
. = ALIGN(0x1000);
*(.text.stencil_control_modal .text.stencil_control_calculate)
. = ALIGN(0x1000);
*(.text.stencil_control_cancel)
. = ALIGN(0x1000);
*(.text.brush_reset_exec .text.BKE_brush_sculpt_reset)
. = ALIGN(0x1000);
*(.text.brush_scale_size_exec)
. = ALIGN(0x1000);
*(.text.brush_add_exec)
. = ALIGN(0x1000);
*(.text.palette_color_delete_exec)
. = ALIGN(0x1000);
*(.text.palette_poll)
. = ALIGN(0x1000);
*(.text.palette_color_add_exec)
. = ALIGN(0x1000);
*(.text.palette_new_exec)
. = ALIGN(0x1000);
*(.text.paint_stroke_modal .text.paint_stroke_integrate_overlap .text.paint_brush_stroke_add_step .text.paint_space_stroke)
. = ALIGN(0x1000);
*(.text.BKE_paintmode_get_active_from_context)
. = ALIGN(0x1000);
*(.text.paint_poll)
. = ALIGN(0x1000);
*(.text.paint_draw_smooth_cursor)
. = ALIGN(0x1000);
*(.text.paint_draw_line_cursor)
. = ALIGN(0x1000);
*(.text.paint_stroke_cancel)
. = ALIGN(0x1000);
*(.text.brush_curve_preset_exec)
. = ALIGN(0x1000);
*(.text.brush_curve_preset_poll)
. = ALIGN(0x1000);
*(.text.paint_select_linked_exec .text.paintface_select_linked)
. = ALIGN(0x1000);
*(.text.paint_select_linked_pick_invoke)
. = ALIGN(0x1000);
*(.text.face_select_all_exec)
. = ALIGN(0x1000);
*(.text.paintface_deselect_all_visible)
. = ALIGN(0x1000);
*(.text.vert_select_all_exec)
. = ALIGN(0x1000);
*(.text.vert_select_ungrouped_exec .text.paintvert_select_ungrouped)
. = ALIGN(0x1000);
*(.text.paintvert_deselect_all_visible)
. = ALIGN(0x1000);
*(.text.BKE_mesh_mselect_validate)
. = ALIGN(0x1000);
*(.text.face_select_hide_exec)
. = ALIGN(0x1000);
*(.text.face_select_reveal_exec)
. = ALIGN(0x1000);
*(.text.BKE_mesh_flush_hidden_from_polys)
. = ALIGN(0x1000);
*(.text.paintface_flush_flags)
. = ALIGN(0x1000);
*(.text.vertex_paint_mode_poll)
. = ALIGN(0x1000);
*(.text.vertex_paint_poll)
. = ALIGN(0x1000);
*(.text.weight_paint_mode_poll)
. = ALIGN(0x1000);
*(.text.weight_paint_poll)
. = ALIGN(0x1000);
*(.text.weight_sample_invoke .text.ED_mesh_pick_face_vert)
. = ALIGN(0x1000);
*(.text.PAINT_OT_weight_sample_group)
. = ALIGN(0x1000);
*(.text.weight_sample_group_exec)
. = ALIGN(0x1000);
*(.text.weight_paint_sample_enum_itemf)
. = ALIGN(0x1000);
*(.text.ED_mesh_pick_vert)
. = ALIGN(0x1000);
*(.text.ED_mesh_pick_face)
. = ALIGN(0x1000);
*(.text.wpaint_mode_toggle_exec)
. = ALIGN(0x1000);
*(.text.paint_poll_test)
. = ALIGN(0x1000);
*(.text.wpaint_invoke)
. = ALIGN(0x1000);
*(.text.wpaint_exec)
. = ALIGN(0x1000);
*(.text.wpaint_cancel)
. = ALIGN(0x1000);
*(.text.wpaint_stroke_test_start)
. = ALIGN(0x1000);
*(.text.wpaint_stroke_update_step .text.wpaint_blend .text.do_weight_paint_normalize_all_active .text.apply_mp_locks_normalize .text.redistribute_change)
. = ALIGN(0x1000);
*(.text.wpaint_stroke_done)
. = ALIGN(0x1000);
*(.text.ED_wpaint_fill .text.weight_paint_set_exec)
. = ALIGN(0x1000);
*(.text.vpaint_mode_toggle_exec)
. = ALIGN(0x1000);
*(.text.vpaint_invoke)
. = ALIGN(0x1000);
*(.text.vpaint_exec)
. = ALIGN(0x1000);
*(.text.vpaint_cancel)
. = ALIGN(0x1000);
*(.text.vpaint_stroke_test_start .text.BKE_mesh_origindex_map_create)
. = ALIGN(0x1000);
*(.text.make_vertexcol)
. = ALIGN(0x1000);
*(.text.ED_vpaint_proj_handle_create)
. = ALIGN(0x1000);
*(.text.vpaint_stroke_update_step)
. = ALIGN(0x1000);
*(.text.ED_vpaint_proj_handle_update)
. = ALIGN(0x1000);
*(.text.do_shared_vertexcol)
. = ALIGN(0x1000);
*(.text.vpaint_stroke_done)
. = ALIGN(0x1000);
*(.text.weight_from_bones_exec)
. = ALIGN(0x1000);
*(.text.weight_from_bones_poll)
. = ALIGN(0x1000);
*(.text.PAINT_OT_weight_gradient)
. = ALIGN(0x1000);
*(.text.paint_weight_gradient_invoke)
. = ALIGN(0x1000);
*(.text.paint_weight_gradient_modal)
. = ALIGN(0x1000);
*(.text.WM_gesture_straightline_cancel)
. = ALIGN(0x1000);
*(.text.paint_weight_gradient_exec)
. = ALIGN(0x1000);
*(.text.wpaint_ensure_data)
. = ALIGN(0x1000);
*(.text.BKE_mesh_flush_select_from_polys)
. = ALIGN(0x1000);
*(.text.gradientVertInit__mapFunc)
. = ALIGN(0x1000);
*(.text.gradientVertUpdate__mapFunc)
. = ALIGN(0x1000);
*(.text.gradientVert_update)
. = ALIGN(0x1000);
*(.text.vpaint_proj_dm_map_cosnos_init__map_cb)
. = ALIGN(0x1000);
*(.text.vpaint_proj_dm_map_cosnos_update__map_cb)
. = ALIGN(0x1000);
*(.text.sculpt_mode_poll)
. = ALIGN(0x1000);
*(.text.sculpt_mode_poll_view3d)
. = ALIGN(0x1000);
*(.text.sculpt_poll_view3d)
. = ALIGN(0x1000);
*(.text.sculpt_poll)
. = ALIGN(0x1000);
*(.text.sculpt_raycast_cb .text.BKE_pbvh_node_raycast .text.pbvh_bmesh_node_raycast)
. = ALIGN(0x1000);
*(.text.sculpt_sample_detail_size_invoke)
. = ALIGN(0x1000);
*(.text.sculpt_sample_detail_size_exec)
. = ALIGN(0x1000);
*(.text.sculpt_sample_detail_size_modal)
. = ALIGN(0x1000);
*(.text.sample_detail)
. = ALIGN(0x1000);
*(.text.sculpt_and_dynamic_topology_constant_detail_poll)
. = ALIGN(0x1000);
*(.text.sculpt_raycast_detail_cb .text.BKE_pbvh_bmesh_node_raycast_detail)
. = ALIGN(0x1000);
*(.text.sculpt_detail_flood_fill_exec)
. = ALIGN(0x1000);
*(.text.sculpt_symmetrize_exec)
. = ALIGN(0x1000);
*(.text.sculpt_and_dynamic_topology_poll)
. = ALIGN(0x1000);
*(.text.sculpt_optimize_exec)
. = ALIGN(0x1000);
*(.text.sculpt_dynamic_topology_toggle_invoke)
. = ALIGN(0x1000);
*(.text.sculpt_set_persistent_base_exec)
. = ALIGN(0x1000);
*(.text.sculpt_mode_toggle_exec)
. = ALIGN(0x1000);
*(.text.sculpt_dynamic_topology_enable .text.sculpt_dynamic_topology_toggle_exec)
. = ALIGN(0x1000);
*(.text.ED_object_mode_compat_set)
. = ALIGN(0x1000);
*(.text.sculpt_brush_stroke_invoke)
. = ALIGN(0x1000);
*(.text.sculpt_brush_stroke_exec)
. = ALIGN(0x1000);
*(.text.paint_stroke_new)
. = ALIGN(0x1000);
*(.text.sculpt_brush_stroke_init .text.BKE_brush_gen_texture_cache)
. = ALIGN(0x1000);
*(.text.paint_stroke_exec)
. = ALIGN(0x1000);
*(.text.sculpt_brush_stroke_cancel)
. = ALIGN(0x1000);
*(.text.stroke_done)
. = ALIGN(0x1000);
*(.text.sculpt_stroke_test_start)
. = ALIGN(0x1000);
*(.text.sculpt_stroke_get_location)
. = ALIGN(0x1000);
*(.text.sculpt_raycast_init .text.BKE_pbvh_raycast .text.traverse_tree .text.free_tree .text.BKE_pbvh_raycast_project_ray_root)
. = ALIGN(0x1000);
*(.text.paint_convert_bb_to_rect .text.sculpt_stroke_update_step .text.do_symmetrical_brush_actions .text.sculpt_flush_pbvhvert_deform .text.calc_brushdata_symm)
. = ALIGN(0x1000);
*(.text.paint_mesh_restore_co)
. = ALIGN(0x1000);
*(.text.sculpt_stroke_done)
. = ALIGN(0x1000);
*(.text.sculpt_topology_update .text.BKE_pbvh_bmesh_node_save_orig)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_bmesh_update_topology .text.pbvh_bmesh_vert_remove .text.pbvh_bmesh_face_remove .text.long_edge_queue_face_add)
. = ALIGN(0x1000);
*(.text.do_brush_action .text.calc_area_normal .text.tex_strength .text.smooth .text.do_crease_brush .text.calc_sculpt_plane)
. = ALIGN(0x1000);
*(.text.sculpt_undo_push_node .text.BM_log_entry_add .text.BM_log_vert_before_modified .text.BM_log_vert_added .text.BM_log_face_modified .text.BM_log_face_added .text.BM_log_vert_removed .text.BM_log_face_removed .text.BM_log_all_added .text.BM_log_before_all_removed)
. = ALIGN(0x1000);
*(.text.BKE_brush_sample_tex_3D)
. = ALIGN(0x1000);
*(.text.sculpt_search_sphere_cb)
. = ALIGN(0x1000);
*(.text.sculpt_undo_restore .text.BM_log_from_existing_entries_create .text.BM_log_undo .text.bm_log_faces_unmake .text.bm_log_verts_unmake .text.bm_log_verts_restore .text.bm_log_faces_restore .text.bm_log_vert_values_swap .text.BM_log_redo)
. = ALIGN(0x1000);
*(.text._ZN9RangeTreeIjE4takeEj)
. = ALIGN(0x1000);
*(.text.BLI_ghash_reinsert)
. = ALIGN(0x1000);
*(.text.sculpt_vertcos_to_key .text.BKE_key_convert_from_vertcos .text.BKE_key_convert_from_offset)
. = ALIGN(0x1000);
*(.text.sculpt_dyntopo_node_layers_add .text.sculpt_dynamic_topology_disable .text.BM_log_create .text.range_tree_uint_alloc)
. = ALIGN(0x1000);
*(.text.BKE_sculpt_multires_active)
. = ALIGN(0x1000);
*(.text.sculpt_undo_free .text.BM_log_entry_drop)
. = ALIGN(0x1000);
*(.text._ZN9RangeTreeIjE7releaseEj)
. = ALIGN(0x1000);
*(.text.sculpt_undo_cleanup .text.BM_log_cleanup_entry)
. = ALIGN(0x1000);
*(.text._ZN9RangeTreeIjE6retakeEj)
. = ALIGN(0x1000);
*(.text.brush_drawcursor_uvsculpt)
. = ALIGN(0x1000);
*(.text.uv_sculpt_poll)
. = ALIGN(0x1000);
*(.text.uv_sculpt_brush_poll)
. = ALIGN(0x1000);
*(.text.uv_sculpt_stroke_invoke)
. = ALIGN(0x1000);
*(.text.uv_sculpt_stroke_modal)
. = ALIGN(0x1000);
*(.text.uv_sculpt_stroke_apply)
. = ALIGN(0x1000);
*(.text.uv_edge_hash.17001)
. = ALIGN(0x1000);
*(.text.uv_edge_compare.17002)
. = ALIGN(0x1000);
*(.text.SOUND_OT_open)
. = ALIGN(0x1000);
*(.text.SOUND_OT_open_mono)
. = ALIGN(0x1000);
*(.text.SOUND_OT_unpack)
. = ALIGN(0x1000);
*(.text.sound_bake_animation_exec)
. = ALIGN(0x1000);
*(.text.sound_update_animation_flags_exec)
. = ALIGN(0x1000);
*(.text.sound_unpack_invoke)
. = ALIGN(0x1000);
*(.text.unpackSound)
. = ALIGN(0x1000);
*(.text.sound_unpack_exec)
. = ALIGN(0x1000);
*(.text.checkPackedFile .text.unpack_menu)
. = ALIGN(0x1000);
*(.text.sound_poll)
. = ALIGN(0x1000);
*(.text.sound_pack_exec)
. = ALIGN(0x1000);
*(.text.sound_mixdown_exec)
. = ALIGN(0x1000);
*(.text.sound_mixdown_invoke)
. = ALIGN(0x1000);
*(.text.sound_open_exec)
. = ALIGN(0x1000);
*(.text.sound_open_invoke)
. = ALIGN(0x1000);
*(.text.sound_open_cancel)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_color)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_backdrop)
. = ALIGN(0x1000);
*(.text.nla_action_get_color)
. = ALIGN(0x1000);
*(.text.glColor4f)
. = ALIGN(0x1000);
*(.text.acf_generic_indention_flexible)
. = ALIGN(0x1000);
*(.text.acf_generic_group_offset)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_name)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_name_prop)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_icon)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_nlaaction_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_nlatrack_color)
. = ALIGN(0x1000);
*(.text.UV_OT_select)
. = ALIGN(0x1000);
*(.text.UV_OT_select_loop)
. = ALIGN(0x1000);
*(.text.UV_OT_select_linked_pick)
. = ALIGN(0x1000);
*(.text.UV_OT_select_lasso)
. = ALIGN(0x1000);
*(.text.UV_OT_circle_select)
. = ALIGN(0x1000);
*(.text.UV_OT_seams_from_islands)
. = ALIGN(0x1000);
*(.text.UV_OT_remove_doubles)
. = ALIGN(0x1000);
*(.text.set_tile_invoke)
. = ALIGN(0x1000);
*(.text.RNA_int_get_array)
. = ALIGN(0x1000);
*(.text.set_tile_exec)
. = ALIGN(0x1000);
*(.text.RNA_int_set_array)
. = ALIGN(0x1000);
*(.text.uv_set_2d_cursor_exec)
. = ALIGN(0x1000);
*(.text.uv_set_2d_cursor_invoke)
. = ALIGN(0x1000);
*(.text.uv_set_2d_cursor_poll)
. = ALIGN(0x1000);
*(.text.uv_hide_exec)
. = ALIGN(0x1000);
*(.text.uv_reveal_exec)
. = ALIGN(0x1000);
*(.text.uv_pin_exec)
. = ALIGN(0x1000);
*(.text.uv_remove_doubles_exec)
. = ALIGN(0x1000);
*(.text.uv_weld_exec)
. = ALIGN(0x1000);
*(.text.uv_mark_seam_exec)
. = ALIGN(0x1000);
*(.text.uv_seams_from_islands_exec)
. = ALIGN(0x1000);
*(.text.uv_align_exec)
. = ALIGN(0x1000);
*(.text.uv_weld_align .text.uv_sel_co_from_eve)
. = ALIGN(0x1000);
*(.text.uv_snap_selection_exec)
. = ALIGN(0x1000);
*(.text.uv_snap_cursor_exec)
. = ALIGN(0x1000);
*(.text.ED_uvedit_minmax)
. = ALIGN(0x1000);
*(.text.uvedit_center.8279)
. = ALIGN(0x1000);
*(.text.uv_select_less_exec)
. = ALIGN(0x1000);
*(.text.uv_select_more_exec)
. = ALIGN(0x1000);
*(.text.uv_select_more_less)
. = ALIGN(0x1000);
*(.text.uv_circle_select_exec)
. = ALIGN(0x1000);
*(.text.uv_lasso_select_exec)
. = ALIGN(0x1000);
*(.text.uv_border_select_exec)
. = ALIGN(0x1000);
*(.text.uv_select_flush_from_tag_face .text.uv_select_flush_from_tag_sticky_loc_internal)
. = ALIGN(0x1000);
*(.text.uv_select_pinned_exec)
. = ALIGN(0x1000);
*(.text.uv_select_split_exec)
. = ALIGN(0x1000);
*(.text.uv_select_linked_pick_invoke)
. = ALIGN(0x1000);
*(.text.uv_select_linked_pick_exec)
. = ALIGN(0x1000);
*(.text.uv_select_linked_exec)
. = ALIGN(0x1000);
*(.text.uv_select_linked_internal)
. = ALIGN(0x1000);
*(.text.uv_select_loop_exec)
. = ALIGN(0x1000);
*(.text.uv_select_loop_invoke)
. = ALIGN(0x1000);
*(.text.uv_select_exec)
. = ALIGN(0x1000);
*(.text.uv_select_invoke)
. = ALIGN(0x1000);
*(.text.uvedit_edge_select_enable)
. = ALIGN(0x1000);
*(.text.uvedit_edge_select_disable)
. = ALIGN(0x1000);
*(.text.uvedit_face_select_set .text.uvedit_uv_select_set)
. = ALIGN(0x1000);
*(.text.uv_select_linked)
. = ALIGN(0x1000);
*(.text.BM_uv_vert_map_create)
. = ALIGN(0x1000);
*(.text.uv_mouse_select)
. = ALIGN(0x1000);
*(.text.uv_select_all_exec)
. = ALIGN(0x1000);
*(.text.uv_select_all_perform)
. = ALIGN(0x1000);
*(.text.ED_operator_uvedit_can_uv_sculpt)
. = ALIGN(0x1000);
*(.text.UV_OT_stitch)
. = ALIGN(0x1000);
*(.text.stitch_invoke)
. = ALIGN(0x1000);
*(.text.stitch_modal .text.stitch_select)
. = ALIGN(0x1000);
*(.text.uv_find_nearest_edge)
. = ALIGN(0x1000);
*(.text.uv_find_nearest_vert)
. = ALIGN(0x1000);
*(.text.stitch_exec)
. = ALIGN(0x1000);
*(.text.stitch_process_data .text.stitch_check_edges_stitchable .text.stitch_island_calculate_edge_rotation .text.stitch_propagate_uv_final_position .text.stitch_switch_selection_mode)
. = ALIGN(0x1000);
*(.text.RNA_collection_clear)
. = ALIGN(0x1000);
*(.text.stitch_init)
. = ALIGN(0x1000);
*(.text.stitch_cancel)
. = ALIGN(0x1000);
*(.text.stitch_exit)
. = ALIGN(0x1000);
*(.text.state_delete)
. = ALIGN(0x1000);
*(.text.uv_edge_hash)
. = ALIGN(0x1000);
*(.text.uv_edge_compare)
. = ALIGN(0x1000);
*(.text.stitch_draw)
. = ALIGN(0x1000);
*(.text.UI_GetThemeValuef)
. = ALIGN(0x1000);
*(.text.glPushClientAttrib)
. = ALIGN(0x1000);
*(.text.UV_OT_minimize_stretch)
. = ALIGN(0x1000);
*(.text.minimize_stretch_exec)
. = ALIGN(0x1000);
*(.text.minimize_stretch_invoke)
. = ALIGN(0x1000);
*(.text.minimize_stretch_init)
. = ALIGN(0x1000);
*(.text.minimize_stretch_modal)
. = ALIGN(0x1000);
*(.text.minimize_stretch_iteration)
. = ALIGN(0x1000);
*(.text.minimize_stretch_cancel)
. = ALIGN(0x1000);
*(.text.minimize_stretch_exit)
. = ALIGN(0x1000);
*(.text.UV_OT_pack_islands)
. = ALIGN(0x1000);
*(.text.pack_islands_exec)
. = ALIGN(0x1000);
*(.text.average_islands_scale_exec)
. = ALIGN(0x1000);
*(.text.UV_OT_unwrap)
. = ALIGN(0x1000);
*(.text.RNA_def_float_factor)
. = ALIGN(0x1000);
*(.text.unwrap_exec)
. = ALIGN(0x1000);
*(.text.uvedit_have_selection)
. = ALIGN(0x1000);
*(.text.UV_OT_project_from_view)
. = ALIGN(0x1000);
*(.text.uv_from_view_invoke)
. = ALIGN(0x1000);
*(.text.uv_from_view_exec .text.BLI_uvproject_from_view)
. = ALIGN(0x1000);
*(.text.uv_from_view_poll)
. = ALIGN(0x1000);
*(.text.reset_exec .text.ED_mesh_uv_loop_reset)
. = ALIGN(0x1000);
*(.text.UV_OT_sphere_project)
. = ALIGN(0x1000);
*(.text.sphere_project_exec)
. = ALIGN(0x1000);
*(.text.UV_OT_cylinder_project)
. = ALIGN(0x1000);
*(.text.cylinder_project_exec)
. = ALIGN(0x1000);
*(.text.uv_map_transform .text.uv_map_mirror)
. = ALIGN(0x1000);
*(.text.UV_OT_cube_project)
. = ALIGN(0x1000);
*(.text.cube_project_exec)
. = ALIGN(0x1000);
*(.text.ED_uvedit_ensure_uvs)
. = ALIGN(0x1000);
*(.text.uv_map_clip_correct)
. = ALIGN(0x1000);
*(.text.separate_exec)
. = ALIGN(0x1000);
*(.text.curve_split_exec)
. = ALIGN(0x1000);
*(.text.switch_direction_exec)
. = ALIGN(0x1000);
*(.text.set_goal_weight_exec)
. = ALIGN(0x1000);
*(.text.set_radius_exec)
. = ALIGN(0x1000);
*(.text.smooth_exec)
. = ALIGN(0x1000);
*(.text.curve_smooth_weight_exec)
. = ALIGN(0x1000);
*(.text.curve_smooth_radius_exec)
. = ALIGN(0x1000);
*(.text.curve_smooth_tilt_exec)
. = ALIGN(0x1000);
*(.text.curve_smooth_value)
. = ALIGN(0x1000);
*(.text.de_select_first_exec)
. = ALIGN(0x1000);
*(.text.de_select_last_exec)
. = ALIGN(0x1000);
*(.text.selectend_nurb)
. = ALIGN(0x1000);
*(.text.ED_curve_select_swap .text.de_select_all_exec)
. = ALIGN(0x1000);
*(.text.hide_exec)
. = ALIGN(0x1000);
*(.text.reveal_exec)
. = ALIGN(0x1000);
*(.text.CURVE_OT_subdivide)
. = ALIGN(0x1000);
*(.text.subdivide_exec)
. = ALIGN(0x1000);
*(.text.CURVE_OT_spline_type_set)
. = ALIGN(0x1000);
*(.text.set_spline_type_exec)
. = ALIGN(0x1000);
*(.text.set_handle_type_exec .text.BKE_nurbList_handles_set)
. = ALIGN(0x1000);
*(.text.curve_normals_make_consistent_exec .text.BKE_nurbList_handles_recalculate)
. = ALIGN(0x1000);
*(.text.make_segment_exec .text.rotate_direction_nurb)
. = ALIGN(0x1000);
*(.text.keyData_switchDirectionNurb .text.BKE_nurb_direction_switch)
. = ALIGN(0x1000);
*(.text.findnearestNurbvert__doClosest)
. = ALIGN(0x1000);
*(.text.CURVE_OT_spin)
. = ALIGN(0x1000);
*(.text.spin_invoke)
. = ALIGN(0x1000);
*(.text.spin_exec)
. = ALIGN(0x1000);
*(.text.add_vertex_exec)
. = ALIGN(0x1000);
*(.text.add_vertex_invoke)
. = ALIGN(0x1000);
*(.text.extrude_exec)
. = ALIGN(0x1000);
*(.text.addvert_Nurb)
. = ALIGN(0x1000);
*(.text.toggle_cyclic_invoke)
. = ALIGN(0x1000);
*(.text.toggle_cyclic_exec)
. = ALIGN(0x1000);
*(.text.select_linked_invoke)
. = ALIGN(0x1000);
*(.text.select_linked_exec)
. = ALIGN(0x1000);
*(.text.select_linked_pick_invoke)
. = ALIGN(0x1000);
*(.text.nurbs_foreachScreenVert)
. = ALIGN(0x1000);
*(.text.select_row_exec)
. = ALIGN(0x1000);
*(.text.select_next_exec)
. = ALIGN(0x1000);
*(.text.select_previous_exec)
. = ALIGN(0x1000);
*(.text.select_more_exec)
. = ALIGN(0x1000);
*(.text.select_adjacent_cp)
. = ALIGN(0x1000);
*(.text.select_less_exec)
. = ALIGN(0x1000);
*(.text.CURVE_OT_select_random)
. = ALIGN(0x1000);
*(.text.curve_select_random_exec)
. = ALIGN(0x1000);
*(.text.ED_curve_select_nth .text.select_nth_exec)
. = ALIGN(0x1000);
*(.text.duplicate_exec)
. = ALIGN(0x1000);
*(.text.adduplicateflagNurb)
. = ALIGN(0x1000);
*(.text.curve_delete_exec)
. = ALIGN(0x1000);
*(.text.curve_delete_segments)
. = ALIGN(0x1000);
*(.text.rna_curve_delete_type_itemf)
. = ALIGN(0x1000);
*(.text.shade_smooth_exec)
. = ALIGN(0x1000);
*(.text.clear_tilt_exec)
. = ALIGN(0x1000);
*(.text.get_data)
. = ALIGN(0x1000);
*(.text.free_undoCurve)
. = ALIGN(0x1000);
*(.text.undoCurve_to_editCurve)
. = ALIGN(0x1000);
*(.text.editCurve_to_undoCurve)
. = ALIGN(0x1000);
*(.text.keyIndex_updateNurb)
. = ALIGN(0x1000);
*(.text.match_texture_space_exec)
. = ALIGN(0x1000);
*(.text.match_texture_space_poll)
. = ALIGN(0x1000);
*(.text.add_primitive_bezier_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_bezier_circle_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_curve_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_circle_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_curve_path_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_surface_curve_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_surface_circle_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_surface_surface_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_surface_cylinder_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_surface_sphere_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_nurbs_surface_torus_exec)
. = ALIGN(0x1000);
*(.text.curvesurf_prim_add)
. = ALIGN(0x1000);
*(.text.insert_lorem_exec)
. = ALIGN(0x1000);
*(.text.paste_from_file_invoke)
. = ALIGN(0x1000);
*(.text.paste_from_file_exec)
. = ALIGN(0x1000);
*(.text.paste_from_clipboard_exec)
. = ALIGN(0x1000);
*(.text.FONT_OT_style_set)
. = ALIGN(0x1000);
*(.text.set_style_exec)
. = ALIGN(0x1000);
*(.text.toggle_style_exec)
. = ALIGN(0x1000);
*(.text.set_style)
. = ALIGN(0x1000);
*(.text.font_select_all_exec)
. = ALIGN(0x1000);
*(.text.copy_text_exec)
. = ALIGN(0x1000);
*(.text.cut_text_exec)
. = ALIGN(0x1000);
*(.text.paste_text_exec)
. = ALIGN(0x1000);
*(.text.font_paste_wchar)
. = ALIGN(0x1000);
*(.text.move_exec)
. = ALIGN(0x1000);
*(.text.move_select_exec)
. = ALIGN(0x1000);
*(.text.move_cursor)
. = ALIGN(0x1000);
*(.text.change_spacing_exec)
. = ALIGN(0x1000);
*(.text.change_character_exec)
. = ALIGN(0x1000);
*(.text.line_break_exec)
. = ALIGN(0x1000);
*(.text.delete_exec)
. = ALIGN(0x1000);
*(.text.FONT_OT_text_insert)
. = ALIGN(0x1000);
*(.text.insert_text_invoke)
. = ALIGN(0x1000);
*(.text.RNA_string_get_alloc)
. = ALIGN(0x1000);
*(.text.insert_text_exec)
. = ALIGN(0x1000);
*(.text.textbox_add_exec)
. = ALIGN(0x1000);
*(.text.textbox_remove_exec)
. = ALIGN(0x1000);
*(.text.set_case_exec)
. = ALIGN(0x1000);
*(.text.toggle_case_exec)
. = ALIGN(0x1000);
*(.text.set_case)
. = ALIGN(0x1000);
*(.text.open_invoke.9197)
. = ALIGN(0x1000);
*(.text.font_open_exec)
. = ALIGN(0x1000);
*(.text.font_open_cancel)
. = ALIGN(0x1000);
*(.text.font_unlink_exec)
. = ALIGN(0x1000);
*(.text.get_undoFont)
. = ALIGN(0x1000);
*(.text.free_undoFont)
. = ALIGN(0x1000);
*(.text.undoFont_to_editFont)
. = ALIGN(0x1000);
*(.text.editFont_to_undoFont)
. = ALIGN(0x1000);
*(.text.ED_gpencil_panel_standard_header)
. = ALIGN(0x1000);
*(.text.ED_gpencil_panel_standard)
. = ALIGN(0x1000);
*(.text.gp_ui_activelayer_cb)
. = ALIGN(0x1000);
*(.text.gp_ui_dellayer_cb)
. = ALIGN(0x1000);
*(.text.gp_ui_layer_up_cb)
. = ALIGN(0x1000);
*(.text.gp_ui_layer_down_cb)
. = ALIGN(0x1000);
*(.text.gp_data_add_exec)
. = ALIGN(0x1000);
*(.text.gp_add_poll)
. = ALIGN(0x1000);
*(.text.gp_data_unlink_exec)
. = ALIGN(0x1000);
*(.text.gp_data_unlink_poll)
. = ALIGN(0x1000);
*(.text.gp_layer_add_exec)
. = ALIGN(0x1000);
*(.text.gp_actframe_delete_exec)
. = ALIGN(0x1000);
*(.text.gp_actframe_delete_poll)
. = ALIGN(0x1000);
*(.text.GPENCIL_OT_convert)
. = ALIGN(0x1000);
*(.text.gp_convert_layer_exec .text.gp_strokepoint_convertcoords)
. = ALIGN(0x1000);
*(.text.gp_convert_poll)
. = ALIGN(0x1000);
*(.text.gp_convert_ui)
. = ALIGN(0x1000);
*(.text.rna_GPConvert_mode_items)
. = ALIGN(0x1000);
*(.text.gp_convert_set_end_frame)
. = ALIGN(0x1000);
*(.text.gp_convert_draw_check_prop)
. = ALIGN(0x1000);
*(.text.GPENCIL_OT_draw)
. = ALIGN(0x1000);
*(.text.gpencil_draw_exec)
. = ALIGN(0x1000);
*(.text.gpencil_draw_invoke)
. = ALIGN(0x1000);
*(.text.gpencil_draw_modal .text.gpencil_undo_push)
. = ALIGN(0x1000);
*(.text.RNA_collection_add)
. = ALIGN(0x1000);
*(.text.IDP_ResizeIDPArray)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_add .text.IDP_NewIDPArray)
. = ALIGN(0x1000);
*(.text.gp_session_initdata .text.gp_paint_initstroke .text.gpencil_draw_apply .text.gp_point_to_xy .text.gpencil_undo_init .text.gpencil_data_duplicate)
. = ALIGN(0x1000);
*(.text.gpencil_layer_getframe)
. = ALIGN(0x1000);
*(.text.ED_view3d_calc_camera_border)
. = ALIGN(0x1000);
*(.text.gpencil_draw_apply_event)
. = ALIGN(0x1000);
*(.text.gpencil_draw_cancel)
. = ALIGN(0x1000);
*(.text.ED_view3d_draw_depth)
. = ALIGN(0x1000);
*(.text.ED_view3d_draw_depth_gpencil)
. = ALIGN(0x1000);
*(.text.plot_line_v2v2i)
. = ALIGN(0x1000);
*(.text.view3d_update_depths_rect)
. = ALIGN(0x1000);
*(.text.ED_view3d_autodist_simple .text.ED_view3d_autodist_depth .text.gpencil_draw_exit .text.gp_paint_strokeend .text.gp_stroke_addpoint .text.gp_stroke_convertcoords .text.interp_sparse_array)
. = ALIGN(0x1000);
*(.text.gpencil_draw_poll)
. = ALIGN(0x1000);
*(.text.gpencil_draw_eraser)
. = ALIGN(0x1000);
*(.text.ui_def_but_rna__menu)
. = ALIGN(0x1000);
*(.text.operator_enum_search_cb)
. = ALIGN(0x1000);
*(.text.do_strand_fillac)
. = ALIGN(0x1000);
*(.text.compare_strand_segment)
. = ALIGN(0x1000);
*(.text.vol_precache_part)
. = ALIGN(0x1000);
*(.text.projectverto)
. = ALIGN(0x1000);
*(.text.zbuffillGL4)
. = ALIGN(0x1000);
*(.text.zbuffillGLinv4)
. = ALIGN(0x1000);
*(.text.zbufline)
. = ALIGN(0x1000);
*(.text.zbufline_onlyZ)
. = ALIGN(0x1000);
*(.text.zbuffillGL_onlyZ)
. = ALIGN(0x1000);
*(.text.zbuffill_sss)
. = ALIGN(0x1000);
*(.text.zbuffillAc4)
. = ALIGN(0x1000);
*(.text.zbuflineAc)
. = ALIGN(0x1000);
*(.text.vergzvlak)
. = ALIGN(0x1000);
*(.text.copyData)
. = ALIGN(0x1000);
*(.text.deformVerts)
. = ALIGN(0x1000);
*(.text.deformMatrices)
. = ALIGN(0x1000);
*(.text.deformVertsEM)
. = ALIGN(0x1000);
*(.text.deformMatricesEM)
. = ALIGN(0x1000);
*(.text.armature_deform_verts .text.dist_bone_deform .text._va_mul_m3_series_5 .text._va_mul_m4_series_6 .text.orthogonalize_m4 .text.mat4_to_dquat .text.add_weighted_dq_dq .text.mul_v3m3_dq)
. = ALIGN(0x1000);
*(.text.initData)
. = ALIGN(0x1000);
*(.text.requiredDataMask)
. = ALIGN(0x1000);
*(.text.isDisabled)
. = ALIGN(0x1000);
*(.text.updateDepgraph)
. = ALIGN(0x1000);
*(.text.foreachObjectLink)
. = ALIGN(0x1000);
*(.text.copyData.19195)
. = ALIGN(0x1000);
*(.text.applyModifier .text.dm_mvert_map_doubles .text.dm_merge_transform)
. = ALIGN(0x1000);
*(.text.initData.19196)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19197)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19198)
. = ALIGN(0x1000);
*(.text.svert_sum_cmp)
. = ALIGN(0x1000);
*(.text.copyData.19201)
. = ALIGN(0x1000);
*(.text.applyModifier.19202)
. = ALIGN(0x1000);
*(.text.initData.19203)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19204)
. = ALIGN(0x1000);
*(.text.dependsOnNormals)
. = ALIGN(0x1000);
*(.text.copyData.19205)
. = ALIGN(0x1000);
*(.text.applyModifier.19206)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19207)
. = ALIGN(0x1000);
*(.text.isDisabled.19208)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19209)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19210)
. = ALIGN(0x1000);
*(.text.copyData.19212)
. = ALIGN(0x1000);
*(.text.applyModifier.19213)
. = ALIGN(0x1000);
*(.text.initData.19214)
. = ALIGN(0x1000);
*(.text.dependsOnTime)
. = ALIGN(0x1000);
*(.text.copyData.19220)
. = ALIGN(0x1000);
*(.text.deformVerts.19221)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19222)
. = ALIGN(0x1000);
*(.text.cuboid_do .text.sphere_do)
. = ALIGN(0x1000);
*(.text.initData.19223)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19224)
. = ALIGN(0x1000);
*(.text.isDisabled.19225)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19226)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19227)
. = ALIGN(0x1000);
*(.text.copyData.19229)
. = ALIGN(0x1000);
*(.text.deformVerts.19230)
. = ALIGN(0x1000);
*(.text.initData.19231)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19232)
. = ALIGN(0x1000);
*(.text.freeData .text.cloth_free_modifier_extern)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19233)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19234)
. = ALIGN(0x1000);
*(.text.foreachIDLink)
. = ALIGN(0x1000);
*(.text.deformVerts.19239 .text.bvhtree_build_from_mvert)
. = ALIGN(0x1000);
*(.text.initData.19240)
. = ALIGN(0x1000);
*(.text.freeData.19241)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19242)
. = ALIGN(0x1000);
*(.text.copyData.19245)
. = ALIGN(0x1000);
*(.text.deformVerts.19246)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19247)
. = ALIGN(0x1000);
*(.text.calc_curve_deform)
. = ALIGN(0x1000);
*(.text.curve_deform_verts)
. = ALIGN(0x1000);
*(.text.initData.19248)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19249)
. = ALIGN(0x1000);
*(.text.isDisabled.19250)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19251)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19252)
. = ALIGN(0x1000);
*(.text.copyData.19254)
. = ALIGN(0x1000);
*(.text.applyModifier.19255 .text.BM_edge_splice .text.BM_mesh_decimate_collapse .text.bm_decim_build_edge_cost_single .text.bm_edge_collapse_loop_customdata .text.BM_mesh_decimate_dissolve)
. = ALIGN(0x1000);
*(.text.initData.19256)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19257)
. = ALIGN(0x1000);
*(.text.copyData.19259)
. = ALIGN(0x1000);
*(.text.deformVerts.19260)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19261)
. = ALIGN(0x1000);
*(.text.displaceModifier_do)
. = ALIGN(0x1000);
*(.text.initData.19262)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19263)
. = ALIGN(0x1000);
*(.text.freeData.19264)
. = ALIGN(0x1000);
*(.text.isDisabled.19265)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19266)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19267)
. = ALIGN(0x1000);
*(.text.dependsOnNormals.19268)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19269)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19270)
. = ALIGN(0x1000);
*(.text.foreachTexLink)
. = ALIGN(0x1000);
*(.text.copyData.19274 .text.dynamicPaint_Modifier_copy)
. = ALIGN(0x1000);
*(.text.dynamicPaint_createNewSurface)
. = ALIGN(0x1000);
*(.text.dynamicPaint_createType)
. = ALIGN(0x1000);
*(.text.applyModifier.19275 .text.dynamicPaint_Modifier_do)
. = ALIGN(0x1000);
*(.text.localize_texture .text.localize_material)
. = ALIGN(0x1000);
*(.text.RE_init_sample_material .text.RE_sample_material_color .text.dynamicPaint_calculateFrame .text.dynamicPaint_applySurfaceDisplace .text.dynamicPaint_prepareAdjacencyData .text.dynamicPaint_doStep .text.subframe_updateObject .text.dynamicPaint_updatePointData .text.surface_determineForceTargetPoints)
. = ALIGN(0x1000);
*(.text.initData.19276)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19277)
. = ALIGN(0x1000);
*(.text.freeData.19278 .text.dynamicPaint_Modifier_free)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19279)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19280)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19281)
. = ALIGN(0x1000);
*(.text.foreachTexLink.19282)
. = ALIGN(0x1000);
*(.text.copyData.19284)
. = ALIGN(0x1000);
*(.text.applyModifier.19285)
. = ALIGN(0x1000);
*(.text.initData.19286)
. = ALIGN(0x1000);
*(.text.copyData.19287)
. = ALIGN(0x1000);
*(.text.applyModifier.19288 .text.explodeMesh .text.CDDM_calc_edges_tessface)
. = ALIGN(0x1000);
*(.text.initData.19289)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19290)
. = ALIGN(0x1000);
*(.text.freeData.19291)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19292)
. = ALIGN(0x1000);
*(.text.copyData.19297)
. = ALIGN(0x1000);
*(.text.applyModifier.19298)
. = ALIGN(0x1000);
*(.text.initData.19299)
. = ALIGN(0x1000);
*(.text.freeData.19300)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19301)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19302)
. = ALIGN(0x1000);
*(.text.copyData.19310)
. = ALIGN(0x1000);
*(.text.deformVerts.19311)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19312)
. = ALIGN(0x1000);
*(.text.deformVerts_do)
. = ALIGN(0x1000);
*(.text.initData.19313)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19314)
. = ALIGN(0x1000);
*(.text.freeData.19315)
. = ALIGN(0x1000);
*(.text.isDisabled.19316)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19317)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19318)
. = ALIGN(0x1000);
*(.text.copyData.19320)
. = ALIGN(0x1000);
*(.text.deformVerts.19321)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19322)
. = ALIGN(0x1000);
*(.text.initData.19323)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19324)
. = ALIGN(0x1000);
*(.text.freeData.19325)
. = ALIGN(0x1000);
*(.text.isDisabled.19326)
. = ALIGN(0x1000);
*(.text.copy_data)
. = ALIGN(0x1000);
*(.text.deformVerts.19327)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19328)
. = ALIGN(0x1000);
*(.text.init_data)
. = ALIGN(0x1000);
*(.text.required_data_mask)
. = ALIGN(0x1000);
*(.text.is_disabled)
. = ALIGN(0x1000);
*(.text.copyData.19329)
. = ALIGN(0x1000);
*(.text.deformVerts.19330)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19331)
. = ALIGN(0x1000);
*(.text.lattice_deform_verts)
. = ALIGN(0x1000);
*(.text.initData.19332)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19333)
. = ALIGN(0x1000);
*(.text.isDisabled.19334)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19335)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19336)
. = ALIGN(0x1000);
*(.text.copyData.19338)
. = ALIGN(0x1000);
*(.text.applyModifier.19339)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19340)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19341)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19342)
. = ALIGN(0x1000);
*(.text.copyData.19350)
. = ALIGN(0x1000);
*(.text.deformVerts.19351)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19352)
. = ALIGN(0x1000);
*(.text.meshcache_do .text.MOD_meshcache_read_mdd_index .text.MOD_meshcache_read_mdd_frame .text.MOD_meshcache_read_mdd_times .text.MOD_meshcache_read_pc2_index .text.MOD_meshcache_read_pc2_frame .text.MOD_meshcache_read_pc2_times .text.BKE_mesh_calc_relative_deform .text.mat3_from_axis_conversion)
. = ALIGN(0x1000);
*(.text.initData.19353)
. = ALIGN(0x1000);
*(.text.isDisabled.19354)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19355)
. = ALIGN(0x1000);
*(.text.copyData.19381)
. = ALIGN(0x1000);
*(.text.deformVerts.19382)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19383)
. = ALIGN(0x1000);
*(.text.BLI_task_parallel_range_ex)
. = ALIGN(0x1000);
*(.text.meshdeformModifier_do)
. = ALIGN(0x1000);
*(.text.initData.19384)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19385)
. = ALIGN(0x1000);
*(.text.freeData.19386)
. = ALIGN(0x1000);
*(.text.isDisabled.19387)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19388)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19389)
. = ALIGN(0x1000);
*(.text.meshdeform_vert_task)
. = ALIGN(0x1000);
*(.text.copyData.19401)
. = ALIGN(0x1000);
*(.text.applyModifier.19402 .text.doMirrorOnAxis)
. = ALIGN(0x1000);
*(.text.CDDM_merge_verts)
. = ALIGN(0x1000);
*(.text.initData.19403)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19404)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19405)
. = ALIGN(0x1000);
*(.text.ui_handler_popup)
. = ALIGN(0x1000);
*(.text.BLI_rctf_isect_segment)
. = ALIGN(0x1000);
*(.text.ui_handle_button_event .text.ui_handle_button_over .text.ui_tooltip_create)
. = ALIGN(0x1000);
*(.text.uiButGetStrInfo .text.ui_do_button .text.ui_do_but_BUT .text.ui_do_but_EXIT .text.ui_numedit_but_SLI .text.ui_numedit_apply_snapf .text.ui_do_but_textedit .text.ui_do_but_textedit_select .text.ui_do_but_TEX .text.ui_but_mouse_inside_icon .text.ui_but_start_drag .text.ui_numedit_but_NORMAL .text.ui_numedit_but_HSVCUBE .text.ui_numedit_but_HSVCIRCLE .text.ui_numedit_but_TRACKPREVIEW .text.ui_textedit_set_cursor_pos .text.ui_textedit_copypaste .text.ui_textedit_move .text.ui_is_but_compatible .text.ui_step_name_menu .text.ui_searchbox_event .text.ui_searchbox_autocomplete .text.ui_set_but_hsv .text.ui_color_picker_to_rgb_v .text.RNA_property_path_from_ID_check)
. = ALIGN(0x1000);
*(.text.RNA_struct_contains_property)
. = ALIGN(0x1000);
*(.text.ui_rgb_to_color_picker_compat_v)
. = ALIGN(0x1000);
*(.text.ui_but_find_mouse_over_ex)
. = ALIGN(0x1000);
*(.text.WM_keymap_guess_opname)
. = ALIGN(0x1000);
*(.text.ui_handle_menus_recursive .text.ui_handle_button_return_submenu .text.ui_handle_menu_button .text.ui_but_pie_menu_apply .text.ui_menu_scroll)
. = ALIGN(0x1000);
*(.text.ui_handler_remove_popup)
. = ALIGN(0x1000);
*(.text.ui_apply_but_funcs_after)
. = ALIGN(0x1000);
*(.text.UI_icons_free_drawinfo)
. = ALIGN(0x1000);
*(.text.ui_layer_but_cb)
. = ALIGN(0x1000);
*(.text.ui_item_enum_expand_handle)
. = ALIGN(0x1000);
*(.text.rna_search_cb)
. = ALIGN(0x1000);
*(.text.ui_keymap_but_cb)
. = ALIGN(0x1000);
*(.text.ui_item_menutype_func)
. = ALIGN(0x1000);
*(.text.menu_item_enum_opname_menu)
. = ALIGN(0x1000);
*(.text.menu_item_enum_rna_menu)
. = ALIGN(0x1000);
*(.text.UI_drop_color_poll)
. = ALIGN(0x1000);
*(.text.UI_drop_color_copy)
. = ALIGN(0x1000);
*(.text.UI_OT_drop_color)
. = ALIGN(0x1000);
*(.text.RNA_def_float_color)
. = ALIGN(0x1000);
*(.text.reloadtranslation_exec)
. = ALIGN(0x1000);
*(.text.ED_imapaint_bucket_fill .text.drop_color_invoke)
. = ALIGN(0x1000);
*(.text.undo_stack_push_end)
. = ALIGN(0x1000);
*(.text.undo_stack_push_begin)
. = ALIGN(0x1000);
*(.text.gluScaleImage)
. = ALIGN(0x1000);
*(.text.imapaint_image_update .text.GPU_paint_update_image .text.GPU_check_scaled_image .text.IMB_partial_rect_from_float)
. = ALIGN(0x1000);
*(.text.IMB_blend_color_byte .text.IMB_blend_color_float)
. = ALIGN(0x1000);
*(.text.image_undo_push_tile)
. = ALIGN(0x1000);
*(.text.bilinear_interpolation_color_wrap)
. = ALIGN(0x1000);
*(.text.ED_imapaint_dirty_region)
. = ALIGN(0x1000);
*(.text.paint_2d_bucket_fill)
. = ALIGN(0x1000);
*(.text.reports_to_text_poll)
. = ALIGN(0x1000);
*(.text.reports_to_text_exec .text.BKE_reports_string)
. = ALIGN(0x1000);
*(.text.copy_to_selected_button_poll)
. = ALIGN(0x1000);
*(.text.copy_to_selected_button_exec)
. = ALIGN(0x1000);
*(.text.copy_to_selected_button .text.RNA_path_resolve_from_type_to_property .text.RNA_property_copy)
. = ALIGN(0x1000);
*(.text.unset_property_button_exec)
. = ALIGN(0x1000);
*(.text.reset_default_button_poll)
. = ALIGN(0x1000);
*(.text.reset_default_button_exec)
. = ALIGN(0x1000);
*(.text.copy_data_path_button_exec)
. = ALIGN(0x1000);
*(.text.copy_data_path_button_poll)
. = ALIGN(0x1000);
*(.text.reset_default_theme_exec .text.ui_theme_init_default)
. = ALIGN(0x1000);
*(.text.ui_theme_init_boneColorSets)
. = ALIGN(0x1000);
*(.text.find_highest_panel)
. = ALIGN(0x1000);
*(.text.find_leftmost_panel)
. = ALIGN(0x1000);
*(.text.compare_panel)
. = ALIGN(0x1000);
*(.text.ui_handler_panel .text.ui_do_drag)
. = ALIGN(0x1000);
*(.text.uiAlignPanelStep)
. = ALIGN(0x1000);
*(.text.ui_handler_remove_panel)
. = ALIGN(0x1000);
*(.text.panel_activate_state)
. = ALIGN(0x1000);
*(.text.ui_tooltip_region_draw_cb .text.ui_tooltip_get_theme)
. = ALIGN(0x1000);
*(.text.ui_tooltip_region_free_cb)
. = ALIGN(0x1000);
*(.text.ui_searchbox_region_draw_cb)
. = ALIGN(0x1000);
*(.text.wmOrtho2_region_ui)
. = ALIGN(0x1000);
*(.text.ui_searchbox_region_free_cb)
. = ALIGN(0x1000);
*(.text.ui_block_region_draw)
. = ALIGN(0x1000);
*(.text.uiDrawBlock)
. = ALIGN(0x1000);
*(.text.ui_block_func_COLOR)
. = ALIGN(0x1000);
*(.text.do_picker_rna_cb)
. = ALIGN(0x1000);
*(.text.do_picker_new_mode_cb)
. = ALIGN(0x1000);
*(.text.picker_new_hide_reveal)
. = ALIGN(0x1000);
*(.text.close_popup_cb)
. = ALIGN(0x1000);
*(.text.do_color_wheel_rna_cb)
. = ALIGN(0x1000);
*(.text.do_hex_rna_cb .text.hex_to_rgb)
. = ALIGN(0x1000);
*(.text.ui_picker_small_wheel_cb)
. = ALIGN(0x1000);
*(.text.ui_update_block_buts_rgb)
. = ALIGN(0x1000);
*(.text.ui_block_func_POPUP)
. = ALIGN(0x1000);
*(.text.button_activate_init)
. = ALIGN(0x1000);
*(.text.ui_block_func_PIE)
. = ALIGN(0x1000);
*(.text.id_search_menu)
. = ALIGN(0x1000);
*(.text.template_id_cb)
. = ALIGN(0x1000);
*(.text.id_single_user)
. = ALIGN(0x1000);
*(.text.id_search_cb)
. = ALIGN(0x1000);
*(.text.id_search_call_cb)
. = ALIGN(0x1000);
*(.text.modifiers_convertToReal)
. = ALIGN(0x1000);
*(.text.do_constraint_panels)
. = ALIGN(0x1000);
*(.text.constraint_active_func)
. = ALIGN(0x1000);
*(.text.do_preview_buttons)
. = ALIGN(0x1000);
*(.text.colorband_add_cb)
. = ALIGN(0x1000);
*(.text.colorband_element_add)
. = ALIGN(0x1000);
*(.text.colorband_del_cb)
. = ALIGN(0x1000);
*(.text.colorband_flip_cb)
. = ALIGN(0x1000);
*(.text.rna_update_cb.10258)
. = ALIGN(0x1000);
*(.text.colorband_update_cb)
. = ALIGN(0x1000);
*(.text.icon_view_menu)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_redraw)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_zoom_in)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_zoom_out)
. = ALIGN(0x1000);
*(.text.curvemap_tools_posslope_func)
. = ALIGN(0x1000);
*(.text.curvemap_tools_negslope_func)
. = ALIGN(0x1000);
*(.text.curvemap_brush_tools_func)
. = ALIGN(0x1000);
*(.text.curvemap_clipping_func)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_delete)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_update)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_reset)
. = ALIGN(0x1000);
*(.text.curvemap_buttons_setclip)
. = ALIGN(0x1000);
*(.text.curvemap_tools_dofunc)
. = ALIGN(0x1000);
*(.text.handle_layer_buttons)
. = ALIGN(0x1000);
*(.text.uilist_draw_item_default)
. = ALIGN(0x1000);
*(.text.uilist_draw_filter_default)
. = ALIGN(0x1000);
*(.text.uilist_filter_items_default)
. = ALIGN(0x1000);
*(.text.ui_list_resize_update_cb)
. = ALIGN(0x1000);
*(.text.cmpstringp)
. = ALIGN(0x1000);
*(.text.operator_search_cb.10339)
. = ALIGN(0x1000);
*(.text.uiSearchItemAdd)
. = ALIGN(0x1000);
*(.text.operator_call_cb.10340)
. = ALIGN(0x1000);
*(.text.do_running_jobs)
. = ALIGN(0x1000);
*(.text.keymap_item_modified)
. = ALIGN(0x1000);
*(.text.component_menu)
. = ALIGN(0x1000);
*(.text.ui_button_text_password_hide)
. = ALIGN(0x1000);
*(.text.blf_font_width_to_rstrlen)
. = ALIGN(0x1000);
*(.text.blf_font_width_to_strlen)
. = ALIGN(0x1000);
*(.text.glColor4ubv)
. = ALIGN(0x1000);
*(.text.widget_draw_text_icon .text.ui_text_clip_middle_ex .text.BLF_width)
. = ALIGN(0x1000);
*(.text.widget_menu_itembut)
. = ALIGN(0x1000);
*(.text.widget_state_menu_item)
. = ALIGN(0x1000);
*(.text.widget_but)
. = ALIGN(0x1000);
*(.text.widget_icon_has_anim)
. = ALIGN(0x1000);
*(.text.widget_menu_radial_itembut)
. = ALIGN(0x1000);
*(.text.widget_state_pie_menu_item)
. = ALIGN(0x1000);
*(.text.widget_state_label)
. = ALIGN(0x1000);
*(.text.widget_roundbut)
. = ALIGN(0x1000);
*(.text.widget_numbut)
. = ALIGN(0x1000);
*(.text.widget_numbut_draw)
. = ALIGN(0x1000);
*(.text.widget_numslider)
. = ALIGN(0x1000);
*(.text.widget_state_numslider)
. = ALIGN(0x1000);
*(.text.widget_radiobut)
. = ALIGN(0x1000);
*(.text.widget_list_itembut)
. = ALIGN(0x1000);
*(.text.widget_textbut)
. = ALIGN(0x1000);
*(.text.widget_optionbut)
. = ALIGN(0x1000);
*(.text.widget_state_option_menu)
. = ALIGN(0x1000);
*(.text.widget_state)
. = ALIGN(0x1000);
*(.text.widget_menunodebut)
. = ALIGN(0x1000);
*(.text.widget_menuiconbut)
. = ALIGN(0x1000);
*(.text.widget_menubut)
. = ALIGN(0x1000);
*(.text.widget_pulldownbut)
. = ALIGN(0x1000);
*(.text.widget_state_pulldown)
. = ALIGN(0x1000);
*(.text.widget_swatch .text.rgba_float_to_uchar)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_scene_linear_to_display_v3)
. = ALIGN(0x1000);
*(.text.widget_box)
. = ALIGN(0x1000);
*(.text.widget_link)
. = ALIGN(0x1000);
*(.text.UI_ThemeGetColorPtr)
. = ALIGN(0x1000);
*(.text.UI_ThemeColor)
. = ALIGN(0x1000);
*(.text.glColor3ubv)
. = ALIGN(0x1000);
*(.text.ui_draw_but_NORMAL .text.widget_normal .text.glGetMaterialfv)
. = ALIGN(0x1000);
*(.text.widget_progressbar)
. = ALIGN(0x1000);
*(.text.widget_state_nothing)
. = ALIGN(0x1000);
*(.text.widget_scroll)
. = ALIGN(0x1000);
*(.text.widgetbase_draw)
. = ALIGN(0x1000);
*(.text.round_box__edges)
. = ALIGN(0x1000);
*(.text.widget_menu_back)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_pan)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_scroll_left)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_scroll_right)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_scroll_up)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_scroll_down)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_zoom_in)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_zoom_out)
. = ALIGN(0x1000);
*(.text.VIEW2D_OT_zoom)
. = ALIGN(0x1000);
*(.text.reset_exec.10606)
. = ALIGN(0x1000);
*(.text.view2d_poll)
. = ALIGN(0x1000);
*(.text.UI_view2d_scrollers_calc .text.scroller_activate_invoke)
. = ALIGN(0x1000);
*(.text.UI_view2d_grid_calc)
. = ALIGN(0x1000);
*(.text.scroller_activate_modal)
. = ALIGN(0x1000);
*(.text.scroller_activate_apply)
. = ALIGN(0x1000);
*(.text.scroller_activate_cancel)
. = ALIGN(0x1000);
*(.text.view2d_smoothview_invoke)
. = ALIGN(0x1000);
*(.text.view2d_ndof_invoke)
. = ALIGN(0x1000);
*(.text.view_borderzoom_exec)
. = ALIGN(0x1000);
*(.text.UI_view2d_smooth_view)
. = ALIGN(0x1000);
*(.text.view_zoom_poll)
. = ALIGN(0x1000);
*(.text.view_zoomdrag_exec)
. = ALIGN(0x1000);
*(.text.view_zoomdrag_invoke)
. = ALIGN(0x1000);
*(.text.view_zoomdrag_modal)
. = ALIGN(0x1000);
*(.text.view_zoomdrag_apply)
. = ALIGN(0x1000);
*(.text.view_zoomdrag_cancel)
. = ALIGN(0x1000);
*(.text.view_zoomout_invoke)
. = ALIGN(0x1000);
*(.text.view_zoomin_invoke)
. = ALIGN(0x1000);
*(.text.view_zoomstep_apply_ex)
. = ALIGN(0x1000);
*(.text.view_zoomin_exec)
. = ALIGN(0x1000);
*(.text.view_scrolldown_exec)
. = ALIGN(0x1000);
*(.text.view_scrollup_exec)
. = ALIGN(0x1000);
*(.text.view_scrollright_exec)
. = ALIGN(0x1000);
*(.text.view_scrollleft_exec)
. = ALIGN(0x1000);
*(.text.view_pan_exec.10659)
. = ALIGN(0x1000);
*(.text.view_pan_invoke.10660)
. = ALIGN(0x1000);
*(.text.view_pan_modal.10661)
. = ALIGN(0x1000);
*(.text.view2d_masks .text.ui_view2d_curRect_validate_resize)
. = ALIGN(0x1000);
*(.text.view_pan_apply_ex)
. = ALIGN(0x1000);
*(.text.view_pan_cancel.10662)
. = ALIGN(0x1000);
*(.text.mirrtopo_hash_sort)
. = ALIGN(0x1000);
*(.text.mirrtopo_vert_sort)
. = ALIGN(0x1000);
*(.text.add_primitive_plane_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_cube_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_primitive_circle_add)
. = ALIGN(0x1000);
*(.text.add_primitive_circle_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_primitive_cylinder_add)
. = ALIGN(0x1000);
*(.text.add_primitive_cylinder_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_primitive_cone_add)
. = ALIGN(0x1000);
*(.text.add_primitive_cone_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_primitive_grid_add)
. = ALIGN(0x1000);
*(.text.add_primitive_grid_exec)
. = ALIGN(0x1000);
*(.text.add_primitive_monkey_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_primitive_uv_sphere_add)
. = ALIGN(0x1000);
*(.text.add_primitive_uvsphere_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_primitive_ico_sphere_add)
. = ALIGN(0x1000);
*(.text.add_primitive_icosphere_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_bevel)
. = ALIGN(0x1000);
*(.text.edbm_bevel_exec)
. = ALIGN(0x1000);
*(.text.edbm_bevel_invoke)
. = ALIGN(0x1000);
*(.text.edbm_bevel_modal .text.edbm_bevel_mval_factor)
. = ALIGN(0x1000);
*(.text.edbm_bevel_calc)
. = ALIGN(0x1000);
*(.text.edbm_bevel_update_header)
. = ALIGN(0x1000);
*(.text.edbm_bevel_cancel)
. = ALIGN(0x1000);
*(.text.edbm_bevel_exit)
. = ALIGN(0x1000);
*(.text.mesh_ot_bevel_offset_range_func)
. = ALIGN(0x1000);
*(.text.MESH_OT_bisect)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_gesture_straightline)
. = ALIGN(0x1000);
*(.text.mesh_bisect_invoke)
. = ALIGN(0x1000);
*(.text.mesh_bisect_exec)
. = ALIGN(0x1000);
*(.text.WM_gesture_straightline_invoke)
. = ALIGN(0x1000);
*(.text.mesh_bisect_modal)
. = ALIGN(0x1000);
*(.text.WM_gesture_straightline_modal .text.straightline_apply)
. = ALIGN(0x1000);
*(.text.MESH_OT_extrude_repeat)
. = ALIGN(0x1000);
*(.text.edbm_extrude_repeat_exec)
. = ALIGN(0x1000);
*(.text.edbm_extrude_region_exec)
. = ALIGN(0x1000);
*(.text.edbm_extrude_verts_exec)
. = ALIGN(0x1000);
*(.text.edbm_extrude_edges_exec)
. = ALIGN(0x1000);
*(.text.edbm_extrude_faces_exec)
. = ALIGN(0x1000);
*(.text.edbm_dupli_extrude_cursor_invoke .text.EMBM_project_snap_verts)
. = ALIGN(0x1000);
*(.text.edbm_extrude_edge_ex)
. = ALIGN(0x1000);
*(.text.MESH_OT_spin)
. = ALIGN(0x1000);
*(.text.edbm_spin_invoke)
. = ALIGN(0x1000);
*(.text.edbm_spin_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_screw)
. = ALIGN(0x1000);
*(.text.edbm_screw_invoke)
. = ALIGN(0x1000);
*(.text.edbm_screw_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_inset)
. = ALIGN(0x1000);
*(.text.edbm_inset_invoke)
. = ALIGN(0x1000);
*(.text.calculateTransformCenter)
. = ALIGN(0x1000);
*(.text.snode_update)
. = ALIGN(0x1000);
*(.text.calculateCenterActive)
. = ALIGN(0x1000);
*(.text.special_aftertrans_update .text.posttrans_fcurve_clean .text.postTrans .text.ED_node_link_insert .text.ED_markers_post_apply_transform .text.ANIM_editkeyframes_refresh .text.BKE_nlatrack_sort_strips)
. = ALIGN(0x1000);
*(.text.autokeyframe_ob_cb_func .text.autokeyframe_pose_cb_func .text.testhandles_fcurve)
. = ALIGN(0x1000);
*(.text.projectEdgeSlideData)
. = ALIGN(0x1000);
*(.text.track_plane_from_existing_motion)
. = ALIGN(0x1000);
*(.text.BKE_nlastrips_clear_metas)
. = ALIGN(0x1000);
*(.text.node_remove_extra_links .text.node_find_linkable_socket)
. = ALIGN(0x1000);
*(.text.count_set_pose_transflags .text.bone_children_clear_transflag)
. = ALIGN(0x1000);
*(.text.projectFloatView)
. = ALIGN(0x1000);
*(.text.projectIntViewEx)
. = ALIGN(0x1000);
*(.text.transform_autoik_update)
. = ALIGN(0x1000);
*(.text.createTransData .text.set_prop_dist .text.createTransMaskingData .text.createTransPaintCurveVerts .text.ActionFCurveToTransData .text.SeqTransCount .text.SeqToTransData_Recursive .text.bezt_to_transdata .text.calc_distanceCurveVerts .text.createTransPose .text.mark_children .text.ObjectToTransData .text.constraints_list_needinv .text.pose_grab_with_ik_add .text.pose_grab_with_ik_children .text.SeqTransInfo .text.MaskPointToTransData .text.MaskHandleToTransData .text.initTransInfo .text.calculateCenterCursor .text.calculateCenterCursor2D .text.calculateCenter .text.BKE_sequence_tx_get_final_left .text.BKE_sequence_tx_get_final_right .text.BM_vert_calc_shell_factor_ex .text.BM_mesh_calc_edge_groups .text.BKE_crazyspace_get_mapped_editverts .text.BKE_crazyspace_set_quats_editmesh .text.editbmesh_get_first_deform_matrices .text.modifiers_isCorrectableDeformed .text.svd_m4 .text.pseudoinverse_m4_m4 .text.pseudoinverse_m3_m3)
. = ALIGN(0x1000);
*(.text.BKE_tracking_plane_marker_ensure)
. = ALIGN(0x1000);
*(.text.BKE_nlastrips_make_metas)
. = ALIGN(0x1000);
*(.text.ANIM_unit_mapping_get_factor)
. = ALIGN(0x1000);
*(.text.calculateCenter2D)
. = ALIGN(0x1000);
*(.text.normalize_m3)
. = ALIGN(0x1000);
*(.text.createSpaceNormalTangent .text.BM_editselection_plane .text.BM_face_calc_plane)
. = ALIGN(0x1000);
*(.text.BM_uv_element_map_create)
. = ALIGN(0x1000);
*(.text.ED_uvedit_live_unwrap_begin)
. = ALIGN(0x1000);
*(.text.BKE_tracking_marker_ensure)
. = ALIGN(0x1000);
*(.text.edbm_inset_modal)
. = ALIGN(0x1000);
*(.text.edbm_inset_update_header)
. = ALIGN(0x1000);
*(.text.edbm_inset_exec)
. = ALIGN(0x1000);
*(.text.edbm_inset_calc)
. = ALIGN(0x1000);
*(.text.edbm_inset_cancel)
. = ALIGN(0x1000);
*(.text.edbm_inset_exit)
. = ALIGN(0x1000);
*(.text.EDBM_redo_state_free)
. = ALIGN(0x1000);
*(.text.MESH_OT_intersect)
. = ALIGN(0x1000);
*(.text.edbm_intersect_exec .text.BM_vert_splice_check_double .text.BM_vert_pair_share_face_check .text.BM_mesh_intersect .text.bm_isect_edge_tri .text.edge_verts_sort .text.face_edges_split .text.isect_line_tri_epsilon_v3)
. = ALIGN(0x1000);
*(.text.bm_face_isect_self)
. = ALIGN(0x1000);
*(.text.bm_face_isect_pair)
. = ALIGN(0x1000);
*(.text.edbm_face_split_by_edges_exec .text.bm_face_split_by_edges)
. = ALIGN(0x1000);
*(.text.BM_face_split_edgenet .text.bm_face_split_edgenet_find_loop_pair .text.bm_face_split_edgenet_find_loop_walk)
. = ALIGN(0x1000);
*(.text.MESH_OT_knife_tool)
. = ALIGN(0x1000);
*(.text.knifetool_invoke)
. = ALIGN(0x1000);
*(.text.knifetool_modal)
. = ALIGN(0x1000);
*(.text.knifetool_cancel)
. = ALIGN(0x1000);
*(.text.linehit_compare)
. = ALIGN(0x1000);
*(.text.knifetool_draw .text.glPolygonOffset)
. = ALIGN(0x1000);
*(.text.EDBM_mesh_knife .text.edvm_mesh_knife_face_point .text.knifeproject_exec)
. = ALIGN(0x1000);
*(.text.knifetool_exit_ex)
. = ALIGN(0x1000);
*(.text.knife_recalc_projmat .text.knife_update_active)
. = ALIGN(0x1000);
*(.text.knifetool_finish_ex .text.knife_add_cut .text.knife_verts_edge_in_face .text.knife_split_edge .text.knife_get_face_kedges .text.get_bm_knife_vert .text.knife_make_face_cuts .text.find_chain_from_vertex .text.find_hole .text.knife_make_chain_cut .text.find_hole_search .text.find_chain_search .text.BM_face_split_n .text.BM_face_point_inside_test)
. = ALIGN(0x1000);
*(.text.knifetool_init .text.BKE_editmesh_vertexCos_get)
. = ALIGN(0x1000);
*(.text.BM_face_calc_tessellation .text.BLI_polyfill_calc)
. = ALIGN(0x1000);
*(.text.MESH_OT_loopcut)
. = ALIGN(0x1000);
*(.text.ringcut_invoke)
. = ALIGN(0x1000);
*(.text.loopcut_exec)
. = ALIGN(0x1000);
*(.text.loopcut_init .text.ringsel_init)
. = ALIGN(0x1000);
*(.text.loopcut_modal)
. = ALIGN(0x1000);
*(.text.ringsel_find_edge .text.ringsel_finish .text.edgering_find_order .text.BM_mesh_esubdivide)
. = ALIGN(0x1000);
*(.text.ringcut_cancel)
. = ALIGN(0x1000);
*(.text.ringsel_draw)
. = ALIGN(0x1000);
*(.text.glPushMatrix)
. = ALIGN(0x1000);
*(.text.edbm_shortest_path_pick_invoke .text.edgetag_set_cb)
. = ALIGN(0x1000);
*(.text.verttag_filter_cb)
. = ALIGN(0x1000);
*(.text.edgetag_filter_cb)
. = ALIGN(0x1000);
*(.text.facetag_filter_cb)
. = ALIGN(0x1000);
*(.text.edbm_shortest_path_select_exec)
. = ALIGN(0x1000);
*(.text.BM_mesh_calc_path_vert .text.BM_mesh_calc_path_edge .text.BM_mesh_calc_path_face)
. = ALIGN(0x1000);
*(.text.ele_filter_visible_cb)
. = ALIGN(0x1000);
*(.text.edbm_rip_invoke .text.edbm_rip_edgedist_squared .text.edbm_tagged_loop_pairs_to_fill .text.edbm_tagged_loop_pairs_do_fill_faces .text.edbm_rip_edge_side_measure .text.BM_vert_other_disk_edge)
. = ALIGN(0x1000);
*(.text.BM_mesh_select_mode_clean_ex)
. = ALIGN(0x1000);
*(.text.edbm_rip_edge_invoke)
. = ALIGN(0x1000);
*(.text.findnearestvert__doClosest)
. = ALIGN(0x1000);
*(.text.findnearestedge__doClosest)
. = ALIGN(0x1000);
*(.text.findnearestface__doClosest)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_similar)
. = ALIGN(0x1000);
*(.text.edbm_select_similar_exec)
. = ALIGN(0x1000);
*(.text.select_similar_type_itemf)
. = ALIGN(0x1000);
*(.text.edbm_select_similar_region_exec .text.BM_mesh_region_match .text.bm_uuidwalk_init_from_edge .text.bm_uuidwalk_facestep_begin .text.bm_uuidwalk_pass_add .text.bm_uuidwalk_rehash .text.bm_uuidwalk_free .text.bm_uuidwalk_calc_vert_uuid)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_mode)
. = ALIGN(0x1000);
*(.text.edbm_select_mode_invoke)
. = ALIGN(0x1000);
*(.text.edbm_select_mode_exec)
. = ALIGN(0x1000);
*(.text.EDBM_selectmode_toggle .text.EDBM_selectmode_convert .text.BM_vert_is_all_face_flag_test)
. = ALIGN(0x1000);
*(.text.edbm_loop_multiselect_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_loop_select)
. = ALIGN(0x1000);
*(.text.edbm_select_loop_invoke .text.walker_select)
. = ALIGN(0x1000);
*(.text.MESH_OT_edgering_select)
. = ALIGN(0x1000);
*(.text.edbm_select_all_exec)
. = ALIGN(0x1000);
*(.text.EDBM_select_swap)
. = ALIGN(0x1000);
*(.text.edbm_faces_select_interior_exec .text.EDBM_select_interior_faces)
. = ALIGN(0x1000);
*(.text.edbm_select_linked_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_linked_pick)
. = ALIGN(0x1000);
*(.text.edbm_select_linked_pick_invoke)
. = ALIGN(0x1000);
*(.text.EDBM_edge_find_nearest)
. = ALIGN(0x1000);
*(.text.mesh_foreachScreenEdge)
. = ALIGN(0x1000);
*(.text.view3d_read_backbuf)
. = ALIGN(0x1000);
*(.text.GPU_offscreen_bind)
. = ALIGN(0x1000);
*(.text.view3d_validate_backbuf)
. = ALIGN(0x1000);
*(.text.glReadPixels)
. = ALIGN(0x1000);
*(.text.EDBM_vert_find_nearest .text.EDBM_face_find_nearest)
. = ALIGN(0x1000);
*(.text.mesh_foreachScreenVert .text.mesh_foreachScreenFace)
. = ALIGN(0x1000);
*(.text.unified_findnearest)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_face_by_sides)
. = ALIGN(0x1000);
*(.text.edbm_select_face_by_sides_exec)
. = ALIGN(0x1000);
*(.text.edbm_select_loose_exec)
. = ALIGN(0x1000);
*(.text.EDBM_select_mirrored .text.edbm_select_mirror_exec .text.EDBM_verts_mirror_get_edge .text.EDBM_verts_mirror_get_face)
. = ALIGN(0x1000);
*(.text.edbm_select_more_exec)
. = ALIGN(0x1000);
*(.text.edbm_select_less_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_nth)
. = ALIGN(0x1000);
*(.text.edbm_select_nth_exec .text.walker_deselect_nth)
. = ALIGN(0x1000);
*(.text.BMW_init)
. = ALIGN(0x1000);
*(.text.MESH_OT_edges_select_sharp)
. = ALIGN(0x1000);
*(.text.edbm_select_sharp_edges_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_faces_select_linked_flat)
. = ALIGN(0x1000);
*(.text.edbm_select_linked_flat_faces_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_non_manifold)
. = ALIGN(0x1000);
*(.text.edbm_select_non_manifold_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_random)
. = ALIGN(0x1000);
*(.text.edbm_select_random_exec)
. = ALIGN(0x1000);
*(.text.edbm_select_ungrouped_exec)
. = ALIGN(0x1000);
*(.text.edbm_select_ungrouped_poll)
. = ALIGN(0x1000);
*(.text.MESH_OT_select_axis)
. = ALIGN(0x1000);
*(.text.edbm_select_axis_exec)
. = ALIGN(0x1000);
*(.text.edbm_select_next_loop_exec)
. = ALIGN(0x1000);
*(.text.edbm_region_to_loop_exec)
. = ALIGN(0x1000);
*(.text.edbm_loop_to_region_exec .text.loop_find_regions)
. = ALIGN(0x1000);
*(.text.verg_radial)
. = ALIGN(0x1000);
*(.text.MESH_OT_subdivide)
. = ALIGN(0x1000);
*(.text.edbm_subdivide_exec)
. = ALIGN(0x1000);
*(.text.edbm_subdivide_edge_ring_exec)
. = ALIGN(0x1000);
*(.text.edbm_unsubdivide_exec)
. = ALIGN(0x1000);
*(.text.edbm_delete_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_delete_loose)
. = ALIGN(0x1000);
*(.text.edbm_delete_loose_exec .text.BM_mesh_delete_hflag_context)
. = ALIGN(0x1000);
*(.text.edbm_collapse_edge_exec)
. = ALIGN(0x1000);
*(.text.edbm_add_edge_face_exec)
. = ALIGN(0x1000);
*(.text.edbm_mark_seam_exec)
. = ALIGN(0x1000);
*(.text.construct_param_handle)
. = ALIGN(0x1000);
*(.text.construct_param_handle_subsurfed)
. = ALIGN(0x1000);
*(.text.uvedit_get_aspect)
. = ALIGN(0x1000);
*(.text.MESH_OT_mark_sharp)
. = ALIGN(0x1000);
*(.text.edbm_mark_sharp_exec)
. = ALIGN(0x1000);
*(.text.edbm_vert_connect_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_vert_connect_nonplanar)
. = ALIGN(0x1000);
*(.text.edbm_vert_connect_nonplaner_exec)
. = ALIGN(0x1000);
*(.text.edbm_edge_split_exec)
. = ALIGN(0x1000);
*(.text.edbm_duplicate_invoke)
. = ALIGN(0x1000);
*(.text.edbm_duplicate_exec)
. = ALIGN(0x1000);
*(.text.edbm_flip_normals_exec)
. = ALIGN(0x1000);
*(.text.edbm_edge_rotate_selected_exec)
. = ALIGN(0x1000);
*(.text.edbm_hide_exec)
. = ALIGN(0x1000);
*(.text.EDBM_mesh_hide)
. = ALIGN(0x1000);
*(.text.edbm_reveal_exec)
. = ALIGN(0x1000);
*(.text.EDBM_mesh_reveal)
. = ALIGN(0x1000);
*(.text.edbm_normals_make_consistent_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_vertices_smooth)
. = ALIGN(0x1000);
*(.text.edbm_do_smooth_vertex_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_vertices_smooth_laplacian)
. = ALIGN(0x1000);
*(.text.edbm_do_smooth_laplacian_vertex_exec)
. = ALIGN(0x1000);
*(.text.EDBM_verts_mirror_apply)
. = ALIGN(0x1000);
*(.text.edbm_faces_shade_smooth_exec)
. = ALIGN(0x1000);
*(.text.edbm_faces_shade_flat_exec)
. = ALIGN(0x1000);
*(.text.edbm_rotate_uvs_exec)
. = ALIGN(0x1000);
*(.text.edbm_reverse_uvs_exec)
. = ALIGN(0x1000);
*(.text.edbm_rotate_colors_exec)
. = ALIGN(0x1000);
*(.text.edbm_reverse_colors_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_merge)
. = ALIGN(0x1000);
*(.text.edbm_merge_exec)
. = ALIGN(0x1000);
*(.text.merge_type_itemf)
. = ALIGN(0x1000);
*(.text.MESH_OT_remove_doubles)
. = ALIGN(0x1000);
*(.text.edbm_remove_doubles_exec)
. = ALIGN(0x1000);
*(.text.edbm_shape_propagate_to_all_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_blend_from_shape)
. = ALIGN(0x1000);
*(.text.edbm_blend_from_shape_exec)
. = ALIGN(0x1000);
*(.text.edbm_blend_from_shape_ui)
. = ALIGN(0x1000);
*(.text.shape_itemf)
. = ALIGN(0x1000);
*(.text.MESH_OT_solidify)
. = ALIGN(0x1000);
*(.text.edbm_solidify_exec)
. = ALIGN(0x1000);
*(.text.edbm_knife_cut_exec)
. = ALIGN(0x1000);
*(.text.ED_view3d_clipping_local)
. = ALIGN(0x1000);
*(.text.RNA_collection_begin)
. = ALIGN(0x1000);
*(.text.edbm_separate_exec .text.mesh_separate_tagged .text.mesh_separate_material .text.mesh_separate_loose .text.mesh_separate_material_assign_mat_nr .text.BKE_material_resize_object)
. = ALIGN(0x1000);
*(.text.object_remove_material_slot)
. = ALIGN(0x1000);
*(.text.edbm_fill_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_fill_grid)
. = ALIGN(0x1000);
*(.text.edbm_fill_grid_exec)
. = ALIGN(0x1000);
*(.text.bm_edge_test_fill_grid_cb)
. = ALIGN(0x1000);
*(.text.edbm_fill_holes_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_beautify_fill)
. = ALIGN(0x1000);
*(.text.edbm_beautify_fill_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_poke)
. = ALIGN(0x1000);
*(.text.edbm_poke_face_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_quads_convert_to_tris)
. = ALIGN(0x1000);
*(.text.edbm_quads_convert_to_tris_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_tris_convert_to_quads)
. = ALIGN(0x1000);
*(.text.edbm_tris_convert_to_quads_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_dissolve_verts)
. = ALIGN(0x1000);
*(.text.edbm_dissolve_verts_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_dissolve_edges)
. = ALIGN(0x1000);
*(.text.edbm_dissolve_edges_exec)
. = ALIGN(0x1000);
*(.text.edbm_dissolve_faces_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_dissolve_mode)
. = ALIGN(0x1000);
*(.text.edbm_dissolve_mode_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_dissolve_limited)
. = ALIGN(0x1000);
*(.text.edbm_dissolve_limited_exec)
. = ALIGN(0x1000);
*(.text.EDBM_op_call_and_selectf)
. = ALIGN(0x1000);
*(.text.edbm_dissolve_degenerate_exec)
. = ALIGN(0x1000);
*(.text.edbm_delete_edgeloop_exec)
. = ALIGN(0x1000);
*(.text.EDBM_op_callf)
. = ALIGN(0x1000);
*(.text.edbm_split_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_sort_elements)
. = ALIGN(0x1000);
*(.text.RNA_def_enum_flag)
. = ALIGN(0x1000);
*(.text.edbm_sort_elements_exec)
. = ALIGN(0x1000);
*(.text.edbm_sort_elements_ui)
. = ALIGN(0x1000);
*(.text.edbm_sort_elements_draw_check_prop)
. = ALIGN(0x1000);
*(.text.bmelemsort_comp)
. = ALIGN(0x1000);
*(.text.edbm_noise_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_bridge_edge_loops)
. = ALIGN(0x1000);
*(.text.mesh_operator_edgering_props)
. = ALIGN(0x1000);
*(.text.edbm_bridge_edge_loops_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_wireframe)
. = ALIGN(0x1000);
*(.text.edbm_wireframe_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_symmetrize)
. = ALIGN(0x1000);
*(.text.mesh_symmetrize_exec)
. = ALIGN(0x1000);
*(.text.EDBM_update_generic)
. = ALIGN(0x1000);
*(.text.EDBM_op_init)
. = ALIGN(0x1000);
*(.text.EDBM_op_finish)
. = ALIGN(0x1000);
*(.text.BM_mesh_copy .text.bm_mesh_copy_new_face)
. = ALIGN(0x1000);
*(.text.MESH_OT_symmetry_snap)
. = ALIGN(0x1000);
*(.text.mesh_symmetry_snap_exec)
. = ALIGN(0x1000);
*(.text.getEditMesh)
. = ALIGN(0x1000);
*(.text.free_undo)
. = ALIGN(0x1000);
*(.text.undoMesh_to_editbtMesh)
. = ALIGN(0x1000);
*(.text.editbtMesh_to_undoMesh)
. = ALIGN(0x1000);
*(.text.EDBM_view3d_poll)
. = ALIGN(0x1000);
*(.text.layers_poll)
. = ALIGN(0x1000);
*(.text.mesh_uv_texture_add_exec)
. = ALIGN(0x1000);
*(.text.MESH_OT_drop_named_image)
. = ALIGN(0x1000);
*(.text.drop_named_image_invoke)
. = ALIGN(0x1000);
*(.text.mesh_uv_texture_remove_exec)
. = ALIGN(0x1000);
*(.text.mesh_vertex_color_add_exec)
. = ALIGN(0x1000);
*(.text.ED_mesh_color_remove_active .text.mesh_vertex_color_remove_exec)
. = ALIGN(0x1000);
*(.text.mesh_customdata_clear_mask_exec)
. = ALIGN(0x1000);
*(.text.mesh_customdata_clear_mask_poll)
. = ALIGN(0x1000);
*(.text.mesh_customdata_clear_skin_exec)
. = ALIGN(0x1000);
*(.text.mesh_customdata_clear_exec__internal)
. = ALIGN(0x1000);
*(.text.mesh_customdata_clear_skin_poll)
. = ALIGN(0x1000);
*(.text.mirror_facehash)
. = ALIGN(0x1000);
*(.text.mirror_facecmp)
. = ALIGN(0x1000);
*(.text.mirror_facerotation)
. = ALIGN(0x1000);
*(.text.ed_mesh_pick_vert__mapFunc)
. = ALIGN(0x1000);
*(.text.ed_view3d_project__internal)
. = ALIGN(0x1000);
*(.text.mball_select_all_exec)
. = ALIGN(0x1000);
*(.text.MBALL_OT_select_similar)
. = ALIGN(0x1000);
*(.text.mball_select_similar_exec)
. = ALIGN(0x1000);
*(.text.MBALL_OT_select_random_metaelems)
. = ALIGN(0x1000);
*(.text.select_random_metaelems_exec)
. = ALIGN(0x1000);
*(.text.duplicate_metaelems_exec)
. = ALIGN(0x1000);
*(.text.delete_metaelems_exec)
. = ALIGN(0x1000);
*(.text.hide_metaelems_exec)
. = ALIGN(0x1000);
*(.text.reveal_metaelems_exec)
. = ALIGN(0x1000);
*(.text.get_data.12112)
. = ALIGN(0x1000);
*(.text.free_undoMball)
. = ALIGN(0x1000);
*(.text.undoMball_to_editMball)
. = ALIGN(0x1000);
*(.text.editMball_to_undoMball)
. = ALIGN(0x1000);
*(.text.view_align_update)
. = ALIGN(0x1000);
*(.text.RNA_struct_idprops_unset)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_add)
. = ALIGN(0x1000);
*(.text.object_add_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_effector_add)
. = ALIGN(0x1000);
*(.text.effector_add_exec)
. = ALIGN(0x1000);
*(.text.ed_editnurb_spin)
. = ALIGN(0x1000);
*(.text.ed_editnurb_extrude_flag)
. = ALIGN(0x1000);
*(.text.BKE_nurbList_flag_set)
. = ALIGN(0x1000);
*(.text.BLI_ghash_popkey)
. = ALIGN(0x1000);
*(.text.ed_editnurb_translate_flag .text.add_nurbs_primitive)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_camera_add)
. = ALIGN(0x1000);
*(.text.object_camera_add_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_metaball_add)
. = ALIGN(0x1000);
*(.text.add_metaball_primitive .text.object_metaball_add_exec)
. = ALIGN(0x1000);
*(.text.ED_object_new_primitive_matrix)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_text_add)
. = ALIGN(0x1000);
*(.text.object_add_text_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_armature_add)
. = ALIGN(0x1000);
*(.text.object_armature_add_exec .text.ED_armature_edit_bone_add_primitive)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_empty_add)
. = ALIGN(0x1000);
*(.text.object_empty_add_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_drop_named_image)
. = ALIGN(0x1000);
*(.text.empty_drop_named_image_invoke)
. = ALIGN(0x1000);
*(.text.BKE_image_load_exists)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_lamp_add)
. = ALIGN(0x1000);
*(.text.object_lamp_add_exec)
. = ALIGN(0x1000);
*(.text.BKE_object_obdata_size_init)
. = ALIGN(0x1000);
*(.text.WM_operator_view3d_unit_defaults)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_group_instance_add)
. = ALIGN(0x1000);
*(.text.ED_object_add_generic_props)
. = ALIGN(0x1000);
*(.text.RNA_def_float_rotation)
. = ALIGN(0x1000);
*(.text.RNA_def_string)
. = ALIGN(0x1000);
*(.text.group_instance_add_exec)
. = ALIGN(0x1000);
*(.text.object_speaker_add_exec)
. = ALIGN(0x1000);
*(.text.ED_object_rotation_from_view .text.ED_object_add_generic_get_opts)
. = ALIGN(0x1000);
*(.text.ED_object_add_type)
. = ALIGN(0x1000);
*(.text.object_delete_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_duplicates_make_real)
. = ALIGN(0x1000);
*(.text.object_duplicates_make_real_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_convert)
. = ALIGN(0x1000);
*(.text.BKE_object_free_curve_cache .text.convert_exec .text.BKE_mesh_to_curve)
. = ALIGN(0x1000);
*(.text.BKE_mesh_to_curve_nurblist)
. = ALIGN(0x1000);
*(.text.convert_poll)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_duplicate)
. = ALIGN(0x1000);
*(.text.duplicate_exec.12296)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_add_named)
. = ALIGN(0x1000);
*(.text.add_named_exec)
. = ALIGN(0x1000);
*(.text.copy_object_set_idnew)
. = ALIGN(0x1000);
*(.text.bgl_get_mats .text.glGetDoublev)
. = ALIGN(0x1000);
*(.text.ED_view3d_cursor3d_position)
. = ALIGN(0x1000);
*(.text.join_curve_exec .text.join_mesh_exec .text.join_exec .text.join_armature_exec .text.joined_armature_fix_links_constraints .text.CustomData_copy_data_named .text.BKE_key_sort .text.BKE_keyblock_copy_settings .text.multiresModifier_prepare_join)
. = ALIGN(0x1000);
*(.text.ED_base_object_free_and_unlink)
. = ALIGN(0x1000);
*(.text.join_poll)
. = ALIGN(0x1000);
*(.text.join_mesh_shapes_exec .text.join_shapes_exec)
. = ALIGN(0x1000);
*(.text.join_shapes_poll)
. = ALIGN(0x1000);
*(.text.bake_image_exec)
. = ALIGN(0x1000);
*(.text.objects_bake_render_invoke)
. = ALIGN(0x1000);
*(.text.multiresbake_check .text.init_bake_internal)
. = ALIGN(0x1000);
*(.text.objects_bake_render_modal)
. = ALIGN(0x1000);
*(.text.multiresbake_freejob)
. = ALIGN(0x1000);
*(.text.multiresbake_startjob)
. = ALIGN(0x1000);
*(.text.clear_single_image .text.RE_bake_ibuf_filter .text.RE_multires_bake_images .text.do_multires_bake)
. = ALIGN(0x1000);
*(.text.bake_freejob)
. = ALIGN(0x1000);
*(.text.finish_bake_internal)
. = ALIGN(0x1000);
*(.text.bake_startjob)
. = ALIGN(0x1000);
*(.text.RE_Database_Baking)
. = ALIGN(0x1000);
*(.text.bake_update)
. = ALIGN(0x1000);
*(.text.thread_break)
. = ALIGN(0x1000);
*(.text.do_bake_render)
. = ALIGN(0x1000);
*(.text.RE_bake_ibuf_normalize_displacement .text.RE_bake_make_derivative)
. = ALIGN(0x1000);
*(.text.RE_bake_shade_all_selected)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_bake)
. = ALIGN(0x1000);
*(.text.bake_exec)
. = ALIGN(0x1000);
*(.text.bake_modal)
. = ALIGN(0x1000);
*(.text.bake_invoke)
. = ALIGN(0x1000);
*(.text.bake_init_api_data)
. = ALIGN(0x1000);
*(.text.bake_break)
. = ALIGN(0x1000);
*(.text.bake_progress_update)
. = ALIGN(0x1000);
*(.text.bake_freejob.12396)
. = ALIGN(0x1000);
*(.text.bake_startjob.12397)
. = ALIGN(0x1000);
*(.text.node_is_connected_to_output_recursive)
. = ALIGN(0x1000);
*(.text.IMB_filter_extend)
. = ALIGN(0x1000);
*(.text.bake_objects_check .text.bake .text.bake_object_check .text.RE_bake_pixels_populate_from_objects .text.mesh_calc_tri_tessface .text.calc_point_from_barycentric_extrusion .text.RE_bake_pixels_populate .text.RE_bake_normal_world_to_tangent .text.RE_bake_normal_world_to_object .text.RE_bake_engine .text.IMB_buffer_byte_from_float_mask .text.IMB_buffer_float_from_float_mask)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_stretchto_reset)
. = ALIGN(0x1000);
*(.text.stretchto_reset_invoke)
. = ALIGN(0x1000);
*(.text.stretchto_reset_exec)
. = ALIGN(0x1000);
*(.text.edit_constraint_poll)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_limitdistance_reset)
. = ALIGN(0x1000);
*(.text.limitdistance_reset_invoke)
. = ALIGN(0x1000);
*(.text.limitdistance_reset_exec)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_childof_set_inverse)
. = ALIGN(0x1000);
*(.text.childof_set_inverse_invoke)
. = ALIGN(0x1000);
*(.text.childof_set_inverse_exec)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_childof_clear_inverse)
. = ALIGN(0x1000);
*(.text.childof_clear_inverse_invoke)
. = ALIGN(0x1000);
*(.text.childof_clear_inverse_exec)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_followpath_path_animate)
. = ALIGN(0x1000);
*(.text.followpath_path_animate_invoke)
. = ALIGN(0x1000);
*(.text.followpath_path_animate_exec)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_objectsolver_set_inverse)
. = ALIGN(0x1000);
*(.text.objectsolver_set_inverse_invoke)
. = ALIGN(0x1000);
*(.text.child_get_inverse_matrix)
. = ALIGN(0x1000);
*(.text.objectsolver_set_inverse_exec)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_objectsolver_clear_inverse)
. = ALIGN(0x1000);
*(.text.objectsolver_clear_inverse_invoke)
. = ALIGN(0x1000);
*(.text.objectsolver_clear_inverse_exec)
. = ALIGN(0x1000);
*(.text.constraint_delete_exec)
. = ALIGN(0x1000);
*(.text.constraint_poll)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_move_down)
. = ALIGN(0x1000);
*(.text.constraint_move_down_invoke)
. = ALIGN(0x1000);
*(.text.constraint_move_down_exec)
. = ALIGN(0x1000);
*(.text.CONSTRAINT_OT_move_up)
. = ALIGN(0x1000);
*(.text.constraint_move_up_invoke)
. = ALIGN(0x1000);
*(.text.constraint_move_up_exec)
. = ALIGN(0x1000);
*(.text.edit_constraint_invoke_properties)
. = ALIGN(0x1000);
*(.text.pose_constraints_clear_exec)
. = ALIGN(0x1000);
*(.text.object_constraints_clear_exec)
. = ALIGN(0x1000);
*(.text.pose_constraint_copy_exec)
. = ALIGN(0x1000);
*(.text.object_constraint_copy_exec)
. = ALIGN(0x1000);
*(.text.object_constraint_add_exec)
. = ALIGN(0x1000);
*(.text.pose_constraint_add_exec)
. = ALIGN(0x1000);
*(.text.pose_ik_add_invoke)
. = ALIGN(0x1000);
*(.text.uiItemBooleanO)
. = ALIGN(0x1000);
*(.text.pose_ik_add_exec)
. = ALIGN(0x1000);
*(.text.get_new_constraint_target)
. = ALIGN(0x1000);
*(.text.constraint_add_exec)
. = ALIGN(0x1000);
*(.text.pose_ik_clear_exec)
. = ALIGN(0x1000);
*(.text.object_hide_view_clear_exec)
. = ALIGN(0x1000);
*(.text.object_hide_view_set_exec)
. = ALIGN(0x1000);
*(.text.object_hide_render_clear_exec)
. = ALIGN(0x1000);
*(.text.object_hide_render_set_exec)
. = ALIGN(0x1000);
*(.text.editmode_toggle_exec)
. = ALIGN(0x1000);
*(.text.make_editText .text.ED_object_editmode_enter)
. = ALIGN(0x1000);
*(.text.editmode_toggle_poll)
. = ALIGN(0x1000);
*(.text.posemode_exec)
. = ALIGN(0x1000);
*(.text.ED_armature_enter_posemode)
. = ALIGN(0x1000);
*(.text.forcefield_toggle_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_paths_calculate)
. = ALIGN(0x1000);
*(.text.object_calculate_paths_invoke)
. = ALIGN(0x1000);
*(.text.object_calculate_paths_exec)
. = ALIGN(0x1000);
*(.text.object_update_paths_exec)
. = ALIGN(0x1000);
*(.text.object_clear_paths_exec)
. = ALIGN(0x1000);
*(.text.shade_poll)
. = ALIGN(0x1000);
*(.text.shade_smooth_exec.12602 .text.BKE_mesh_smooth_flag_set)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_mode_set)
. = ALIGN(0x1000);
*(.text.object_mode_set_exec)
. = ALIGN(0x1000);
*(.text.object_mode_set_itemsf)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_game_property_new)
. = ALIGN(0x1000);
*(.text.game_property_new_exec)
. = ALIGN(0x1000);
*(.text.game_property_remove_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_game_property_copy)
. = ALIGN(0x1000);
*(.text.game_property_copy_exec .text.BKE_bproperty_object_set)
. = ALIGN(0x1000);
*(.text.gameprops_itemf)
. = ALIGN(0x1000);
*(.text.game_property_clear_exec)
. = ALIGN(0x1000);
*(.text.logicbricks_copy_exec)
. = ALIGN(0x1000);
*(.text.game_physics_copy_exec)
. = ALIGN(0x1000);
*(.text.GROUP_OT_objects_add_active)
. = ALIGN(0x1000);
*(.text.objects_add_active_exec)
. = ALIGN(0x1000);
*(.text.group_object_active_itemf)
. = ALIGN(0x1000);
*(.text.GROUP_OT_objects_remove_active)
. = ALIGN(0x1000);
*(.text.objects_remove_active_exec)
. = ALIGN(0x1000);
*(.text.group_objects_remove_all_exec)
. = ALIGN(0x1000);
*(.text.GROUP_OT_objects_remove)
. = ALIGN(0x1000);
*(.text.group_objects_remove_exec)
. = ALIGN(0x1000);
*(.text.group_create_exec)
. = ALIGN(0x1000);
*(.text.group_add_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_group_link)
. = ALIGN(0x1000);
*(.text.group_link_exec)
. = ALIGN(0x1000);
*(.text.check_object_instances_group_recursive)
. = ALIGN(0x1000);
*(.text.group_remove_exec)
. = ALIGN(0x1000);
*(.text.group_unlink_exec)
. = ALIGN(0x1000);
*(.text.select_grouped_exec)
. = ALIGN(0x1000);
*(.text.object_add_hook_selob_exec)
. = ALIGN(0x1000);
*(.text.hook_op_edit_poll)
. = ALIGN(0x1000);
*(.text.object_add_hook_newob_exec)
. = ALIGN(0x1000);
*(.text.add_hook_object)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_hook_remove)
. = ALIGN(0x1000);
*(.text.object_hook_remove_exec)
. = ALIGN(0x1000);
*(.text.hook_mod_itemf)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_hook_reset)
. = ALIGN(0x1000);
*(.text.object_hook_reset_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_hook_recenter)
. = ALIGN(0x1000);
*(.text.object_hook_recenter_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_hook_assign)
. = ALIGN(0x1000);
*(.text.object_hook_assign_exec)
. = ALIGN(0x1000);
*(.text.object_hook_index_array)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_hook_select)
. = ALIGN(0x1000);
*(.text.object_hook_select_exec .text.select_editcurve_hook)
. = ALIGN(0x1000);
*(.text.LATTICE_OT_select_random)
. = ALIGN(0x1000);
*(.text.lattice_select_random_exec)
. = ALIGN(0x1000);
*(.text.LATTICE_OT_select_mirror)
. = ALIGN(0x1000);
*(.text.lattice_select_mirror_exec)
. = ALIGN(0x1000);
*(.text.lattice_select_more_exec)
. = ALIGN(0x1000);
*(.text.lattice_select_less_exec)
. = ALIGN(0x1000);
*(.text.lattice_select_more_less)
. = ALIGN(0x1000);
*(.text.lattice_select_all_exec)
. = ALIGN(0x1000);
*(.text.lattice_select_ungrouped_exec)
. = ALIGN(0x1000);
*(.text.make_regular_exec)
. = ALIGN(0x1000);
*(.text.make_regular_poll)
. = ALIGN(0x1000);
*(.text.lattice_flip_exec)
. = ALIGN(0x1000);
*(.text.findnearestLattvert__doClosest)
. = ALIGN(0x1000);
*(.text.get_editlatt)
. = ALIGN(0x1000);
*(.text.free_undoLatt)
. = ALIGN(0x1000);
*(.text.undoLatt_to_editLatt)
. = ALIGN(0x1000);
*(.text.editLatt_to_undoLatt)
. = ALIGN(0x1000);
*(.text.validate_undoLatt)
. = ALIGN(0x1000);
*(.text.object_lod_add_exec)
. = ALIGN(0x1000);
*(.text.object_lod_remove_exec)
. = ALIGN(0x1000);
*(.text.modifier_add_exec)
. = ALIGN(0x1000);
*(.text.modifier_add_itemf)
. = ALIGN(0x1000);
*(.text.modifier_remove_invoke)
. = ALIGN(0x1000);
*(.text.modifier_remove_exec)
. = ALIGN(0x1000);
*(.text.edit_modifier_poll)
. = ALIGN(0x1000);
*(.text.modifier_move_up_invoke)
. = ALIGN(0x1000);
*(.text.modifier_move_up_exec)
. = ALIGN(0x1000);
*(.text.modifier_move_down_invoke)
. = ALIGN(0x1000);
*(.text.modifier_move_down_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_modifier_apply)
. = ALIGN(0x1000);
*(.text.modifier_apply_invoke)
. = ALIGN(0x1000);
*(.text.DM_to_meshkey)
. = ALIGN(0x1000);
*(.text.psys_apply_hair_lattice .text.ED_object_modifier_apply .text.modifier_apply_exec .text.mesh_create_derived_for_modifier .text.multiresModifier_reshapeFromDeformMod)
. = ALIGN(0x1000);
*(.text.modifier_convert_invoke)
. = ALIGN(0x1000);
*(.text.ED_object_modifier_convert .text.modifier_convert_exec)
. = ALIGN(0x1000);
*(.text.modifier_copy_invoke)
. = ALIGN(0x1000);
*(.text.modifier_copy_exec)
. = ALIGN(0x1000);
*(.text.multires_poll)
. = ALIGN(0x1000);
*(.text.multires_higher_levels_delete_invoke)
. = ALIGN(0x1000);
*(.text.multires_del_higher)
. = ALIGN(0x1000);
*(.text.multires_higher_levels_delete_exec .text.multiresModifier_del_levels)
. = ALIGN(0x1000);
*(.text.multires_subdivide_invoke)
. = ALIGN(0x1000);
*(.text.multires_subdivide_exec)
. = ALIGN(0x1000);
*(.text.multires_reshape_invoke)
. = ALIGN(0x1000);
*(.text.multiresModifier_reshapeFromDM)
. = ALIGN(0x1000);
*(.text.multires_reshape_exec .text.multiresModifier_reshape)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_multires_external_save)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_filesel)
. = ALIGN(0x1000);
*(.text.multires_external_save_invoke)
. = ALIGN(0x1000);
*(.text.multires_external_save_exec)
. = ALIGN(0x1000);
*(.text.multires_external_pack_exec)
. = ALIGN(0x1000);
*(.text.multires_base_apply_invoke)
. = ALIGN(0x1000);
*(.text.multires_base_apply_exec)
. = ALIGN(0x1000);
*(.text.multiresModifier_base_apply)
. = ALIGN(0x1000);
*(.text.skin_edit_poll)
. = ALIGN(0x1000);
*(.text.skin_root_mark_exec .text.skin_root_clear)
. = ALIGN(0x1000);
*(.text.skin_loose_mark_clear_exec)
. = ALIGN(0x1000);
*(.text.skin_radii_equalize_exec)
. = ALIGN(0x1000);
*(.text.skin_poll)
. = ALIGN(0x1000);
*(.text.skin_armature_create_invoke)
. = ALIGN(0x1000);
*(.text.skin_armature_create_exec .text.skin_armature_bone_create)
. = ALIGN(0x1000);
*(.text.meshdeform_poll)
. = ALIGN(0x1000);
*(.text.meshdeform_bind_invoke)
. = ALIGN(0x1000);
*(.text.meshdeform_bind_exec)
. = ALIGN(0x1000);
*(.text.explode_poll)
. = ALIGN(0x1000);
*(.text.explode_refresh_invoke)
. = ALIGN(0x1000);
*(.text.explode_refresh_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_ocean_bake)
. = ALIGN(0x1000);
*(.text.ocean_bake_poll)
. = ALIGN(0x1000);
*(.text.ocean_bake_invoke)
. = ALIGN(0x1000);
*(.text.ocean_bake_exec)
. = ALIGN(0x1000);
*(.text.oceanbake_free)
. = ALIGN(0x1000);
*(.text.oceanbake_startjob)
. = ALIGN(0x1000);
*(.text.oceanbake_endjob)
. = ALIGN(0x1000);
*(.text.laplaciandeform_poll)
. = ALIGN(0x1000);
*(.text.laplaciandeform_bind_invoke)
. = ALIGN(0x1000);
*(.text.laplaciandeform_bind_exec)
. = ALIGN(0x1000);
*(.text.object_mode_poll)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_random)
. = ALIGN(0x1000);
*(.text.object_rand_verts_exec .text.interp_v3_v3v3_slerp_safe)
. = ALIGN(0x1000);
*(.text.vertex_parent_set_poll)
. = ALIGN(0x1000);
*(.text.vertex_parent_set_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_proxy_make)
. = ALIGN(0x1000);
*(.text.make_proxy_invoke)
. = ALIGN(0x1000);
*(.text.BKE_object_make_proxy .text.make_proxy_exec)
. = ALIGN(0x1000);
*(.text.BKE_object_obdata_add_from_type .text.BKE_object_add)
. = ALIGN(0x1000);
*(.text.rename_id)
. = ALIGN(0x1000);
*(.text.proxy_group_object_itemf)
. = ALIGN(0x1000);
*(.text.parent_clear_exec)
. = ALIGN(0x1000);
*(.text.ED_object_parent_clear)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_parent_set)
. = ALIGN(0x1000);
*(.text.parent_set_invoke)
. = ALIGN(0x1000);
*(.text.BKE_object_as_kdtree .text.parent_set_exec)
. = ALIGN(0x1000);
*(.text.modifiers_isDeformedByLattice)
. = ALIGN(0x1000);
*(.text.b_bone_spline_setup)
. = ALIGN(0x1000);
*(.text.ED_vgroup_data_clamp_range .text.create_vgroups_from_armature .text.subsurf_calculate_limit_positions)
. = ALIGN(0x1000);
*(.text.ED_object_parent_set .text.BKE_constraint_target_matrix_get .text.modifiers_isDeformedByCurve)
. = ALIGN(0x1000);
*(.text.parent_set_ui)
. = ALIGN(0x1000);
*(.text.uiDefAutoButsRNA)
. = ALIGN(0x1000);
*(.text.parent_set_draw_check_prop)
. = ALIGN(0x1000);
*(.text.parent_noinv_set_exec)
. = ALIGN(0x1000);
*(.text.object_slow_parent_clear_exec)
. = ALIGN(0x1000);
*(.text.object_slow_parent_set_exec)
. = ALIGN(0x1000);
*(.text.object_track_clear_exec)
. = ALIGN(0x1000);
*(.text.track_set_exec)
. = ALIGN(0x1000);
*(.text.move_to_layer_invoke)
. = ALIGN(0x1000);
*(.text.move_to_layer_exec)
. = ALIGN(0x1000);
*(.text.move_to_layer_init)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_make_links_scene)
. = ALIGN(0x1000);
*(.text.make_links_scene_exec)
. = ALIGN(0x1000);
*(.text.BKE_object_link_modifiers .text.make_links_data_exec .text.BKE_copy_animdata_id)
. = ALIGN(0x1000);
*(.text.ED_object_active_context)
. = ALIGN(0x1000);
*(.text.BKE_object_groups_clear)
. = ALIGN(0x1000);
*(.text.make_local_exec .text.make_local_makelocalmaterial .text.BKE_main_id_tag_all)
. = ALIGN(0x1000);
*(.text.BKE_library_make_local)
. = ALIGN(0x1000);
*(.text.make_local_strips)
. = ALIGN(0x1000);
*(.text.tag_localizable_looper)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_make_single_user)
. = ALIGN(0x1000);
*(.text.make_single_user_exec)
. = ALIGN(0x1000);
*(.text.single_object_users)
. = ALIGN(0x1000);
*(.text.single_obdata_users)
. = ALIGN(0x1000);
*(.text.drop_named_material_invoke)
. = ALIGN(0x1000);
*(.text.ED_view3d_give_base_under_cursor)
. = ALIGN(0x1000);
*(.text.object_unlink_data_exec)
. = ALIGN(0x1000);
*(.text.RNA_property_update)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_select_by_type)
. = ALIGN(0x1000);
*(.text.object_select_by_type_exec)
. = ALIGN(0x1000);
*(.text.objects_selectable_poll)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_select_linked)
. = ALIGN(0x1000);
*(.text.object_select_linked_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_select_grouped)
. = ALIGN(0x1000);
*(.text.object_select_grouped_exec .text.select_grouped_children)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_select_by_layer)
. = ALIGN(0x1000);
*(.text.object_select_by_layer_exec)
. = ALIGN(0x1000);
*(.text.object_select_all_exec)
. = ALIGN(0x1000);
*(.text.object_select_same_group_exec)
. = ALIGN(0x1000);
*(.text.object_select_mirror_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_select_random)
. = ALIGN(0x1000);
*(.text.RNA_def_float_percentage)
. = ALIGN(0x1000);
*(.text.object_select_random_exec)
. = ALIGN(0x1000);
*(.text.shape_key_mode_poll)
. = ALIGN(0x1000);
*(.text.shape_key_add_exec)
. = ALIGN(0x1000);
*(.text.shape_key_mode_exists_poll)
. = ALIGN(0x1000);
*(.text.shape_key_remove_exec)
. = ALIGN(0x1000);
*(.text.shape_key_poll)
. = ALIGN(0x1000);
*(.text.shape_key_clear_exec)
. = ALIGN(0x1000);
*(.text.shape_key_retime_exec)
. = ALIGN(0x1000);
*(.text.shape_key_mirror_exec)
. = ALIGN(0x1000);
*(.text.shape_key_move_poll)
. = ALIGN(0x1000);
*(.text.shape_key_move_exec .text.BKE_keyblock_move)
. = ALIGN(0x1000);
*(.text.object_location_clear_exec)
. = ALIGN(0x1000);
*(.text.object_clear_loc)
. = ALIGN(0x1000);
*(.text.object_clear_rot)
. = ALIGN(0x1000);
*(.text.object_clear_scale)
. = ALIGN(0x1000);
*(.text.object_rotation_clear_exec)
. = ALIGN(0x1000);
*(.text.object_scale_clear_exec)
. = ALIGN(0x1000);
*(.text.object_clear_transform_generic_exec)
. = ALIGN(0x1000);
*(.text.ANIM_get_keyingset_for_autokeying)
. = ALIGN(0x1000);
*(.text.ED_autokeyframe_object)
. = ALIGN(0x1000);
*(.text.object_origin_clear_exec)
. = ALIGN(0x1000);
*(.text.visual_transform_apply_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_transform_apply)
. = ALIGN(0x1000);
*(.text.object_transform_apply_exec .text.ED_armature_apply_transform .text.BKE_tracking_reconstruction_scale)
. = ALIGN(0x1000);
*(.text.multires_apply_smat)
. = ALIGN(0x1000);
*(.text.ED_armature_transform_bones)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_origin_set)
. = ALIGN(0x1000);
*(.text.object_origin_set_exec .text.ED_armature_origin_set .text.BKE_curve_center_median .text.BKE_curve_center_bounds .text.BKE_curve_translate .text.BKE_lattice_translate .text.BKE_mesh_translate .text.BKE_mesh_center_centroid)
. = ALIGN(0x1000);
*(.text.BKE_object_workob_calc_parent)
. = ALIGN(0x1000);
*(.text.RNA_struct_property_is_set)
. = ALIGN(0x1000);
*(.text.BKE_object_minmax_dupli)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_warp)
. = ALIGN(0x1000);
*(.text.object_warp_verts_exec)
. = ALIGN(0x1000);
*(.text.transform_armature_mirror_update)
. = ALIGN(0x1000);
*(.text.ED_transverts_update_obedit)
. = ALIGN(0x1000);
*(.text.ED_transverts_create_from_obedit)
. = ALIGN(0x1000);
*(.text.BKE_nurb_handles_test)
. = ALIGN(0x1000);
*(.text.BKE_nurb_bezt_calc_plane)
. = ALIGN(0x1000);
*(.text.vertex_group_supported_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_add_exec)
. = ALIGN(0x1000);
*(.text.vertex_group_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_remove_exec)
. = ALIGN(0x1000);
*(.text.vertex_group_vert_select_unlocked_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_vert_select_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_assign_new_exec)
. = ALIGN(0x1000);
*(.text.vertex_group_assign_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_remove_from)
. = ALIGN(0x1000);
*(.text.vertex_group_remove_from_exec)
. = ALIGN(0x1000);
*(.text.vertex_group_select_exec)
. = ALIGN(0x1000);
*(.text.vertex_group_deselect_exec)
. = ALIGN(0x1000);
*(.text.paintvert_flush_flags)
. = ALIGN(0x1000);
*(.text.BM_mesh_deselect_flush)
. = ALIGN(0x1000);
*(.text.vgroup_select_verts)
. = ALIGN(0x1000);
*(.text.vertex_group_copy_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_levels)
. = ALIGN(0x1000);
*(.text.vertex_group_levels_exec)
. = ALIGN(0x1000);
*(.text.rna_vertex_group_with_single_itemf)
. = ALIGN(0x1000);
*(.text.vertex_group_normalize_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_normalize_all)
. = ALIGN(0x1000);
*(.text.vertex_group_normalize_all_exec .text.defvert_normalize_lock_single .text.defvert_normalize_lock_map)
. = ALIGN(0x1000);
*(.text.rna_vertex_group_select_itemf)
. = ALIGN(0x1000);
*(.text.ED_object_vgroup_selection_itemf_helper)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_fix)
. = ALIGN(0x1000);
*(.text.vertex_group_mesh_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_fix_exec)
. = ALIGN(0x1000);
*(.text.vertex_group_lock_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_invert)
. = ALIGN(0x1000);
*(.text.vertex_group_invert_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_blend)
. = ALIGN(0x1000);
*(.text.vertex_group_blend_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_blend_exec .text.vgroup_blend_subset)
. = ALIGN(0x1000);
*(.text.ED_vgroup_parray_mirror_sync)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_clean)
. = ALIGN(0x1000);
*(.text.ED_vgroup_parray_remove_zero .text.vertex_group_clean_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_quantize)
. = ALIGN(0x1000);
*(.text.vertex_group_quantize_exec)
. = ALIGN(0x1000);
*(.text.ED_mesh_mirror_get_vert)
. = ALIGN(0x1000);
*(.text.ED_vgroup_parray_mirror_assign)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_limit_total)
. = ALIGN(0x1000);
*(.text.vertex_group_limit_total_exec)
. = ALIGN(0x1000);
*(.text.inv_cmp_mdef_vert_weights)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_mirror)
. = ALIGN(0x1000);
*(.text.ED_vgroup_mirror .text.dvert_mirror_op .text.vertex_group_mirror_exec .text.defgroup_flip_map_single)
. = ALIGN(0x1000);
*(.text.EDBM_verts_mirror_cache_begin_ex)
. = ALIGN(0x1000);
*(.text.vertex_group_copy_to_linked_exec)
. = ALIGN(0x1000);
*(.text.ED_vgroup_array_copy .text.vertex_group_copy_to_selected_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_transfer_weight)
. = ALIGN(0x1000);
*(.text.vertex_group_mesh_supported_poll)
. = ALIGN(0x1000);
*(.text.vertex_group_transfer_weight_exec .text.ed_vgroup_transfer_weight)
. = ALIGN(0x1000);
*(.text.ED_vgroup_parray_alloc)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_group_set_active)
. = ALIGN(0x1000);
*(.text.set_active_group_exec)
. = ALIGN(0x1000);
*(.text.vgroup_itemf)
. = ALIGN(0x1000);
*(.text.vertex_group_sort_exec .text.vgroup_sort_bone_hierarchy)
. = ALIGN(0x1000);
*(.text.vgroup_move_exec)
. = ALIGN(0x1000);
*(.text.vgroup_do_remap)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_weight_paste)
. = ALIGN(0x1000);
*(.text.vertex_group_vert_select_mesh_poll)
. = ALIGN(0x1000);
*(.text.vertex_weight_paste_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_weight_delete)
. = ALIGN(0x1000);
*(.text.vertex_weight_delete_exec)
. = ALIGN(0x1000);
*(.text.OBJECT_OT_vertex_weight_set_active)
. = ALIGN(0x1000);
*(.text.vertex_weight_set_active_exec)
. = ALIGN(0x1000);
*(.text.vertex_weight_normalize_active_vertex_exec)
. = ALIGN(0x1000);
*(.text.defvert_normalize_subset)
. = ALIGN(0x1000);
*(.text.vertex_weight_copy_exec)
. = ALIGN(0x1000);
*(.text.BKE_objdef_validmap_get)
. = ALIGN(0x1000);
*(.text.ED_vgroup_subset_from_select_type)
. = ALIGN(0x1000);
*(.text.defgroup_flip_map)
. = ALIGN(0x1000);
*(.text.ED_mesh_mirrtopo_init)
. = ALIGN(0x1000);
*(.text.ED_mesh_mirror_spatial_table)
. = ALIGN(0x1000);
*(.text.editbmesh_get_x_mirror_vert)
. = ALIGN(0x1000);
*(.text.defvert_copy_index)
. = ALIGN(0x1000);
*(.text.armature_click_extrude_invoke)
. = ALIGN(0x1000);
*(.text.ED_view3d_win_to_3d)
. = ALIGN(0x1000);
*(.text.armature_click_extrude_exec)
. = ALIGN(0x1000);
*(.text.armature_duplicate_selected_exec)
. = ALIGN(0x1000);
*(.text.armature_extrude_exec)
. = ALIGN(0x1000);
*(.text.armature_bone_primitive_add_exec)
. = ALIGN(0x1000);
*(.text.ED_armature_deselect_all)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_subdivide)
. = ALIGN(0x1000);
*(.text.armature_subdivide_exec)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_calculate_roll)
. = ALIGN(0x1000);
*(.text.armature_calc_roll_exec)
. = ALIGN(0x1000);
*(.text.armature_fill_bones_exec)
. = ALIGN(0x1000);
*(.text.armature_merge_exec .text.bones_merge)
. = ALIGN(0x1000);
*(.text.armature_switch_direction_exec)
. = ALIGN(0x1000);
*(.text.armature_tag_select_mirrored)
. = ALIGN(0x1000);
*(.text.armature_align_bones_exec .text.fix_editbone_connected_children)
. = ALIGN(0x1000);
*(.text.armature_split_exec)
. = ALIGN(0x1000);
*(.text.armature_delete_selected_exec .text.armature_select_mirrored)
. = ALIGN(0x1000);
*(.text.armature_hide_exec)
. = ALIGN(0x1000);
*(.text.armature_reveal_exec)
. = ALIGN(0x1000);
*(.text.editbone_unique_check)
. = ALIGN(0x1000);
*(.text.bone_unique_check)
. = ALIGN(0x1000);
*(.text.armature_flip_names_exec)
. = ALIGN(0x1000);
*(.text.armature_autoside_names_exec)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_separate)
. = ALIGN(0x1000);
*(.text.separate_armature_exec .text.separate_armature_bones)
. = ALIGN(0x1000);
*(.text.ED_armature_to_edit)
. = ALIGN(0x1000);
*(.text.BKE_copy_animdata_id_action)
. = ALIGN(0x1000);
*(.text.BKE_object_relink)
. = ALIGN(0x1000);
*(.text.set_sca_new_poins_ob)
. = ALIGN(0x1000);
*(.text.object_add_duplicate_internal)
. = ALIGN(0x1000);
*(.text.ED_object_add_duplicate)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_parent_set)
. = ALIGN(0x1000);
*(.text.armature_parent_set_invoke)
. = ALIGN(0x1000);
*(.text.armature_parent_set_exec .text.bone_connect_to_new_parent)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_parent_clear)
. = ALIGN(0x1000);
*(.text.armature_parent_clear_exec)
. = ALIGN(0x1000);
*(.text.armature_select_linked_invoke)
. = ALIGN(0x1000);
*(.text.armature_select_linked_poll)
. = ALIGN(0x1000);
*(.text.armature_de_select_all_exec)
. = ALIGN(0x1000);
*(.text.armature_de_select_more_exec)
. = ALIGN(0x1000);
*(.text.armature_de_select_less_exec)
. = ALIGN(0x1000);
*(.text.armature_select_more_less)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_select_similar)
. = ALIGN(0x1000);
*(.text.armature_select_similar_exec .text.BKE_deform_split_suffix .text.BKE_deform_split_prefix)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_select_hierarchy)
. = ALIGN(0x1000);
*(.text.armature_select_hierarchy_exec)
. = ALIGN(0x1000);
*(.text.ARMATURE_OT_select_mirror)
. = ALIGN(0x1000);
*(.text.armature_select_mirror_exec)
. = ALIGN(0x1000);
*(.text.armature_shortest_path_pick_invoke)
. = ALIGN(0x1000);
*(.text.glInitNames)
. = ALIGN(0x1000);
*(.text.view3d_set_viewcontext)
. = ALIGN(0x1000);
*(.text.wmSubWindowSet)
. = ALIGN(0x1000);
*(.text.view3d_operator_needs_opengl)
. = ALIGN(0x1000);
*(.text.CTX_data_edit_object)
. = ALIGN(0x1000);
*(.text.vgroup_add_unique_bone_cb)
. = ALIGN(0x1000);
*(.text.bone_skinnable_cb)
. = ALIGN(0x1000);
*(.text.dgroup_skinnable_cb)
. = ALIGN(0x1000);
*(.text.get_armature_edit)
. = ALIGN(0x1000);
*(.text.free_undoBones)
. = ALIGN(0x1000);
*(.text.undoBones_to_editBones)
. = ALIGN(0x1000);
*(.text.editBones_to_undoBones)
. = ALIGN(0x1000);
*(.text.nextFixedSubdivision)
. = ALIGN(0x1000);
*(.text.nextAdaptativeSubdivision)
. = ALIGN(0x1000);
*(.text.nextLengthSubdivision)
. = ALIGN(0x1000);
*(.text.RIG_freeRigArc)
. = ALIGN(0x1000);
*(.text.exec_retargetArctoArc .text.repositionBone .text.solveJoints .text.calcCostAngleLengthDistance .text.rollBoneByQuatAligned .text.repositionControl .text.finalizeControl)
. = ALIGN(0x1000);
*(.text.rotation_between_vecs_to_quat)
. = ALIGN(0x1000);
*(.text.headPoint)
. = ALIGN(0x1000);
*(.text.tailPoint)
. = ALIGN(0x1000);
*(.text.peekPoint)
. = ALIGN(0x1000);
*(.text.nextPoint)
. = ALIGN(0x1000);
*(.text.nextNPoint)
. = ALIGN(0x1000);
*(.text.previousPoint)
. = ALIGN(0x1000);
*(.text.iteratorStopped)
. = ALIGN(0x1000);
*(.text.sk_detectCutGesture)
. = ALIGN(0x1000);
*(.text.sk_applyCutGesture)
. = ALIGN(0x1000);
*(.text.sk_detectTrimGesture)
. = ALIGN(0x1000);
*(.text.sk_applyTrimGesture)
. = ALIGN(0x1000);
*(.text.sk_detectCommandGesture)
. = ALIGN(0x1000);
*(.text.sk_applyCommandGesture .text.sk_flattenStroke)
. = ALIGN(0x1000);
*(.text.sk_detectDeleteGesture)
. = ALIGN(0x1000);
*(.text.sk_applyDeleteGesture)
. = ALIGN(0x1000);
*(.text.sk_applyMergeGesture)
. = ALIGN(0x1000);
*(.text.sk_applyReverseGesture)
. = ALIGN(0x1000);
*(.text.sk_detectConvertGesture)
. = ALIGN(0x1000);
*(.text.sk_applyConvertGesture)
. = ALIGN(0x1000);
*(.text.ED_operator_sketch_mode)
. = ALIGN(0x1000);
*(.text.ED_operator_sketch_full_mode)
. = ALIGN(0x1000);
*(.text.ED_operator_sketch_mode_active_stroke)
. = ALIGN(0x1000);
*(.text.sketch_delete)
. = ALIGN(0x1000);
*(.text.sketch_select)
. = ALIGN(0x1000);
*(.text.sketch_cancel_invoke)
. = ALIGN(0x1000);
*(.text.sketch_convert)
. = ALIGN(0x1000);
*(.text.sketch_finish)
. = ALIGN(0x1000);
*(.text.ED_rollBoneToVector)
. = ALIGN(0x1000);
*(.text.make_boneList)
. = ALIGN(0x1000);
*(.text.duplicateEditBoneObjects .text.BKE_pose_channel_copy_data)
. = ALIGN(0x1000);
*(.text.updateDuplicateSubtargetObjects)
. = ALIGN(0x1000);
*(.text.ED_armature_edit_bone_add)
. = ALIGN(0x1000);
*(.text.REEB_freeGraph .text.RIG_freeRigGraph)
. = ALIGN(0x1000);
*(.text.detectCycle)
. = ALIGN(0x1000);
*(.text.BLI_buildAdjacencyList)
. = ALIGN(0x1000);
*(.text.BLI_replaceNode)
. = ALIGN(0x1000);
*(.text.RIG_graphFromArmature .text.RIG_arcFromBoneChain .text.RIG_appendEdgeToArc .text.RIG_removeUneededOffsets .text.RIG_reconnectControlBones .text.BLI_replaceNodeInArc .text.BLI_markdownSymmetry .text.markdownSymmetryArc .text.testAxialSymmetry .text.testRadialSymmetry)
. = ALIGN(0x1000);
*(.text.subtreeShape)
. = ALIGN(0x1000);
*(.text.subdivideArcBy .text.BIF_retargetArc .text.renameTemplateBone .text.sk_retargetStroke .text.sk_convertStroke)
. = ALIGN(0x1000);
*(.text.sketch_draw_preview)
. = ALIGN(0x1000);
*(.text.sketch_draw_stroke)
. = ALIGN(0x1000);
*(.text.sketch_draw_stroke_modal)
. = ALIGN(0x1000);
*(.text.sketch_draw_stroke_cancel)
. = ALIGN(0x1000);
*(.text.sketch_draw_gesture)
. = ALIGN(0x1000);
*(.text.sketch_draw_gesture_modal)
. = ALIGN(0x1000);
*(.text.sk_getStrokeSnapPoint .text.sk_projectDrawPoint)
. = ALIGN(0x1000);
*(.text.ED_view3d_win_to_vector)
. = ALIGN(0x1000);
*(.text.snapObjectsContext)
. = ALIGN(0x1000);
*(.text.view3d_win_to_ray_segment)
. = ALIGN(0x1000);
*(.text.BKE_boundbox_ray_hit_check .text.peelObjects .text.peelDerivedMesh .text.isect_ray_tri_threshold_v3)
. = ALIGN(0x1000);
*(.text.sk_draw_stroke)
. = ALIGN(0x1000);
*(.text.sk_filterStroke)
. = ALIGN(0x1000);
*(.text.calcArcCorrelation)
. = ALIGN(0x1000);
*(.text.sk_detectMergeGesture)
. = ALIGN(0x1000);
*(.text.sk_detectReverseGesture)
. = ALIGN(0x1000);
*(.text.sketch_draw_modal .text.isect_line_line_strict_v3)
. = ALIGN(0x1000);
*(.text.sketch_draw_gesture_cancel)
. = ALIGN(0x1000);
*(.text.ED_operator_sketch_mode_gesture)
. = ALIGN(0x1000);
*(.text.mesh_deform_bind)
. = ALIGN(0x1000);
*(.text.POSE_OT_paths_calculate)
. = ALIGN(0x1000);
*(.text.pose_calculate_paths_invoke)
. = ALIGN(0x1000);
*(.text.pose_calculate_paths_exec)
. = ALIGN(0x1000);
*(.text.animviz_verify_motionpaths)
. = ALIGN(0x1000);
*(.text.pose_update_paths_exec)
. = ALIGN(0x1000);
*(.text.animviz_get_object_motionpaths)
. = ALIGN(0x1000);
*(.text.animviz_calc_motionpaths .text.motionpaths_calc_update_scene)
. = ALIGN(0x1000);
*(.text.pose_clear_paths_exec)
. = ALIGN(0x1000);
*(.text.pose_flip_names_exec)
. = ALIGN(0x1000);
*(.text.BKE_deform_flip_side_name)
. = ALIGN(0x1000);
*(.text.pose_autoside_names_exec)
. = ALIGN(0x1000);
*(.text.bone_autoside_name)
. = ALIGN(0x1000);
*(.text.pose_bone_rotmode_exec)
. = ALIGN(0x1000);
*(.text.pose_armature_layers_showall_exec)
. = ALIGN(0x1000);
*(.text.armature_layers_poll)
. = ALIGN(0x1000);
*(.text.armature_layers_invoke)
. = ALIGN(0x1000);
*(.text.armature_layers_exec)
. = ALIGN(0x1000);
*(.text.pose_bone_layers_invoke)
. = ALIGN(0x1000);
*(.text.pose_bone_layers_exec)
. = ALIGN(0x1000);
*(.text.armature_bone_layers_invoke)
. = ALIGN(0x1000);
*(.text.armature_bone_layers_exec)
. = ALIGN(0x1000);
*(.text.RNA_boolean_set_array)
. = ALIGN(0x1000);
*(.text.RNA_boolean_get_array)
. = ALIGN(0x1000);
*(.text.pose_hide_exec)
. = ALIGN(0x1000);
*(.text.hide_selected_pose_bone_cb)
. = ALIGN(0x1000);
*(.text.hide_unselected_pose_bone_cb)
. = ALIGN(0x1000);
*(.text.pose_reveal_exec)
. = ALIGN(0x1000);
*(.text.bone_looper)
. = ALIGN(0x1000);
*(.text.ray_aabb_intersect .text.isect_ray_aabb)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_node_planes_contain_AABB)
. = ALIGN(0x1000);
*(.text.test_planes_aabb)
. = ALIGN(0x1000);
*(.text.ptcache_softbody_totpoint)
. = ALIGN(0x1000);
*(.text.ptcache_softbody_error)
. = ALIGN(0x1000);
*(.text.ptcache_softbody_write)
. = ALIGN(0x1000);
*(.text.ptcache_softbody_read)
. = ALIGN(0x1000);
*(.text.ptcache_softbody_interpolate)
. = ALIGN(0x1000);
*(.text.ptcache_basic_header_write)
. = ALIGN(0x1000);
*(.text.ptcache_basic_header_read)
. = ALIGN(0x1000);
*(.text.ptcache_particle_totpoint)
. = ALIGN(0x1000);
*(.text.ptcache_particle_totwrite)
. = ALIGN(0x1000);
*(.text.ptcache_particle_error)
. = ALIGN(0x1000);
*(.text.ptcache_particle_write)
. = ALIGN(0x1000);
*(.text.ptcache_particle_read)
. = ALIGN(0x1000);
*(.text.ptcache_particle_interpolate)
. = ALIGN(0x1000);
*(.text.ptcache_particle_extra_write)
. = ALIGN(0x1000);
*(.text.ptcache_particle_extra_read)
. = ALIGN(0x1000);
*(.text.ptcache_cloth_totpoint)
. = ALIGN(0x1000);
*(.text.ptcache_cloth_error)
. = ALIGN(0x1000);
*(.text.ptcache_cloth_write)
. = ALIGN(0x1000);
*(.text.ptcache_cloth_read)
. = ALIGN(0x1000);
*(.text.ptcache_cloth_interpolate)
. = ALIGN(0x1000);
*(.text.ptcache_smoke_totpoint)
. = ALIGN(0x1000);
*(.text.ptcache_smoke_error)
. = ALIGN(0x1000);
*(.text.ptcache_smoke_read)
. = ALIGN(0x1000);
*(.text.ptcache_smoke_write)
. = ALIGN(0x1000);
*(.text.ptcache_dynamicpaint_totpoint)
. = ALIGN(0x1000);
*(.text.ptcache_dynamicpaint_error)
. = ALIGN(0x1000);
*(.text.ptcache_dynamicpaint_write)
. = ALIGN(0x1000);
*(.text.ptcache_dynamicpaint_read)
. = ALIGN(0x1000);
*(.text.ptcache_rigidbody_totpoint)
. = ALIGN(0x1000);
*(.text.ptcache_rigidbody_error)
. = ALIGN(0x1000);
*(.text.ptcache_rigidbody_write)
. = ALIGN(0x1000);
*(.text.ptcache_rigidbody_read)
. = ALIGN(0x1000);
*(.text.ptcache_rigidbody_interpolate)
. = ALIGN(0x1000);
*(.text.ptcache_bake_thread)
. = ALIGN(0x1000);
*(.text.scene_update_object_func)
. = ALIGN(0x1000);
*(.text.seqcache_hashhash)
. = ALIGN(0x1000);
*(.text.seqcache_hashcmp)
. = ALIGN(0x1000);
*(.text.seqcache_key_check_seq)
. = ALIGN(0x1000);
*(.text.load_gammacross)
. = ALIGN(0x1000);
*(.text.load_noop)
. = ALIGN(0x1000);
*(.text.load_speed_effect)
. = ALIGN(0x1000);
*(.text.init_execution)
. = ALIGN(0x1000);
*(.text.get_default_fac_noop)
. = ALIGN(0x1000);
*(.text.store_icu_yrange_noop)
. = ALIGN(0x1000);
*(.text.early_out_noop)
. = ALIGN(0x1000);
*(.text.free_noop)
. = ALIGN(0x1000);
*(.text.num_inputs_default)
. = ALIGN(0x1000);
*(.text.init_noop)
. = ALIGN(0x1000);
*(.text.init_alpha_over_or_under)
. = ALIGN(0x1000);
*(.text.init_gammacross)
. = ALIGN(0x1000);
*(.text.init_wipe_effect)
. = ALIGN(0x1000);
*(.text.init_glow_effect)
. = ALIGN(0x1000);
*(.text.init_transform_effect)
. = ALIGN(0x1000);
*(.text.init_solid_color)
. = ALIGN(0x1000);
*(.text.init_speed_effect)
. = ALIGN(0x1000);
*(.text.init_gaussian_blur_effect)
. = ALIGN(0x1000);
*(.text.num_inputs_wipe)
. = ALIGN(0x1000);
*(.text.num_inputs_glow)
. = ALIGN(0x1000);
*(.text.num_inputs_transform)
. = ALIGN(0x1000);
*(.text.num_inputs_color)
. = ALIGN(0x1000);
*(.text.num_inputs_speed)
. = ALIGN(0x1000);
*(.text.num_inputs_multicam)
. = ALIGN(0x1000);
*(.text.num_inputs_adjustment)
. = ALIGN(0x1000);
*(.text.num_inputs_gaussian_blur)
. = ALIGN(0x1000);
*(.text.copy_wipe_effect)
. = ALIGN(0x1000);
*(.text.copy_glow_effect)
. = ALIGN(0x1000);
*(.text.copy_transform_effect)
. = ALIGN(0x1000);
*(.text.copy_solid_color)
. = ALIGN(0x1000);
*(.text.copy_speed_effect)
. = ALIGN(0x1000);
*(.text.copy_gaussian_blur_effect)
. = ALIGN(0x1000);
*(.text.free_gammacross)
. = ALIGN(0x1000);
*(.text.free_wipe_effect)
. = ALIGN(0x1000);
*(.text.free_glow_effect)
. = ALIGN(0x1000);
*(.text.free_transform_effect)
. = ALIGN(0x1000);
*(.text.free_solid_color)
. = ALIGN(0x1000);
*(.text.free_speed_effect)
. = ALIGN(0x1000);
*(.text.free_gaussian_blur_effect)
. = ALIGN(0x1000);
*(.text.early_out_fade)
. = ALIGN(0x1000);
*(.text.early_out_mul_input2)
. = ALIGN(0x1000);
*(.text.early_out_color)
. = ALIGN(0x1000);
*(.text.early_out_speed)
. = ALIGN(0x1000);
*(.text.early_out_multicam)
. = ALIGN(0x1000);
*(.text.early_out_adjustment)
. = ALIGN(0x1000);
*(.text.early_out_gaussian_blur)
. = ALIGN(0x1000);
*(.text.store_icu_yrange_speed)
. = ALIGN(0x1000);
*(.text.get_default_fac_fade)
. = ALIGN(0x1000);
*(.text.do_wipe_effect .text.check_zone)
. = ALIGN(0x1000);
*(.text.do_glow_effect .text.RVBlurBitmap2_float)
. = ALIGN(0x1000);
*(.text.do_transform_effect)
. = ALIGN(0x1000);
*(.text.do_solid_color)
. = ALIGN(0x1000);
*(.text.do_speed_effect)
. = ALIGN(0x1000);
*(.text.do_multicam)
. = ALIGN(0x1000);
*(.text.do_adjustment .text.BKE_sequence_metastrip)
. = ALIGN(0x1000);
*(.text.seq_open_anim_file)
. = ALIGN(0x1000);
*(.text.BKE_tracking_stabilization_data_to_mat4 .text._va_mul_m4_series_8)
. = ALIGN(0x1000);
*(.text.BKE_tracking_stabilization_data_get .text.stabilization_calculate_data .text.BKE_tracking_stabilize_frame .text.BKE_movieclip_get_stable_ibuf)
. = ALIGN(0x1000);
*(.text.do_merge_fullsample .text.tag_scenes_for_render .text.tag_dependend_objects_for_render)
. = ALIGN(0x1000);
*(.text.ntreeCompositTagRender)
. = ALIGN(0x1000);
*(.text.isect_seg_seg_v2_point)
. = ALIGN(0x1000);
*(.text.buf_rectfill_area)
. = ALIGN(0x1000);
*(.text.BKE_mask_spline_differentiate_with_resolution)
. = ALIGN(0x1000);
*(.text.stampdata .text.BKE_imbuf_stamp_info .text.IMB_metadata_change_field)
. = ALIGN(0x1000);
*(.text.BKE_maskrasterize_handle_init .text.BLI_scanfill_calc_self_isect)
. = ALIGN(0x1000);
*(.text.BKE_mask_spline_feather_resolution)
. = ALIGN(0x1000);
*(.text.BKE_mask_spline_feather_collapse_inner_loops .text.feather_bucket_check_intersect .text.BKE_mask_spline_feather_differentiated_points_with_resolution)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_preprocessed_cache_put .text.BKE_sequence_modifier_apply_stack .text.seq_proxy_get_fname .text.seq_render_strip .text.seq_render_strip_stack .text.copy_to_ibuf_still .text.seq_render_strip_stack_apply_effect .text.RE_BlenderFrame .text.render_initialize_from_main .text.do_render_all_options .text.do_write_image_or_movie .text.do_render_fields_blur_3d .text.do_render_blur_3d .text.merge_renderresult_fields .text.render_result_single_layer_end .text.render_result_rect_to_ibuf .text.BKE_stamp_buf .text.IMB_saturation)
. = ALIGN(0x1000);
*(.text.seq_render_mask)
. = ALIGN(0x1000);
*(.text.volume_precache .text.ms_diffuse .text.get_avg_surrounds .text.RE_Database_FromScene .text.RE_Database_Preprocess .text.env_rotate_scene .text.make_envmaps .text.RE_SetEnvmapCamera .text.RE_SetCamera .text.scatter_settings_new .text.scatter_tree_new .text.scatter_tree_build .text.create_octree_node .text.sum_radiance .text.make_sss_tree .text.sss_create_tree_mat)
. = ALIGN(0x1000);
*(.text.project_renderdata)
. = ALIGN(0x1000);
*(.text.threaded_tile_processor .text.render_result_exr_file_begin .text.render_result_exr_file_end)
. = ALIGN(0x1000);
*(.text.RE_FreeRender)
. = ALIGN(0x1000);
*(.text.render_result_exr_file_read_sample)
. = ALIGN(0x1000);
*(.text.RE_WriteRenderResult)
. = ALIGN(0x1000);
*(.text.free_sample_tables)
. = ALIGN(0x1000);
*(.text.md5_process_block)
. = ALIGN(0x1000);
*(.text.render_result_exr_file_cache_path)
. = ALIGN(0x1000);
*(.text.make_sample_tables .text.calc_weight .text.RE_InitState)
. = ALIGN(0x1000);
*(.text.BLI_make_file_string)
. = ALIGN(0x1000);
*(.text.RE_Database_FromScene_Vectors .text.speedvector_project .text.database_fromscene_vectors .text.copy_dbase_object_vectors .text.RE_engine_render .text.do_render_3d .text.add_halo_flare .text.renderhalo_post .text.IMB_scalefastImBuf)
. = ALIGN(0x1000);
*(.text.IMB_display_buffer_transform_apply)
. = ALIGN(0x1000);
*(.text.point_inside_obi)
. = ALIGN(0x1000);
*(.text.makeraytree_object)
. = ALIGN(0x1000);
*(.text.BKE_object_is_animated .text.psys_render_simplify_params .text.psys_make_billboard .text.psys_make_temp_pointcache .text.cache_strand_surface .text.strand_minmax .text.InitSunSky .text.init_render_world .text.database_init_objects .text.add_lightgroup .text.add_render_lamp .text.init_render_object .text.dupli_render_particle_set .text.set_dupli_tex_mat .text.assign_dupligroup_dupli .text.find_dupli_instances .text.add_group_render_dupli_obs .text.init_render_object_data .text.give_render_material .text.flag_render_node_material .text.get_particle_uvco_mcol .text.particle_curve .text.particle_normal_ren .text.calc_vertexnormals .text.init_render_dm .text.dl_surf_to_renderdata .text.displace .text.as_addvert_lnor .text.split_quads .text.displace_render_vert .text.make_occ_tree .text.occ_sum_occlusion .text.occ_build_sh_normalize .text.makeraytree .text.init_jitter_plane .text.init_ao_sphere .text.init_render_textures .text.RE_vertren_copy .text.RE_vlakren_copy .text.RE_set_customdata_names .text.RE_inithalo .text.RE_inithalo_particle .text.threaded_makeshadowbufs .text.BKE_curve_surf_make_orco .text.BKE_curve_make_orco .text.BKE_displist_make_orco)
. = ALIGN(0x1000);
*(.text.ntreeShaderGetTexcoMode .text.init_render_material .text.do_init_render_material .text.init_render_nodetree)
. = ALIGN(0x1000);
*(.text.cache_voxeldata)
. = ALIGN(0x1000);
*(.text.cache_pointdensity)
. = ALIGN(0x1000);
*(.text.RE_NewRender)
. = ALIGN(0x1000);
*(.text.RE_parts_init)
. = ALIGN(0x1000);
*(.text.gammacross_init_execution)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_transform_threaded)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_imbuf_to_sequencer_space)
. = ALIGN(0x1000);
*(.text.prepare_effect_imbufs)
. = ALIGN(0x1000);
*(.text.do_cross_effect)
. = ALIGN(0x1000);
*(.text.do_cross_effect_float .text.do_cross_effect_byte)
. = ALIGN(0x1000);
*(.text.do_add_effect)
. = ALIGN(0x1000);
*(.text.do_sub_effect)
. = ALIGN(0x1000);
*(.text.do_alphaover_effect)
. = ALIGN(0x1000);
*(.text.do_alphaunder_effect)
. = ALIGN(0x1000);
*(.text.do_gammacross_effect)
. = ALIGN(0x1000);
*(.text.do_mul_effect)
. = ALIGN(0x1000);
*(.text.do_overdrop_effect)
. = ALIGN(0x1000);
*(.text.do_alphaover_effect_float .text.do_alphaover_effect_byte)
. = ALIGN(0x1000);
*(.text.do_gaussian_blur_effect)
. = ALIGN(0x1000);
*(.text.maskmodifier_apply)
. = ALIGN(0x1000);
*(.text.maskmodifier_apply_threaded)
. = ALIGN(0x1000);
*(.text.modifier_init_handle)
. = ALIGN(0x1000);
*(.text.modifier_do_thread)
. = ALIGN(0x1000);
*(.text.brightcontrast_apply)
. = ALIGN(0x1000);
*(.text.brightcontrast_apply_threaded)
. = ALIGN(0x1000);
*(.text.hue_correct_init_data)
. = ALIGN(0x1000);
*(.text.hue_correct_free_data)
. = ALIGN(0x1000);
*(.text.hue_correct_copy_data)
. = ALIGN(0x1000);
*(.text.hue_correct_apply)
. = ALIGN(0x1000);
*(.text.hue_correct_apply_threaded)
. = ALIGN(0x1000);
*(.text.curves_init_data)
. = ALIGN(0x1000);
*(.text.curves_free_data)
. = ALIGN(0x1000);
*(.text.curves_copy_data)
. = ALIGN(0x1000);
*(.text.curves_apply)
. = ALIGN(0x1000);
*(.text.curves_apply_threaded)
. = ALIGN(0x1000);
*(.text.colorBalance_init_data)
. = ALIGN(0x1000);
*(.text.colorBalance_apply)
. = ALIGN(0x1000);
*(.text.clear_scene_in_allseqs_cb)
. = ALIGN(0x1000);
*(.text.seqbase_unique_name_recursive_cb)
. = ALIGN(0x1000);
*(.text.render_effect_execute_init_handle)
. = ALIGN(0x1000);
*(.text.render_effect_execute_do_thread)
. = ALIGN(0x1000);
*(.text.color_balance_init_handle)
. = ALIGN(0x1000);
*(.text.color_balance_do_thread)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_add_sound_strip)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_add_movie_strip)
. = ALIGN(0x1000);
*(.text.seq_load_apply)
. = ALIGN(0x1000);
*(.text.exec_scan_for_ext_spring_forces)
. = ALIGN(0x1000);
*(.text.ccgDM_getMinMax)
. = ALIGN(0x1000);
*(.text.ccgDM_getNumVerts)
. = ALIGN(0x1000);
*(.text.ccgDM_getNumEdges)
. = ALIGN(0x1000);
*(.text.ccgDM_getNumTessFaces)
. = ALIGN(0x1000);
*(.text.ccgDM_getNumLoops)
. = ALIGN(0x1000);
*(.text.ccgDM_getFinalEdge)
. = ALIGN(0x1000);
*(.text.ccgDM_getFinalFace)
. = ALIGN(0x1000);
*(.text.ccgDM_getFinalVertCo)
. = ALIGN(0x1000);
*(.text.ccgDM_getFinalVertNo)
. = ALIGN(0x1000);
*(.text.ccgDM_getFinalVert)
. = ALIGN(0x1000);
*(.text.ccgDM_copyFinalVertArray)
. = ALIGN(0x1000);
*(.text.ccgDM_copyFinalEdgeArray)
. = ALIGN(0x1000);
*(.text.ccgDM_copyFinalFaceArray)
. = ALIGN(0x1000);
*(.text.ccgDM_copyFinalLoopArray)
. = ALIGN(0x1000);
*(.text.ccgDM_copyFinalPolyArray)
. = ALIGN(0x1000);
*(.text.ccgDM_get_vert_data)
. = ALIGN(0x1000);
*(.text.ccgDM_get_edge_data)
. = ALIGN(0x1000);
*(.text.ccgDM_get_tessface_data)
. = ALIGN(0x1000);
*(.text.ccgDM_get_poly_data)
. = ALIGN(0x1000);
*(.text.ccgDM_get_vert_data_layer)
. = ALIGN(0x1000);
*(.text.ccgDM_get_edge_data_layer)
. = ALIGN(0x1000);
*(.text.ccgDM_get_tessface_data_layer)
. = ALIGN(0x1000);
*(.text.ccgDM_get_poly_data_layer)
. = ALIGN(0x1000);
*(.text.ccgDM_getNumGrids)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridSize)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridData)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridAdjacency)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridOffset)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridKey)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridFlagMats)
. = ALIGN(0x1000);
*(.text.ccgDM_getGridHidden)
. = ALIGN(0x1000);
*(.text.ccgDM_getPolyMap)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_build_grids .text.ccgDM_getPBVH)
. = ALIGN(0x1000);
*(.text.ccgdm_create_grids)
. = ALIGN(0x1000);
*(.text.ccgDM_calcNormals)
. = ALIGN(0x1000);
*(.text.ccgDM_recalcTessellation)
. = ALIGN(0x1000);
*(.text.ccgdm_getVertCos)
. = ALIGN(0x1000);
*(.text.ccgDM_foreachMappedVert)
. = ALIGN(0x1000);
*(.text.ccgDM_foreachMappedEdge)
. = ALIGN(0x1000);
*(.text.ccgDM_foreachMappedLoop)
. = ALIGN(0x1000);
*(.text.ccgDM_foreachMappedFaceCenter)
. = ALIGN(0x1000);
*(.text.ccgDM_drawVerts)
. = ALIGN(0x1000);
*(.text.ccgDM_drawEdges)
. = ALIGN(0x1000);
*(.text.glColor3ub)
. = ALIGN(0x1000);
*(.text.ccgDM_drawLooseEdges)
. = ALIGN(0x1000);
*(.text.ccgDM_drawFacesSolid)
. = ALIGN(0x1000);
*(.text.ccgDM_drawFacesTex)
. = ALIGN(0x1000);
*(.text.ccgDM_drawFacesGLSL)
. = ALIGN(0x1000);
*(.text.ccgDM_drawMappedFaces)
. = ALIGN(0x1000);
*(.text.ccgDM_drawMappedFacesTex)
. = ALIGN(0x1000);
*(.text.ccgDM_drawFacesTex_common)
. = ALIGN(0x1000);
*(.text.ccgDM_drawMappedFacesGLSL)
. = ALIGN(0x1000);
*(.text.ccgDM_drawMappedFacesMat)
. = ALIGN(0x1000);
*(.text.DM_add_tangent_layer)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_get_grid_updates)
. = ALIGN(0x1000);
*(.text.DM_calc_auto_bump_scale .text.DM_vertex_attributes_from_gpu)
. = ALIGN(0x1000);
*(.text.ccgDM_drawUVEdges)
. = ALIGN(0x1000);
*(.text.ccgDM_drawMappedEdgesInterp)
. = ALIGN(0x1000);
*(.text.ccgDM_drawMappedEdges)
. = ALIGN(0x1000);
*(.text.ccgDM_release .text.multires_modifier_update_mdisps)
. = ALIGN(0x1000);
*(.text.arena_alloc)
. = ALIGN(0x1000);
*(.text.arena_realloc)
. = ALIGN(0x1000);
*(.text.arena_free)
. = ALIGN(0x1000);
*(.text.arena_release)
. = ALIGN(0x1000);
*(.text.vergcband)
. = ALIGN(0x1000);
*(.text.BKE_tracking_distort_v2)
. = ALIGN(0x1000);
*(.text.BKE_tracking_undistort_v2)
. = ALIGN(0x1000);
*(.text.tse_hash)
. = ALIGN(0x1000);
*(.text.tse_cmp)
. = ALIGN(0x1000);
*(.text.start_stub)
. = ALIGN(0x1000);
*(.text.append_stub)
. = ALIGN(0x1000);
*(.text.end_stub)
. = ALIGN(0x1000);
*(.text.node_alphaover_init)
. = ALIGN(0x1000);
*(.text.node_composit_init_bilateralblur)
. = ALIGN(0x1000);
*(.text.node_composit_init_blur)
. = ALIGN(0x1000);
*(.text.node_composit_init_channel_matte)
. = ALIGN(0x1000);
*(.text.node_composit_init_chroma_matte)
. = ALIGN(0x1000);
*(.text.node_composit_init_color_matte)
. = ALIGN(0x1000);
*(.text.node_composit_init_color_spill)
. = ALIGN(0x1000);
*(.text.node_composit_init_colorbalance)
. = ALIGN(0x1000);
*(.text.node_composit_init_crop)
. = ALIGN(0x1000);
*(.text.node_composit_init_curves_time)
. = ALIGN(0x1000);
*(.text.node_composit_init_curve_vec)
. = ALIGN(0x1000);
*(.text.node_composit_init_curve_rgb)
. = ALIGN(0x1000);
*(.text.node_composit_init_despeckle)
. = ALIGN(0x1000);
*(.text.node_composit_init_defocus)
. = ALIGN(0x1000);
*(.text.node_composit_init_diff_matte)
. = ALIGN(0x1000);
*(.text.node_composit_init_dilateerode)
. = ALIGN(0x1000);
*(.text.node_composit_init_dblur)
. = ALIGN(0x1000);
*(.text.node_composit_init_distance_matte)
. = ALIGN(0x1000);
*(.text.node_composit_init_glare)
. = ALIGN(0x1000);
*(.text.node_composit_init_hue_sat)
. = ALIGN(0x1000);
*(.text.node_composit_init_huecorrect)
. = ALIGN(0x1000);
*(.text.node_composit_init_image)
. = ALIGN(0x1000);
*(.text.node_composit_free_image)
. = ALIGN(0x1000);
*(.text.node_composit_copy_image)
. = ALIGN(0x1000);
*(.text.cmp_node_image_update)
. = ALIGN(0x1000);
*(.text.cmp_node_image_verify_outputs)
. = ALIGN(0x1000);
*(.text.node_composit_init_rlayers)
. = ALIGN(0x1000);
*(.text.node_composit_poll_rlayers)
. = ALIGN(0x1000);
*(.text.node_composit_init_invert)
. = ALIGN(0x1000);
*(.text.node_composit_init_keyingscreen)
. = ALIGN(0x1000);
*(.text.node_composit_init_keying)
. = ALIGN(0x1000);
*(.text.node_composit_init_lensdist)
. = ALIGN(0x1000);
*(.text.node_composit_init_view_levels)
. = ALIGN(0x1000);
*(.text.node_composit_init_luma_matte)
. = ALIGN(0x1000);
*(.text.node_composit_init_map_value)
. = ALIGN(0x1000);
*(.text.node_composit_init_mask)
. = ALIGN(0x1000);
*(.text.init)
. = ALIGN(0x1000);
*(.text.label)
. = ALIGN(0x1000);
*(.text.init.27288)
. = ALIGN(0x1000);
*(.text.storage_free)
. = ALIGN(0x1000);
*(.text.storage_copy)
. = ALIGN(0x1000);
*(.text.unique_path_unique_check)
. = ALIGN(0x1000);
*(.text.unique_layer_unique_check)
. = ALIGN(0x1000);
*(.text.init_output_file)
. = ALIGN(0x1000);
*(.text.free_output_file)
. = ALIGN(0x1000);
*(.text.copy_output_file)
. = ALIGN(0x1000);
*(.text.update_output_file)
. = ALIGN(0x1000);
*(.text.init.27312)
. = ALIGN(0x1000);
*(.text.node_composit_init_rotate)
. = ALIGN(0x1000);
*(.text.node_composite_update_scale)
. = ALIGN(0x1000);
*(.text.node_composit_init_splitviewer)
. = ALIGN(0x1000);
*(.text.init.27365)
. = ALIGN(0x1000);
*(.text.init.27371)
. = ALIGN(0x1000);
*(.text.node_composit_init_tonemap)
. = ALIGN(0x1000);
*(.text.init.27385)
. = ALIGN(0x1000);
*(.text.node_composit_init_translate)
. = ALIGN(0x1000);
*(.text.node_composit_init_valtorgb)
. = ALIGN(0x1000);
*(.text.node_composit_init_vecblur)
. = ALIGN(0x1000);
*(.text.node_composit_init_viewer)
. = ALIGN(0x1000);
*(.text.BKE_image_verify_viewer)
. = ALIGN(0x1000);
*(.text.node_composit_init_bokehblur)
. = ALIGN(0x1000);
*(.text.node_composit_init_bokehimage)
. = ALIGN(0x1000);
*(.text.node_composit_init_boxmask)
. = ALIGN(0x1000);
*(.text.node_composit_init_ellipsemask)
. = ALIGN(0x1000);
*(.text.node_composit_init_colorcorrection)
. = ALIGN(0x1000);
*(.text.free_cache)
. = ALIGN(0x1000);
*(.text.free_node_cache)
. = ALIGN(0x1000);
*(.text.foreach_nodeclass)
. = ALIGN(0x1000);
*(.text.localize)
. = ALIGN(0x1000);
*(.text.local_sync)
. = ALIGN(0x1000);
*(.text.local_merge .text.BKE_image_merge)
. = ALIGN(0x1000);
*(.text.update)
. = ALIGN(0x1000);
*(.text.composite_get_from_context)
. = ALIGN(0x1000);
*(.text.composite_node_add_init)
. = ALIGN(0x1000);
*(.text.cmp_node_poll_default)
. = ALIGN(0x1000);
*(.text.cmp_node_update_default)
. = ALIGN(0x1000);
*(.text.node_shader_exec_camera)
. = ALIGN(0x1000);
*(.text.gpu_shader_camera)
. = ALIGN(0x1000);
*(.text.group_initexec)
. = ALIGN(0x1000);
*(.text.group_freeexec .text.ntreeShaderEndExecTree_internal)
. = ALIGN(0x1000);
*(.text.group_execute)
. = ALIGN(0x1000);
*(.text.gpu_group_execute)
. = ALIGN(0x1000);
*(.text.node_shader_init_curve_vec)
. = ALIGN(0x1000);
*(.text.node_shader_exec_curve_vec)
. = ALIGN(0x1000);
*(.text.gpu_shader_curve_vec)
. = ALIGN(0x1000);
*(.text.node_shader_init_curve_rgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_curve_rgb)
. = ALIGN(0x1000);
*(.text.gpu_shader_curve_rgb)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_gamma)
. = ALIGN(0x1000);
*(.text.gpu_shader_brightcontrast)
. = ALIGN(0x1000);
*(.text.node_shader_init_geometry)
. = ALIGN(0x1000);
*(.text.node_shader_exec_geom)
. = ALIGN(0x1000);
*(.text.gpu_shader_geom)
. = ALIGN(0x1000);
*(.text.node_shader_exec_hue_sat)
. = ALIGN(0x1000);
*(.text.gpu_shader_hue_sat)
. = ALIGN(0x1000);
*(.text.node_shader_exec_invert)
. = ALIGN(0x1000);
*(.text.gpu_shader_invert)
. = ALIGN(0x1000);
*(.text.node_shader_exec_lamp .text.RE_lamp_get_data .text.lamp_get_data_internal)
. = ALIGN(0x1000);
*(.text.gpu_shader_lamp .text.GPU_lamp_get_data)
. = ALIGN(0x1000);
*(.text.node_shader_init_mapping)
. = ALIGN(0x1000);
*(.text.node_shader_exec_mapping)
. = ALIGN(0x1000);
*(.text.gpu_shader_mapping)
. = ALIGN(0x1000);
*(.text.node_shader_init_material)
. = ALIGN(0x1000);
*(.text.node_shader_exec_material)
. = ALIGN(0x1000);
*(.text.gpu_shader_material)
. = ALIGN(0x1000);
*(.text.node_shader_exec_math)
. = ALIGN(0x1000);
*(.text.gpu_shader_math)
. = ALIGN(0x1000);
*(.text.node_shader_exec_mix_rgb)
. = ALIGN(0x1000);
*(.text.gpu_shader_mix_rgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_normal)
. = ALIGN(0x1000);
*(.text.gpu_shader_normal)
. = ALIGN(0x1000);
*(.text.node_shader_exec_output)
. = ALIGN(0x1000);
*(.text.gpu_shader_output)
. = ALIGN(0x1000);
*(.text.gpu_shader_rgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_seprgb)
. = ALIGN(0x1000);
*(.text.gpu_shader_seprgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_combrgb)
. = ALIGN(0x1000);
*(.text.gpu_shader_combrgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_sephsv)
. = ALIGN(0x1000);
*(.text.gpu_shader_sephsv)
. = ALIGN(0x1000);
*(.text.node_shader_exec_combhsv)
. = ALIGN(0x1000);
*(.text.gpu_shader_combhsv)
. = ALIGN(0x1000);
*(.text.gpu_shader_sepxyz)
. = ALIGN(0x1000);
*(.text.gpu_shader_combxyz)
. = ALIGN(0x1000);
*(.text.node_shader_exec_squeeze)
. = ALIGN(0x1000);
*(.text.gpu_shader_squeeze)
. = ALIGN(0x1000);
*(.text.node_shader_exec_texture)
. = ALIGN(0x1000);
*(.text.gpu_shader_texture)
. = ALIGN(0x1000);
*(.text.node_shader_init_valtorgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_valtorgb)
. = ALIGN(0x1000);
*(.text.gpu_shader_valtorgb)
. = ALIGN(0x1000);
*(.text.node_shader_exec_rgbtobw)
. = ALIGN(0x1000);
*(.text.gpu_shader_rgbtobw)
. = ALIGN(0x1000);
*(.text.gpu_shader_value)
. = ALIGN(0x1000);
*(.text.node_shader_exec_vect_math)
. = ALIGN(0x1000);
*(.text.gpu_shader_vect_math)
. = ALIGN(0x1000);
*(.text.node_shader_init_vect_transform)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_add_shader)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_ambient_occlusion)
. = ALIGN(0x1000);
*(.text.node_shader_init_attribute)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_attribute)
. = ALIGN(0x1000);
*(.text.node_shader_init_anisotropic)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_anisotropic)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_diffuse)
. = ALIGN(0x1000);
*(.text.node_shader_init_glass)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_glass)
. = ALIGN(0x1000);
*(.text.node_shader_init_glossy)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_glossy)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_toon)
. = ALIGN(0x1000);
*(.text.node_shader_init_refraction)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_refraction)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_translucent)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_transparent)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_velvet)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_bsdf_hair)
. = ALIGN(0x1000);
*(.text.gpu_shader_bump)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_emission)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_fresnel)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_geometry)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_layer_weight)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_light_falloff)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_light_path)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_mix_shader)
. = ALIGN(0x1000);
*(.text.node_shader_init_normal_map)
. = ALIGN(0x1000);
*(.text.gpu_shader_normal_map)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_object_info)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_output_material)
. = ALIGN(0x1000);
*(.text.init.27828)
. = ALIGN(0x1000);
*(.text.node_free_script)
. = ALIGN(0x1000);
*(.text.node_copy_script)
. = ALIGN(0x1000);
*(.text.node_shader_init_subsurface_scattering)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_subsurface_scattering)
. = ALIGN(0x1000);
*(.text.node_shader_update_subsurface_scattering)
. = ALIGN(0x1000);
*(.text.node_shader_init_tangent)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_brick)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_brick)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_checker)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_checker)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_coord)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_environment)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_environment)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_gradient)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_gradient)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_image)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_image)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_magic)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_magic)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_musgrave)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_musgrave)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_noise)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_noise)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_sky)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_sky)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_voronoi)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_voronoi)
. = ALIGN(0x1000);
*(.text.node_shader_init_tex_wave)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_wave)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_tex_mapping)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_volume_scatter)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_volume_absorption)
. = ALIGN(0x1000);
*(.text.node_shader_init_uvmap)
. = ALIGN(0x1000);
*(.text.node_shader_gpu_uvmap)
. = ALIGN(0x1000);
*(.text.GPU_stack_link)
. = ALIGN(0x1000);
*(.text.foreach_nodeclass.27941)
. = ALIGN(0x1000);
*(.text.localize.27942)
. = ALIGN(0x1000);
*(.text.local_sync.27943)
. = ALIGN(0x1000);
*(.text.local_merge.27944)
. = ALIGN(0x1000);
*(.text.update.27945)
. = ALIGN(0x1000);
*(.text.shader_tree_poll)
. = ALIGN(0x1000);
*(.text.shader_get_from_context)
. = ALIGN(0x1000);
*(.text.sh_node_poll_default)
. = ALIGN(0x1000);
*(.text.exec)
. = ALIGN(0x1000);
*(.text.colorfn)
. = ALIGN(0x1000);
*(.text.init.28001)
. = ALIGN(0x1000);
*(.text.exec.28002)
. = ALIGN(0x1000);
*(.text.colorfn.28003)
. = ALIGN(0x1000);
*(.text.exec.28009)
. = ALIGN(0x1000);
*(.text.colorfn.28010)
. = ALIGN(0x1000);
*(.text.group_initexec.28015)
. = ALIGN(0x1000);
*(.text.group_freeexec.28016)
. = ALIGN(0x1000);
*(.text.group_execute.28017)
. = ALIGN(0x1000);
*(.text.exec.28023)
. = ALIGN(0x1000);
*(.text.colorfn.28024)
. = ALIGN(0x1000);
*(.text.exec.28030)
. = ALIGN(0x1000);
*(.text.vectorfn)
. = ALIGN(0x1000);
*(.text.time_init.28034)
. = ALIGN(0x1000);
*(.text.time_exec)
. = ALIGN(0x1000);
*(.text.time_colorfn)
. = ALIGN(0x1000);
*(.text.rgb_init)
. = ALIGN(0x1000);
*(.text.rgb_exec)
. = ALIGN(0x1000);
*(.text.rgb_colorfn)
. = ALIGN(0x1000);
*(.text.exec.28044)
. = ALIGN(0x1000);
*(.text.valuefn_r)
. = ALIGN(0x1000);
*(.text.valuefn_g)
. = ALIGN(0x1000);
*(.text.valuefn_b)
. = ALIGN(0x1000);
*(.text.valuefn_a)
. = ALIGN(0x1000);
*(.text.exec.28051)
. = ALIGN(0x1000);
*(.text.valuefn)
. = ALIGN(0x1000);
*(.text.exec.28057)
. = ALIGN(0x1000);
*(.text.colorfn.28058)
. = ALIGN(0x1000);
*(.text.init.28063)
. = ALIGN(0x1000);
*(.text.exec.28065)
. = ALIGN(0x1000);
*(.text.colorfn.28066)
. = ALIGN(0x1000);
*(.text.exec.28073)
. = ALIGN(0x1000);
*(.text.colorfn.28074)
. = ALIGN(0x1000);
*(.text.exec.28081)
. = ALIGN(0x1000);
*(.text.valuefn.28082)
. = ALIGN(0x1000);
*(.text.exec.28088)
. = ALIGN(0x1000);
*(.text.colorfn.28089)
. = ALIGN(0x1000);
*(.text.init.28094)
. = ALIGN(0x1000);
*(.text.copy)
. = ALIGN(0x1000);
*(.text.unique_name)
. = ALIGN(0x1000);
*(.text.exec.28096)
. = ALIGN(0x1000);
*(.text.init.28102)
. = ALIGN(0x1000);
*(.text.voronoi_exec)
. = ALIGN(0x1000);
*(.text.voronoi_colorfn)
. = ALIGN(0x1000);
*(.text.voronoi_normalfn)
. = ALIGN(0x1000);
*(.text.voronoi_map_inputs)
. = ALIGN(0x1000);
*(.text.blend_exec)
. = ALIGN(0x1000);
*(.text.blend_colorfn)
. = ALIGN(0x1000);
*(.text.blend_normalfn)
. = ALIGN(0x1000);
*(.text.magic_exec)
. = ALIGN(0x1000);
*(.text.magic_colorfn)
. = ALIGN(0x1000);
*(.text.magic_normalfn)
. = ALIGN(0x1000);
*(.text.marble_exec)
. = ALIGN(0x1000);
*(.text.marble_colorfn)
. = ALIGN(0x1000);
*(.text.marble_normalfn)
. = ALIGN(0x1000);
*(.text.marble_map_inputs)
. = ALIGN(0x1000);
*(.text.clouds_exec)
. = ALIGN(0x1000);
*(.text.clouds_colorfn)
. = ALIGN(0x1000);
*(.text.clouds_normalfn)
. = ALIGN(0x1000);
*(.text.wood_exec)
. = ALIGN(0x1000);
*(.text.wood_colorfn)
. = ALIGN(0x1000);
*(.text.wood_normalfn)
. = ALIGN(0x1000);
*(.text.wood_map_inputs)
. = ALIGN(0x1000);
*(.text.musgrave_exec)
. = ALIGN(0x1000);
*(.text.musgrave_colorfn)
. = ALIGN(0x1000);
*(.text.musgrave_normalfn)
. = ALIGN(0x1000);
*(.text.musgrave_map_inputs)
. = ALIGN(0x1000);
*(.text.noise_exec)
. = ALIGN(0x1000);
*(.text.noise_colorfn)
. = ALIGN(0x1000);
*(.text.noise_normalfn)
. = ALIGN(0x1000);
*(.text.stucci_exec)
. = ALIGN(0x1000);
*(.text.stucci_colorfn)
. = ALIGN(0x1000);
*(.text.stucci_normalfn)
. = ALIGN(0x1000);
*(.text.stucci_map_inputs)
. = ALIGN(0x1000);
*(.text.distnoise_exec)
. = ALIGN(0x1000);
*(.text.distnoise_colorfn)
. = ALIGN(0x1000);
*(.text.texfn)
. = ALIGN(0x1000);
*(.text.distnoise_normalfn)
. = ALIGN(0x1000);
*(.text.distnoise_map_inputs)
. = ALIGN(0x1000);
*(.text.exec.28136)
. = ALIGN(0x1000);
*(.text.colorfn.28137)
. = ALIGN(0x1000);
*(.text.exec.28143)
. = ALIGN(0x1000);
*(.text.colorfn.28144)
. = ALIGN(0x1000);
*(.text.exec.28150)
. = ALIGN(0x1000);
*(.text.colorfn.28151)
. = ALIGN(0x1000);
*(.text.exec.28157)
. = ALIGN(0x1000);
*(.text.colorfn.28158)
. = ALIGN(0x1000);
*(.text.exec.28164)
. = ALIGN(0x1000);
*(.text.normalfn)
. = ALIGN(0x1000);
*(.text.valtorgb_init)
. = ALIGN(0x1000);
*(.text.valtorgb_exec)
. = ALIGN(0x1000);
*(.text.valtorgb_colorfn)
. = ALIGN(0x1000);
*(.text.rgbtobw_exec)
. = ALIGN(0x1000);
*(.text.rgbtobw_valuefn)
. = ALIGN(0x1000);
*(.text.exec.28177)
. = ALIGN(0x1000);
*(.text.tex_input_rgba)
. = ALIGN(0x1000);
*(.text.BKE_node_preview_set_pixel)
. = ALIGN(0x1000);
*(.text.foreach_nodeclass.28185)
. = ALIGN(0x1000);
*(.text.update.28186)
. = ALIGN(0x1000);
*(.text.node_reroute_inherit_type_recursive)
. = ALIGN(0x1000);
*(.text.localize.28187)
. = ALIGN(0x1000);
*(.text.nodeInternalRelink)
. = ALIGN(0x1000);
*(.text.local_sync.28188)
. = ALIGN(0x1000);
*(.text.BKE_node_preview_sync_tree)
. = ALIGN(0x1000);
*(.text.local_merge.28189)
. = ALIGN(0x1000);
*(.text.node_preview_tag_used_recursive)
. = ALIGN(0x1000);
*(.text.BKE_node_instance_hash_remove_untagged)
. = ALIGN(0x1000);
*(.text.BKE_node_preview_merge_tree)
. = ALIGN(0x1000);
*(.text.give_current_object_texture .text.texture_get_from_context)
. = ALIGN(0x1000);
*(.text.tex_node_poll_default)
. = ALIGN(0x1000);
*(.text.node_free_curves)
. = ALIGN(0x1000);
*(.text.node_free_standard_storage)
. = ALIGN(0x1000);
*(.text.node_copy_curves)
. = ALIGN(0x1000);
*(.text.node_copy_standard_storage)
. = ALIGN(0x1000);
*(.text.node_initexec_curves)
. = ALIGN(0x1000);
*(.text.node_blend_label)
. = ALIGN(0x1000);
*(.text.node_math_label)
. = ALIGN(0x1000);
*(.text.node_vect_math_label)
. = ALIGN(0x1000);
*(.text.node_filter_label)
. = ALIGN(0x1000);
*(.text.node_update_internal_links_default)
. = ALIGN(0x1000);
*(.text.node_group_label)
. = ALIGN(0x1000);
*(.text.node_group_poll_instance)
. = ALIGN(0x1000);
*(.text.node_group_verify)
. = ALIGN(0x1000);
*(.text.node_frame_init)
. = ALIGN(0x1000);
*(.text.node_reroute_init)
. = ALIGN(0x1000);
*(.text.node_reroute_update_internal_links)
. = ALIGN(0x1000);
*(.text.node_group_input_verify)
. = ALIGN(0x1000);
*(.text.node_group_input_init)
. = ALIGN(0x1000);
*(.text.node_group_input_update)
. = ALIGN(0x1000);
*(.text.node_group_output_verify)
. = ALIGN(0x1000);
*(.text.node_group_output_init)
. = ALIGN(0x1000);
*(.text.node_group_output_update)
. = ALIGN(0x1000);
*(.text.group_verify_socket_list)
. = ALIGN(0x1000);
*(.text.standard_node_socket_interface_init_socket)
. = ALIGN(0x1000);
*(.text.standard_node_socket_interface_from_socket)
. = ALIGN(0x1000);
*(.text.standard_node_socket_interface_verify_socket)
. = ALIGN(0x1000);
*(.text.rna_ID_refine)
. = ALIGN(0x1000);
*(.text.rna_ID_idprops)
. = ALIGN(0x1000);
*(.text.ID_update_tag_call)
. = ALIGN(0x1000);
*(.text.ID_animation_data_clear_call)
. = ALIGN(0x1000);
*(.text.ID_animation_data_create_call)
. = ALIGN(0x1000);
*(.text.ID_user_clear_call)
. = ALIGN(0x1000);
*(.text.ID_copy_call)
. = ALIGN(0x1000);
*(.text.ID_library_get)
. = ALIGN(0x1000);
*(.text.ID_is_library_indirect_get)
. = ALIGN(0x1000);
*(.text.ID_is_updated_data_get)
. = ALIGN(0x1000);
*(.text.ID_is_updated_get)
. = ALIGN(0x1000);
*(.text.ID_tag_get)
. = ALIGN(0x1000);
*(.text.ID_tag_set)
. = ALIGN(0x1000);
*(.text.ID_use_fake_user_get)
. = ALIGN(0x1000);
*(.text.ID_use_fake_user_set)
. = ALIGN(0x1000);
*(.text.ID_users_get)
. = ALIGN(0x1000);
*(.text.AnyType_rna_type_get)
. = ALIGN(0x1000);
*(.text.AnyType_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AnyType_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AnyType_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AnyType_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AnyType_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UnknownType_rna_type_get)
. = ALIGN(0x1000);
*(.text.UnknownType_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UnknownType_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UnknownType_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UnknownType_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UnknownType_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_idp_array_begin)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_idp_array_next)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_idp_array_end)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_idp_array_get)
. = ALIGN(0x1000);
*(.text.rna_IDPArray_length)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_rna_type_get)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PropertyGroupItem_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_PropertyGroup_refine)
. = ALIGN(0x1000);
*(.text.rna_PropertyGroup_register)
. = ALIGN(0x1000);
*(.text.rna_PropertyGroup_unregister)
. = ALIGN(0x1000);
*(.text.rna_PropertyGroup_idprops)
. = ALIGN(0x1000);
*(.text.PropertyGroup_rna_type_get)
. = ALIGN(0x1000);
*(.text.PropertyGroup_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PropertyGroup_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PropertyGroup_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PropertyGroup_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PropertyGroup_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ID_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ID_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ID_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ID_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ID_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ID_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_ID_name_editable)
. = ALIGN(0x1000);
*(.text.ID_name_length)
. = ALIGN(0x1000);
*(.text.ID_name_set)
. = ALIGN(0x1000);
*(.text.Library_packed_file_get)
. = ALIGN(0x1000);
*(.text.Library_parent_get)
. = ALIGN(0x1000);
*(.text.Library_filepath_get)
. = ALIGN(0x1000);
*(.text.Library_filepath_length)
. = ALIGN(0x1000);
*(.text.Library_filepath_set)
. = ALIGN(0x1000);
*(.text.IDMaterials_clear_call)
. = ALIGN(0x1000);
*(.text.BKE_material_clear_id)
. = ALIGN(0x1000);
*(.text.IDMaterials_pop_call)
. = ALIGN(0x1000);
*(.text.BKE_curve_material_index_remove .text.BKE_mesh_material_index_remove)
. = ALIGN(0x1000);
*(.text.rna_IDMaterials_pop_id .text.BKE_material_pop_id)
. = ALIGN(0x1000);
*(.text.IDMaterials_append_call)
. = ALIGN(0x1000);
*(.text.IDMaterials_rna_type_get)
. = ALIGN(0x1000);
*(.text.IDMaterials_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.IDMaterials_rna_properties_next)
. = ALIGN(0x1000);
*(.text.IDMaterials_rna_properties_end)
. = ALIGN(0x1000);
*(.text.IDMaterials_rna_properties_get)
. = ALIGN(0x1000);
*(.text.IDMaterials_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_IDMaterials_assign_int .text.assign_material_id)
. = ALIGN(0x1000);
*(.text.acf_generic_channel_backdrop)
. = ALIGN(0x1000);
*(.text.acf_nlatrack_name)
. = ALIGN(0x1000);
*(.text.acf_nlatrack_name_prop)
. = ALIGN(0x1000);
*(.text.acf_nlatrack_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_nlatrack_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_nlatrack_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_generic_channel_color)
. = ALIGN(0x1000);
*(.text.acf_masklay_name)
. = ALIGN(0x1000);
*(.text.acf_masklay_name_prop)
. = ALIGN(0x1000);
*(.text.acf_masklay_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_masklay_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_masklay_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_mask_color)
. = ALIGN(0x1000);
*(.text.acf_group_backdrop)
. = ALIGN(0x1000);
*(.text.acf_generic_indention_0)
. = ALIGN(0x1000);
*(.text.acf_generic_idblock_name)
. = ALIGN(0x1000);
*(.text.acf_generic_idfill_name_prop)
. = ALIGN(0x1000);
*(.text.acf_mask_icon)
. = ALIGN(0x1000);
*(.text.acf_mask_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_mask_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_mask_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_gpl_name)
. = ALIGN(0x1000);
*(.text.acf_gpl_name_prop)
. = ALIGN(0x1000);
*(.text.acf_gpl_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_gpl_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_gpl_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_gpd_color)
. = ALIGN(0x1000);
*(.text.acf_gpd_icon)
. = ALIGN(0x1000);
*(.text.acf_gpd_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_gpd_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_gpd_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_generic_basic_offset)
. = ALIGN(0x1000);
*(.text.acf_shapekey_name)
. = ALIGN(0x1000);
*(.text.acf_shapekey_name_prop)
. = ALIGN(0x1000);
*(.text.acf_shapekey_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_shapekey_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_shapekey_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_generic_dataexpand_color)
. = ALIGN(0x1000);
*(.text.acf_generic_dataexpand_backdrop)
. = ALIGN(0x1000);
*(.text.acf_generic_indention_1)
. = ALIGN(0x1000);
*(.text.acf_generic_idblock_name_prop)
. = ALIGN(0x1000);
*(.text.acf_dsspk_icon)
. = ALIGN(0x1000);
*(.text.acf_generic_dataexpand_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_dsspk_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsspk_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dslinestyle_icon)
. = ALIGN(0x1000);
*(.text.acf_dslinestyle_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dslinestyle_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dslat_icon)
. = ALIGN(0x1000);
*(.text.acf_dslat_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dslat_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dstex_offset)
. = ALIGN(0x1000);
*(.text.acf_dstex_icon)
. = ALIGN(0x1000);
*(.text.acf_dstex_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dstex_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dsmesh_icon)
. = ALIGN(0x1000);
*(.text.acf_dsmesh_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsmesh_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dsarm_icon)
. = ALIGN(0x1000);
*(.text.acf_dsarm_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsarm_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dsmball_icon)
. = ALIGN(0x1000);
*(.text.acf_dsmball_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsmball_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dspart_icon)
. = ALIGN(0x1000);
*(.text.acf_dspart_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dspart_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dsntree_offset)
. = ALIGN(0x1000);
*(.text.acf_dsntree_icon)
. = ALIGN(0x1000);
*(.text.acf_dsntree_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsntree_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dswor_icon)
. = ALIGN(0x1000);
*(.text.acf_dswor_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dswor_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dsskey_icon)
. = ALIGN(0x1000);
*(.text.acf_dsskey_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsskey_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dscur_icon)
. = ALIGN(0x1000);
*(.text.acf_dscur_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dscur_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dscam_icon)
. = ALIGN(0x1000);
*(.text.acf_dscam_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dscam_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dslam_icon)
. = ALIGN(0x1000);
*(.text.acf_dslam_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dslam_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_dsmat_icon)
. = ALIGN(0x1000);
*(.text.acf_dsmat_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_dsmat_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_filldrivers_name)
. = ALIGN(0x1000);
*(.text.acf_filldrivers_icon)
. = ALIGN(0x1000);
*(.text.acf_filldrivers_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_filldrivers_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_filldrivers_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_fillactd_icon)
. = ALIGN(0x1000);
*(.text.acf_fillactd_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_fillactd_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_fillactd_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_fcurve_name)
. = ALIGN(0x1000);
*(.text.getname_anim_fcurve)
. = ALIGN(0x1000);
*(.text.acf_fcurve_name_prop)
. = ALIGN(0x1000);
*(.text.acf_fcurve_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_fcurve_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_fcurve_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_group_color)
. = ALIGN(0x1000);
*(.text.acf_group_name)
. = ALIGN(0x1000);
*(.text.acf_group_name_prop)
. = ALIGN(0x1000);
*(.text.acf_group_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_group_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_group_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_generic_root_color)
. = ALIGN(0x1000);
*(.text.acf_generic_root_backdrop)
. = ALIGN(0x1000);
*(.text.acf_object_name)
. = ALIGN(0x1000);
*(.text.acf_object_name_prop)
. = ALIGN(0x1000);
*(.text.acf_object_icon)
. = ALIGN(0x1000);
*(.text.acf_object_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_object_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_object_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_scene_icon)
. = ALIGN(0x1000);
*(.text.acf_scene_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_scene_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_scene_setting_ptr)
. = ALIGN(0x1000);
*(.text.acf_summary_color)
. = ALIGN(0x1000);
*(.text.acf_summary_backdrop)
. = ALIGN(0x1000);
*(.text.glColor3fv)
. = ALIGN(0x1000);
*(.text.acf_summary_name)
. = ALIGN(0x1000);
*(.text.acf_summary_icon)
. = ALIGN(0x1000);
*(.text.acf_summary_setting_valid)
. = ALIGN(0x1000);
*(.text.acf_summary_setting_flag)
. = ALIGN(0x1000);
*(.text.acf_summary_setting_ptr)
. = ALIGN(0x1000);
*(.text.achannel_setting_rename_done_cb)
. = ALIGN(0x1000);
*(.text.achannel_setting_slider_shapekey_cb)
. = ALIGN(0x1000);
*(.text.verify_adt_action)
. = ALIGN(0x1000);
*(.text.achannel_setting_slider_cb)
. = ALIGN(0x1000);
*(.text.achannel_setting_flush_widget_cb)
. = ALIGN(0x1000);
*(.text.achannel_nlatrack_solo_widget_cb)
. = ALIGN(0x1000);
*(.text.achannel_setting_widget_cb)
. = ALIGN(0x1000);
*(.text.ANIM_OT_channels_click)
. = ALIGN(0x1000);
*(.text.ANIM_OT_channels_setting_enable)
. = ALIGN(0x1000);
*(.text.ANIM_OT_channels_setting_disable)
. = ALIGN(0x1000);
*(.text.ANIM_OT_channels_setting_toggle)
. = ALIGN(0x1000);
*(.text.ANIM_OT_channels_editable_toggle)
. = ALIGN(0x1000);
*(.text.animchannels_ungroup_exec)
. = ALIGN(0x1000);
*(.text.animchannels_grouping_poll)
. = ALIGN(0x1000);
*(.text.animchannels_group_exec)
. = ALIGN(0x1000);
*(.text.animchannels_clean_empty_exec)
. = ALIGN(0x1000);
*(.text.animedit_poll_channels_nla_tweakmode_off)
. = ALIGN(0x1000);
*(.text.animchannels_enable_exec)
. = ALIGN(0x1000);
*(.text.RNA_property_update_main .text.ANIM_list_elem_update)
. = ALIGN(0x1000);
*(.text.ANIM_animdata_update)
. = ALIGN(0x1000);
*(.text.animchannels_enable_poll)
. = ALIGN(0x1000);
*(.text.animchannels_visibility_set_exec)
. = ALIGN(0x1000);
*(.text.animchannels_visibility_toggle_exec)
. = ALIGN(0x1000);
*(.text.animchannels_collapse_exec)
. = ALIGN(0x1000);
*(.text.animedit_poll_channels_active)
. = ALIGN(0x1000);
*(.text.animchannels_expand_exec)
. = ALIGN(0x1000);
*(.text.animchannels_rearrange_exec .text.rearrange_action_channels .text.rearrange_animchannel_islands)
. = ALIGN(0x1000);
*(.text.rearrange_island_bottom)
. = ALIGN(0x1000);
*(.text.rearrange_island_down)
. = ALIGN(0x1000);
*(.text.rearrange_island_top)
. = ALIGN(0x1000);
*(.text.rearrange_island_up)
. = ALIGN(0x1000);
*(.text.animchannels_setflag_exec)
. = ALIGN(0x1000);
*(.text.setflag_anim_channels)
. = ALIGN(0x1000);
*(.text.ANIM_channel_setting_get)
. = ALIGN(0x1000);
*(.text.ANIM_flush_setting_anim_channels)
. = ALIGN(0x1000);
*(.text.animchannels_delete_exec)
. = ALIGN(0x1000);
*(.text.animchannels_find_invoke)
. = ALIGN(0x1000);
*(.text.animchannels_find_exec)
. = ALIGN(0x1000);
*(.text.animchannels_find_poll)
. = ALIGN(0x1000);
*(.text.animchannels_rename_invoke)
. = ALIGN(0x1000);
*(.text.ED_pose_de_selectall .text.animchannels_mouseclick_invoke)
. = ALIGN(0x1000);
*(.text.animchannels_borderselect_exec)
. = ALIGN(0x1000);
*(.text.ED_pose_bone_select)
. = ALIGN(0x1000);
*(.text.ANIM_channel_setting_set)
. = ALIGN(0x1000);
*(.text.animchannels_deselectall_exec)
. = ALIGN(0x1000);
*(.text.ANIM_animdata_filter .text.make_new_animlistelem .text.animdata_filter_dopesheet .text.animdata_filter_dopesheet_scene .text.animdata_filter_dopesheet_ob .text.animdata_filter_ds_material .text.animdata_filter_ds_textures)
. = ALIGN(0x1000);
*(.text.ANIM_animdata_context_getdata)
. = ALIGN(0x1000);
*(.text.ANIM_animdata_get_context)
. = ALIGN(0x1000);
*(.text.ANIM_deselect_anim_channels)
. = ALIGN(0x1000);
*(.text.bezt_nlamapping_apply)
. = ALIGN(0x1000);
*(.text.bezt_nlamapping_restore)
. = ALIGN(0x1000);
*(.text.animfilter_modifier_idpoin_cb)
. = ALIGN(0x1000);
*(.text.animfilter_action .text.animfilter_block_data .text.animfilter_nla .text.animfilter_fcurve_next .text.animdata_filter_ds_nodetree_group .text.animdata_filter_ds_texture)
. = ALIGN(0x1000);
*(.text.MARKER_OT_select)
. = ALIGN(0x1000);
*(.text.MARKER_OT_make_links_scene)
. = ALIGN(0x1000);
*(.text.ed_marker_camera_bind_exec)
. = ALIGN(0x1000);
*(.text.ed_markers_opwrap_invoke)
. = ALIGN(0x1000);
*(.text.ed_markers_poll_selected_markers)
. = ALIGN(0x1000);
*(.text.ed_marker_make_links_scene_exec)
. = ALIGN(0x1000);
*(.text.ed_marker_make_links_scene_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.WM_menu_invoke)
. = ALIGN(0x1000);
*(.text.ed_marker_rename_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.ed_marker_rename_exec)
. = ALIGN(0x1000);
*(.text.ed_marker_delete_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.ed_marker_delete_exec)
. = ALIGN(0x1000);
*(.text.ed_marker_select_all_exec)
. = ALIGN(0x1000);
*(.text.ed_markers_poll_markers_exist)
. = ALIGN(0x1000);
*(.text.ed_marker_border_select_exec)
. = ALIGN(0x1000);
*(.text.ed_marker_select_border_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.wm_gesture_tag_redraw)
. = ALIGN(0x1000);
*(.text.WM_gesture_new)
. = ALIGN(0x1000);
*(.text.ed_marker_select_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.ED_base_object_activate)
. = ALIGN(0x1000);
*(.text.ed_marker_duplicate_exec)
. = ALIGN(0x1000);
*(.text.ed_marker_duplicate_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.ed_marker_move_modal)
. = ALIGN(0x1000);
*(.text.applyNumInput)
. = ALIGN(0x1000);
*(.text.handleNumInput)
. = ALIGN(0x1000);
*(.text.cursor_delim_type_unicode)
. = ALIGN(0x1000);
*(.text.BLI_str_cursor_step_utf8)
. = ALIGN(0x1000);
*(.text.ed_marker_move_cancel)
. = ALIGN(0x1000);
*(.text.ed_marker_move_exec)
. = ALIGN(0x1000);
*(.text.ed_marker_move_apply)
. = ALIGN(0x1000);
*(.text.ed_marker_move_invoke_wrapper)
. = ALIGN(0x1000);
*(.text.ed_marker_move_init)
. = ALIGN(0x1000);
*(.text.ed_marker_move_update_header)
. = ALIGN(0x1000);
*(.text.outputNumInput)
. = ALIGN(0x1000);
*(.text.ed_marker_add_exec)
. = ALIGN(0x1000);
*(.text.previewrange_clear_exec)
. = ALIGN(0x1000);
*(.text.previewrange_define_exec)
. = ALIGN(0x1000);
*(.text.change_frame_exec.17395)
. = ALIGN(0x1000);
*(.text.change_frame_invoke.17396)
. = ALIGN(0x1000);
*(.text.change_frame_modal.17397)
. = ALIGN(0x1000);
*(.text.change_frame_poll.17398)
. = ALIGN(0x1000);
*(.text.add_driver_button_exec)
. = ALIGN(0x1000);
*(.text.ANIM_add_driver)
. = ALIGN(0x1000);
*(.text.remove_driver_button_exec)
. = ALIGN(0x1000);
*(.text.ANIM_remove_driver)
. = ALIGN(0x1000);
*(.text.ANIM_copy_driver .text.copy_driver_button_exec)
. = ALIGN(0x1000);
*(.text.ANIM_paste_driver .text.paste_driver_button_exec)
. = ALIGN(0x1000);
*(.text.delete_fmodifier_cb)
. = ALIGN(0x1000);
*(.text.validate_fmodifier_cb)
. = ALIGN(0x1000);
*(.text.fmod_envelope_addpoint_cb)
. = ALIGN(0x1000);
*(.text.fmod_envelope_deletepoint_cb)
. = ALIGN(0x1000);
*(.text.ok_bezier_frame)
. = ALIGN(0x1000);
*(.text.ok_bezier_framerange)
. = ALIGN(0x1000);
*(.text.ok_bezier_selected)
. = ALIGN(0x1000);
*(.text.ok_bezier_value)
. = ALIGN(0x1000);
*(.text.ok_bezier_valuerange)
. = ALIGN(0x1000);
*(.text.ok_bezier_region)
. = ALIGN(0x1000);
*(.text.ok_bezier_region_lasso)
. = ALIGN(0x1000);
*(.text.snap_bezier_nearest)
. = ALIGN(0x1000);
*(.text.snap_bezier_cframe)
. = ALIGN(0x1000);
*(.text.snap_bezier_nearestsec)
. = ALIGN(0x1000);
*(.text.snap_bezier_nearmarker)
. = ALIGN(0x1000);
*(.text.snap_bezier_horizontal)
. = ALIGN(0x1000);
*(.text.snap_bezier_value)
. = ALIGN(0x1000);
*(.text.mirror_bezier_yaxis)
. = ALIGN(0x1000);
*(.text.mirror_bezier_cframe)
. = ALIGN(0x1000);
*(.text.mirror_bezier_xaxis)
. = ALIGN(0x1000);
*(.text.mirror_bezier_marker)
. = ALIGN(0x1000);
*(.text.mirror_bezier_value)
. = ALIGN(0x1000);
*(.text.bezier_isfree)
. = ALIGN(0x1000);
*(.text.set_bezier_free)
. = ALIGN(0x1000);
*(.text.set_bezier_auto)
. = ALIGN(0x1000);
*(.text.set_bezier_vector)
. = ALIGN(0x1000);
*(.text.set_bezier_align)
. = ALIGN(0x1000);
*(.text.set_bezier_auto_clamped)
. = ALIGN(0x1000);
*(.text.set_bezt_bezier)
. = ALIGN(0x1000);
*(.text.set_bezt_constant)
. = ALIGN(0x1000);
*(.text.set_bezt_linear)
. = ALIGN(0x1000);
*(.text.set_bezt_back)
. = ALIGN(0x1000);
*(.text.set_bezt_bounce)
. = ALIGN(0x1000);
*(.text.set_bezt_circle)
. = ALIGN(0x1000);
*(.text.set_bezt_cubic)
. = ALIGN(0x1000);
*(.text.set_bezt_elastic)
. = ALIGN(0x1000);
*(.text.set_bezt_expo)
. = ALIGN(0x1000);
*(.text.set_bezt_quad)
. = ALIGN(0x1000);
*(.text.set_bezt_quart)
. = ALIGN(0x1000);
*(.text.set_bezt_quint)
. = ALIGN(0x1000);
*(.text.set_bezt_sine)
. = ALIGN(0x1000);
*(.text.set_keytype_keyframe)
. = ALIGN(0x1000);
*(.text.set_keytype_extreme)
. = ALIGN(0x1000);
*(.text.set_keytype_breakdown)
. = ALIGN(0x1000);
*(.text.set_keytype_jitter)
. = ALIGN(0x1000);
*(.text.set_easingtype_easeauto)
. = ALIGN(0x1000);
*(.text.set_easingtype_easein)
. = ALIGN(0x1000);
*(.text.set_easingtype_easeout)
. = ALIGN(0x1000);
*(.text.set_easingtype_easeinout)
. = ALIGN(0x1000);
*(.text.select_bezier_subtract)
. = ALIGN(0x1000);
*(.text.select_bezier_add)
. = ALIGN(0x1000);
*(.text.select_bezier_invert)
. = ALIGN(0x1000);
*(.text.selmap_build_bezier_less)
. = ALIGN(0x1000);
*(.text.selmap_build_bezier_more)
. = ALIGN(0x1000);
*(.text.ANIM_OT_keyframe_insert)
. = ALIGN(0x1000);
*(.text.insert_key_exec)
. = ALIGN(0x1000);
*(.text.ED_object_toggle_modes)
. = ALIGN(0x1000);
*(.text.modify_key_op_poll)
. = ALIGN(0x1000);
*(.text.ANIM_OT_keyframe_insert_menu)
. = ALIGN(0x1000);
*(.text.insert_key_menu_invoke)
. = ALIGN(0x1000);
*(.text.RNA_enum_set)
. = ALIGN(0x1000);
*(.text.ANIM_OT_keyframe_delete)
. = ALIGN(0x1000);
*(.text.RNA_def_property_enum_default)
. = ALIGN(0x1000);
*(.text.RNA_def_enum)
. = ALIGN(0x1000);
*(.text.delete_key_exec)
. = ALIGN(0x1000);
*(.text.ANIM_validate_keyingset)
. = ALIGN(0x1000);
*(.text.ANIM_apply_keyingset)
. = ALIGN(0x1000);
*(.text.clear_anim_v3d_exec)
. = ALIGN(0x1000);
*(.text.delete_key_v3d_exec)
. = ALIGN(0x1000);
*(.text.insert_key_button_exec)
. = ALIGN(0x1000);
*(.text.delete_key_button_exec)
. = ALIGN(0x1000);
*(.text.delete_keyframe)
. = ALIGN(0x1000);
*(.text.clear_key_button_exec)
. = ALIGN(0x1000);
*(.text.ANIM_fcurve_delete_from_animdata)
. = ALIGN(0x1000);
*(.text.uiContextAnimUpdate)
. = ALIGN(0x1000);
*(.text.add_default_keyingset_exec)
. = ALIGN(0x1000);
*(.text.keyingset_poll_default_add)
. = ALIGN(0x1000);
*(.text.remove_active_keyingset_exec)
. = ALIGN(0x1000);
*(.text.keyingset_poll_active_edit)
. = ALIGN(0x1000);
*(.text.add_empty_ks_path_exec)
. = ALIGN(0x1000);
*(.text.remove_active_ks_path_exec)
. = ALIGN(0x1000);
*(.text.keyingset_poll_activePath_edit)
. = ALIGN(0x1000);
*(.text.add_keyingset_button_exec)
. = ALIGN(0x1000);
*(.text.BKE_keyingset_add_path)
. = ALIGN(0x1000);
*(.text.remove_keyingset_button_exec)
. = ALIGN(0x1000);
*(.text.keyingset_active_menu_invoke)
. = ALIGN(0x1000);
*(.text.keyingset_active_menu_exec)
. = ALIGN(0x1000);
*(.text.ANIM_keying_sets_enum_itemf)
. = ALIGN(0x1000);
*(.text.add_vertex_invoke.17898)
. = ALIGN(0x1000);
*(.text.add_vertex_exec.17897 .text.add_vertex_subdivide .text.ED_mask_new .text.BKE_mask_calc_handle_adjacent_interp)
. = ALIGN(0x1000);
*(.text.add_feather_vertex_invoke)
. = ALIGN(0x1000);
*(.text.add_feather_vertex_exec)
. = ALIGN(0x1000);
*(.text.MASK_OT_primitive_circle_add)
. = ALIGN(0x1000);
*(.text.primitive_circle_add_exec)
. = ALIGN(0x1000);
*(.text.primitive_add_invoke)
. = ALIGN(0x1000);
*(.text.MASK_OT_primitive_square_add)
. = ALIGN(0x1000);
*(.text.RNA_def_float)
. = ALIGN(0x1000);
*(.text.primitive_square_add_exec)
. = ALIGN(0x1000);
*(.text.create_primitive_from_points .text.ED_mask_layer_ensure)
. = ALIGN(0x1000);
*(.text.mask_rasterize_func)
. = ALIGN(0x1000);
*(.text.BKE_maskrasterize_handle_sample)
. = ALIGN(0x1000);
*(.text.ED_maskedit_poll)
. = ALIGN(0x1000);
*(.text.mask_new_exec)
. = ALIGN(0x1000);
*(.text.masklay_new_exec)
. = ALIGN(0x1000);
*(.text.masklay_remove_exec)
. = ALIGN(0x1000);
*(.text.MASK_OT_slide_point)
. = ALIGN(0x1000);
*(.text.slide_point_invoke)
. = ALIGN(0x1000);
*(.text.slide_point_modal)
. = ALIGN(0x1000);
*(.text.BKE_mask_point_sort_uw)
. = ALIGN(0x1000);
*(.text.BKE_mask_point_set_handle)
. = ALIGN(0x1000);
*(.text.slide_spline_curvature_invoke)
. = ALIGN(0x1000);
*(.text.BKE_mask_spline_project_co)
. = ALIGN(0x1000);
*(.text.angle_v2v2)
. = ALIGN(0x1000);
*(.text.ED_mask_find_nearest_diff_point .text.BKE_mask_point_segment_feather_diff .text.BKE_mask_point_segment_diff)
. = ALIGN(0x1000);
*(.text.slide_spline_curvature_modal)
. = ALIGN(0x1000);
*(.text.cyclic_toggle_exec)
. = ALIGN(0x1000);
*(.text.delete_exec.18068)
. = ALIGN(0x1000);
*(.text.mask_switch_direction_exec .text.BKE_mask_spline_direction_switch)
. = ALIGN(0x1000);
*(.text.mask_normals_make_consistent_exec)
. = ALIGN(0x1000);
*(.text.set_handle_type_exec.18086)
. = ALIGN(0x1000);
*(.text.mask_hide_view_clear_exec)
. = ALIGN(0x1000);
*(.text.mask_hide_view_set_exec)
. = ALIGN(0x1000);
*(.text.ED_mask_layer_select_set)
. = ALIGN(0x1000);
*(.text.mask_feather_weight_clear_exec)
. = ALIGN(0x1000);
*(.text.mask_layer_move_exec)
. = ALIGN(0x1000);
*(.text.mask_layer_move_poll)
. = ALIGN(0x1000);
*(.text.mask_duplicate_exec)
. = ALIGN(0x1000);
*(.text.copy_splines_exec .text.BKE_mask_clipboard_copy_from_layer)
. = ALIGN(0x1000);
*(.text.paste_splines_exec .text.BKE_mask_clipboard_paste_to_layer)
. = ALIGN(0x1000);
*(.text.paste_splines_poll)
. = ALIGN(0x1000);
*(.text.ED_maskedit_mask_poll)
. = ALIGN(0x1000);
*(.text.ED_space_image_maskedit_poll)
. = ALIGN(0x1000);
*(.text.mask_parent_clear_exec)
. = ALIGN(0x1000);
*(.text.mask_parent_set_exec)
. = ALIGN(0x1000);
*(.text.select_all_exec.18171)
. = ALIGN(0x1000);
*(.text.MASK_OT_select)
. = ALIGN(0x1000);
*(.text.RNA_def_float_vector)
. = ALIGN(0x1000);
*(.text.RNA_def_property_array)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_mouse_select)
. = ALIGN(0x1000);
*(.text.select_invoke.18179)
. = ALIGN(0x1000);
*(.text.BKE_mask_point_segment_co .text.BKE_mask_point_normal)
. = ALIGN(0x1000);
*(.text.BKE_mask_point_weight)
. = ALIGN(0x1000);
*(.text.ED_mask_feather_find_nearest .text.BKE_mask_spline_feather_points)
. = ALIGN(0x1000);
*(.text.ED_mask_select_toggle_all)
. = ALIGN(0x1000);
*(.text.select_exec.18178)
. = ALIGN(0x1000);
*(.text.border_select_exec.18191)
. = ALIGN(0x1000);
*(.text.MASK_OT_select_lasso)
. = ALIGN(0x1000);
*(.text.ED_mask_point_pos__reverse .text.clip_lasso_select_exec.18198)
. = ALIGN(0x1000);
*(.text.ED_clip_point_stable_pos__reverse)
. = ALIGN(0x1000);
*(.text.ED_image_point_pos__reverse)
. = ALIGN(0x1000);
*(.text.WM_gesture_lasso_path_to_array)
. = ALIGN(0x1000);
*(.text.MASK_OT_select_circle)
. = ALIGN(0x1000);
*(.text.RNA_def_int)
. = ALIGN(0x1000);
*(.text.ED_mask_zoom .text.circle_select_exec.18211)
. = ALIGN(0x1000);
*(.text.ED_image_point_pos .text.ED_mask_point_pos)
. = ALIGN(0x1000);
*(.text.mask_select_linked_pick_invoke)
. = ALIGN(0x1000);
*(.text.ED_clip_point_stable_pos)
. = ALIGN(0x1000);
*(.text.ED_image_mouse_pos .text.ED_mask_mouse_pos)
. = ALIGN(0x1000);
*(.text.ED_mask_point_find_nearest)
. = ALIGN(0x1000);
*(.text.ED_mask_pixelspace_factor)
. = ALIGN(0x1000);
*(.text.mask_select_linked_exec)
. = ALIGN(0x1000);
*(.text.ED_mask_select_flush_all)
. = ALIGN(0x1000);
*(.text.mask_select_more_exec)
. = ALIGN(0x1000);
*(.text.mask_select_less_exec)
. = ALIGN(0x1000);
*(.text.mask_select_more_less)
. = ALIGN(0x1000);
*(.text.mask_shape_key_insert_exec)
. = ALIGN(0x1000);
*(.text.mask_shape_key_clear_exec)
. = ALIGN(0x1000);
*(.text.mask_shape_key_feather_reset_exec)
. = ALIGN(0x1000);
*(.text.MASK_OT_shape_key_rekey)
. = ALIGN(0x1000);
*(.text.mask_shape_key_rekey_exec)
. = ALIGN(0x1000);
*(.text.BKE_mask_layer_shape_from_mask)
. = ALIGN(0x1000);
*(.text.BKE_mask_layer_shape_verify_frame)
. = ALIGN(0x1000);
*(.text._ZL28RE_rayobject_empty_intersectP9RayObjectP5Isect)
. = ALIGN(0x1000);
*(.text._ZL23RE_rayobject_empty_freeP9RayObject)
. = ALIGN(0x1000);
*(.text._ZL21RE_rayobject_empty_bbP9RayObjectPfS1_)
. = ALIGN(0x1000);
*(.text._ZL23RE_rayobject_empty_costP9RayObject)
. = ALIGN(0x1000);
*(.text._ZL26RE_rayobject_empty_hint_bbP9RayObjectP7RayHintPfS3_)
. = ALIGN(0x1000);
*(.text._ZL29RE_rayobject_octree_intersectP9RayObjectP5Isect .text._ZL6ocreadP6Octreeiii .text._ZL8testnodeP6OctreeP5IsectP4Node5OcVal)
. = ALIGN(0x1000);
*(.text._ZL23RE_rayobject_octree_addP9RayObjectS0_)
. = ALIGN(0x1000);
*(.text._ZL24RE_rayobject_octree_doneP9RayObject .text._ZL7ocwriteP6OctreeP7RayFaceisssPA3_f .text._ZL12face_in_nodeP7RayFacesssPA3_f)
. = ALIGN(0x1000);
*(.text._ZL24RE_rayobject_octree_freeP9RayObject)
. = ALIGN(0x1000);
*(.text._ZL22RE_rayobject_octree_bbP9RayObjectPfS1_)
. = ALIGN(0x1000);
*(.text._ZL24RE_rayobject_octree_costP9RayObject)
. = ALIGN(0x1000);
*(.text._ZL27RE_rayobject_octree_hint_bbP9RayObjectP7RayHintPfS3_)
. = ALIGN(0x1000);
*(.text._ZL31RE_rayobject_instance_intersectP9RayObjectP5Isect)
. = ALIGN(0x1000);
*(.text._ZL26RE_rayobject_instance_freeP9RayObject)
. = ALIGN(0x1000);
*(.text._ZL24RE_rayobject_instance_bbP9RayObjectPfS1_)
. = ALIGN(0x1000);
*(.text._ZL26RE_rayobject_instance_costP9RayObject)
. = ALIGN(0x1000);
*(.text._ZL29RE_rayobject_instance_hint_bbP9RayObjectP7RayHintPfS3_)
. = ALIGN(0x1000);
*(.text._ZL14obj_bb_compareIPN9RTBuilder6ObjectELi0EEbRKT_S5_)
. = ALIGN(0x1000);
*(.text._ZL14obj_bb_compareIPN9RTBuilder6ObjectELi1EEbRKT_S5_)
. = ALIGN(0x1000);
*(.text._ZL14obj_bb_compareIPN9RTBuilder6ObjectELi2EEbRKT_S5_)
. = ALIGN(0x1000);
*(.text._ZL13selected_nodePN9RTBuilder6ObjectE)
. = ALIGN(0x1000);
*(.text._ZL9intersectILi1024EEiP8VBVHTreeP5Isect)
. = ALIGN(0x1000);
*(.text.rtbuild_add .text._ZL7bvh_addI8VBVHTreeEvPT_P9RayObject)
. = ALIGN(0x1000);
*(.text.rtbuild_done .text._ZSt16__introsort_loopIPPN9RTBuilder6ObjectElN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS2_S8_EEEEvT_SC_T0_T1_ .text._ZSt11__make_heapIPPN9RTBuilder6ObjectEN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS2_S8_EEEEvT_SC_RT0_ .text.rtbuild_heuristic_object_split .text._ZSt27__stable_partition_adaptiveIPPN9RTBuilder6ObjectES3_N9__gnu_cxx5__ops10_Iter_predIPFbS2_EEElET_SA_SA_T1_T2_T0_SC_ .text._ZNSt3_V28__rotateIPPN9RTBuilder6ObjectEEET_S5_S5_S5_St26random_access_iterator_tag .text._ZL8bvh_doneI8VBVHTreeEvPT_ .text._ZN15BuildBinaryVBVHI8VBVHNodeE10_transformEP9RTBuilder .text._ZNSt11_Deque_baseIP8VBVHNodeSaIS1_EE17_M_initialize_mapEm .text._ZL14remove_uselessI8VBVHNodeEvPT_PS2_ .text._ZL9bvh_refitI8VBVHNodeEfPT_ .text._ZL6pushupI8VBVHNodeEvPT_ .text._ZL8pushdownI8VBVHNodeEvPT_)
. = ALIGN(0x1000);
*(.text._ZL8bvh_freeI8VBVHTreeEvPT_)
. = ALIGN(0x1000);
*(.text._ZL6bvh_bbI8VBVHTreeEvPT_PfS3_)
. = ALIGN(0x1000);
*(.text.RE_rayobject_merge_bb)
. = ALIGN(0x1000);
*(.text._ZL8bvh_costI8VBVHTreeEfPT_)
. = ALIGN(0x1000);
*(.text._ZL11bvh_hint_bbI8VBVHTreeEvPT_P8LCTSHintPfS5_)
. = ALIGN(0x1000);
*(.text.do_bake_thread .text.bake_set_vlr_dxyco)
. = ALIGN(0x1000);
*(.text.zspan_scanconvert)
. = ALIGN(0x1000);
*(.text.IMB_rectfill)
. = ALIGN(0x1000);
*(.text.do_bake_shade .text.bake_set_shade_input .text.bake_displacement .text.bake_shade)
. = ALIGN(0x1000);
*(.text.store_bake_pixel)
. = ALIGN(0x1000);
*(.text.vergedgesort)
. = ALIGN(0x1000);
*(.text.GetNumFaces)
. = ALIGN(0x1000);
*(.text.GetNumVertsOfFace)
. = ALIGN(0x1000);
*(.text.GetPosition)
. = ALIGN(0x1000);
*(.text.GetTextureCoordinate)
. = ALIGN(0x1000);
*(.text.GetNormal)
. = ALIGN(0x1000);
*(.text.SetTSpace)
. = ALIGN(0x1000);
*(.text.verghalo)
. = ALIGN(0x1000);
*(.text.feline_eval)
. = ALIGN(0x1000);
*(.text.area_sample)
. = ALIGN(0x1000);
*(.text.ewa_eval)
. = ALIGN(0x1000);
*(.text.BLI_ewa_filter)
. = ALIGN(0x1000);
*(.text.ewa_read_pixel_cb)
. = ALIGN(0x1000);
*(.text.ibuf_get_color_clip)
. = ALIGN(0x1000);
*(.text.apply_tangmat_callback)
. = ALIGN(0x1000);
*(.text.init_normal_data)
. = ALIGN(0x1000);
*(.text.free_normal_data)
. = ALIGN(0x1000);
*(.text.apply_heights_callback)
. = ALIGN(0x1000);
*(.text.init_heights_data)
. = ALIGN(0x1000);
*(.text.free_heights_data)
. = ALIGN(0x1000);
*(.text.apply_ao_callback)
. = ALIGN(0x1000);
*(.text.get_ccgdm_data)
. = ALIGN(0x1000);
*(.text.resolve_quad_uv_v2_deriv)
. = ALIGN(0x1000);
*(.text.init_ao_data .text.RE_rayobject_create)
. = ALIGN(0x1000);
*(.text.RE_rayobject_vbvh_create)
. = ALIGN(0x1000);
*(.text.free_ao_data)
. = ALIGN(0x1000);
*(.text.do_multires_bake_thread .text.rasterize_half)
. = ALIGN(0x1000);
*(.text.flush_pixel .text.multiresbake_get_normal)
. = ALIGN(0x1000);
*(.text.exec_strandsurface_sample)
. = ALIGN(0x1000);
*(.text.exec_occ_build)
. = ALIGN(0x1000);
*(.text.occ_build_recursive .text.occ_face .text.occ_build_split .text.occ_build_dco)
. = ALIGN(0x1000);
*(.text.result_nothing)
. = ALIGN(0x1000);
*(.text.result_rcti_nothing)
. = ALIGN(0x1000);
*(.text.current_scene_nothing)
. = ALIGN(0x1000);
*(.text.float_nothing)
. = ALIGN(0x1000);
*(.text.default_break)
. = ALIGN(0x1000);
*(.text.stats_nothing)
. = ALIGN(0x1000);
*(.text.stats_background)
. = ALIGN(0x1000);
*(.text.thread_break.18533)
. = ALIGN(0x1000);
*(.text.strand_shade_get .text.AtmospherePixleShader .text.zbuffer_solid .text.zmask_rect .text.zbuffer_sss .text.zbuffer_transp_shade .text.shade_tra_samples .text.addtosamp_shr .text.add_transp_passes .text.cache_occ_samples .text.do_render_thread .text.add_filt_fmask .text.add_filt_fmask_pixsize .text.shadeSkyPixel .text.shadeAtmPixel .text.get_sample_layers .text.zbufshadeDA_tile .text.add_passes .text.lamphalo_tile .text.halo_tile .text.atm_tile .text.sky_tile .text.zbufshade_tile .text.zbufshade_sss_tile .text.shade_sample_sss .text.shadow_halo .text.ISB_create .text.viewpixel_to_lampbuf .text.isb_bsp_split_init .text.isb_bsp_insert .text.isb_bsp_fillfaces .text.isb_bsp_recalc_box .text.ISB_free .text.shade_input_do_shade .text.shade_input_set_triangle .text.shade_input_set_strand .text.shade_input_set_strand_texco .text.shade_sample_initialize .text.shade_samples_fill_with_ps .text.shade_samples .text.renderspothalo .text.strand_shade_cache_free .text.strand_shade_segment)
. = ALIGN(0x1000);
*(.text.shade_input_set_uv .text.shade_samples_do_AO)
. = ALIGN(0x1000);
*(.text.shadeHaloFloat .text.do_halo_tex)
. = ALIGN(0x1000);
*(.text.material_in_nodetree)
. = ALIGN(0x1000);
*(.text.render_composit_stats)
. = ALIGN(0x1000);
*(.text.test_break)
. = ALIGN(0x1000);
*(.text.make_pixelstructs)
. = ALIGN(0x1000);
*(.text.edge_enhance_tile)
. = ALIGN(0x1000);
*(.text.addps_sss)
. = ALIGN(0x1000);
*(.text.tex_sin)
. = ALIGN(0x1000);
*(.text.tex_saw)
. = ALIGN(0x1000);
*(.text.tex_tri)
. = ALIGN(0x1000);
*(.text.verg_deepsample)
. = ALIGN(0x1000);
*(.text.thread_break.18972)
. = ALIGN(0x1000);
*(.text.do_shadow_thread)
. = ALIGN(0x1000);
*(.text.zbufclipwire .text.zbufclip .text.makevertpyra .text.zbufclip4 .text.zbuf_part_project .text.zbuffer_abuf)
. = ALIGN(0x1000);
*(.text.render_strand_segment .text.strand_segment_recursive .text.strand_render .text.zbuffer_strands_abuf .text.zbufsinglewire .text.zspan_scanconvert_strand .text.RE_findOrAddStrand .text.strand_eval_point)
. = ALIGN(0x1000);
*(.text.clipline .text.clip_render_object)
. = ALIGN(0x1000);
*(.text.zbuf_add_to_span)
. = ALIGN(0x1000);
*(.text.RE_findOrAddVlak)
. = ALIGN(0x1000);
*(.text.zbuffer_shadow .text.zbuf_shadow_project .text.RE_findOrAddVert .text.makeshadowbuf)
. = ALIGN(0x1000);
*(.text.isb_bsp_test_face)
. = ALIGN(0x1000);
*(.text.isb_bsp_test_strand)
. = ALIGN(0x1000);
*(.text.isb_bsp_face_inside)
. = ALIGN(0x1000);
*(.text.interp_weights_face_v3 .text.barycentric_weights)
. = ALIGN(0x1000);
*(.text.do_material_tex .text.texco_mapping .text.calc_R_ref)
. = ALIGN(0x1000);
*(.text.do_volume_tex)
. = ALIGN(0x1000);
*(.text.texture_rgb_blend)
. = ALIGN(0x1000);
*(.text.RE_instance_rotate_ray)
. = ALIGN(0x1000);
*(.text.vol_get_density .text.vol_get_scattering .text.vol_get_shadow .text.vol_get_transmittance .text.do_lamp_tex .text.testshadowbuf .text.readshadowbuf .text.lamp_get_visibility)
. = ALIGN(0x1000);
*(.text.scatter_tree_sample .text.traverse_octree .text.add_radiance)
. = ALIGN(0x1000);
*(.text.GetSkyXYZRadiance)
. = ALIGN(0x1000);
*(.text.shadeSkyView .text.shadeSunView .text.get_thread_qmcsampler .text.QMC_initPixel .text.ray_ao .text.do_sky_tex)
. = ALIGN(0x1000);
*(.text.sample_occ)
. = ALIGN(0x1000);
*(.text.shade_input_calc_viewco)
. = ALIGN(0x1000);
*(.text.global_bounds_obi .text.shade_volume_shadow .text.vol_get_bounds .text.volume_trace .text.vol_trace_behind .text.volumeintegrate .text.ntreeShaderExecTree .text.shade_ray .text.ray_trace .text.traceray .text.ray_shadow .text.ray_trace_shadow_tra .text.render_realtime_texture .text.RE_vlakren_get_normal .text.ISB_getshadow .text.shade_material_loop .text.shade_input_set_triangle_i .text.shade_input_set_normals .text.shade_input_set_shade_texco .text.shade_color .text.lamp_get_shadow .text.shade_lamp_loop .text.add_to_diffuse)
. = ALIGN(0x1000);
*(.text.ramp_blend)
. = ALIGN(0x1000);
*(.text.RE_rayobject_intersect)
. = ALIGN(0x1000);
*(.text.occ_lookup .text.sample_occ_tree)
. = ALIGN(0x1000);
*(.text.form_factor_visible_quad)
. = ALIGN(0x1000);
*(.text.form_factor_quad)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_target_get)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_target_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_offset_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_offset_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_invert_z_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_invert_z_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_invert_y_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_invert_y_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_invert_x_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_invert_x_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_z_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_z_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_y_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_y_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_x_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_use_x_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_target_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_target_set)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.CopyLocationConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_offset_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_offset_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_invert_z_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_invert_z_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_invert_y_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_invert_y_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_invert_x_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_invert_x_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_z_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_z_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_y_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_y_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_x_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_use_x_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_target_get)
. = ALIGN(0x1000);
*(.text.CopyRotationConstraint_target_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_transform_limit_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_transform_limit_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_max_z_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_max_z_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_max_y_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_max_y_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_max_x_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_max_x_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_min_z_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_min_z_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_min_y_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_min_y_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_min_x_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_min_x_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_max_z_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_max_z_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_max_y_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_max_y_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_max_x_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_max_x_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_min_z_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_min_z_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_min_y_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_min_y_set)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_min_x_get)
. = ALIGN(0x1000);
*(.text.LimitScaleConstraint_use_min_x_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_transform_limit_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_transform_limit_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_max_z_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_max_z_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_max_y_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_max_y_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_max_x_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_max_x_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_min_z_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_min_z_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_min_y_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_min_y_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_min_x_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_min_x_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_max_z_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_max_z_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_max_y_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_max_y_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_max_x_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_max_x_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_min_z_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_min_z_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_min_y_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_min_y_set)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_min_x_get)
. = ALIGN(0x1000);
*(.text.LimitLocationConstraint_use_min_x_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_transform_limit_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_transform_limit_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_max_z_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_max_z_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_max_y_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_max_y_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_max_x_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_max_x_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_min_z_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_min_z_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_min_y_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_min_y_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_min_x_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_min_x_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_limit_z_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_limit_z_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_limit_y_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_limit_y_set)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_limit_x_get)
. = ALIGN(0x1000);
*(.text.LimitRotationConstraint_use_limit_x_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_use_curve_radius_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_use_curve_radius_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_use_fixed_location_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_use_fixed_location_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_use_curve_follow_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_use_curve_follow_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_up_axis_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_up_axis_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_forward_axis_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_forward_axis_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_offset_factor_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_offset_factor_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_offset_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_offset_set)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_target_get)
. = ALIGN(0x1000);
*(.text.FollowPathConstraint_target_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_distance_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_distance_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_limit_mode_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_limit_mode_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_ik_type_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_ik_type_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_stretch_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_stretch_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_rotation_z_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_rotation_z_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_rotation_y_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_rotation_y_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_rotation_x_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_rotation_x_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_rotation_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_rotation_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_location_z_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_location_z_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_location_y_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_location_y_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_location_x_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_lock_location_x_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_location_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_location_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_reference_axis_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_reference_axis_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_tail_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_use_tail_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_chain_count_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_chain_count_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_orient_weight_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_orient_weight_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_weight_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_weight_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_angle_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_angle_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_subtarget_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_subtarget_length)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_subtarget_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_target_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_pole_target_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_iterations_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_iterations_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_target_get)
. = ALIGN(0x1000);
*(.text.KinematicConstraint_target_set)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_use_target_z_get)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_use_target_z_set)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_up_axis_get)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_up_axis_set)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_track_axis_get)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_track_axis_set)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_target_get)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_target_set)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.TrackToConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_inverse_matrix_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_inverse_matrix_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_scale_z_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_scale_z_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_scale_y_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_scale_y_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_scale_x_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_scale_x_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_rotation_z_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_rotation_z_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_rotation_y_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_rotation_y_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_rotation_x_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_rotation_x_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_location_z_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_location_z_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_location_y_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_location_y_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_location_x_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_use_location_x_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_target_get)
. = ALIGN(0x1000);
*(.text.ChildOfConstraint_target_set)
. = ALIGN(0x1000);
*(.text.PythonConstraint_target_count_get)
. = ALIGN(0x1000);
*(.text.PythonConstraint_target_count_set)
. = ALIGN(0x1000);
*(.text.Context_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Context_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Context_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Context_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Context_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Context_rna_type_get)
. = ALIGN(0x1000);
*(.text.Context_window_manager_get)
. = ALIGN(0x1000);
*(.text.Context_window_get)
. = ALIGN(0x1000);
*(.text.Context_screen_get)
. = ALIGN(0x1000);
*(.text.Context_area_get)
. = ALIGN(0x1000);
*(.text.Context_space_data_get)
. = ALIGN(0x1000);
*(.text.Context_region_get)
. = ALIGN(0x1000);
*(.text.Context_region_data_get)
. = ALIGN(0x1000);
*(.text.Context_blend_data_get)
. = ALIGN(0x1000);
*(.text.Context_scene_get)
. = ALIGN(0x1000);
*(.text.Context_tool_settings_get)
. = ALIGN(0x1000);
*(.text.Context_user_preferences_get)
. = ALIGN(0x1000);
*(.text.Context_mode_get)
. = ALIGN(0x1000);
*(.text.CTX_data_mode_enum)
. = ALIGN(0x1000);
*(.text.Controller_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Controller_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Controller_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Controller_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Controller_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Controller_rna_type_get)
. = ALIGN(0x1000);
*(.text.Controller_name_get)
. = ALIGN(0x1000);
*(.text.Controller_name_length)
. = ALIGN(0x1000);
*(.text.Controller_name_set)
. = ALIGN(0x1000);
*(.text.Controller_type_get)
. = ALIGN(0x1000);
*(.text.Controller_type_set)
. = ALIGN(0x1000);
*(.text.Controller_show_expanded_get)
. = ALIGN(0x1000);
*(.text.Controller_show_expanded_set)
. = ALIGN(0x1000);
*(.text.Controller_active_get)
. = ALIGN(0x1000);
*(.text.Controller_active_set)
. = ALIGN(0x1000);
*(.text.Controller_use_priority_get)
. = ALIGN(0x1000);
*(.text.Controller_use_priority_set)
. = ALIGN(0x1000);
*(.text.Controller_actuators_begin)
. = ALIGN(0x1000);
*(.text.Controller_actuators_next)
. = ALIGN(0x1000);
*(.text.Controller_actuators_end)
. = ALIGN(0x1000);
*(.text.Controller_actuators_get)
. = ALIGN(0x1000);
*(.text.rna_Controller_actuators_length)
. = ALIGN(0x1000);
*(.text.Controller_actuators_lookup_int)
. = ALIGN(0x1000);
*(.text.Controller_actuators_lookup_string)
. = ALIGN(0x1000);
*(.text.Controller_states_get)
. = ALIGN(0x1000);
*(.text.Controller_states_set)
. = ALIGN(0x1000);
*(.text.Controller_unlink_call)
. = ALIGN(0x1000);
*(.text.Controller_link_call)
. = ALIGN(0x1000);
*(.text.rna_Controller_refine)
. = ALIGN(0x1000);
*(.text.ExpressionController_expression_get)
. = ALIGN(0x1000);
*(.text.ExpressionController_expression_length)
. = ALIGN(0x1000);
*(.text.ExpressionController_expression_set)
. = ALIGN(0x1000);
*(.text.PythonController_use_debug_get)
. = ALIGN(0x1000);
*(.text.PythonController_use_debug_set)
. = ALIGN(0x1000);
*(.text.PythonController_module_get)
. = ALIGN(0x1000);
*(.text.PythonController_module_length)
. = ALIGN(0x1000);
*(.text.PythonController_module_set)
. = ALIGN(0x1000);
*(.text.PythonController_text_get)
. = ALIGN(0x1000);
*(.text.PythonController_text_set)
. = ALIGN(0x1000);
*(.text.PythonController_mode_get)
. = ALIGN(0x1000);
*(.text.PythonController_mode_set)
. = ALIGN(0x1000);
*(.text.Curve_splines_begin)
. = ALIGN(0x1000);
*(.text.Curve_splines_next)
. = ALIGN(0x1000);
*(.text.Curve_splines_end)
. = ALIGN(0x1000);
*(.text.Curve_splines_get)
. = ALIGN(0x1000);
*(.text.rna_Curve_spline_path)
. = ALIGN(0x1000);
*(.text.rna_Curve_update_data)
. = ALIGN(0x1000);
*(.text.Spline_character_index_get)
. = ALIGN(0x1000);
*(.text.Spline_material_index_get)
. = ALIGN(0x1000);
*(.text.Spline_material_index_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_material_index_range)
. = ALIGN(0x1000);
*(.text.Spline_hide_get)
. = ALIGN(0x1000);
*(.text.Spline_hide_set)
. = ALIGN(0x1000);
*(.text.Spline_use_smooth_get)
. = ALIGN(0x1000);
*(.text.Spline_use_smooth_set)
. = ALIGN(0x1000);
*(.text.rna_Nurb_update_knot_v)
. = ALIGN(0x1000);
*(.text.Spline_use_bezier_v_get)
. = ALIGN(0x1000);
*(.text.Spline_use_bezier_v_set)
. = ALIGN(0x1000);
*(.text.rna_Nurb_update_knot_u)
. = ALIGN(0x1000);
*(.text.Spline_use_bezier_u_get)
. = ALIGN(0x1000);
*(.text.Spline_use_bezier_u_set)
. = ALIGN(0x1000);
*(.text.Spline_use_endpoint_v_get)
. = ALIGN(0x1000);
*(.text.Spline_use_endpoint_v_set)
. = ALIGN(0x1000);
*(.text.Spline_use_endpoint_u_get)
. = ALIGN(0x1000);
*(.text.Spline_use_endpoint_u_set)
. = ALIGN(0x1000);
*(.text.rna_Nurb_update_cyclic_v)
. = ALIGN(0x1000);
*(.text.Spline_use_cyclic_v_get)
. = ALIGN(0x1000);
*(.text.Spline_use_cyclic_v_set)
. = ALIGN(0x1000);
*(.text.rna_Nurb_update_cyclic_u)
. = ALIGN(0x1000);
*(.text.Spline_use_cyclic_u_get)
. = ALIGN(0x1000);
*(.text.Spline_use_cyclic_u_set)
. = ALIGN(0x1000);
*(.text.Spline_resolution_v_get)
. = ALIGN(0x1000);
*(.text.Spline_resolution_v_set)
. = ALIGN(0x1000);
*(.text.Spline_resolution_u_get)
. = ALIGN(0x1000);
*(.text.Spline_resolution_u_set)
. = ALIGN(0x1000);
*(.text.Spline_order_v_get)
. = ALIGN(0x1000);
*(.text.Spline_order_v_set)
. = ALIGN(0x1000);
*(.text.Spline_order_u_get)
. = ALIGN(0x1000);
*(.text.Spline_order_u_set)
. = ALIGN(0x1000);
*(.text.Spline_point_count_v_get)
. = ALIGN(0x1000);
*(.text.Spline_point_count_u_get)
. = ALIGN(0x1000);
*(.text.Spline_type_get)
. = ALIGN(0x1000);
*(.text.Spline_type_set)
. = ALIGN(0x1000);
*(.text.BKE_nurb_type_convert)
. = ALIGN(0x1000);
*(.text.Spline_radius_interpolation_get)
. = ALIGN(0x1000);
*(.text.Spline_radius_interpolation_set)
. = ALIGN(0x1000);
*(.text.Spline_tilt_interpolation_get)
. = ALIGN(0x1000);
*(.text.Spline_tilt_interpolation_set)
. = ALIGN(0x1000);
*(.text.Spline_bezier_points_begin)
. = ALIGN(0x1000);
*(.text.Spline_bezier_points_next)
. = ALIGN(0x1000);
*(.text.Spline_bezier_points_end)
. = ALIGN(0x1000);
*(.text.Spline_bezier_points_get)
. = ALIGN(0x1000);
*(.text.Spline_bezier_points_length)
. = ALIGN(0x1000);
*(.text.Spline_bezier_points_lookup_int)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_add_call)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SplineBezierPoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Spline_points_begin)
. = ALIGN(0x1000);
*(.text.Spline_points_next)
. = ALIGN(0x1000);
*(.text.Spline_points_end)
. = ALIGN(0x1000);
*(.text.Spline_points_get)
. = ALIGN(0x1000);
*(.text.rna_Nurb_length)
. = ALIGN(0x1000);
*(.text.Spline_points_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_Curve_spline_point_path)
. = ALIGN(0x1000);
*(.text.SplinePoint_radius_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_radius_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_weight_softbody_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_weight_softbody_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_tilt_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_tilt_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_weight_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_weight_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_co_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_co_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_hide_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_hide_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_select_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_select_set)
. = ALIGN(0x1000);
*(.text.SplinePoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SplinePoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SplinePoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SplinePoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SplinePoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_material_index_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_material_index_set)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_small_caps_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_small_caps_set)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_underline_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_underline_set)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_italic_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_italic_set)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_bold_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_use_bold_set)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_rna_type_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TextCharacterFormat_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_TextBox_path)
. = ALIGN(0x1000);
*(.text.TextBox_height_get)
. = ALIGN(0x1000);
*(.text.TextBox_height_set)
. = ALIGN(0x1000);
*(.text.TextBox_width_get)
. = ALIGN(0x1000);
*(.text.TextBox_width_set)
. = ALIGN(0x1000);
*(.text.TextBox_y_get)
. = ALIGN(0x1000);
*(.text.TextBox_y_set)
. = ALIGN(0x1000);
*(.text.TextBox_x_get)
. = ALIGN(0x1000);
*(.text.TextBox_x_set)
. = ALIGN(0x1000);
*(.text.TextBox_rna_type_get)
. = ALIGN(0x1000);
*(.text.TextBox_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TextBox_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TextBox_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TextBox_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TextBox_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Curve_refine)
. = ALIGN(0x1000);
*(.text.Curve_validate_material_indices_call)
. = ALIGN(0x1000);
*(.text.BKE_curve_material_index_validate)
. = ALIGN(0x1000);
*(.text.Curve_transform_call)
. = ALIGN(0x1000);
*(.text.BKE_curve_transform_ex)
. = ALIGN(0x1000);
*(.text.Curve_animation_data_get)
. = ALIGN(0x1000);
*(.text.Curve_is_editmode_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_end_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_end_set)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_start_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_start_set)
. = ALIGN(0x1000);
*(.text.Curve_materials_begin)
. = ALIGN(0x1000);
*(.text.Curve_materials_next)
. = ALIGN(0x1000);
*(.text.Curve_materials_end)
. = ALIGN(0x1000);
*(.text.Curve_materials_get)
. = ALIGN(0x1000);
*(.text.Curve_materials_length)
. = ALIGN(0x1000);
*(.text.Curve_materials_lookup_int)
. = ALIGN(0x1000);
*(.text.Curve_materials_lookup_string)
. = ALIGN(0x1000);
*(.text.Curve_use_uv_as_generated_get)
. = ALIGN(0x1000);
*(.text.Curve_use_uv_as_generated_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_texspace_editable)
. = ALIGN(0x1000);
*(.text.Curve_texspace_size_get)
. = ALIGN(0x1000);
*(.text.Curve_texspace_size_set)
. = ALIGN(0x1000);
*(.text.Curve_texspace_location_get)
. = ALIGN(0x1000);
*(.text.Curve_texspace_location_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_texspace_set)
. = ALIGN(0x1000);
*(.text.Curve_use_auto_texspace_get)
. = ALIGN(0x1000);
*(.text.Curve_use_auto_texspace_set)
. = ALIGN(0x1000);
*(.text.Curve_use_map_taper_get)
. = ALIGN(0x1000);
*(.text.Curve_use_map_taper_set)
. = ALIGN(0x1000);
*(.text.Curve_use_fill_caps_get)
. = ALIGN(0x1000);
*(.text.Curve_use_fill_caps_set)
. = ALIGN(0x1000);
*(.text.Curve_use_fill_deform_get)
. = ALIGN(0x1000);
*(.text.Curve_use_fill_deform_set)
. = ALIGN(0x1000);
*(.text.Curve_twist_smooth_get)
. = ALIGN(0x1000);
*(.text.Curve_twist_smooth_set)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_mapping_end_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_mapping_end_set)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_mapping_start_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_factor_mapping_start_set)
. = ALIGN(0x1000);
*(.text.Curve_twist_mode_get)
. = ALIGN(0x1000);
*(.text.Curve_twist_mode_set)
. = ALIGN(0x1000);
*(.text.Curve_fill_mode_get)
. = ALIGN(0x1000);
*(.text.Curve_fill_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_fill_mode_itemf)
. = ALIGN(0x1000);
*(.text.Curve_dimensions_get)
. = ALIGN(0x1000);
*(.text.Curve_dimensions_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_update_deps)
. = ALIGN(0x1000);
*(.text.Curve_taper_object_get)
. = ALIGN(0x1000);
*(.text.Curve_taper_object_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_otherObject_poll)
. = ALIGN(0x1000);
*(.text.Curve_bevel_object_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_object_set)
. = ALIGN(0x1000);
*(.text.Curve_eval_time_get)
. = ALIGN(0x1000);
*(.text.Curve_eval_time_set)
. = ALIGN(0x1000);
*(.text.Curve_render_resolution_v_get)
. = ALIGN(0x1000);
*(.text.Curve_render_resolution_v_set)
. = ALIGN(0x1000);
*(.text.Curve_render_resolution_u_get)
. = ALIGN(0x1000);
*(.text.Curve_render_resolution_u_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_resolution_v_update_data)
. = ALIGN(0x1000);
*(.text.Curve_resolution_v_get)
. = ALIGN(0x1000);
*(.text.Curve_resolution_v_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_resolution_u_update_data)
. = ALIGN(0x1000);
*(.text.Curve_resolution_u_get)
. = ALIGN(0x1000);
*(.text.Curve_resolution_u_set)
. = ALIGN(0x1000);
*(.text.Curve_bevel_depth_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_depth_set)
. = ALIGN(0x1000);
*(.text.Curve_extrude_get)
. = ALIGN(0x1000);
*(.text.Curve_extrude_set)
. = ALIGN(0x1000);
*(.text.Curve_offset_get)
. = ALIGN(0x1000);
*(.text.Curve_offset_set)
. = ALIGN(0x1000);
*(.text.Curve_bevel_resolution_get)
. = ALIGN(0x1000);
*(.text.Curve_bevel_resolution_set)
. = ALIGN(0x1000);
*(.text.Curve_use_radius_get)
. = ALIGN(0x1000);
*(.text.Curve_use_radius_set)
. = ALIGN(0x1000);
*(.text.Curve_use_deform_bounds_get)
. = ALIGN(0x1000);
*(.text.Curve_use_deform_bounds_set)
. = ALIGN(0x1000);
*(.text.Curve_use_stretch_get)
. = ALIGN(0x1000);
*(.text.Curve_use_stretch_set)
. = ALIGN(0x1000);
*(.text.Curve_use_path_follow_get)
. = ALIGN(0x1000);
*(.text.Curve_use_path_follow_set)
. = ALIGN(0x1000);
*(.text.Curve_use_path_get)
. = ALIGN(0x1000);
*(.text.Curve_use_path_set)
. = ALIGN(0x1000);
*(.text.Curve_path_duration_get)
. = ALIGN(0x1000);
*(.text.Curve_path_duration_set)
. = ALIGN(0x1000);
*(.text.Curve_show_normal_face_get)
. = ALIGN(0x1000);
*(.text.Curve_show_normal_face_set)
. = ALIGN(0x1000);
*(.text.TextCurve_use_uv_as_generated_get)
. = ALIGN(0x1000);
*(.text.TextCurve_use_uv_as_generated_set)
. = ALIGN(0x1000);
*(.text.TextCurve_use_fast_edit_get)
. = ALIGN(0x1000);
*(.text.TextCurve_use_fast_edit_set)
. = ALIGN(0x1000);
*(.text.TextCurve_edit_format_get)
. = ALIGN(0x1000);
*(.text.TextCurve_font_bold_italic_get)
. = ALIGN(0x1000);
*(.text.TextCurve_font_bold_italic_set)
. = ALIGN(0x1000);
*(.text.TextCurve_font_italic_get)
. = ALIGN(0x1000);
*(.text.TextCurve_font_italic_set)
. = ALIGN(0x1000);
*(.text.TextCurve_font_bold_get)
. = ALIGN(0x1000);
*(.text.TextCurve_font_bold_set)
. = ALIGN(0x1000);
*(.text.TextCurve_font_get)
. = ALIGN(0x1000);
*(.text.TextCurve_font_set)
. = ALIGN(0x1000);
*(.text.TextCurve_follow_curve_get)
. = ALIGN(0x1000);
*(.text.TextCurve_follow_curve_set)
. = ALIGN(0x1000);
*(.text.TextCurve_body_format_begin)
. = ALIGN(0x1000);
*(.text.TextCurve_body_format_next)
. = ALIGN(0x1000);
*(.text.TextCurve_body_format_end)
. = ALIGN(0x1000);
*(.text.TextCurve_body_format_get)
. = ALIGN(0x1000);
*(.text.TextCurve_body_format_length)
. = ALIGN(0x1000);
*(.text.TextCurve_body_format_lookup_int)
. = ALIGN(0x1000);
*(.text.TextCurve_body_get)
. = ALIGN(0x1000);
*(.text.TextCurve_body_length)
. = ALIGN(0x1000);
*(.text.TextCurve_body_set)
. = ALIGN(0x1000);
*(.text.TextCurve_family_get)
. = ALIGN(0x1000);
*(.text.TextCurve_family_length)
. = ALIGN(0x1000);
*(.text.TextCurve_family_set)
. = ALIGN(0x1000);
*(.text.TextCurve_active_textbox_get)
. = ALIGN(0x1000);
*(.text.TextCurve_active_textbox_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_active_textbox_index_range)
. = ALIGN(0x1000);
*(.text.TextCurve_text_boxes_begin)
. = ALIGN(0x1000);
*(.text.TextCurve_text_boxes_next)
. = ALIGN(0x1000);
*(.text.TextCurve_text_boxes_end)
. = ALIGN(0x1000);
*(.text.TextCurve_text_boxes_get)
. = ALIGN(0x1000);
*(.text.TextCurve_text_boxes_length)
. = ALIGN(0x1000);
*(.text.copyData.19408)
. = ALIGN(0x1000);
*(.text.subsurf_copy_grid_hidden .text.subsurf_copy_grid_paint_mask .text.applyModifier.19409 .text.BKE_mesh_flush_hidden_from_verts_ex)
. = ALIGN(0x1000);
*(.text.getFaceIndex)
. = ALIGN(0x1000);
*(.text.initData.19410)
. = ALIGN(0x1000);
*(.text.isDisabled.19411)
. = ALIGN(0x1000);
*(.text.copyData.19412)
. = ALIGN(0x1000);
*(.text.applyModifier.19413)
. = ALIGN(0x1000);
*(.text.initData.19414)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19415)
. = ALIGN(0x1000);
*(.text.freeData.19416)
. = ALIGN(0x1000);
*(.text.dependsOnNormals.19417)
. = ALIGN(0x1000);
*(.text.copyData.19418)
. = ALIGN(0x1000);
*(.text.applyModifier.19419)
. = ALIGN(0x1000);
*(.text.initData.19420)
. = ALIGN(0x1000);
*(.text.isDisabled.19421)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19422)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19423)
. = ALIGN(0x1000);
*(.text.copyData.19426)
. = ALIGN(0x1000);
*(.text.deformVerts.19427 .text.get_dm)
. = ALIGN(0x1000);
*(.text.initData.19428)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19429)
. = ALIGN(0x1000);
*(.text.freeData.19430)
. = ALIGN(0x1000);
*(.text.copyData.19431)
. = ALIGN(0x1000);
*(.text.applyModifier.19432)
. = ALIGN(0x1000);
*(.text.initData.19433)
. = ALIGN(0x1000);
*(.text.copyData.19434)
. = ALIGN(0x1000);
*(.text.applyModifier.19435)
. = ALIGN(0x1000);
*(.text.initData.19436)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19437)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19438)
. = ALIGN(0x1000);
*(.text.deformVerts.19442)
. = ALIGN(0x1000);
*(.text.deformMatrices.19443)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19444)
. = ALIGN(0x1000);
*(.text.deformMatricesEM.19445)
. = ALIGN(0x1000);
*(.text.copyData.19446)
. = ALIGN(0x1000);
*(.text.deformVerts.19447)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19448)
. = ALIGN(0x1000);
*(.text.shrinkwrapModifier_deform)
. = ALIGN(0x1000);
*(.text.initData.19449)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19450)
. = ALIGN(0x1000);
*(.text.isDisabled.19451)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19452)
. = ALIGN(0x1000);
*(.text.dependsOnNormals.19453)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19454)
. = ALIGN(0x1000);
*(.text.copyData.19456)
. = ALIGN(0x1000);
*(.text.deformVerts.19457)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19458)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_do)
. = ALIGN(0x1000);
*(.text.initData.19459)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19460)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19461)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19462)
. = ALIGN(0x1000);
*(.text.simpleDeform_bend)
. = ALIGN(0x1000);
*(.text.simpleDeform_twist)
. = ALIGN(0x1000);
*(.text.simpleDeform_taper)
. = ALIGN(0x1000);
*(.text.simpleDeform_stretch)
. = ALIGN(0x1000);
*(.text.copyData.19464)
. = ALIGN(0x1000);
*(.text.applyModifier.19465 .text.final_skin .text.create_frame .text.hull_merge_triangles .text.connect_frames .text.quad_from_tris .text.BM_face_share_face_check)
. = ALIGN(0x1000);
*(.text.CDDM_calc_edges)
. = ALIGN(0x1000);
*(.text.BKE_mesh_vert_edge_map_create)
. = ALIGN(0x1000);
*(.text.BM_mesh_delete_hflag_tagged)
. = ALIGN(0x1000);
*(.text.is_quad_convex_v3)
. = ALIGN(0x1000);
*(.text.initData.19466)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19467)
. = ALIGN(0x1000);
*(.text.smokeModifier_copy .text.copyData.19483)
. = ALIGN(0x1000);
*(.text.applyModifier.19484)
. = ALIGN(0x1000);
*(.text.initData.19485)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19486)
. = ALIGN(0x1000);
*(.text.freeData.19487)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19488)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19489)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19490)
. = ALIGN(0x1000);
*(.text.copyData.19495)
. = ALIGN(0x1000);
*(.text.deformVerts.19496)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19497)
. = ALIGN(0x1000);
*(.text.smoothModifier_do)
. = ALIGN(0x1000);
*(.text.initData.19498)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19499)
. = ALIGN(0x1000);
*(.text.isDisabled.19500)
. = ALIGN(0x1000);
*(.text.SB_estimate_transform .text.sbObjectStep .text.renew_softbody .text.add_2nd_order_roller .text.calculate_collision_balls .text.softbody_calc_forces .text.softbody_apply_forces .text.sb_detect_aabb_collisionCached .text.scan_for_ext_face_forces .text.sb_detect_face_collisionCached .text.sb_detect_face_pointCached .text.deformVerts.19503 .text.vcloud_estimate_transform)
. = ALIGN(0x1000);
*(.text.isect_point_tri_prism_v3)
. = ALIGN(0x1000);
*(.text.exec_softbody_calc_forces .text.sb_deflect_face .text.sb_spring_force)
. = ALIGN(0x1000);
*(.text._scan_for_ext_spring_forces)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19504)
. = ALIGN(0x1000);
*(.text.copyData.19505)
. = ALIGN(0x1000);
*(.text.applyModifier.19506)
. = ALIGN(0x1000);
*(.text.CDDM_from_template)
. = ALIGN(0x1000);
*(.text.initData.19507)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19508)
. = ALIGN(0x1000);
*(.text.dependsOnNormals.19509)
. = ALIGN(0x1000);
*(.text.copyData.19520)
. = ALIGN(0x1000);
*(.text.applyModifier.19521)
. = ALIGN(0x1000);
*(.text.applyModifierEM)
. = ALIGN(0x1000);
*(.text.initData.19522)
. = ALIGN(0x1000);
*(.text.freeData.19523)
. = ALIGN(0x1000);
*(.text.isDisabled.19524)
. = ALIGN(0x1000);
*(.text.deformVerts.19525)
. = ALIGN(0x1000);
*(.text.initData.19526)
. = ALIGN(0x1000);
*(.text.freeData.19527)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19528)
. = ALIGN(0x1000);
*(.text.copyData.19532)
. = ALIGN(0x1000);
*(.text.applyModifier.19533)
. = ALIGN(0x1000);
*(.text.initData.19534)
. = ALIGN(0x1000);
*(.text.copyData.19552)
. = ALIGN(0x1000);
*(.text.applyModifier.19553)
. = ALIGN(0x1000);
*(.text.initData.19554)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19555)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19556)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19557)
. = ALIGN(0x1000);
*(.text.copyData.19562)
. = ALIGN(0x1000);
*(.text.applyModifier.19563)
. = ALIGN(0x1000);
*(.text.CustomData_duplicate_referenced_layer_named)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_poly_normal_coords)
. = ALIGN(0x1000);
*(.text.BLI_uvproject_from_camera .text.BLI_uvproject_camera_info)
. = ALIGN(0x1000);
*(.text.initData.19564)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19565)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19566)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19567)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19568)
. = ALIGN(0x1000);
*(.text.copyData.19573)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19575)
. = ALIGN(0x1000);
*(.text.deformVerts.19574)
. = ALIGN(0x1000);
*(.text.initData.19576)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19577)
. = ALIGN(0x1000);
*(.text.freeData.19578)
. = ALIGN(0x1000);
*(.text.isDisabled.19579)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19580)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19581)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19582)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19583)
. = ALIGN(0x1000);
*(.text.foreachTexLink.19584)
. = ALIGN(0x1000);
*(.text.copyData.19592)
. = ALIGN(0x1000);
*(.text.deformVerts.19593)
. = ALIGN(0x1000);
*(.text.deformVertsEM.19594)
. = ALIGN(0x1000);
*(.text.get_cddm)
. = ALIGN(0x1000);
*(.text.waveModifier_do)
. = ALIGN(0x1000);
*(.text.initData.19595)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19596)
. = ALIGN(0x1000);
*(.text.freeData.19597)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19598)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19599)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19600)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19601)
. = ALIGN(0x1000);
*(.text.foreachTexLink.19602)
. = ALIGN(0x1000);
*(.text.copyData.19611)
. = ALIGN(0x1000);
*(.text.applyModifier.19612)
. = ALIGN(0x1000);
*(.text.initData.19613)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19614)
. = ALIGN(0x1000);
*(.text.freeData.19615)
. = ALIGN(0x1000);
*(.text.isDisabled.19616)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19617)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19618)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19619)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19620)
. = ALIGN(0x1000);
*(.text.foreachTexLink.19621)
. = ALIGN(0x1000);
*(.text.copyData.19629)
. = ALIGN(0x1000);
*(.text.applyModifier.19630)
. = ALIGN(0x1000);
*(.text.weightvg_update_vg)
. = ALIGN(0x1000);
*(.text.initData.19631)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19632)
. = ALIGN(0x1000);
*(.text.freeData.19633)
. = ALIGN(0x1000);
*(.text.isDisabled.19634)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19635)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19636)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19637)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19638)
. = ALIGN(0x1000);
*(.text.foreachTexLink.19639)
. = ALIGN(0x1000);
*(.text.copyData.19652)
. = ALIGN(0x1000);
*(.text.applyModifier.19653)
. = ALIGN(0x1000);
*(.text.weightvg_do_mask)
. = ALIGN(0x1000);
*(.text.get_texture_coords)
. = ALIGN(0x1000);
*(.text.weightvg_do_map)
. = ALIGN(0x1000);
*(.text.bvhtree_from_mesh_edges)
. = ALIGN(0x1000);
*(.text.initData.19654)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19655)
. = ALIGN(0x1000);
*(.text.freeData.19656)
. = ALIGN(0x1000);
*(.text.isDisabled.19657)
. = ALIGN(0x1000);
*(.text.updateDepgraph.19658)
. = ALIGN(0x1000);
*(.text.dag_get_node)
. = ALIGN(0x1000);
*(.text.dependsOnTime.19659)
. = ALIGN(0x1000);
*(.text.foreachObjectLink.19660)
. = ALIGN(0x1000);
*(.text.foreachIDLink.19661)
. = ALIGN(0x1000);
*(.text.foreachTexLink.19662)
. = ALIGN(0x1000);
*(.text.copyData.19679)
. = ALIGN(0x1000);
*(.text.applyModifier.19680)
. = ALIGN(0x1000);
*(.text.CustomData_bmesh_merge .text.DM_to_bmesh_ex .text.bm_face_create_from_mpoly.24162)
. = ALIGN(0x1000);
*(.text.initData.19681)
. = ALIGN(0x1000);
*(.text.requiredDataMask.19682)
. = ALIGN(0x1000);
*(.text.isDisabled.19683)
. = ALIGN(0x1000);
*(.text.dependsOnNormals.19684)
. = ALIGN(0x1000);
*(.text.bmo_beautify_fill_exec)
. = ALIGN(0x1000);
*(.text.bmo_bevel_exec)
. = ALIGN(0x1000);
*(.text.BM_mesh_bevel .text.find_even_superellipse_params .text.build_boundary .text.calculate_profile .text.bevel_build_poly .text.adj_vmesh .text.make_unit_square_map .text.vmesh_copy_equiv_verts .text.cubic_subdiv .text.interp_vmesh .text.bev_create_ngon .text.bev_merge_uvs .text.bev_create_quad_straddle .text.weld_cross_attrs_copy .text.set_profile_params .text.offset_meet .text.offset_on_edge_between .text.offset_meet_edge .text.superellipse_chord_length_squared)
. = ALIGN(0x1000);
*(.text.bmo_bisect_plane_exec .text.BM_mesh_bisect_plane .text.bm_face_bisect_verts)
. = ALIGN(0x1000);
*(.text.bmo_bridge_loops_exec .text.BM_mesh_edgeloops_calc_order .text.BM_edgeloop_expand)
. = ALIGN(0x1000);
*(.text.bm_edge_test_cb)
. = ALIGN(0x1000);
*(.text.bmo_connect_verts_exec .text.bm_face_connect_verts)
. = ALIGN(0x1000);
*(.text.BM_vert_pair_share_face_by_angle)
. = ALIGN(0x1000);
*(.text.bmo_connect_verts_nonplanar_exec .text.bm_face_split_find)
. = ALIGN(0x1000);
*(.text.BM_face_splits_check_legal .text.line_crosses_v2f)
. = ALIGN(0x1000);
*(.text.bmo_connect_vert_pair_exec .text.state_link_add .text.state_step__face_verts)
. = ALIGN(0x1000);
*(.text.bmo_contextual_create_exec .text.BM_face_create_ngon_vcloud .text.BMO_iter_as_array)
. = ALIGN(0x1000);
*(.text.bmo_dissolve_faces_exec)
. = ALIGN(0x1000);
*(.text.bmo_dissolve_edges_exec)
. = ALIGN(0x1000);
*(.text.bmo_dissolve_verts_exec)
. = ALIGN(0x1000);
*(.text.bm_face_split)
. = ALIGN(0x1000);
*(.text.bmo_dissolve_limit_exec)
. = ALIGN(0x1000);
*(.text.BM_vert_calc_edge_angle .text.BM_mesh_decimate_dissolve_ex)
. = ALIGN(0x1000);
*(.text.bmo_dissolve_degenerate_exec)
. = ALIGN(0x1000);
*(.text.bmo_duplicate_exec .text.bmo_edge_copy .text.bmo_face_copy .text.BMO_mesh_selected_remap)
. = ALIGN(0x1000);
*(.text.bmo_split_exec)
. = ALIGN(0x1000);
*(.text.bmo_delete_exec .text.BMO_mesh_delete_oflag_context)
. = ALIGN(0x1000);
*(.text.bmo_spin_exec)
. = ALIGN(0x1000);
*(.text.bmo_edgenet_fill_exec)
. = ALIGN(0x1000);
*(.text.bmo_edgenet_prepare_exec)
. = ALIGN(0x1000);
*(.text.bmo_extrude_discrete_faces_exec)
. = ALIGN(0x1000);
*(.text.bmo_extrude_edge_only_exec)
. = ALIGN(0x1000);
*(.text.bmo_extrude_vert_indiv_exec)
. = ALIGN(0x1000);
*(.text.bmo_extrude_face_region_exec)
. = ALIGN(0x1000);
*(.text.bm_extrude_copy_face_loop_attributes)
. = ALIGN(0x1000);
*(.text.bmo_solidify_face_region_exec .text.angle_poly_v3)
. = ALIGN(0x1000);
*(.text.bmiter__face_of_vert_step)
. = ALIGN(0x1000);
*(.text.bmo_face_attribute_fill_exec .text.BM_face_copy_shared)
. = ALIGN(0x1000);
*(.text.bm_loop_is_face_untag)
. = ALIGN(0x1000);
*(.text.bmo_edgeloop_fill_exec)
. = ALIGN(0x1000);
*(.text.BM_face_create_ngon_verts)
. = ALIGN(0x1000);
*(.text.bmo_grid_fill_exec .text.BM_mesh_edgeloops_find_path .text.bm_loop_path_build_step)
. = ALIGN(0x1000);
*(.text.barycentric_weights_v2_quad)
. = ALIGN(0x1000);
*(.text.bm_edge_test_cb.19837)
. = ALIGN(0x1000);
*(.text.bm_edge_test_rail_cb)
. = ALIGN(0x1000);
*(.text.bmo_holes_fill_exec)
. = ALIGN(0x1000);
*(.text.BLI_linklist_free_pool)
. = ALIGN(0x1000);
*(.text.BM_face_exists_overlap_subset .text.BM_mesh_edgenet .text.bm_edgenet_path_calc_best .text.bm_edgenet_face_from_path .text.bm_edgenet_path_calc .text.bm_edgenet_path_check_overlap)
. = ALIGN(0x1000);
*(.text.bmo_inset_individual_exec .text.bmo_face_inset_individual)
. = ALIGN(0x1000);
*(.text.bmesh_urmv_loop)
. = ALIGN(0x1000);
*(.text.bmo_inset_region_exec .text.bm_loop_customdata_merge)
. = ALIGN(0x1000);
*(.text.BM_face_interp_from_face_ex)
. = ALIGN(0x1000);
*(.text.bm_interp_face_store)
. = ALIGN(0x1000);
*(.text.BMO_slot_buffer_hflag_disable)
. = ALIGN(0x1000);
*(.text.BM_vert_splice)
. = ALIGN(0x1000);
*(.text.bmiter__vert_of_face_step)
. = ALIGN(0x1000);
*(.text.bmo_join_triangles_exec)
. = ALIGN(0x1000);
*(.text.bmo_mesh_to_bmesh_exec)
. = ALIGN(0x1000);
*(.text.bmo_object_load_bmesh_exec)
. = ALIGN(0x1000);
*(.text.bmo_bmesh_to_mesh_exec)
. = ALIGN(0x1000);
*(.text.bmo_mirror_exec .text.BMO_iter_as_arrayN)
. = ALIGN(0x1000);
*(.text.bmo_recalc_face_normals_exec)
. = ALIGN(0x1000);
*(.text.BM_mesh_calc_face_groups)
. = ALIGN(0x1000);
*(.text.bmo_recalc_normal_edge_filter_cb)
. = ALIGN(0x1000);
*(.text.bmo_poke_exec)
. = ALIGN(0x1000);
*(.text.CustomData_bmesh_interp)
. = ALIGN(0x1000);
*(.text.interp_weights_poly_v2)
. = ALIGN(0x1000);
*(.text.BM_loop_interp_from_face)
. = ALIGN(0x1000);
*(.text.bmo_create_grid_exec .text.BMO_slot_buffer_alloc)
. = ALIGN(0x1000);
*(.text.bmo_create_uvsphere_exec)
. = ALIGN(0x1000);
*(.text.bmo_create_icosphere_exec)
. = ALIGN(0x1000);
*(.text.bmo_create_monkey_exec)
. = ALIGN(0x1000);
*(.text.bmo_create_circle_exec)
. = ALIGN(0x1000);
*(.text.bmo_create_cone_exec)
. = ALIGN(0x1000);
*(.text.bmo_create_cube_exec)
. = ALIGN(0x1000);
*(.text.bmo_weld_verts_exec .text.remdoubles_splitface .text.remdoubles_createface)
. = ALIGN(0x1000);
*(.text.BMO_mesh_delete_oflag_tagged)
. = ALIGN(0x1000);
*(.text.bmo_pointmerge_facedata_exec)
. = ALIGN(0x1000);
*(.text.bmo_average_vert_facedata_exec)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_vert_step)
. = ALIGN(0x1000);
*(.text.bmo_pointmerge_exec)
. = ALIGN(0x1000);
*(.text.bmo_collapse_exec)
. = ALIGN(0x1000);
*(.text.bmo_collapse_uvs_exec)
. = ALIGN(0x1000);
*(.text.bmo_remove_doubles_exec)
. = ALIGN(0x1000);
*(.text.vergaverco)
. = ALIGN(0x1000);
*(.text.bmo_find_doubles_exec)
. = ALIGN(0x1000);
*(.text.bmesh_find_doubles_common)
. = ALIGN(0x1000);
*(.text.bmo_automerge_exec)
. = ALIGN(0x1000);
*(.text.bmo_similar_faces_exec)
. = ALIGN(0x1000);
*(.text.BM_face_calc_area)
. = ALIGN(0x1000);
*(.text.bmo_similar_edges_exec)
. = ALIGN(0x1000);
*(.text.bmo_similar_verts_exec)
. = ALIGN(0x1000);
*(.text.bmo_smooth_laplacian_vert_exec)
. = ALIGN(0x1000);
*(.text.bmo_split_edges_exec)
. = ALIGN(0x1000);
*(.text.bmesh_edge_separate)
. = ALIGN(0x1000);
*(.text.BM_mesh_elem_hflag_enable_test)
. = ALIGN(0x1000);
*(.text.bmesh_vert_separate)
. = ALIGN(0x1000);
*(.text.smallhash_resize_buckets)
. = ALIGN(0x1000);
*(.text.BM_mesh_edgesplit)
. = ALIGN(0x1000);
*(.text.bmo_subdivide_edges_exec .text.BMO_slot_map_to_flag)
. = ALIGN(0x1000);
*(.text.quad_3edge_split)
. = ALIGN(0x1000);
*(.text.tri_3edge_subdivide)
. = ALIGN(0x1000);
*(.text.quad_4edge_subdivide)
. = ALIGN(0x1000);
*(.text.tri_1edge_split)
. = ALIGN(0x1000);
*(.text.quad_1edge_split)
. = ALIGN(0x1000);
*(.text.quad_2edge_split_path)
. = ALIGN(0x1000);
*(.text.quad_2edge_split_innervert)
. = ALIGN(0x1000);
*(.text.quad_2edge_split_fan)
. = ALIGN(0x1000);
*(.text.BM_vert_pair_share_face_by_len)
. = ALIGN(0x1000);
*(.text.bmo_bisect_edges_exec)
. = ALIGN(0x1000);
*(.text.alter_co)
. = ALIGN(0x1000);
*(.text.BM_vert_calc_shell_factor)
. = ALIGN(0x1000);
*(.text.bm_subdivide_multicut)
. = ALIGN(0x1000);
*(.text.bmo_subdivide_edgering_exec .text.bm_edgeloop_check_overlap_all .text.bm_edgering_pair_store_create .text.bm_edgering_pair_ringsubd .text.bm_edgering_pair_subdiv .text.bm_edge_subdiv_as_loop)
. = ALIGN(0x1000);
*(.text.BM_face_verts_kill .text.bmesh_semv .text.BM_edge_split)
. = ALIGN(0x1000);
*(.text.transform_point_by_tri_v3)
. = ALIGN(0x1000);
*(.text.BM_mesh_edgeloops_find)
. = ALIGN(0x1000);
*(.text.BM_edgeloop_calc_center)
. = ALIGN(0x1000);
*(.text.BM_edgeloop_calc_normal)
. = ALIGN(0x1000);
*(.text.BM_edgeloop_edges_get)
. = ALIGN(0x1000);
*(.text.bm_edge_rim_test_cb)
. = ALIGN(0x1000);
*(.text.bmo_symmetrize_exec)
. = ALIGN(0x1000);
*(.text.bmo_triangulate_exec)
. = ALIGN(0x1000);
*(.text.BLI_heap_remove)
. = ALIGN(0x1000);
*(.text.BLI_heap_insert)
. = ALIGN(0x1000);
*(.text.BM_verts_calc_rotate_beauty .text.BM_mesh_beautify_fill)
. = ALIGN(0x1000);
*(.text.BM_face_triangulate .text.BM_mesh_triangulate .text.bm_face_triangulate_mapping)
. = ALIGN(0x1000);
*(.text.bmo_triangle_fill_exec)
. = ALIGN(0x1000);
*(.text.BMO_op_exec)
. = ALIGN(0x1000);
*(.text.BMO_op_initf)
. = ALIGN(0x1000);
*(.text.bmo_unsubdivide_exec)
. = ALIGN(0x1000);
*(.text.bm_data_interp_from_elem)
. = ALIGN(0x1000);
*(.text.bmesh_jekv .text.BM_vert_collapse_faces)
. = ALIGN(0x1000);
*(.text.BM_vert_dissolve .text.BM_disk_dissolve .text.BM_mesh_decimate_unsubdivide_ex .text.bm_vert_dissolve_fan_test)
. = ALIGN(0x1000);
*(.text.bmo_create_vert_exec)
. = ALIGN(0x1000);
*(.text.bmo_transform_exec)
. = ALIGN(0x1000);
*(.text.bmo_translate_exec)
. = ALIGN(0x1000);
*(.text.bmo_scale_exec)
. = ALIGN(0x1000);
*(.text.bmo_rotate_exec)
. = ALIGN(0x1000);
*(.text.BMO_slot_mat_set .text.BMO_slot_buffer_from_all .text.BMO_op_vinitf)
. = ALIGN(0x1000);
*(.text._bmo_slot_copy)
. = ALIGN(0x1000);
*(.text.BMO_op_finish)
. = ALIGN(0x1000);
*(.text.BMO_op_init)
. = ALIGN(0x1000);
*(.text.BM_mesh_elem_toolflags_ensure)
. = ALIGN(0x1000);
*(.text.BMO_push .text.BMO_pop)
. = ALIGN(0x1000);
*(.text.BMO_op_callf)
. = ALIGN(0x1000);
*(.text.bmo_reverse_faces_exec)
. = ALIGN(0x1000);
*(.text.bmo_rotate_edges_exec)
. = ALIGN(0x1000);
*(.text.bm_loop_reverse_loop)
. = ALIGN(0x1000);
*(.text.bmesh_sfme .text.BM_face_split)
. = ALIGN(0x1000);
*(.text.BM_face_copy)
. = ALIGN(0x1000);
*(.text.BM_faces_join)
. = ALIGN(0x1000);
*(.text.BM_face_create_ngon)
. = ALIGN(0x1000);
*(.text.bm_loop_interp_mdisps .text.quad_coord .text.poly_rotate_plane .text.BM_vert_normal_update_all)
. = ALIGN(0x1000);
*(.text.BM_edge_rotate_check .text.BM_edge_rotate_check_degenerate .text.BM_edge_rotate)
. = ALIGN(0x1000);
*(.text.bmo_region_extend_exec)
. = ALIGN(0x1000);
*(.text.bmo_slot_buffer_from_flag)
. = ALIGN(0x1000);
*(.text.bmo_mesh_flag_count)
. = ALIGN(0x1000);
*(.text.bmo_smooth_vert_exec)
. = ALIGN(0x1000);
*(.text.bmo_rotate_uvs_exec)
. = ALIGN(0x1000);
*(.text.bmo_reverse_uvs_exec .text.bm_face_reverse_uvs)
. = ALIGN(0x1000);
*(.text.bmo_rotate_colors_exec)
. = ALIGN(0x1000);
*(.text.bmo_reverse_colors_exec .text.bm_face_reverse_colors)
. = ALIGN(0x1000);
*(.text.BMO_iter_new)
. = ALIGN(0x1000);
*(.text.bmo_wireframe_exec)
. = ALIGN(0x1000);
*(.text.BM_face_kill)
. = ALIGN(0x1000);
*(.text.BM_edge_kill)
. = ALIGN(0x1000);
*(.text.BM_vert_kill)
. = ALIGN(0x1000);
*(.text.BM_vert_create)
. = ALIGN(0x1000);
*(.text.bm_mesh_flag_count)
. = ALIGN(0x1000);
*(.text.bmo_slot_buffer_from_hflag)
. = ALIGN(0x1000);
*(.text.bmiter__face_of_edge_step)
. = ALIGN(0x1000);
*(.text.BM_vert_hide_set .text.BM_edge_hide_set .text.BM_face_hide_set .text._bm_elem_hide_set)
. = ALIGN(0x1000);
*(.text.BMO_slot_buffer_hflag_enable)
. = ALIGN(0x1000);
*(.text.BM_mesh_elem_hflag_disable_test)
. = ALIGN(0x1000);
*(.text.BM_face_create_verts)
. = ALIGN(0x1000);
*(.text.angle_v3v3)
. = ALIGN(0x1000);
*(.text.BM_loop_calc_face_tangent)
. = ALIGN(0x1000);
*(.text.BM_mesh_wireframe)
. = ALIGN(0x1000);
*(.text.bmiter__elem_of_mesh_begin)
. = ALIGN(0x1000);
*(.text.bmiter__edge_of_vert_begin)
. = ALIGN(0x1000);
*(.text.bmiter__face_of_vert_begin)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_vert_begin)
. = ALIGN(0x1000);
*(.text.bmiter__vert_of_edge_begin)
. = ALIGN(0x1000);
*(.text.bmiter__vert_of_edge_step)
. = ALIGN(0x1000);
*(.text.bmiter__face_of_edge_begin)
. = ALIGN(0x1000);
*(.text.bmiter__vert_of_face_begin)
. = ALIGN(0x1000);
*(.text.bmiter__edge_of_face_begin)
. = ALIGN(0x1000);
*(.text.bmiter__edge_of_face_step)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_face_begin)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_loop_begin)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_loop_step)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_edge_begin)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_edge_step)
. = ALIGN(0x1000);
*(.text.uint_compare)
. = ALIGN(0x1000);
*(.text.BM_face_calc_center_bounds)
. = ALIGN(0x1000);
*(.text.BM_face_calc_center_mean)
. = ALIGN(0x1000);
*(.text.BM_face_calc_center_mean_weighted)
. = ALIGN(0x1000);
*(.text.bmw_ConnectedVertexWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_ConnectedVertexWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_ConnectedVertexWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_IslandWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_IslandWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_IslandWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_IslandboundWalker_begin)
. = ALIGN(0x1000);
*(.text.BMW_reset .text.bmw_IslandboundWalker_step)
. = ALIGN(0x1000);
*(.text.BM_vert_is_manifold)
. = ALIGN(0x1000);
*(.text.bmw_IslandboundWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_UVEdgeWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_UVEdgeWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_UVEdgeWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_EdgeboundaryWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_EdgeboundaryWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_EdgeboundaryWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_EdgeringWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_EdgeringWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_EdgeringWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_FaceLoopWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_FaceLoopWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_FaceLoopWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_LoopWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_LoopWalker_step)
. = ALIGN(0x1000);
*(.text.bmiter__edge_of_vert_step)
. = ALIGN(0x1000);
*(.text.BM_face_other_vert_loop)
. = ALIGN(0x1000);
*(.text.bmw_LoopWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_FaceShellWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_FaceShellWalker_step)
. = ALIGN(0x1000);
*(.text.bmw_FaceShellWalker_yield)
. = ALIGN(0x1000);
*(.text.bmw_VertShellWalker_begin)
. = ALIGN(0x1000);
*(.text.bmw_VertShellWalker_step)
. = ALIGN(0x1000);
*(.text.BMW_state_remove)
. = ALIGN(0x1000);
*(.text.bmw_VertShellWalker_yield)
. = ALIGN(0x1000);
*(.text.bm_vert_sortval_cb)
. = ALIGN(0x1000);
*(.text.ghashutil_bmelem_indexhash)
. = ALIGN(0x1000);
*(.text.ghashutil_bmelem_indexcmp)
. = ALIGN(0x1000);
*(.text.bm_face_len_cmp)
. = ALIGN(0x1000);
*(.text._stdAllocator_alloc)
. = ALIGN(0x1000);
*(.text._stdAllocator_realloc)
. = ALIGN(0x1000);
*(.text._stdAllocator_free)
. = ALIGN(0x1000);
*(.text.dm_getVertArray)
. = ALIGN(0x1000);
*(.text.dm_getEdgeArray)
. = ALIGN(0x1000);
*(.text.dm_getTessFaceArray)
. = ALIGN(0x1000);
*(.text.dm_getLoopArray)
. = ALIGN(0x1000);
*(.text.dm_getPolyArray)
. = ALIGN(0x1000);
*(.text.dm_dupVertArray)
. = ALIGN(0x1000);
*(.text.dm_dupEdgeArray)
. = ALIGN(0x1000);
*(.text.dm_dupFaceArray)
. = ALIGN(0x1000);
*(.text.dm_dupLoopArray)
. = ALIGN(0x1000);
*(.text.dm_dupPolyArray)
. = ALIGN(0x1000);
*(.text.dm_getVertCData)
. = ALIGN(0x1000);
*(.text.dm_getEdgeCData)
. = ALIGN(0x1000);
*(.text.dm_getTessFaceCData)
. = ALIGN(0x1000);
*(.text.dm_getLoopCData)
. = ALIGN(0x1000);
*(.text.dm_getPolyCData)
. = ALIGN(0x1000);
*(.text.DM_get_vert_data)
. = ALIGN(0x1000);
*(.text.DM_get_edge_data)
. = ALIGN(0x1000);
*(.text.DM_get_tessface_data)
. = ALIGN(0x1000);
*(.text.DM_get_poly_data)
. = ALIGN(0x1000);
*(.text.DM_get_vert_data_layer)
. = ALIGN(0x1000);
*(.text.DM_get_tessface_data_layer)
. = ALIGN(0x1000);
*(.text.DM_get_poly_data_layer)
. = ALIGN(0x1000);
*(.text.DM_get_loop_data_layer)
. = ALIGN(0x1000);
*(.text.make_vertexcos__mapFunc)
. = ALIGN(0x1000);
*(.text.GetNumFaces.20930)
. = ALIGN(0x1000);
*(.text.GetNumVertsOfFace.20931)
. = ALIGN(0x1000);
*(.text.GetPosition.20932)
. = ALIGN(0x1000);
*(.text.GetTextureCoordinate.20933)
. = ALIGN(0x1000);
*(.text.GetNormal.20934)
. = ALIGN(0x1000);
*(.text.SetTSpace.20935)
. = ALIGN(0x1000);
*(.text.make_localact_init_cb)
. = ALIGN(0x1000);
*(.text.make_localact_apply_cb)
. = ALIGN(0x1000);
*(.text.clean_paths_visit_cb)
. = ALIGN(0x1000);
*(.text.copybuffer_doit)
. = ALIGN(0x1000);
*(.text.rule_none)
. = ALIGN(0x1000);
*(.text.rule_goal_avoid)
. = ALIGN(0x1000);
*(.text.rule_avoid_collision)
. = ALIGN(0x1000);
*(.text.rule_separate)
. = ALIGN(0x1000);
*(.text.rule_flock)
. = ALIGN(0x1000);
*(.text.rule_follow_leader)
. = ALIGN(0x1000);
*(.text.rule_average_speed)
. = ALIGN(0x1000);
*(.text.rule_fight)
. = ALIGN(0x1000);
*(.text.BLI_kdtree_range_search__normal)
. = ALIGN(0x1000);
*(.text.checkMissingFiles_visit_cb)
. = ALIGN(0x1000);
*(.text.bpath_relative_convert_visit_cb)
. = ALIGN(0x1000);
*(.text.bpath_absolute_convert_visit_cb)
. = ALIGN(0x1000);
*(.text.findMissingFiles_visit_cb .text.findFileRecursive)
. = ALIGN(0x1000);
*(.text.BKE_bpath_relocate_visitor)
. = ALIGN(0x1000);
*(.text.bpath_list_append)
. = ALIGN(0x1000);
*(.text.bpath_list_restore)
. = ALIGN(0x1000);
*(.text.editmesh_faces_nearest_point)
. = ALIGN(0x1000);
*(.text.mesh_faces_nearest_point)
. = ALIGN(0x1000);
*(.text.mesh_faces_spherecast)
. = ALIGN(0x1000);
*(.text.editmesh_faces_spherecast)
. = ALIGN(0x1000);
*(.text.isect_sweeping_sphere_tri_v3)
. = ALIGN(0x1000);
*(.text.mesh_edges_nearest_point)
. = ALIGN(0x1000);
*(.text.camera_to_frame_view_cb)
. = ALIGN(0x1000);
*(.text.CDDM_recalc_tessellation)
. = ALIGN(0x1000);
*(.text.cdDM_getMinMax)
. = ALIGN(0x1000);
*(.text.cdDM_getNumVerts)
. = ALIGN(0x1000);
*(.text.cdDM_getNumEdges)
. = ALIGN(0x1000);
*(.text.cdDM_getNumTessFaces)
. = ALIGN(0x1000);
*(.text.cdDM_getNumLoops)
. = ALIGN(0x1000);
*(.text.cdDM_getNumPolys)
. = ALIGN(0x1000);
*(.text.cdDM_getVert)
. = ALIGN(0x1000);
*(.text.cdDM_getEdge)
. = ALIGN(0x1000);
*(.text.cdDM_getTessFace)
. = ALIGN(0x1000);
*(.text.cdDM_copyVertArray)
. = ALIGN(0x1000);
*(.text.cdDM_copyEdgeArray)
. = ALIGN(0x1000);
*(.text.cdDM_copyTessFaceArray)
. = ALIGN(0x1000);
*(.text.cdDM_copyLoopArray)
. = ALIGN(0x1000);
*(.text.cdDM_copyPolyArray)
. = ALIGN(0x1000);
*(.text.CDDM_calc_normals)
. = ALIGN(0x1000);
*(.text.CDDM_calc_loop_normals)
. = ALIGN(0x1000);
*(.text.cdDM_getVertCos)
. = ALIGN(0x1000);
*(.text.cdDM_getVertCo)
. = ALIGN(0x1000);
*(.text.cdDM_getVertNo)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_build_bmesh .text.cdDM_getPBVH)
. = ALIGN(0x1000);
*(.text.BLI_gset_insert)
. = ALIGN(0x1000);
*(.text.BLI_gset_add)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_build_mesh .text.build_sub)
. = ALIGN(0x1000);
*(.text.BLI_gset_remove)
. = ALIGN(0x1000);
*(.text.pbvh_bmesh_node_limit_ensure .text.pbvh_bmesh_node_finalize .text.pbvh_bmesh_node_split)
. = ALIGN(0x1000);
*(.text.cdDM_getPolyMap)
. = ALIGN(0x1000);
*(.text.BKE_mesh_vert_poly_map_create)
. = ALIGN(0x1000);
*(.text.cdDM_drawVerts)
. = ALIGN(0x1000);
*(.text.cdDM_drawUVEdges)
. = ALIGN(0x1000);
*(.text.glDrawArrays)
. = ALIGN(0x1000);
*(.text.cdDM_drawEdges)
. = ALIGN(0x1000);
*(.text.cdDM_drawLooseEdges)
. = ALIGN(0x1000);
*(.text.GPU_buffer_draw_elements .text.glDrawElements)
. = ALIGN(0x1000);
*(.text.cdDM_drawMappedEdges)
. = ALIGN(0x1000);
*(.text.DM_get_edge_data_layer)
. = ALIGN(0x1000);
*(.text.cdDM_drawFacesSolid .text.CustomData_get_layer)
. = ALIGN(0x1000);
*(.text.cdDM_drawFacesTex)
. = ALIGN(0x1000);
*(.text.cdDM_drawFacesGLSL)
. = ALIGN(0x1000);
*(.text.cdDM_drawMappedFaces)
. = ALIGN(0x1000);
*(.text.cdDM_drawMappedFacesTex)
. = ALIGN(0x1000);
*(.text.glEnableClientState)
. = ALIGN(0x1000);
*(.text.gpu_buffer_alloc_intern)
. = ALIGN(0x1000);
*(.text.gpu_buffer_setup_common)
. = ALIGN(0x1000);
*(.text.GPU_drawobject_new)
. = ALIGN(0x1000);
*(.text.GPU_buffer_unbind)
. = ALIGN(0x1000);
*(.text.cdDM_drawFacesTex_common .text.glNormal3fv)
. = ALIGN(0x1000);
*(.text.cdDM_drawMappedFacesGLSL)
. = ALIGN(0x1000);
*(.text.cdDM_drawMappedFacesMat)
. = ALIGN(0x1000);
*(.text.BM_vert_normal_update)
. = ALIGN(0x1000);
*(.text.pbvh_update_normals .text.pbvh_bmesh_normals_update)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_count_grid_quads .text.BKE_pbvh_draw .text.GPU_update_mesh_pbvh_buffers .text.GPU_build_mesh_pbvh_buffers .text.GPU_update_grid_pbvh_buffers .text.GPU_build_grid_pbvh_buffers .text.GPU_update_bmesh_pbvh_buffers .text.GPU_pbvh_buffers_diffuse_changed .text.GPU_init_draw_pbvh_BB)
. = ALIGN(0x1000);
*(.text.glPushAttrib)
. = ALIGN(0x1000);
*(.text.cdDM_foreachMappedVert)
. = ALIGN(0x1000);
*(.text.cdDM_foreachMappedEdge)
. = ALIGN(0x1000);
*(.text.cdDM_foreachMappedLoop)
. = ALIGN(0x1000);
*(.text.cdDM_foreachMappedFaceCenter)
. = ALIGN(0x1000);
*(.text.cdDM_release)
. = ALIGN(0x1000);
*(.text.poly_gset_hash_fn)
. = ALIGN(0x1000);
*(.text.poly_gset_compare_fn)
. = ALIGN(0x1000);
*(.text.sort_curvepoints)
. = ALIGN(0x1000);
*(.text.objectsolver_id_looper)
. = ALIGN(0x1000);
*(.text.objectsolver_new_data)
. = ALIGN(0x1000);
*(.text.objectsolver_evaluate)
. = ALIGN(0x1000);
*(.text.camerasolver_id_looper)
. = ALIGN(0x1000);
*(.text.camerasolver_new_data)
. = ALIGN(0x1000);
*(.text.camerasolver_evaluate)
. = ALIGN(0x1000);
*(.text.followtrack_id_looper)
. = ALIGN(0x1000);
*(.text.followtrack_new_data)
. = ALIGN(0x1000);
*(.text.followtrack_evaluate)
. = ALIGN(0x1000);
*(.text.pivotcon_id_looper)
. = ALIGN(0x1000);
*(.text.pivotcon_get_tars)
. = ALIGN(0x1000);
*(.text.pivotcon_flush_tars)
. = ALIGN(0x1000);
*(.text.default_get_tarmat)
. = ALIGN(0x1000);
*(.text.pivotcon_evaluate)
. = ALIGN(0x1000);
*(.text.samevolume_new_data)
. = ALIGN(0x1000);
*(.text.samevolume_evaluate)
. = ALIGN(0x1000);
*(.text.translike_id_looper)
. = ALIGN(0x1000);
*(.text.translike_get_tars)
. = ALIGN(0x1000);
*(.text.translike_flush_tars)
. = ALIGN(0x1000);
*(.text.translike_evaluate)
. = ALIGN(0x1000);
*(.text.splineik_free)
. = ALIGN(0x1000);
*(.text.splineik_id_looper)
. = ALIGN(0x1000);
*(.text.splineik_copy)
. = ALIGN(0x1000);
*(.text.splineik_new_data)
. = ALIGN(0x1000);
*(.text.splineik_get_tars)
. = ALIGN(0x1000);
*(.text.splineik_flush_tars)
. = ALIGN(0x1000);
*(.text.splineik_get_tarmat)
. = ALIGN(0x1000);
*(.text.damptrack_id_looper)
. = ALIGN(0x1000);
*(.text.damptrack_new_data)
. = ALIGN(0x1000);
*(.text.damptrack_get_tars)
. = ALIGN(0x1000);
*(.text.damptrack_flush_tars)
. = ALIGN(0x1000);
*(.text.damptrack_evaluate)
. = ALIGN(0x1000);
*(.text.shrinkwrap_id_looper)
. = ALIGN(0x1000);
*(.text.shrinkwrap_new_data)
. = ALIGN(0x1000);
*(.text.shrinkwrap_get_tars)
. = ALIGN(0x1000);
*(.text.shrinkwrap_flush_tars)
. = ALIGN(0x1000);
*(.text.shrinkwrap_get_tarmat)
. = ALIGN(0x1000);
*(.text.bvhtree_from_mesh_verts)
. = ALIGN(0x1000);
*(.text.BKE_shrinkwrap_project_normal)
. = ALIGN(0x1000);
*(.text.shrinkwrap_evaluate)
. = ALIGN(0x1000);
*(.text.transform_id_looper)
. = ALIGN(0x1000);
*(.text.transform_new_data)
. = ALIGN(0x1000);
*(.text.transform_get_tars)
. = ALIGN(0x1000);
*(.text.transform_flush_tars)
. = ALIGN(0x1000);
*(.text.transform_evaluate)
. = ALIGN(0x1000);
*(.text.clampto_id_looper)
. = ALIGN(0x1000);
*(.text.clampto_get_tars)
. = ALIGN(0x1000);
*(.text.clampto_flush_tars)
. = ALIGN(0x1000);
*(.text.clampto_get_tarmat)
. = ALIGN(0x1000);
*(.text.clampto_evaluate)
. = ALIGN(0x1000);
*(.text.BKE_object_minmax .text.BKE_mball_minmax_ex)
. = ALIGN(0x1000);
*(.text.rbj_id_looper)
. = ALIGN(0x1000);
*(.text.rbj_new_data)
. = ALIGN(0x1000);
*(.text.rbj_get_tars)
. = ALIGN(0x1000);
*(.text.rbj_flush_tars)
. = ALIGN(0x1000);
*(.text.minmax_id_looper)
. = ALIGN(0x1000);
*(.text.minmax_new_data)
. = ALIGN(0x1000);
*(.text.minmax_get_tars)
. = ALIGN(0x1000);
*(.text.minmax_flush_tars)
. = ALIGN(0x1000);
*(.text.minmax_evaluate)
. = ALIGN(0x1000);
*(.text.stretchto_id_looper)
. = ALIGN(0x1000);
*(.text.stretchto_new_data)
. = ALIGN(0x1000);
*(.text.stretchto_get_tars)
. = ALIGN(0x1000);
*(.text.stretchto_flush_tars)
. = ALIGN(0x1000);
*(.text.stretchto_evaluate)
. = ALIGN(0x1000);
*(.text.distlimit_id_looper)
. = ALIGN(0x1000);
*(.text.distlimit_new_data)
. = ALIGN(0x1000);
*(.text.distlimit_get_tars)
. = ALIGN(0x1000);
*(.text.distlimit_flush_tars)
. = ALIGN(0x1000);
*(.text.distlimit_evaluate)
. = ALIGN(0x1000);
*(.text.locktrack_id_looper)
. = ALIGN(0x1000);
*(.text.locktrack_new_data)
. = ALIGN(0x1000);
*(.text.locktrack_get_tars)
. = ALIGN(0x1000);
*(.text.locktrack_flush_tars)
. = ALIGN(0x1000);
*(.text.locktrack_evaluate)
. = ALIGN(0x1000);
*(.text.actcon_id_looper)
. = ALIGN(0x1000);
*(.text.actcon_new_data)
. = ALIGN(0x1000);
*(.text.actcon_get_tars)
. = ALIGN(0x1000);
*(.text.actcon_flush_tars)
. = ALIGN(0x1000);
*(.text.what_does_obaction .text.actcon_get_tarmat .text.mat4_to_eul)
. = ALIGN(0x1000);
*(.text.mat3_to_eul2)
. = ALIGN(0x1000);
*(.text.animsys_evaluate_action_group)
. = ALIGN(0x1000);
*(.text.actcon_evaluate)
. = ALIGN(0x1000);
*(.text.pycon_free)
. = ALIGN(0x1000);
*(.text.pycon_id_looper)
. = ALIGN(0x1000);
*(.text.pycon_copy)
. = ALIGN(0x1000);
*(.text.pycon_new_data)
. = ALIGN(0x1000);
*(.text.pycon_get_tars)
. = ALIGN(0x1000);
*(.text.pycon_get_tarmat)
. = ALIGN(0x1000);
*(.text.pycon_evaluate)
. = ALIGN(0x1000);
*(.text.sizelike_id_looper)
. = ALIGN(0x1000);
*(.text.sizelike_new_data)
. = ALIGN(0x1000);
*(.text.sizelike_get_tars)
. = ALIGN(0x1000);
*(.text.sizelike_flush_tars)
. = ALIGN(0x1000);
*(.text.sizelike_evaluate)
. = ALIGN(0x1000);
*(.text.loclike_id_looper)
. = ALIGN(0x1000);
*(.text.loclike_new_data)
. = ALIGN(0x1000);
*(.text.loclike_get_tars)
. = ALIGN(0x1000);
*(.text.loclike_flush_tars)
. = ALIGN(0x1000);
*(.text.loclike_evaluate)
. = ALIGN(0x1000);
*(.text.rotlike_id_looper)
. = ALIGN(0x1000);
*(.text.rotlike_new_data)
. = ALIGN(0x1000);
*(.text.rotlike_get_tars)
. = ALIGN(0x1000);
*(.text.rotlike_flush_tars)
. = ALIGN(0x1000);
*(.text.rotlike_evaluate .text.mat4_to_compatible_eulO .text.rotate_eulO)
. = ALIGN(0x1000);
*(.text.sizelimit_evaluate)
. = ALIGN(0x1000);
*(.text.loclimit_evaluate)
. = ALIGN(0x1000);
*(.text.rotlimit_evaluate)
. = ALIGN(0x1000);
*(.text.followpath_id_looper)
. = ALIGN(0x1000);
*(.text.followpath_new_data)
. = ALIGN(0x1000);
*(.text.followpath_get_tars)
. = ALIGN(0x1000);
*(.text.followpath_flush_tars)
. = ALIGN(0x1000);
*(.text.followpath_get_tarmat)
. = ALIGN(0x1000);
*(.text.followpath_evaluate)
. = ALIGN(0x1000);
*(.text.kinematic_id_looper)
. = ALIGN(0x1000);
*(.text.kinematic_new_data)
. = ALIGN(0x1000);
*(.text.kinematic_get_tars)
. = ALIGN(0x1000);
*(.text.kinematic_flush_tars)
. = ALIGN(0x1000);
*(.text.kinematic_get_tarmat)
. = ALIGN(0x1000);
*(.text.normalize_m4)
. = ALIGN(0x1000);
*(.text.constraint_target_to_mat4)
. = ALIGN(0x1000);
*(.text.trackto_id_looper)
. = ALIGN(0x1000);
*(.text.trackto_new_data)
. = ALIGN(0x1000);
*(.text.trackto_get_tars)
. = ALIGN(0x1000);
*(.text.trackto_flush_tars)
. = ALIGN(0x1000);
*(.text.trackto_evaluate)
. = ALIGN(0x1000);
*(.text.childof_id_looper)
. = ALIGN(0x1000);
*(.text.childof_new_data)
. = ALIGN(0x1000);
*(.text.childof_get_tars)
. = ALIGN(0x1000);
*(.text.childof_flush_tars)
. = ALIGN(0x1000);
*(.text.childof_evaluate)
. = ALIGN(0x1000);
*(.text.con_unlink_refs_cb)
. = ALIGN(0x1000);
*(.text.con_relink_id_cb)
. = ALIGN(0x1000);
*(.text.con_fix_copied_refs_cb)
. = ALIGN(0x1000);
*(.text.con_extern_cb)
. = ALIGN(0x1000);
*(.text.vergxcobev)
. = ALIGN(0x1000);
*(.text.customdata_unique_check)
. = ALIGN(0x1000);
*(.text.layerCopy_mdeformvert)
. = ALIGN(0x1000);
*(.text.layerFree_mdeformvert)
. = ALIGN(0x1000);
*(.text.layerInterp_mdeformvert)
. = ALIGN(0x1000);
*(.text.layerCopy_tface)
. = ALIGN(0x1000);
*(.text.layerInterp_tface)
. = ALIGN(0x1000);
*(.text.layerSwap_tface)
. = ALIGN(0x1000);
*(.text.layerDefault_tface)
. = ALIGN(0x1000);
*(.text.layerMaxNum_tface)
. = ALIGN(0x1000);
*(.text.layerInterp_mcol)
. = ALIGN(0x1000);
*(.text.layerSwap_mcol)
. = ALIGN(0x1000);
*(.text.layerDefault_mcol)
. = ALIGN(0x1000);
*(.text.layerMaxNum_mloopcol)
. = ALIGN(0x1000);
*(.text.layerDefault_origindex)
. = ALIGN(0x1000);
*(.text.layerCopy_propFloat)
. = ALIGN(0x1000);
*(.text.layerCopy_propInt)
. = ALIGN(0x1000);
*(.text.layerCopy_propString)
. = ALIGN(0x1000);
*(.text.layerCopy_origspace_face)
. = ALIGN(0x1000);
*(.text.layerInterp_origspace_face)
. = ALIGN(0x1000);
*(.text.layerSwap_origspace_face)
. = ALIGN(0x1000);
*(.text.layerDefault_origspace_face)
. = ALIGN(0x1000);
*(.text.layerInterp_mloopuv)
. = ALIGN(0x1000);
*(.text.layerEqual_mloopuv)
. = ALIGN(0x1000);
*(.text.layerMultiply_mloopuv)
. = ALIGN(0x1000);
*(.text.layerInitMinMax_mloopuv)
. = ALIGN(0x1000);
*(.text.layerAdd_mloopuv)
. = ALIGN(0x1000);
*(.text.layerDoMinMax_mloopuv)
. = ALIGN(0x1000);
*(.text.layerCopyValue_mloopuv)
. = ALIGN(0x1000);
*(.text.layerInterp_mloopcol)
. = ALIGN(0x1000);
*(.text.layerDefault_mloopcol)
. = ALIGN(0x1000);
*(.text.layerEqual_mloopcol)
. = ALIGN(0x1000);
*(.text.layerMultiply_mloopcol)
. = ALIGN(0x1000);
*(.text.layerInitMinMax_mloopcol)
. = ALIGN(0x1000);
*(.text.layerAdd_mloopcol)
. = ALIGN(0x1000);
*(.text.layerDoMinMax_mloopcol)
. = ALIGN(0x1000);
*(.text.layerCopyValue_mloopcol)
. = ALIGN(0x1000);
*(.text.layerCopy_mdisps)
. = ALIGN(0x1000);
*(.text.layerFree_mdisps)
. = ALIGN(0x1000);
*(.text.layerSwap_mdisps)
. = ALIGN(0x1000);
*(.text.layerRead_mdisps)
. = ALIGN(0x1000);
*(.text.layerWrite_mdisps)
. = ALIGN(0x1000);
*(.text.layerFilesize_mdisps)
. = ALIGN(0x1000);
*(.text.layerInterp_shapekey)
. = ALIGN(0x1000);
*(.text.layerInterp_bweight)
. = ALIGN(0x1000);
*(.text.layerInterp_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerEqual_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerMultiply_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerInitMinMax_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerAdd_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerDoMinMax_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerCopyValue_mloop_origspace)
. = ALIGN(0x1000);
*(.text.layerCopy_bmesh_elem_py_ptr)
. = ALIGN(0x1000);
*(.text.layerFree_bmesh_elem_py_ptr)
. = ALIGN(0x1000);
*(.text.layerCopy_grid_paint_mask)
. = ALIGN(0x1000);
*(.text.layerFree_grid_paint_mask)
. = ALIGN(0x1000);
*(.text.layerInterp_mvert_skin)
. = ALIGN(0x1000);
*(.text.layerDefault_mvert_skin)
. = ALIGN(0x1000);
*(.text.layerSwap_flnor)
. = ALIGN(0x1000);
*(.text.defgroup_unique_check)
. = ALIGN(0x1000);
*(.text.defvert_find_index)
. = ALIGN(0x1000);
*(.text.defvert_verify_index)
. = ALIGN(0x1000);
*(.text.dag_id_flush_update__isDependentTexture)
. = ALIGN(0x1000);
*(.text.surface_duplicateNameExists)
. = ALIGN(0x1000);
*(.text.surface_duplicateOutputExists)
. = ALIGN(0x1000);
*(.text.mesh_faces_spherecast_dp)
. = ALIGN(0x1000);
*(.text.mesh_faces_nearest_point_dp)
. = ALIGN(0x1000);
*(.text.closest_on_tri_to_point_v3)
. = ALIGN(0x1000);
*(.text.emDM_getVertCos)
. = ALIGN(0x1000);
*(.text.emDM_getMinMax)
. = ALIGN(0x1000);
*(.text.bmDm_getVertDataLayout)
. = ALIGN(0x1000);
*(.text.bmDm_getEdgeDataLayout)
. = ALIGN(0x1000);
*(.text.bmDm_getTessFaceDataLayout)
. = ALIGN(0x1000);
*(.text.bmDm_getLoopDataLayout)
. = ALIGN(0x1000);
*(.text.bmDm_getPolyDataLayout)
. = ALIGN(0x1000);
*(.text.emDM_getNumVerts)
. = ALIGN(0x1000);
*(.text.emDM_getNumEdges)
. = ALIGN(0x1000);
*(.text.emDM_getNumTessFaces)
. = ALIGN(0x1000);
*(.text.emDM_getNumLoops)
. = ALIGN(0x1000);
*(.text.emDM_getNumPolys)
. = ALIGN(0x1000);
*(.text.emDM_getVert)
. = ALIGN(0x1000);
*(.text.emDM_getVertCo)
. = ALIGN(0x1000);
*(.text.emDM_getVertNo)
. = ALIGN(0x1000);
*(.text.emDM_getPolyNo)
. = ALIGN(0x1000);
*(.text.emDM_getEdge)
. = ALIGN(0x1000);
*(.text.emDM_getTessFace)
. = ALIGN(0x1000);
*(.text.emDM_copyVertArray)
. = ALIGN(0x1000);
*(.text.emDM_copyEdgeArray)
. = ALIGN(0x1000);
*(.text.emDM_copyTessFaceArray)
. = ALIGN(0x1000);
*(.text.emDM_copyLoopArray)
. = ALIGN(0x1000);
*(.text.emDM_copyPolyArray)
. = ALIGN(0x1000);
*(.text.emDM_getTessFaceDataArray)
. = ALIGN(0x1000);
*(.text.emDM_calcNormals)
. = ALIGN(0x1000);
*(.text.BM_loops_calc_normal_vcos .text.bm_mesh_loops_calc_normals .text.emDM_calcLoopNormals)
. = ALIGN(0x1000);
*(.text.emDM_recalcTessellation)
. = ALIGN(0x1000);
*(.text.emDM_foreachMappedVert)
. = ALIGN(0x1000);
*(.text.emDM_foreachMappedLoop)
. = ALIGN(0x1000);
*(.text.emDM_foreachMappedEdge)
. = ALIGN(0x1000);
*(.text.emDM_foreachMappedFaceCenter)
. = ALIGN(0x1000);
*(.text.emDM_drawEdges)
. = ALIGN(0x1000);
*(.text.emDM_drawMappedEdges)
. = ALIGN(0x1000);
*(.text.emDM_drawMappedEdgesInterp)
. = ALIGN(0x1000);
*(.text.emDM_drawMappedFaces)
. = ALIGN(0x1000);
*(.text.glIsEnabled)
. = ALIGN(0x1000);
*(.text.emDM_drawMappedFacesTex)
. = ALIGN(0x1000);
*(.text.emDM_drawMappedFacesGLSL)
. = ALIGN(0x1000);
*(.text.emDM_drawMappedFacesMat)
. = ALIGN(0x1000);
*(.text.emDM_drawFacesTex)
. = ALIGN(0x1000);
*(.text.glShadeModel)
. = ALIGN(0x1000);
*(.text.emDM_drawFacesTex_common)
. = ALIGN(0x1000);
*(.text.emDM_drawFacesGLSL)
. = ALIGN(0x1000);
*(.text.emDM_drawUVEdges)
. = ALIGN(0x1000);
*(.text.glBegin)
. = ALIGN(0x1000);
*(.text.emDM_release)
. = ALIGN(0x1000);
*(.text.DM_release .text.CustomData_free_temporary)
. = ALIGN(0x1000);
*(.text.cage_mapped_verts_callback)
. = ALIGN(0x1000);
*(.text.bm_face_is_not_hidden)
. = ALIGN(0x1000);
*(.text.bm_face_is_select)
. = ALIGN(0x1000);
*(.text.bmbvh_ray_cast_cb)
. = ALIGN(0x1000);
*(.text.isect_ray_tri_epsilon_v3)
. = ALIGN(0x1000);
*(.text.bmbvh_find_face_segment_cb)
. = ALIGN(0x1000);
*(.text.bmbvh_find_vert_closest_cb)
. = ALIGN(0x1000);
*(.text.eff_tri_ray_hit)
. = ALIGN(0x1000);
*(.text.dvar_eval_singleProp)
. = ALIGN(0x1000);
*(.text.dvar_eval_rotDiff)
. = ALIGN(0x1000);
*(.text.dvar_eval_locDiff)
. = ALIGN(0x1000);
*(.text.dvar_eval_transChan)
. = ALIGN(0x1000);
*(.text.fcm_stepped_new_data)
. = ALIGN(0x1000);
*(.text.fcm_stepped_time)
. = ALIGN(0x1000);
*(.text.fcm_limits_time)
. = ALIGN(0x1000);
*(.text.fcm_limits_evaluate)
. = ALIGN(0x1000);
*(.text.fcm_python_free)
. = ALIGN(0x1000);
*(.text.fcm_python_copy)
. = ALIGN(0x1000);
*(.text.fcm_python_new_data)
. = ALIGN(0x1000);
*(.text.fcm_python_evaluate)
. = ALIGN(0x1000);
*(.text.fcm_noise_new_data)
. = ALIGN(0x1000);
*(.text.fcm_noise_evaluate)
. = ALIGN(0x1000);
*(.text.fcm_cycles_new_data)
. = ALIGN(0x1000);
*(.text.fcm_cycles_time)
. = ALIGN(0x1000);
*(.text.fcm_cycles_evaluate)
. = ALIGN(0x1000);
*(.text.fcm_envelope_free)
. = ALIGN(0x1000);
*(.text.fcm_envelope_copy)
. = ALIGN(0x1000);
*(.text.fcm_envelope_new_data)
. = ALIGN(0x1000);
*(.text.fcm_envelope_verify)
. = ALIGN(0x1000);
*(.text.fcm_envelope_evaluate)
. = ALIGN(0x1000);
*(.text.fcm_fn_generator_new_data)
. = ALIGN(0x1000);
*(.text.fcm_fn_generator_evaluate)
. = ALIGN(0x1000);
*(.text.sinc)
. = ALIGN(0x1000);
*(.text.fcm_generator_free)
. = ALIGN(0x1000);
*(.text.fcm_generator_copy)
. = ALIGN(0x1000);
*(.text.fcm_generator_new_data)
. = ALIGN(0x1000);
*(.text.fcm_generator_verify)
. = ALIGN(0x1000);
*(.text.fcm_generator_evaluate)
. = ALIGN(0x1000);
*(.text.icon_free)
. = ALIGN(0x1000);
*(.text.imagecache_hashhash)
. = ALIGN(0x1000);
*(.text.imagecache_hashcmp)
. = ALIGN(0x1000);
*(.text.imagecache_keydata)
. = ALIGN(0x1000);
*(.text.imagecache_check_dirty)
. = ALIGN(0x1000);
*(.text.imagecache_check_free_anim)
. = ALIGN(0x1000);
*(.text.animdata_dtar_clear_cb)
. = ALIGN(0x1000);
*(.text.library_foreach_constraintObjectLooper)
. = ALIGN(0x1000);
*(.text.library_foreach_modifiersForeachIDLink)
. = ALIGN(0x1000);
*(.text.metaball)
. = ALIGN(0x1000);
*(.text.get_num_faces)
. = ALIGN(0x1000);
*(.text.get_num_verts_of_face)
. = ALIGN(0x1000);
*(.text.get_position)
. = ALIGN(0x1000);
*(.text.get_texture_coordinate)
. = ALIGN(0x1000);
*(.text.get_normal)
. = ALIGN(0x1000);
*(.text.set_tspace)
. = ALIGN(0x1000);
*(.text.int64_cmp)
. = ALIGN(0x1000);
*(.text.search_face_cmp)
. = ALIGN(0x1000);
*(.text.search_poly_cmp)
. = ALIGN(0x1000);
*(.text.search_polyloop_cmp)
. = ALIGN(0x1000);
*(.text.int_cmp)
. = ALIGN(0x1000);
*(.text.vergedgesort.24079)
. = ALIGN(0x1000);
*(.text.moviecache_hashhash)
. = ALIGN(0x1000);
*(.text.moviecache_hashcmp)
. = ALIGN(0x1000);
*(.text.moviecache_keydata)
. = ALIGN(0x1000);
*(.text.moviecache_getprioritydata)
. = ALIGN(0x1000);
*(.text.moviecache_getitempriority)
. = ALIGN(0x1000);
*(.text.moviecache_prioritydeleter)
. = ALIGN(0x1000);
*(.text.nla_editbone_name_check)
. = ALIGN(0x1000);
*(.text.ntree_free_type)
. = ALIGN(0x1000);
*(.text.node_free_type)
. = ALIGN(0x1000);
*(.text.node_free_socket_type)
. = ALIGN(0x1000);
*(.text.unique_identifier_check)
. = ALIGN(0x1000);
*(.text.node_instance_hash_key)
. = ALIGN(0x1000);
*(.text.node_instance_hash_key_cmp)
. = ALIGN(0x1000);
*(.text.BKE_node_preview_free)
. = ALIGN(0x1000);
*(.text.ntree_interface_unique_identifier_check)
. = ALIGN(0x1000);
*(.text.Object_update_from_editmode_call)
. = ALIGN(0x1000);
*(.text.Object_is_deform_modified_call)
. = ALIGN(0x1000);
*(.text.BKE_object_is_deform_modified)
. = ALIGN(0x1000);
*(.text.Object_is_modified_call)
. = ALIGN(0x1000);
*(.text.BKE_object_is_modified)
. = ALIGN(0x1000);
*(.text.Object_is_visible_call)
. = ALIGN(0x1000);
*(.text.Object_closest_point_on_mesh_call)
. = ALIGN(0x1000);
*(.text.rna_Object_closest_point_on_mesh)
. = ALIGN(0x1000);
*(.text.Object_ray_cast_call)
. = ALIGN(0x1000);
*(.text.rna_Object_ray_cast)
. = ALIGN(0x1000);
*(.text.Object_shape_key_add_call)
. = ALIGN(0x1000);
*(.text.BKE_object_insert_shape_key .text.BKE_keyblock_add_ctime .text.BKE_key_convert_from_curve)
. = ALIGN(0x1000);
*(.text.Object_find_armature_call)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_clear_call)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_create_call)
. = ALIGN(0x1000);
*(.text.rna_Object_create_duplilist .text.dupli_render_particle_set.41564)
. = ALIGN(0x1000);
*(.text.Object_to_mesh_call)
. = ALIGN(0x1000);
*(.text.Object_convert_space_call)
. = ALIGN(0x1000);
*(.text.rna_Scene_mat_convert_space)
. = ALIGN(0x1000);
*(.text.Object_lod_levels_begin)
. = ALIGN(0x1000);
*(.text.Object_lod_levels_next)
. = ALIGN(0x1000);
*(.text.Object_lod_levels_end)
. = ALIGN(0x1000);
*(.text.Object_lod_levels_get)
. = ALIGN(0x1000);
*(.text.Object_lod_levels_lookup_int)
. = ALIGN(0x1000);
*(.text.LodLevel_use_material_get)
. = ALIGN(0x1000);
*(.text.LodLevel_use_material_set)
. = ALIGN(0x1000);
*(.text.LodLevel_use_mesh_get)
. = ALIGN(0x1000);
*(.text.LodLevel_use_mesh_set)
. = ALIGN(0x1000);
*(.text.LodLevel_object_get)
. = ALIGN(0x1000);
*(.text.LodLevel_object_set)
. = ALIGN(0x1000);
*(.text.rna_Object_lod_distance_update)
. = ALIGN(0x1000);
*(.text.LodLevel_distance_get)
. = ALIGN(0x1000);
*(.text.LodLevel_distance_set)
. = ALIGN(0x1000);
*(.text.LodLevel_rna_type_get)
. = ALIGN(0x1000);
*(.text.LodLevel_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LodLevel_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LodLevel_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LodLevel_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LodLevel_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.DupliObject_type_get)
. = ALIGN(0x1000);
*(.text.DupliObject_uv_get)
. = ALIGN(0x1000);
*(.text.DupliObject_orco_get)
. = ALIGN(0x1000);
*(.text.DupliObject_particle_system_get)
. = ALIGN(0x1000);
*(.text.DupliObject_persistent_id_get)
. = ALIGN(0x1000);
*(.text.DupliObject_index_get)
. = ALIGN(0x1000);
*(.text.DupliObject_hide_get)
. = ALIGN(0x1000);
*(.text.DupliObject_matrix_get)
. = ALIGN(0x1000);
*(.text.DupliObject_object_get)
. = ALIGN(0x1000);
*(.text.DupliObject_rna_type_get)
. = ALIGN(0x1000);
*(.text.DupliObject_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DupliObject_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DupliObject_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DupliObject_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DupliObject_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MaterialSlot_path)
. = ALIGN(0x1000);
*(.text.MaterialSlot_name_get)
. = ALIGN(0x1000);
*(.text.MaterialSlot_name_length)
. = ALIGN(0x1000);
*(.text.rna_MaterialSlot_update)
. = ALIGN(0x1000);
*(.text.MaterialSlot_link_get)
. = ALIGN(0x1000);
*(.text.MaterialSlot_link_set)
. = ALIGN(0x1000);
*(.text.MaterialSlot_material_get)
. = ALIGN(0x1000);
*(.text.MaterialSlot_material_set)
. = ALIGN(0x1000);
*(.text.MaterialSlot_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialSlot_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialSlot_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialSlot_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialSlot_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialSlot_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.VertexGroup_weight_call)
. = ALIGN(0x1000);
*(.text.ED_vgroup_vert_weight)
. = ALIGN(0x1000);
*(.text.VertexGroup_remove_call)
. = ALIGN(0x1000);
*(.text.ED_vgroup_vert_remove)
. = ALIGN(0x1000);
*(.text.VertexGroup_add_call)
. = ALIGN(0x1000);
*(.text.ED_vgroup_vert_add)
. = ALIGN(0x1000);
*(.text.rna_Object_internal_update_data)
. = ALIGN(0x1000);
*(.text.VertexGroup_name_get)
. = ALIGN(0x1000);
*(.text.VertexGroup_name_length)
. = ALIGN(0x1000);
*(.text.VertexGroup_name_set)
. = ALIGN(0x1000);
*(.text.VertexGroup_rna_type_get)
. = ALIGN(0x1000);
*(.text.VertexGroup_lock_weight_get)
. = ALIGN(0x1000);
*(.text.VertexGroup_lock_weight_set)
. = ALIGN(0x1000);
*(.text.VertexGroup_index_get)
. = ALIGN(0x1000);
*(.text.VertexGroup_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.VertexGroup_rna_properties_next)
. = ALIGN(0x1000);
*(.text.VertexGroup_rna_properties_end)
. = ALIGN(0x1000);
*(.text.VertexGroup_rna_properties_get)
. = ALIGN(0x1000);
*(.text.VertexGroup_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ObjectBase_layers_from_view_call)
. = ALIGN(0x1000);
*(.text.rna_Base_select_update)
. = ALIGN(0x1000);
*(.text.ObjectBase_select_get)
. = ALIGN(0x1000);
*(.text.ObjectBase_select_set)
. = ALIGN(0x1000);
*(.text.ObjectBase_layers_local_view_get)
. = ALIGN(0x1000);
*(.text.rna_Base_layer_update)
. = ALIGN(0x1000);
*(.text.ObjectBase_layers_get)
. = ALIGN(0x1000);
*(.text.ObjectBase_layers_set)
. = ALIGN(0x1000);
*(.text.ObjectBase_object_get)
. = ALIGN(0x1000);
*(.text.ObjectBase_rna_type_get)
. = ALIGN(0x1000);
*(.text.ObjectBase_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ObjectBase_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ObjectBase_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ObjectBase_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ObjectBase_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_state_panel_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_state_panel_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_all_states_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_all_states_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_debug_state_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_debug_state_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_states_initial_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_states_initial_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_used_states_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_states_visible_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_states_visible_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_obstacle_radius_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_obstacle_radius_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_obstacle_create_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_obstacle_create_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_soft_body_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_margin_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_margin_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_collision_compound_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_collision_compound_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_bounds_type_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_bounds_type_set)
. = ALIGN(0x1000);
*(.text.rna_Object_collision_bounds_itemf)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_collision_bounds_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_collision_bounds_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_friction_coefficients_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_friction_coefficients_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_anisotropic_friction_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_anisotropic_friction_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_form_factor_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_form_factor_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_rotate_from_normal_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_rotate_from_normal_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_material_physics_fh_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_material_physics_fh_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_activity_culling_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_activity_culling_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_rotation_z_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_rotation_z_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_rotation_y_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_rotation_y_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_rotation_x_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_rotation_x_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_location_z_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_location_z_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_location_y_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_location_y_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_location_x_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_lock_location_x_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_mask_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_mask_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_group_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_collision_group_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_fall_speed_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_fall_speed_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_jump_speed_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_jump_speed_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_step_height_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_step_height_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_velocity_max_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_velocity_max_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_velocity_min_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_velocity_min_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rotation_damping_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rotation_damping_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_damping_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_damping_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_sleep_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_sleep_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_radius_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_radius_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_mass_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_mass_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_ghost_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_ghost_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_actor_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_actor_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_record_animation_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_use_record_animation_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_physics_type_get)
. = ALIGN(0x1000);
*(.text.BKE_mesh_ensure_navmesh .text.GameObjectSettings_physics_type_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_actuators_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_actuators_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_controllers_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_controllers_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_sensors_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_show_sensors_set)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_properties_begin)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_properties_next)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_properties_end)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_properties_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_properties_lookup_int)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_actuators_begin)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_actuators_next)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_actuators_end)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_actuators_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_actuators_lookup_int)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_actuators_lookup_string)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_controllers_begin)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_controllers_next)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_controllers_end)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_controllers_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_controllers_lookup_int)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_controllers_lookup_string)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_sensors_begin)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_sensors_next)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_sensors_end)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_sensors_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_sensors_lookup_int)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_sensors_lookup_string)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GameObjectSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Object_particle_update)
. = ALIGN(0x1000);
*(.text.ParticleSystems_active_index_get)
. = ALIGN(0x1000);
*(.text.ParticleSystems_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Object_active_particle_system_index_range)
. = ALIGN(0x1000);
*(.text.ParticleSystems_active_get)
. = ALIGN(0x1000);
*(.text.ParticleSystems_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSystems_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleSystems_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleSystems_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleSystems_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleSystems_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.VertexGroups_clear_call)
. = ALIGN(0x1000);
*(.text.VertexGroups_remove_call)
. = ALIGN(0x1000);
*(.text.vgroup_active_remove_verts)
. = ALIGN(0x1000);
*(.text.vgroup_delete_edit_mode)
. = ALIGN(0x1000);
*(.text.vgroup_delete_object_mode)
. = ALIGN(0x1000);
*(.text.vgroup_remap_update_users)
. = ALIGN(0x1000);
*(.text.VertexGroups_new_call)
. = ALIGN(0x1000);
*(.text.BKE_defgroup_new)
. = ALIGN(0x1000);
*(.text.VertexGroups_active_index_get)
. = ALIGN(0x1000);
*(.text.VertexGroups_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Object_active_vertex_group_index_range)
. = ALIGN(0x1000);
*(.text.VertexGroups_active_get)
. = ALIGN(0x1000);
*(.text.VertexGroups_rna_type_get)
. = ALIGN(0x1000);
*(.text.VertexGroups_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.VertexGroups_rna_properties_next)
. = ALIGN(0x1000);
*(.text.VertexGroups_rna_properties_end)
. = ALIGN(0x1000);
*(.text.VertexGroups_rna_properties_get)
. = ALIGN(0x1000);
*(.text.VertexGroups_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_clear_call)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_remove_call)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_new_call)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_active_get)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_active_set)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_rna_type_get)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ObjectConstraints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Object_use_dynamic_topology_sculpting_get)
. = ALIGN(0x1000);
*(.text.rna_Object_active_shape_update)
. = ALIGN(0x1000);
*(.text.BM_mesh_elem_index_ensure)
. = ALIGN(0x1000);
*(.text.bm_mesh_verts_calc_normals)
. = ALIGN(0x1000);
*(.text.bm_mesh_edges_calc_vectors)
. = ALIGN(0x1000);
*(.text.BM_face_calc_normal)
. = ALIGN(0x1000);
*(.text.BLI_mempool_calloc)
. = ALIGN(0x1000);
*(.text.BM_elem_attrs_copy_ex)
. = ALIGN(0x1000);
*(.text.BM_edge_create)
. = ALIGN(0x1000);
*(.text.BM_face_create)
. = ALIGN(0x1000);
*(.text.BM_face_exists)
. = ALIGN(0x1000);
*(.text.BM_mesh_normals_update)
. = ALIGN(0x1000);
*(.text.BM_mesh_bm_from_me .text.bm_face_create_from_mpoly .text.CustomData_set_layer_name)
. = ALIGN(0x1000);
*(.text.CustomData_to_bmesh_block)
. = ALIGN(0x1000);
*(.text.BM_mesh_cd_flag_apply)
. = ALIGN(0x1000);
*(.text.BKE_nurb_test2D)
. = ALIGN(0x1000);
*(.text.BKE_key_convert_to_curve)
. = ALIGN(0x1000);
*(.text.EDBM_mesh_make)
. = ALIGN(0x1000);
*(.text.make_editNurb)
. = ALIGN(0x1000);
*(.text.make_editLatt)
. = ALIGN(0x1000);
*(.text.Object_active_shape_key_index_get)
. = ALIGN(0x1000);
*(.text.Object_active_shape_key_index_set)
. = ALIGN(0x1000);
*(.text.rna_Object_active_shape_key_index_range)
. = ALIGN(0x1000);
*(.text.Object_active_shape_key_get)
. = ALIGN(0x1000);
*(.text.Object_use_shape_key_edit_mode_get)
. = ALIGN(0x1000);
*(.text.Object_use_shape_key_edit_mode_set)
. = ALIGN(0x1000);
*(.text.Object_show_only_shape_key_get)
. = ALIGN(0x1000);
*(.text.Object_show_only_shape_key_set)
. = ALIGN(0x1000);
*(.text.Object_pose_get)
. = ALIGN(0x1000);
*(.text.Object_pose_library_get)
. = ALIGN(0x1000);
*(.text.Object_pose_library_set)
. = ALIGN(0x1000);
*(.text.Object_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.Object_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.Object_show_x_ray_get)
. = ALIGN(0x1000);
*(.text.Object_show_x_ray_set)
. = ALIGN(0x1000);
*(.text.Object_show_transparent_get)
. = ALIGN(0x1000);
*(.text.Object_show_transparent_set)
. = ALIGN(0x1000);
*(.text.Object_show_all_edges_get)
. = ALIGN(0x1000);
*(.text.Object_show_all_edges_set)
. = ALIGN(0x1000);
*(.text.Object_show_wire_get)
. = ALIGN(0x1000);
*(.text.Object_show_wire_set)
. = ALIGN(0x1000);
*(.text.Object_show_texture_space_get)
. = ALIGN(0x1000);
*(.text.Object_show_texture_space_set)
. = ALIGN(0x1000);
*(.text.Object_show_axis_get)
. = ALIGN(0x1000);
*(.text.Object_show_axis_set)
. = ALIGN(0x1000);
*(.text.Object_show_name_get)
. = ALIGN(0x1000);
*(.text.Object_show_name_set)
. = ALIGN(0x1000);
*(.text.Object_draw_bounds_type_get)
. = ALIGN(0x1000);
*(.text.Object_draw_bounds_type_set)
. = ALIGN(0x1000);
*(.text.Object_show_bounds_get)
. = ALIGN(0x1000);
*(.text.Object_show_bounds_set)
. = ALIGN(0x1000);
*(.text.rna_Object_internal_update)
. = ALIGN(0x1000);
*(.text.Object_draw_type_get)
. = ALIGN(0x1000);
*(.text.Object_draw_type_set)
. = ALIGN(0x1000);
*(.text.Object_is_duplicator_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_begin)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_next)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_end)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_list_lookup_int)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_off_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_off_set)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_on_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_on_set)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_end_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_end_set)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_start_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_frames_start_set)
. = ALIGN(0x1000);
*(.text.rna_Object_dependency_update)
. = ALIGN(0x1000);
*(.text.Object_dupli_group_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_group_set)
. = ALIGN(0x1000);
*(.text.Object_dupli_faces_scale_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_faces_scale_set)
. = ALIGN(0x1000);
*(.text.Object_use_dupli_faces_scale_get)
. = ALIGN(0x1000);
*(.text.Object_use_dupli_faces_scale_set)
. = ALIGN(0x1000);
*(.text.Object_use_dupli_vertices_rotation_get)
. = ALIGN(0x1000);
*(.text.Object_use_dupli_vertices_rotation_set)
. = ALIGN(0x1000);
*(.text.Object_use_dupli_frames_speed_get)
. = ALIGN(0x1000);
*(.text.Object_use_dupli_frames_speed_set)
. = ALIGN(0x1000);
*(.text.Object_dupli_type_get)
. = ALIGN(0x1000);
*(.text.Object_dupli_type_set)
. = ALIGN(0x1000);
*(.text.Object_use_extra_recalc_data_get)
. = ALIGN(0x1000);
*(.text.Object_use_extra_recalc_data_set)
. = ALIGN(0x1000);
*(.text.Object_use_extra_recalc_object_get)
. = ALIGN(0x1000);
*(.text.Object_use_extra_recalc_object_set)
. = ALIGN(0x1000);
*(.text.Object_slow_parent_offset_get)
. = ALIGN(0x1000);
*(.text.Object_slow_parent_offset_set)
. = ALIGN(0x1000);
*(.text.Object_use_slow_parent_get)
. = ALIGN(0x1000);
*(.text.Object_use_slow_parent_set)
. = ALIGN(0x1000);
*(.text.Object_motion_path_get)
. = ALIGN(0x1000);
*(.text.Object_animation_visualization_get)
. = ALIGN(0x1000);
*(.text.Object_animation_data_get)
. = ALIGN(0x1000);
*(.text.rna_Object_hide_update)
. = ALIGN(0x1000);
*(.text.Object_hide_render_get)
. = ALIGN(0x1000);
*(.text.Object_hide_render_set)
. = ALIGN(0x1000);
*(.text.Object_hide_select_get)
. = ALIGN(0x1000);
*(.text.Object_hide_select_set)
. = ALIGN(0x1000);
*(.text.Object_hide_get)
. = ALIGN(0x1000);
*(.text.Object_hide_set)
. = ALIGN(0x1000);
*(.text.Object_rigid_body_constraint_get)
. = ALIGN(0x1000);
*(.text.Object_rigid_body_get)
. = ALIGN(0x1000);
*(.text.Object_particle_systems_begin)
. = ALIGN(0x1000);
*(.text.Object_particle_systems_next)
. = ALIGN(0x1000);
*(.text.Object_particle_systems_end)
. = ALIGN(0x1000);
*(.text.Object_particle_systems_get)
. = ALIGN(0x1000);
*(.text.Object_particle_systems_lookup_int)
. = ALIGN(0x1000);
*(.text.Object_particle_systems_lookup_string)
. = ALIGN(0x1000);
*(.text.Object_soft_body_get)
. = ALIGN(0x1000);
*(.text.Object_collision_get)
. = ALIGN(0x1000);
*(.text.Object_field_get)
. = ALIGN(0x1000);
*(.text.Object_color_get)
. = ALIGN(0x1000);
*(.text.Object_color_set)
. = ALIGN(0x1000);
*(.text.Object_pass_index_get)
. = ALIGN(0x1000);
*(.text.Object_pass_index_set)
. = ALIGN(0x1000);
*(.text.Object_image_user_get)
. = ALIGN(0x1000);
*(.text.Object_empty_image_offset_get)
. = ALIGN(0x1000);
*(.text.Object_empty_image_offset_set)
. = ALIGN(0x1000);
*(.text.Object_empty_draw_size_get)
. = ALIGN(0x1000);
*(.text.Object_empty_draw_size_set)
. = ALIGN(0x1000);
*(.text.Object_empty_draw_type_get)
. = ALIGN(0x1000);
*(.text.Object_empty_draw_type_set)
. = ALIGN(0x1000);
*(.text.Object_vertex_groups_begin)
. = ALIGN(0x1000);
*(.text.Object_vertex_groups_next)
. = ALIGN(0x1000);
*(.text.Object_vertex_groups_end)
. = ALIGN(0x1000);
*(.text.Object_vertex_groups_get)
. = ALIGN(0x1000);
*(.text.Object_vertex_groups_lookup_int)
. = ALIGN(0x1000);
*(.text.Object_vertex_groups_lookup_string)
. = ALIGN(0x1000);
*(.text.Object_game_get)
. = ALIGN(0x1000);
*(.text.Object_constraints_begin)
. = ALIGN(0x1000);
*(.text.Object_constraints_next)
. = ALIGN(0x1000);
*(.text.Object_constraints_end)
. = ALIGN(0x1000);
*(.text.Object_constraints_get)
. = ALIGN(0x1000);
*(.text.Object_constraints_lookup_int)
. = ALIGN(0x1000);
*(.text.Object_constraints_lookup_string)
. = ALIGN(0x1000);
*(.text.Object_modifiers_begin)
. = ALIGN(0x1000);
*(.text.Object_modifiers_next)
. = ALIGN(0x1000);
*(.text.Object_modifiers_end)
. = ALIGN(0x1000);
*(.text.Object_modifiers_get)
. = ALIGN(0x1000);
*(.text.Object_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.Object_modifiers_lookup_string)
. = ALIGN(0x1000);
*(.text.Object_matrix_parent_inverse_get)
. = ALIGN(0x1000);
*(.text.Object_matrix_parent_inverse_set)
. = ALIGN(0x1000);
*(.text.Object_matrix_basis_get)
. = ALIGN(0x1000);
*(.text.Object_matrix_basis_set)
. = ALIGN(0x1000);
*(.text.Object_matrix_local_get)
. = ALIGN(0x1000);
*(.text.Object_matrix_local_set)
. = ALIGN(0x1000);
*(.text.rna_Object_matrix_world_update)
. = ALIGN(0x1000);
*(.text.BKE_object_apply_mat4 .text.BKE_object_mat3_to_rot)
. = ALIGN(0x1000);
*(.text.Object_matrix_world_get)
. = ALIGN(0x1000);
*(.text.Object_matrix_world_set)
. = ALIGN(0x1000);
*(.text.Object_lock_scale_get)
. = ALIGN(0x1000);
*(.text.Object_lock_scale_set)
. = ALIGN(0x1000);
*(.text.Object_lock_rotations_4d_get)
. = ALIGN(0x1000);
*(.text.Object_lock_rotations_4d_set)
. = ALIGN(0x1000);
*(.text.Object_lock_rotation_w_get)
. = ALIGN(0x1000);
*(.text.Object_lock_rotation_w_set)
. = ALIGN(0x1000);
*(.text.Object_lock_rotation_get)
. = ALIGN(0x1000);
*(.text.Object_lock_rotation_set)
. = ALIGN(0x1000);
*(.text.Object_lock_location_get)
. = ALIGN(0x1000);
*(.text.Object_lock_location_set)
. = ALIGN(0x1000);
*(.text.Object_delta_scale_get)
. = ALIGN(0x1000);
*(.text.Object_delta_scale_set)
. = ALIGN(0x1000);
*(.text.Object_delta_rotation_quaternion_get)
. = ALIGN(0x1000);
*(.text.Object_delta_rotation_quaternion_set)
. = ALIGN(0x1000);
*(.text.Object_delta_rotation_euler_get)
. = ALIGN(0x1000);
*(.text.Object_delta_rotation_euler_set)
. = ALIGN(0x1000);
*(.text.Object_delta_location_get)
. = ALIGN(0x1000);
*(.text.Object_delta_location_set)
. = ALIGN(0x1000);
*(.text.BKE_object_dimensions_get .text.Object_dimensions_get)
. = ALIGN(0x1000);
*(.text.BKE_object_dimensions_set .text.Object_dimensions_set)
. = ALIGN(0x1000);
*(.text.rna_Object_scale_editable)
. = ALIGN(0x1000);
*(.text.Object_scale_get)
. = ALIGN(0x1000);
*(.text.Object_scale_set)
. = ALIGN(0x1000);
*(.text.Object_rotation_mode_get)
. = ALIGN(0x1000);
*(.text.Object_rotation_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Object_rotation_euler_editable)
. = ALIGN(0x1000);
*(.text.Object_rotation_euler_get)
. = ALIGN(0x1000);
*(.text.Object_rotation_euler_set)
. = ALIGN(0x1000);
*(.text.rna_Object_rotation_4d_editable)
. = ALIGN(0x1000);
*(.text.Object_rotation_axis_angle_get)
. = ALIGN(0x1000);
*(.text.Object_rotation_axis_angle_set)
. = ALIGN(0x1000);
*(.text.Object_rotation_quaternion_get)
. = ALIGN(0x1000);
*(.text.Object_rotation_quaternion_set)
. = ALIGN(0x1000);
*(.text.rna_Object_location_editable)
. = ALIGN(0x1000);
*(.text.Object_location_get)
. = ALIGN(0x1000);
*(.text.Object_location_set)
. = ALIGN(0x1000);
*(.text.Object_active_material_index_get)
. = ALIGN(0x1000);
*(.text.Object_active_material_index_set)
. = ALIGN(0x1000);
*(.text.rna_Object_active_material_index_range)
. = ALIGN(0x1000);
*(.text.rna_Object_active_material_editable)
. = ALIGN(0x1000);
*(.text.Object_active_material_get)
. = ALIGN(0x1000);
*(.text.Object_active_material_set)
. = ALIGN(0x1000);
*(.text.assign_material)
. = ALIGN(0x1000);
*(.text.Object_material_slots_begin)
. = ALIGN(0x1000);
*(.text.Object_material_slots_next)
. = ALIGN(0x1000);
*(.text.Object_material_slots_end)
. = ALIGN(0x1000);
*(.text.Object_material_slots_get)
. = ALIGN(0x1000);
*(.text.Object_material_slots_length)
. = ALIGN(0x1000);
*(.text.Object_material_slots_lookup_int)
. = ALIGN(0x1000);
*(.text.Object_material_slots_lookup_string)
. = ALIGN(0x1000);
*(.text.Object_proxy_group_get)
. = ALIGN(0x1000);
*(.text.Object_proxy_get)
. = ALIGN(0x1000);
*(.text.Object_up_axis_get)
. = ALIGN(0x1000);
*(.text.Object_up_axis_set)
. = ALIGN(0x1000);
*(.text.Object_track_axis_get)
. = ALIGN(0x1000);
*(.text.Object_track_axis_set)
. = ALIGN(0x1000);
*(.text.Object_parent_bone_get)
. = ALIGN(0x1000);
*(.text.Object_parent_bone_length)
. = ALIGN(0x1000);
*(.text.Object_parent_bone_set)
. = ALIGN(0x1000);
*(.text.Object_parent_vertices_get)
. = ALIGN(0x1000);
*(.text.Object_parent_vertices_set)
. = ALIGN(0x1000);
*(.text.Object_parent_type_get)
. = ALIGN(0x1000);
*(.text.Object_parent_type_set)
. = ALIGN(0x1000);
*(.text.rna_Object_parent_type_itemf)
. = ALIGN(0x1000);
*(.text.Object_parent_get)
. = ALIGN(0x1000);
*(.text.Object_parent_set)
. = ALIGN(0x1000);
*(.text.ED_object_parent)
. = ALIGN(0x1000);
*(.text.Object_bound_box_get)
. = ALIGN(0x1000);
*(.text.rna_Object_select_update)
. = ALIGN(0x1000);
*(.text.Object_select_get)
. = ALIGN(0x1000);
*(.text.Object_select_set)
. = ALIGN(0x1000);
*(.text.Object_layers_local_view_get)
. = ALIGN(0x1000);
*(.text.rna_Object_layer_update)
. = ALIGN(0x1000);
*(.text.Object_layers_get)
. = ALIGN(0x1000);
*(.text.Object_layers_set)
. = ALIGN(0x1000);
*(.text.rna_Object_layer_validate__internal)
. = ALIGN(0x1000);
*(.text.Object_mode_get)
. = ALIGN(0x1000);
*(.text.Object_type_get)
. = ALIGN(0x1000);
*(.text.Object_data_get)
. = ALIGN(0x1000);
*(.text.BKE_mesh_assign_object .text.Object_data_set)
. = ALIGN(0x1000);
*(.text.BKE_curve_curve_dimension_update)
. = ALIGN(0x1000);
*(.text.rna_Object_data_typef)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_clear_call)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_new_call)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ObjectModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Lattice_object_poll)
. = ALIGN(0x1000);
*(.text.rna_Curve_object_poll)
. = ALIGN(0x1000);
*(.text.rna_Armature_object_poll)
. = ALIGN(0x1000);
*(.text.rna_Mesh_object_poll)
. = ALIGN(0x1000);
*(.text.rna_Camera_object_poll)
. = ALIGN(0x1000);
*(.text.rna_Lamp_object_poll)
. = ALIGN(0x1000);
*(.text.PointCache_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PointCache_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PointCache_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PointCache_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PointCache_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PointCache_rna_type_get)
. = ALIGN(0x1000);
*(.text.PointCache_frame_start_get)
. = ALIGN(0x1000);
*(.text.PointCache_frame_start_set)
. = ALIGN(0x1000);
*(.text.PointCache_frame_end_get)
. = ALIGN(0x1000);
*(.text.PointCache_frame_end_set)
. = ALIGN(0x1000);
*(.text.rna_Cache_change)
. = ALIGN(0x1000);
*(.text.PointCache_frame_step_get)
. = ALIGN(0x1000);
*(.text.PointCache_frame_step_set)
. = ALIGN(0x1000);
*(.text.rna_PointCache_frame_step_range)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_disk_cache_rename .text.BKE_ptcache_load_external .text.rna_Cache_idname_change)
. = ALIGN(0x1000);
*(.text.PointCache_index_get)
. = ALIGN(0x1000);
*(.text.PointCache_index_set)
. = ALIGN(0x1000);
*(.text.PointCache_compression_get)
. = ALIGN(0x1000);
*(.text.PointCache_compression_set)
. = ALIGN(0x1000);
*(.text.PointCache_is_baked_get)
. = ALIGN(0x1000);
*(.text.PointCache_is_baking_get)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_toggle_disk_cache .text.rna_Cache_toggle_disk_cache)
. = ALIGN(0x1000);
*(.text.PointCache_use_disk_cache_get)
. = ALIGN(0x1000);
*(.text.PointCache_use_disk_cache_set)
. = ALIGN(0x1000);
*(.text.PointCache_is_outdated_get)
. = ALIGN(0x1000);
*(.text.PointCache_frames_skipped_get)
. = ALIGN(0x1000);
*(.text.PointCache_name_get)
. = ALIGN(0x1000);
*(.text.PointCache_name_length)
. = ALIGN(0x1000);
*(.text.PointCache_name_set)
. = ALIGN(0x1000);
*(.text.PointCache_filepath_get)
. = ALIGN(0x1000);
*(.text.PointCache_filepath_length)
. = ALIGN(0x1000);
*(.text.PointCache_filepath_set)
. = ALIGN(0x1000);
*(.text.PointCache_info_get)
. = ALIGN(0x1000);
*(.text.PointCache_info_length)
. = ALIGN(0x1000);
*(.text.PointCache_use_external_get)
. = ALIGN(0x1000);
*(.text.PointCache_use_external_set)
. = ALIGN(0x1000);
*(.text.PointCache_use_library_path_get)
. = ALIGN(0x1000);
*(.text.PointCache_use_library_path_set)
. = ALIGN(0x1000);
*(.text.PointCache_point_caches_begin)
. = ALIGN(0x1000);
*(.text.PointCache_point_caches_next)
. = ALIGN(0x1000);
*(.text.PointCache_point_caches_end)
. = ALIGN(0x1000);
*(.text.PointCache_point_caches_get)
. = ALIGN(0x1000);
*(.text.PointCaches_active_index_get)
. = ALIGN(0x1000);
*(.text.PointCaches_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Cache_active_point_cache_index_range)
. = ALIGN(0x1000);
*(.text.PointCaches_rna_type_get)
. = ALIGN(0x1000);
*(.text.PointCaches_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PointCaches_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PointCaches_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PointCaches_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PointCaches_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_CollisionSettings_path)
. = ALIGN(0x1000);
*(.text.rna_CollisionSettings_update)
. = ALIGN(0x1000);
*(.text.CollisionSettings_absorption_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_absorption_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_damping_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_damping_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_thickness_outer_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_thickness_outer_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_thickness_inner_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_thickness_inner_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_stickiness_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_stickiness_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_use_particle_kill_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_use_particle_kill_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_permeability_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_permeability_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_friction_random_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_friction_random_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_friction_factor_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_friction_factor_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_damping_random_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_damping_random_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_damping_factor_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_damping_factor_set)
. = ALIGN(0x1000);
*(.text.rna_CollisionSettings_dependency_update)
. = ALIGN(0x1000);
*(.text.CollisionSettings_use_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_use_set)
. = ALIGN(0x1000);
*(.text.CollisionSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CollisionSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CollisionSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CollisionSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CollisionSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_EffectorWeight_path)
. = ALIGN(0x1000);
*(.text.rna_EffectorWeight_update)
. = ALIGN(0x1000);
*(.text.EffectorWeights_smokeflow_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_smokeflow_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_drag_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_drag_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_turbulence_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_turbulence_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_boid_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_boid_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_lennardjones_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_lennardjones_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_charge_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_charge_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_harmonic_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_harmonic_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_texture_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_texture_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_curve_guide_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_curve_guide_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_wind_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_wind_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_magnetic_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_magnetic_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_vortex_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_vortex_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_force_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_force_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_all_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_all_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_gravity_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_gravity_set)
. = ALIGN(0x1000);
*(.text.rna_EffectorWeight_dependency_update)
. = ALIGN(0x1000);
*(.text.EffectorWeights_group_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_group_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_apply_to_hair_growing_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_apply_to_hair_growing_set)
. = ALIGN(0x1000);
*(.text.EffectorWeights_rna_type_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.EffectorWeights_rna_properties_next)
. = ALIGN(0x1000);
*(.text.EffectorWeights_rna_properties_end)
. = ALIGN(0x1000);
*(.text.EffectorWeights_rna_properties_get)
. = ALIGN(0x1000);
*(.text.EffectorWeights_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_FieldSettings_path)
. = ALIGN(0x1000);
*(.text.rna_FieldSettings_update)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_amplitude_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_amplitude_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_shape_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_shape_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_frequency_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_frequency_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_axis_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_axis_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_type_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_kink_type_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_clump_shape_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_clump_shape_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_clump_amount_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_clump_amount_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_guide_path_weight_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_guide_path_weight_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_guide_path_add_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_guide_path_add_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_free_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_free_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_minimum_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_guide_minimum_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_source_object_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_source_object_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_texture_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_texture_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_smoke_density_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_smoke_density_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_multiple_springs_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_multiple_springs_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_absorption_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_absorption_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_apply_to_rotation_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_apply_to_rotation_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_apply_to_location_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_apply_to_location_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_root_coords_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_root_coords_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_2d_force_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_2d_force_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_global_coords_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_global_coords_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_object_coords_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_object_coords_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_radial_max_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_radial_max_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_radial_min_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_radial_min_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_max_distance_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_max_distance_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_min_distance_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_use_min_distance_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_seed_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_seed_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_noise_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_noise_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_texture_nabla_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_texture_nabla_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_radial_falloff_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_radial_falloff_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_radial_max_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_radial_max_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_radial_min_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_radial_min_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_distance_max_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_distance_max_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_distance_min_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_distance_min_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_falloff_power_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_falloff_power_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_rest_length_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_rest_length_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_size_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_size_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_inflow_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_inflow_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_flow_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_flow_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_quadratic_drag_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_quadratic_drag_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_harmonic_damping_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_harmonic_damping_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_linear_drag_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_linear_drag_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_strength_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_strength_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_z_direction_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_z_direction_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_texture_mode_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_texture_mode_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_falloff_type_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_falloff_type_set)
. = ALIGN(0x1000);
*(.text.rna_FieldSettings_shape_update)
. = ALIGN(0x1000);
*(.text.FieldSettings_shape_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_shape_set)
. = ALIGN(0x1000);
*(.text.rna_Effector_shape_itemf)
. = ALIGN(0x1000);
*(.text.rna_FieldSettings_dependency_update)
. = ALIGN(0x1000);
*(.text.object_add_particle_system)
. = ALIGN(0x1000);
*(.text.ED_object_modifier_add)
. = ALIGN(0x1000);
*(.text.BKE_mesh_ensure_skin_customdata)
. = ALIGN(0x1000);
*(.text.sbNew)
. = ALIGN(0x1000);
*(.text.multires_customdata_delete)
. = ALIGN(0x1000);
*(.text.object_modifier_remove)
. = ALIGN(0x1000);
*(.text.ED_object_check_force_modifiers)
. = ALIGN(0x1000);
*(.text.FieldSettings_type_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_type_set)
. = ALIGN(0x1000);
*(.text.FieldSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FieldSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FieldSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FieldSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FieldSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_cluster_soft_to_softbody_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_cluster_soft_to_softbody_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_cluster_rigid_to_softbody_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_cluster_rigid_to_softbody_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_bending_constraints_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_bending_constraints_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_shape_match_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_use_shape_match_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_cluster_iterations_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_cluster_iterations_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_location_iterations_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_location_iterations_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_weld_threshold_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_weld_threshold_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_collision_margin_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_collision_margin_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_shape_threshold_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_shape_threshold_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_dynamic_friction_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_dynamic_friction_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_linear_stiffness_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_linear_stiffness_set)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GameSoftBodySettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_SoftBodySettings_path)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_effector_weights_get)
. = ALIGN(0x1000);
*(.text.rna_softbody_update)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_self_collision_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_self_collision_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_aerodynamics_type_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_aerodynamics_type_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_face_collision_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_face_collision_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_edge_collision_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_edge_collision_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_stiff_quads_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_stiff_quads_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_edges_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_edges_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_goal_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_goal_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_scale_estimate_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_scale_estimate_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rotation_estimate_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rotation_estimate_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_location_mass_center_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_location_mass_center_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_estimate_matrix_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_estimate_matrix_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_diagnose_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_diagnose_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_auto_step_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_use_auto_step_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_fuzzy_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_fuzzy_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_choke_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_choke_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_step_max_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_step_max_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_step_min_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_step_min_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_error_threshold_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_error_threshold_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_ball_damp_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_ball_damp_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_ball_stiff_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_ball_stiff_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_ball_size_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_ball_size_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_collision_type_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_collision_type_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_spring_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_spring_length)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_spring_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_shear_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_shear_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_bend_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_bend_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_plastic_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_plastic_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_aero_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_aero_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_spring_length_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_spring_length_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_damping_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_damping_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_push_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_push_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_pull_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_pull_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_friction_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_friction_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_spring_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_spring_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_default_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_default_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_max_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_max_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_min_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_goal_min_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_goal_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_goal_length)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_goal_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_speed_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_speed_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_gravity_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_gravity_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_mass_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_mass_length)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_vertex_group_mass_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_mass_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_mass_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_friction_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_friction_set)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SoftBodySettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PackedFile_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PackedFile_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PackedFile_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PackedFile_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PackedFile_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PackedFile_rna_type_get)
. = ALIGN(0x1000);
*(.text.PackedFile_size_get)
. = ALIGN(0x1000);
*(.text.PackedFile_data_get)
. = ALIGN(0x1000);
*(.text.PackedFile_data_length)
. = ALIGN(0x1000);
*(.text.ParticleTarget_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleTarget_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleTarget_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleTarget_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleTarget_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_name_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_name_length)
. = ALIGN(0x1000);
*(.text.rna_Particle_target_reset)
. = ALIGN(0x1000);
*(.text.ParticleTarget_object_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_object_set)
. = ALIGN(0x1000);
*(.text.ParticleTarget_alliance_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_alliance_set)
. = ALIGN(0x1000);
*(.text.ParticleTarget_is_valid_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_is_valid_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_target_redo)
. = ALIGN(0x1000);
*(.text.ParticleTarget_duration_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_duration_set)
. = ALIGN(0x1000);
*(.text.ParticleTarget_time_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_time_set)
. = ALIGN(0x1000);
*(.text.rna_SPHFluidSettings_path)
. = ALIGN(0x1000);
*(.text.rna_Particle_reset)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_rest_length_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_rest_length_set)
. = ALIGN(0x1000);
*(.text.rna_ParticleSystem_path)
. = ALIGN(0x1000);
*(.text.ParticleSystem_mcol_on_emitter_call)
. = ALIGN(0x1000);
*(.text.psys_interpolate_mcol)
. = ALIGN(0x1000);
*(.text.rna_ParticleSystem_mcol_on_emitter)
. = ALIGN(0x1000);
*(.text.Particle_uv_on_emitter_call)
. = ALIGN(0x1000);
*(.text.rna_Particle_uv_on_emitter)
. = ALIGN(0x1000);
*(.text.Particle_alive_state_get)
. = ALIGN(0x1000);
*(.text.Particle_alive_state_set)
. = ALIGN(0x1000);
*(.text.Particle_is_visible_get)
. = ALIGN(0x1000);
*(.text.Particle_is_exist_get)
. = ALIGN(0x1000);
*(.text.Particle_size_get)
. = ALIGN(0x1000);
*(.text.Particle_size_set)
. = ALIGN(0x1000);
*(.text.Particle_die_time_get)
. = ALIGN(0x1000);
*(.text.Particle_die_time_set)
. = ALIGN(0x1000);
*(.text.Particle_lifetime_get)
. = ALIGN(0x1000);
*(.text.Particle_lifetime_set)
. = ALIGN(0x1000);
*(.text.Particle_birth_time_get)
. = ALIGN(0x1000);
*(.text.Particle_birth_time_set)
. = ALIGN(0x1000);
*(.text.Particle_particle_keys_begin)
. = ALIGN(0x1000);
*(.text.Particle_particle_keys_next)
. = ALIGN(0x1000);
*(.text.Particle_particle_keys_end)
. = ALIGN(0x1000);
*(.text.Particle_particle_keys_get)
. = ALIGN(0x1000);
*(.text.Particle_particle_keys_length)
. = ALIGN(0x1000);
*(.text.Particle_particle_keys_lookup_int)
. = ALIGN(0x1000);
*(.text.ParticleKey_time_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_time_set)
. = ALIGN(0x1000);
*(.text.ParticleKey_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleKey_rotation_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_rotation_set)
. = ALIGN(0x1000);
*(.text.ParticleKey_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleKey_location_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_location_set)
. = ALIGN(0x1000);
*(.text.ParticleKey_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleKey_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleKey_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleKey_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleKey_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Particle_hair_keys_begin)
. = ALIGN(0x1000);
*(.text.Particle_hair_keys_next)
. = ALIGN(0x1000);
*(.text.Particle_hair_keys_end)
. = ALIGN(0x1000);
*(.text.Particle_hair_keys_get)
. = ALIGN(0x1000);
*(.text.Particle_hair_keys_length)
. = ALIGN(0x1000);
*(.text.Particle_hair_keys_lookup_int)
. = ALIGN(0x1000);
*(.text.Particle_prev_rotation_get)
. = ALIGN(0x1000);
*(.text.Particle_prev_rotation_set)
. = ALIGN(0x1000);
*(.text.Particle_prev_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.Particle_prev_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.Particle_prev_velocity_get)
. = ALIGN(0x1000);
*(.text.Particle_prev_velocity_set)
. = ALIGN(0x1000);
*(.text.Particle_prev_location_get)
. = ALIGN(0x1000);
*(.text.Particle_prev_location_set)
. = ALIGN(0x1000);
*(.text.Particle_rotation_get)
. = ALIGN(0x1000);
*(.text.Particle_rotation_set)
. = ALIGN(0x1000);
*(.text.Particle_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.Particle_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.Particle_velocity_get)
. = ALIGN(0x1000);
*(.text.Particle_velocity_set)
. = ALIGN(0x1000);
*(.text.Particle_location_get)
. = ALIGN(0x1000);
*(.text.Particle_location_set)
. = ALIGN(0x1000);
*(.text.Particle_rna_type_get)
. = ALIGN(0x1000);
*(.text.Particle_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Particle_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Particle_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Particle_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Particle_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ChildParticle_rna_type_get)
. = ALIGN(0x1000);
*(.text.ChildParticle_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ChildParticle_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ChildParticle_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ChildParticle_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ChildParticle_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleSystem_uv_on_emitter_call)
. = ALIGN(0x1000);
*(.text.rna_ParticleSystem_tessfaceidx_on_emitter)
. = ALIGN(0x1000);
*(.text.ParticleSystem_co_hair_call)
. = ALIGN(0x1000);
*(.text.rna_ParticleSystem_co_hair)
. = ALIGN(0x1000);
*(.text.ParticleSystem_set_resolution_call)
. = ALIGN(0x1000);
*(.text.psys_render_set)
. = ALIGN(0x1000);
*(.text.psys_render_restore)
. = ALIGN(0x1000);
*(.text.ParticleSystem_name_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_name_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_name_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_settings_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_settings_set)
. = ALIGN(0x1000);
*(.text.psys_check_boid_data)
. = ALIGN(0x1000);
*(.text.ParticleSettings_force_field_2_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_force_field_1_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_animation_data_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_effector_weights_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_fluid_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_boids_get)
. = ALIGN(0x1000);
*(.text.rna_Particle_redo)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_object_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_object_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_redo_dependency)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_object_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_object_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_active_dupliweight_index_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_active_dupliweight_index_set)
. = ALIGN(0x1000);
*(.text.rna_ParticleDupliWeight_active_index_range)
. = ALIGN(0x1000);
*(.text.ParticleSettings_active_dupliweight_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_weights_begin)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_weights_next)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_weights_end)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_weights_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_weights_lookup_int)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_weights_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_group_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_dupli_group_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_change_type)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_modifier_stack_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_modifier_stack_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_keyed_loops_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_keyed_loops_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_trail_count_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_trail_count_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_path_end_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_path_end_set)
. = ALIGN(0x1000);
*(.text.rna_PartSetting_pathstartend_range)
. = ALIGN(0x1000);
*(.text.ParticleSettings_path_start_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_path_start_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_line_length_head_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_line_length_head_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_line_length_tail_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_line_length_tail_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_redo_child)
. = ALIGN(0x1000);
*(.text.ParticleSettings_branch_threshold_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_branch_threshold_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_parting_max_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_parting_max_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_parting_min_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_parting_min_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_parting_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_parting_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_length_threshold_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_length_threshold_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_length_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_length_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_end_shape_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_end_shape_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_endpoint_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_endpoint_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_2_threshold_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_2_threshold_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_2_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_2_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_2_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_2_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_1_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_1_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_1_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_roughness_1_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_flat_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_flat_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_shape_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_shape_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_frequency_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_frequency_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_amplitude_clump_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_amplitude_clump_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_amplitude_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_amplitude_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_clump_shape_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_clump_shape_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_clump_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_clump_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_roundness_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_roundness_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_radius_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_radius_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_size_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_size_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_virtual_parents_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_virtual_parents_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_rendered_child_count_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_rendered_child_count_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_nbr_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_nbr_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_length_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_length_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_damping_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_damping_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_brownian_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_brownian_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_drag_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_drag_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_size_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_size_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_particle_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_particle_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_mass_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_mass_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_hair_length_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_hair_length_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_phase_factor_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_phase_factor_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_rotation_factor_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_rotation_factor_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_phase_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_phase_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_angular_velocity_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_angular_velocity_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_object_align_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_object_align_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_reactor_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_reactor_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_tangent_phase_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_tangent_phase_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_tangent_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_tangent_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_particle_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_particle_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_factor_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_factor_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_object_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_object_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_normal_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_normal_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_effector_amount_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_effector_amount_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_grid_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_grid_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_grid_resolution_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_grid_resolution_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_userjit_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_userjit_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_count_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_count_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_effect_hair_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_effect_hair_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_jitter_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_jitter_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_courant_target_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_courant_target_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_subframes_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_subframes_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_adaptive_subframes_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_adaptive_subframes_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_timestep_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_timestep_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_time_tweak_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_time_tweak_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lifetime_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lifetime_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lifetime_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lifetime_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_frame_end_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_frame_end_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_frame_start_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_frame_start_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_viewport_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_viewport_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_transition_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_transition_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_rate_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_rate_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_refsize_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_simplify_refsize_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_simplify_viewport_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_simplify_viewport_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_simplify_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_simplify_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_velocity_tail_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_velocity_tail_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_velocity_head_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_velocity_head_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_offset_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_offset_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_tilt_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_tilt_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_color_maximum_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_color_maximum_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_tilt_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_tilt_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_offset_split_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_offset_split_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_animation_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_animation_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_uv_split_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_uv_split_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_align_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_billboard_align_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lock_billboard_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lock_billboard_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_axis_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_axis_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_kink_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_integrator_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_integrator_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_material_slot_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_material_slot_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_Material_itemf)
. = ALIGN(0x1000);
*(.text.ParticleSettings_material_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_material_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_percentage_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_percentage_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_adaptive_pixel_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_adaptive_pixel_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_adaptive_angle_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_adaptive_angle_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_keys_step_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_keys_step_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_hair_step_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_hair_step_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_render_step_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_render_step_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_step_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_step_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_child_type_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_color_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_color_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_render_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_render_type_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_ren_as_itemf)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_method_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_draw_method_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_draw_as_itemf)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_strand_primitive_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_strand_primitive_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_whole_group_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_whole_group_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_velocity_length_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_velocity_length_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_render_adaptive_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_render_adaptive_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_scale_dupli_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_scale_dupli_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_rotation_dupli_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_rotation_dupli_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_global_dupli_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_global_dupli_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_group_count_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_group_count_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_group_pick_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_group_pick_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_number_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_number_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_parent_particles_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_parent_particles_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_abspathtime_update)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_absolute_path_time_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_absolute_path_time_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_health_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_health_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_render_emitter_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_render_emitter_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_react_event_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_react_event_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_angular_velocity_mode_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_angular_velocity_mode_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_rotation_mode_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_rotation_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_change_physics)
. = ALIGN(0x1000);
*(.text.ParticleSettings_physics_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_physics_type_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_distribution_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_distribution_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_dist_itemf)
. = ALIGN(0x1000);
*(.text.ParticleSettings_emit_from_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_emit_from_set)
. = ALIGN(0x1000);
*(.text.rna_Particle_from_itemf)
. = ALIGN(0x1000);
*(.text.ParticleSettings_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_type_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_self_effect_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_self_effect_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_apply_guide_to_children_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_apply_guide_to_children_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_create_long_hair_children_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_create_long_hair_children_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_apply_effector_to_children_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_apply_effector_to_children_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_hexagonal_grid_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_hexagonal_grid_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_invert_grid_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_invert_grid_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_hair_bspline_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_hair_bspline_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lock_boids_to_surface_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_lock_boids_to_surface_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_advanced_hair_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_advanced_hair_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_multiply_size_mass_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_multiply_size_mass_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_dynamic_rotation_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_dynamic_rotation_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_rotations_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_rotations_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_size_deflect_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_size_deflect_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_die_on_collision_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_die_on_collision_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_even_distribution_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_even_distribution_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_emit_random_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_emit_random_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_dead_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_dead_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_unborn_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_show_unborn_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_regrow_hair_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_regrow_hair_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_react_multiple_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_react_multiple_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_react_start_end_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_use_react_start_end_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_is_fluid_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_active_texture_index_get)
. = ALIGN(0x1000);
*(.text.ParticleSettings_active_texture_index_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_active_texture_get)
. = ALIGN(0x1000);
*(.text.set_current_particle_texture .text.ParticleSettings_active_texture_set)
. = ALIGN(0x1000);
*(.text.ParticleSettings_texture_slots_begin)
. = ALIGN(0x1000);
*(.text.ParticleSettings_texture_slots_next)
. = ALIGN(0x1000);
*(.text.ParticleSettings_texture_slots_end)
. = ALIGN(0x1000);
*(.text.ParticleSettings_texture_slots_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_clear_call)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_create_call)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_add_call)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleSystem_particles_begin)
. = ALIGN(0x1000);
*(.text.ParticleSystem_particles_next)
. = ALIGN(0x1000);
*(.text.ParticleSystem_particles_end)
. = ALIGN(0x1000);
*(.text.ParticleSystem_particles_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_particles_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_particles_lookup_int)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_particles_begin)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_particles_next)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_particles_end)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_particles_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_particles_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_particles_lookup_int)
. = ALIGN(0x1000);
*(.text.ParticleSystem_seed_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_seed_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_seed_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_child_seed_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_is_global_hair_get)
. = ALIGN(0x1000);
*(.text.rna_Particle_hair_dynamics)
. = ALIGN(0x1000);
*(.text.ParticleSystem_use_hair_dynamics_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_use_hair_dynamics_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_cloth_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_reactor_target_object_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_reactor_target_object_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_reactor_target_particle_system_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_reactor_target_particle_system_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_use_keyed_timing_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_use_keyed_timing_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_targets_begin)
. = ALIGN(0x1000);
*(.text.ParticleSystem_targets_next)
. = ALIGN(0x1000);
*(.text.ParticleSystem_targets_end)
. = ALIGN(0x1000);
*(.text.ParticleSystem_targets_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_targets_lookup_int)
. = ALIGN(0x1000);
*(.text.ParticleSystem_targets_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleSystem_active_particle_target_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_active_particle_target_index_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_active_particle_target_index_set)
. = ALIGN(0x1000);
*(.text.rna_ParticleSystem_active_particle_target_index_range)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_normal_uv_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_normal_uv_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_normal_uv_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_time_index_uv_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_time_index_uv_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_time_index_uv_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_split_uv_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_split_uv_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_billboard_split_uv_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_density_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_density_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_density_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_density_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_density_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_velocity_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_length_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_length_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_length_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_length_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_length_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_clump_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_clump_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_clump_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_clump_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_clump_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_kink_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_kink_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_kink_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_kink_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_kink_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_1_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_1_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_1_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_roughness_1_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_roughness_1_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_2_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_2_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_2_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_roughness_2_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_roughness_2_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_end_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_end_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_roughness_end_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_roughness_end_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_roughness_end_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_size_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_tangent_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_tangent_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_tangent_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_tangent_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_tangent_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_rotation_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_rotation_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_rotation_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_rotation_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_rotation_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_field_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_field_length)
. = ALIGN(0x1000);
*(.text.ParticleSystem_vertex_group_field_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_field_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_invert_vertex_group_field_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_point_cache_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_has_multiple_caches_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_parent_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_parent_set)
. = ALIGN(0x1000);
*(.text.ParticleSystem_is_editable_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_is_edited_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_dt_frac_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleSystem_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleSystem_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleSystem_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleSystem_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_name_get)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_name_length)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_count_get)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_count_set)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleDupliWeight_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_rough_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_rough_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_kink_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_kink_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_clump_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_clump_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_length_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_length_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_damp_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_damp_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_gravity_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_gravity_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_field_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_field_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_velocity_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_velocity_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_size_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_size_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_density_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_density_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_life_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_life_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_time_factor_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_time_factor_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_length_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_length_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_rough_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_rough_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_kink_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_kink_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_clump_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_clump_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_damp_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_damp_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_gravity_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_gravity_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_field_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_field_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_size_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_size_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_density_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_density_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_life_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_life_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_time_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_use_map_time_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_z_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_z_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_y_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_y_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_x_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_mapping_x_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_uv_layer_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_uv_layer_length)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_uv_layer_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_object_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_object_set)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_texture_coords_get)
. = ALIGN(0x1000);
*(.text.ParticleSettingsTextureSlot_texture_coords_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_stiff_viscosity_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_stiff_viscosity_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_radius_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_radius_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_use_factor_density_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_use_factor_density_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_repulsion_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_factor_repulsion_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_buoyancy_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_buoyancy_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rest_density_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rest_density_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_repulsion_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_repulsion_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_stiffness_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_stiffness_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_stiff_viscosity_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_stiff_viscosity_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_linear_viscosity_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_linear_viscosity_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_spring_frames_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_spring_frames_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_yield_ratio_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_yield_ratio_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_plasticity_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_plasticity_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_use_initial_rest_length_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_use_initial_rest_length_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_use_viscoelastic_springs_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_use_viscoelastic_springs_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rest_length_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rest_length_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_fluid_radius_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_fluid_radius_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_spring_force_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_spring_force_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_solver_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_solver_set)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SPHFluidSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_co_object_call)
. = ALIGN(0x1000);
*(.text.mul_m4_v3)
. = ALIGN(0x1000);
*(.text.psys_mat_hair_to_object .text.rna_ParticleHairKey_co_object)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_co_local_get)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_co_local_set)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_co_get)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_co_set)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_weight_get)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_weight_set)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_time_get)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_time_set)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleHairKey_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ParticleTarget_system_get)
. = ALIGN(0x1000);
*(.text.ParticleTarget_system_set)
. = ALIGN(0x1000);
*(.text.Pose_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Pose_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Pose_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Pose_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Pose_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Pose_rna_type_get)
. = ALIGN(0x1000);
*(.text.Pose_bones_begin)
. = ALIGN(0x1000);
*(.text.Pose_bones_next)
. = ALIGN(0x1000);
*(.text.Pose_bones_end)
. = ALIGN(0x1000);
*(.text.Pose_bones_get)
. = ALIGN(0x1000);
*(.text.Pose_bones_lookup_int)
. = ALIGN(0x1000);
*(.text.Pose_bones_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_PoseBone_path)
. = ALIGN(0x1000);
*(.text.rna_PoseBone_idprops)
. = ALIGN(0x1000);
*(.text.PoseBone_evaluate_envelope_call)
. = ALIGN(0x1000);
*(.text.rna_PoseChannel_proxy_editable)
. = ALIGN(0x1000);
*(.text.PoseBone_name_get)
. = ALIGN(0x1000);
*(.text.PoseBone_name_length)
. = ALIGN(0x1000);
*(.text.PoseBone_name_set)
. = ALIGN(0x1000);
*(.text.ED_armature_bone_rename .text.constraint_bone_name_fix .text.BKE_action_fix_paths_rename .text.modifiers_usesArmature)
. = ALIGN(0x1000);
*(.text.PoseBone_constraints_begin)
. = ALIGN(0x1000);
*(.text.PoseBone_constraints_next)
. = ALIGN(0x1000);
*(.text.PoseBone_constraints_end)
. = ALIGN(0x1000);
*(.text.PoseBone_constraints_get)
. = ALIGN(0x1000);
*(.text.PoseBone_constraints_lookup_int)
. = ALIGN(0x1000);
*(.text.PoseBone_constraints_lookup_string)
. = ALIGN(0x1000);
*(.text.PoseBone_rna_type_get)
. = ALIGN(0x1000);
*(.text.PoseBone_motion_path_get)
. = ALIGN(0x1000);
*(.text.PoseBone_bone_get)
. = ALIGN(0x1000);
*(.text.PoseBone_parent_get)
. = ALIGN(0x1000);
*(.text.PoseBone_child_get)
. = ALIGN(0x1000);
*(.text.rna_Pose_IK_update)
. = ALIGN(0x1000);
*(.text.rna_PoseChannel_location_editable)
. = ALIGN(0x1000);
*(.text.PoseBone_location_get)
. = ALIGN(0x1000);
*(.text.PoseBone_location_set)
. = ALIGN(0x1000);
*(.text.rna_PoseChannel_scale_editable)
. = ALIGN(0x1000);
*(.text.PoseBone_scale_get)
. = ALIGN(0x1000);
*(.text.PoseBone_scale_set)
. = ALIGN(0x1000);
*(.text.rna_Pose_update)
. = ALIGN(0x1000);
*(.text.rna_PoseChannel_rotation_4d_editable)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_quaternion_get)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_quaternion_set)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_axis_angle_get)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_axis_angle_set)
. = ALIGN(0x1000);
*(.text.rna_PoseChannel_rotation_euler_editable)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_euler_get)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_euler_set)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_mode_get)
. = ALIGN(0x1000);
*(.text.PoseBone_rotation_mode_set)
. = ALIGN(0x1000);
*(.text.axis_angle_to_eulO .text.eulO_to_axis_angle)
. = ALIGN(0x1000);
*(.text.BKE_rotMode_change_values)
. = ALIGN(0x1000);
*(.text.PoseBone_matrix_channel_get)
. = ALIGN(0x1000);
*(.text.PoseBone_matrix_basis_get)
. = ALIGN(0x1000);
*(.text.PoseBone_matrix_basis_set)
. = ALIGN(0x1000);
*(.text.PoseBone_matrix_get)
. = ALIGN(0x1000);
*(.text.BKE_armature_mat_pose_to_bone_ex .text.PoseBone_matrix_set)
. = ALIGN(0x1000);
*(.text.BKE_pchan_apply_mat4)
. = ALIGN(0x1000);
*(.text.compatible_eul)
. = ALIGN(0x1000);
*(.text.PoseBone_head_get)
. = ALIGN(0x1000);
*(.text.PoseBone_tail_get)
. = ALIGN(0x1000);
*(.text.PoseBone_is_in_ik_chain_get)
. = ALIGN(0x1000);
*(.text.pose_channel_in_IK_chain)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_ik_x_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_ik_x_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_ik_y_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_ik_y_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_ik_z_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_ik_z_set)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_limit_x_get)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_limit_x_set)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_limit_y_get)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_limit_y_set)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_limit_z_get)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_limit_z_set)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_rotation_control_get)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_rotation_control_set)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_linear_control_get)
. = ALIGN(0x1000);
*(.text.PoseBone_use_ik_linear_control_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_min_x_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_min_x_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_max_x_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_max_x_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_min_y_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_min_y_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_max_y_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_max_y_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_min_z_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_min_z_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_max_z_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_max_z_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stiffness_x_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stiffness_x_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stiffness_y_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stiffness_y_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stiffness_z_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stiffness_z_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stretch_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_stretch_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_rotation_weight_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_rotation_weight_set)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_linear_weight_get)
. = ALIGN(0x1000);
*(.text.PoseBone_ik_linear_weight_set)
. = ALIGN(0x1000);
*(.text.PoseBone_custom_shape_get)
. = ALIGN(0x1000);
*(.text.PoseBone_custom_shape_set)
. = ALIGN(0x1000);
*(.text.PoseBone_custom_shape_transform_get)
. = ALIGN(0x1000);
*(.text.PoseBone_custom_shape_transform_set)
. = ALIGN(0x1000);
*(.text.PoseBone_bone_group_index_get)
. = ALIGN(0x1000);
*(.text.PoseBone_bone_group_index_set)
. = ALIGN(0x1000);
*(.text.rna_PoseChannel_bone_group_index_range)
. = ALIGN(0x1000);
*(.text.PoseBone_bone_group_get)
. = ALIGN(0x1000);
*(.text.PoseBone_bone_group_set)
. = ALIGN(0x1000);
*(.text.BoneGroup_name_get)
. = ALIGN(0x1000);
*(.text.BoneGroup_name_length)
. = ALIGN(0x1000);
*(.text.BoneGroup_name_set)
. = ALIGN(0x1000);
*(.text.BoneGroup_rna_type_get)
. = ALIGN(0x1000);
*(.text.BoneGroup_color_set_get)
. = ALIGN(0x1000);
*(.text.BoneGroup_color_set_set)
. = ALIGN(0x1000);
*(.text.BoneGroup_is_custom_color_set_get)
. = ALIGN(0x1000);
*(.text.BoneGroup_colors_get)
. = ALIGN(0x1000);
*(.text.BoneGroup_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BoneGroup_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BoneGroup_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BoneGroup_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BoneGroup_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_IKParam_refine)
. = ALIGN(0x1000);
*(.text.IKParam_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.IKParam_rna_properties_next)
. = ALIGN(0x1000);
*(.text.IKParam_rna_properties_end)
. = ALIGN(0x1000);
*(.text.IKParam_rna_properties_get)
. = ALIGN(0x1000);
*(.text.IKParam_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.IKParam_rna_type_get)
. = ALIGN(0x1000);
*(.text.IKParam_ik_solver_get)
. = ALIGN(0x1000);
*(.text.rna_Itasc_update)
. = ALIGN(0x1000);
*(.text.Itasc_damping_epsilon_get)
. = ALIGN(0x1000);
*(.text.Itasc_damping_epsilon_set)
. = ALIGN(0x1000);
*(.text.Itasc_damping_max_get)
. = ALIGN(0x1000);
*(.text.Itasc_damping_max_set)
. = ALIGN(0x1000);
*(.text.rna_Itasc_update_rebuild)
. = ALIGN(0x1000);
*(.text.Itasc_solver_get)
. = ALIGN(0x1000);
*(.text.Itasc_solver_set)
. = ALIGN(0x1000);
*(.text.Itasc_velocity_max_get)
. = ALIGN(0x1000);
*(.text.Itasc_velocity_max_set)
. = ALIGN(0x1000);
*(.text.Itasc_feedback_get)
. = ALIGN(0x1000);
*(.text.Itasc_feedback_set)
. = ALIGN(0x1000);
*(.text.Itasc_step_max_get)
. = ALIGN(0x1000);
*(.text.Itasc_step_max_set)
. = ALIGN(0x1000);
*(.text.Itasc_step_min_get)
. = ALIGN(0x1000);
*(.text.Itasc_step_min_set)
. = ALIGN(0x1000);
*(.text.Itasc_use_auto_step_get)
. = ALIGN(0x1000);
*(.text.Itasc_use_auto_step_set)
. = ALIGN(0x1000);
*(.text.Itasc_reiteration_method_get)
. = ALIGN(0x1000);
*(.text.Itasc_reiteration_method_set)
. = ALIGN(0x1000);
*(.text.Itasc_mode_get)
. = ALIGN(0x1000);
*(.text.Itasc_mode_set)
. = ALIGN(0x1000);
*(.text.Itasc_step_count_get)
. = ALIGN(0x1000);
*(.text.Itasc_step_count_set)
. = ALIGN(0x1000);
*(.text.Itasc_iterations_get)
. = ALIGN(0x1000);
*(.text.Itasc_iterations_set)
. = ALIGN(0x1000);
*(.text.Itasc_precision_get)
. = ALIGN(0x1000);
*(.text.Itasc_precision_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_location_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_location_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_rotation_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_rotation_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_rotation_w_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_rotation_w_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_rotations_4d_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_rotations_4d_set)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_scale_get)
. = ALIGN(0x1000);
*(.text.PoseBone_lock_scale_set)
. = ALIGN(0x1000);
*(.text.PoseBone_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PoseBone_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PoseBone_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PoseBone_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PoseBone_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BoneGroups_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_pose_remove_group)
. = ALIGN(0x1000);
*(.text.BoneGroups_new_call)
. = ALIGN(0x1000);
*(.text.BKE_pose_add_group)
. = ALIGN(0x1000);
*(.text.BoneGroups_active_index_get)
. = ALIGN(0x1000);
*(.text.BoneGroups_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Pose_active_bone_group_index_range)
. = ALIGN(0x1000);
*(.text.BoneGroups_active_get)
. = ALIGN(0x1000);
*(.text.BoneGroups_active_set)
. = ALIGN(0x1000);
*(.text.BoneGroups_rna_type_get)
. = ALIGN(0x1000);
*(.text.BoneGroups_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BoneGroups_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BoneGroups_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BoneGroups_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BoneGroups_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Pose_animation_visualization_get)
. = ALIGN(0x1000);
*(.text.Pose_ik_param_get)
. = ALIGN(0x1000);
*(.text.rna_Pose_ikparam_typef)
. = ALIGN(0x1000);
*(.text.rna_Pose_ik_solver_update)
. = ALIGN(0x1000);
*(.text.Pose_ik_solver_get)
. = ALIGN(0x1000);
*(.text.Pose_ik_solver_set)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_remove_call)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_new_call)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_active_get)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_active_set)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_rna_type_get)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PoseBoneConstraints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Pose_bone_groups_begin)
. = ALIGN(0x1000);
*(.text.Pose_bone_groups_next)
. = ALIGN(0x1000);
*(.text.Pose_bone_groups_end)
. = ALIGN(0x1000);
*(.text.Pose_bone_groups_get)
. = ALIGN(0x1000);
*(.text.Pose_bone_groups_lookup_int)
. = ALIGN(0x1000);
*(.text.Pose_bone_groups_lookup_string)
. = ALIGN(0x1000);
*(.text.GameProperty_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GameProperty_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GameProperty_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GameProperty_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GameProperty_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GameProperty_rna_type_get)
. = ALIGN(0x1000);
*(.text.GameProperty_name_get)
. = ALIGN(0x1000);
*(.text.GameProperty_name_length)
. = ALIGN(0x1000);
*(.text.GameProperty_name_set)
. = ALIGN(0x1000);
*(.text.BKE_bproperty_unique)
. = ALIGN(0x1000);
*(.text.GameProperty_type_get)
. = ALIGN(0x1000);
*(.text.GameProperty_type_set)
. = ALIGN(0x1000);
*(.text.GameProperty_show_debug_get)
. = ALIGN(0x1000);
*(.text.GameProperty_show_debug_set)
. = ALIGN(0x1000);
*(.text.rna_GameProperty_refine)
. = ALIGN(0x1000);
*(.text.GameTimerProperty_value_get)
. = ALIGN(0x1000);
*(.text.GameTimerProperty_value_set)
. = ALIGN(0x1000);
*(.text.GameStringProperty_value_get)
. = ALIGN(0x1000);
*(.text.GameStringProperty_value_length)
. = ALIGN(0x1000);
*(.text.GameStringProperty_value_set)
. = ALIGN(0x1000);
*(.text.GameFloatProperty_value_get)
. = ALIGN(0x1000);
*(.text.GameFloatProperty_value_set)
. = ALIGN(0x1000);
*(.text.GameBooleanProperty_value_get)
. = ALIGN(0x1000);
*(.text.GameBooleanProperty_value_set)
. = ALIGN(0x1000);
*(.text.GameIntProperty_value_get)
. = ALIGN(0x1000);
*(.text.GameIntProperty_value_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderEngine_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderEngine_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderEngine_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderEngine_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_is_animation_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_is_animation_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_is_preview_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_is_preview_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_camera_override_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_layer_override_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_layer_override_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_tile_x_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_tile_x_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_tile_y_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_tile_y_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_resolution_x_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_resolution_y_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_render_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_use_highlight_tiles_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_use_highlight_tiles_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_idname_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_idname_length)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_idname_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_label_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_label_length)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_label_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_preview_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_preview_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_texture_preview_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_texture_preview_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_postprocess_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_postprocess_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_shading_nodes_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_shading_nodes_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_exclude_layers_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_exclude_layers_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_save_buffers_get)
. = ALIGN(0x1000);
*(.text.RenderEngine_bl_use_save_buffers_set)
. = ALIGN(0x1000);
*(.text.RenderResult_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderResult_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderResult_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderResult_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderResult_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderResult_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderResult_resolution_x_get)
. = ALIGN(0x1000);
*(.text.RenderResult_resolution_y_get)
. = ALIGN(0x1000);
*(.text.RenderResult_layers_begin)
. = ALIGN(0x1000);
*(.text.RenderResult_layers_next)
. = ALIGN(0x1000);
*(.text.RenderResult_layers_end)
. = ALIGN(0x1000);
*(.text.RenderResult_layers_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_load_from_file_call)
. = ALIGN(0x1000);
*(.text.RE_layer_load_from_file)
. = ALIGN(0x1000);
*(.text.RenderLayer_name_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_name_length)
. = ALIGN(0x1000);
*(.text.RenderLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_material_override_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_light_override_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_layers_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_layers_zmask_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_layers_exclude_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_zmask_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_invert_zmask_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_all_z_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_solid_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_halo_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_ztransp_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_sky_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_edge_enhance_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_strand_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_freestyle_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_combined_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_z_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_vector_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_normal_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_uv_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_mist_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_object_index_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_material_index_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_color_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_diffuse_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_specular_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_shadow_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_ambient_occlusion_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_reflection_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_refraction_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_emit_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_environment_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_indirect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_specular_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_shadow_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_ambient_occlusion_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_reflection_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_refraction_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_emit_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_environment_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_exclude_indirect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_diffuse_direct_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_diffuse_indirect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_diffuse_color_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_glossy_direct_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_glossy_indirect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_glossy_color_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_transmission_direct_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_transmission_indirect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_transmission_color_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_subsurface_direct_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_subsurface_indirect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_use_pass_subsurface_color_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_passes_begin)
. = ALIGN(0x1000);
*(.text.RenderLayer_passes_next)
. = ALIGN(0x1000);
*(.text.RenderLayer_passes_end)
. = ALIGN(0x1000);
*(.text.RenderLayer_passes_get)
. = ALIGN(0x1000);
*(.text.rna_RenderLayer_rect_get_length)
. = ALIGN(0x1000);
*(.text.RenderLayer_rect_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_rect_set)
. = ALIGN(0x1000);
*(.text.RenderLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderResult_load_from_file_call)
. = ALIGN(0x1000);
*(.text.rna_RenderEngine_refine)
. = ALIGN(0x1000);
*(.text.rna_RenderEngine_register)
. = ALIGN(0x1000);
*(.text.rna_RenderEngine_unregister)
. = ALIGN(0x1000);
*(.text.rna_RenderEngine_instance)
. = ALIGN(0x1000);
*(.text.RenderEngine_support_display_space_shader_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_unbind_display_space_shader_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_bind_display_space_shader_call)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_setup_glsl_draw_from_space)
. = ALIGN(0x1000);
*(.text.RenderEngine_report_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_update_memory_stats_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_update_progress_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_frame_set_call)
. = ALIGN(0x1000);
*(.text.RE_engine_frame_set)
. = ALIGN(0x1000);
*(.text.RenderEngine_update_stats_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_test_break_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_end_result_call)
. = ALIGN(0x1000);
*(.text.render_result_merge)
. = ALIGN(0x1000);
*(.text.RE_engine_end_result)
. = ALIGN(0x1000);
*(.text.RenderEngine_update_result_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_begin_result_call)
. = ALIGN(0x1000);
*(.text.render_result_new .text.render_layer_add_pass .text.get_pass_name)
. = ALIGN(0x1000);
*(.text.RE_engine_begin_result)
. = ALIGN(0x1000);
*(.text.RenderEngine_tag_update_call)
. = ALIGN(0x1000);
*(.text.RenderEngine_tag_redraw_call)
. = ALIGN(0x1000);
*(.text.BakePixel_next_get)
. = ALIGN(0x1000);
*(.text.BakePixel_dv_dy_get)
. = ALIGN(0x1000);
*(.text.BakePixel_dv_dx_get)
. = ALIGN(0x1000);
*(.text.BakePixel_du_dy_get)
. = ALIGN(0x1000);
*(.text.BakePixel_du_dx_get)
. = ALIGN(0x1000);
*(.text.BakePixel_uv_get)
. = ALIGN(0x1000);
*(.text.BakePixel_primitive_id_get)
. = ALIGN(0x1000);
*(.text.BakePixel_rna_type_get)
. = ALIGN(0x1000);
*(.text.BakePixel_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BakePixel_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BakePixel_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BakePixel_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BakePixel_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.engine_update)
. = ALIGN(0x1000);
*(.text.engine_render)
. = ALIGN(0x1000);
*(.text.engine_bake)
. = ALIGN(0x1000);
*(.text.engine_view_update)
. = ALIGN(0x1000);
*(.text.engine_view_draw)
. = ALIGN(0x1000);
*(.text.engine_update_script_node)
. = ALIGN(0x1000);
*(.text.RenderPass_name_get)
. = ALIGN(0x1000);
*(.text.RenderPass_name_length)
. = ALIGN(0x1000);
*(.text.RenderPass_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderPass_channel_id_get)
. = ALIGN(0x1000);
*(.text.RenderPass_channel_id_length)
. = ALIGN(0x1000);
*(.text.RenderPass_channels_get)
. = ALIGN(0x1000);
*(.text.RenderPass_type_get)
. = ALIGN(0x1000);
*(.text.rna_RenderPass_rect_get_length)
. = ALIGN(0x1000);
*(.text.RenderPass_rect_get)
. = ALIGN(0x1000);
*(.text.RenderPass_rect_set)
. = ALIGN(0x1000);
*(.text.RenderPass_debug_type_get)
. = ALIGN(0x1000);
*(.text.RenderPass_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderPass_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderPass_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderPass_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderPass_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyWorld_reset)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_group_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_group_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_constraints_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_constraints_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_enabled_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_enabled_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_time_scale_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_time_scale_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_steps_per_second_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_steps_per_second_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_solver_iterations_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_solver_iterations_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_use_split_impulse_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_use_split_impulse_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_point_cache_get)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_effector_weights_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyOb_reset)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_type_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_type_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_mesh_source_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_mesh_source_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_enabled_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_enabled_set)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyOb_shape_update)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_collision_shape_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_collision_shape_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_kinematic_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_kinematic_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_deform_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_deform_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_mass_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_mass_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_deactivation_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_deactivation_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_start_deactivated_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_start_deactivated_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_deactivate_linear_velocity_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_deactivate_linear_velocity_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_deactivate_angular_velocity_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_deactivate_angular_velocity_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_linear_damping_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_linear_damping_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_angular_damping_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_angular_damping_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_friction_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_friction_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_restitution_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_restitution_set)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyOb_shape_reset)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_margin_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_use_margin_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_collision_margin_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_collision_margin_set)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_collision_groups_get)
. = ALIGN(0x1000);
*(.text.RigidBodyObject_collision_groups_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_rna_type_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_type_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_type_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_enabled_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_enabled_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_disable_collisions_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_disable_collisions_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_object1_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_object1_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_object2_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_object2_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_breaking_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_breaking_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_breaking_threshold_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_breaking_threshold_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_override_solver_iterations_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_override_solver_iterations_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_solver_iterations_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_solver_iterations_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_lin_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_lin_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_lin_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_lin_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_lin_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_lin_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_ang_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_ang_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_ang_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_ang_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_ang_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_limit_ang_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_spring_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_spring_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_spring_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_spring_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_spring_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_spring_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_motor_lin_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_motor_lin_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_motor_ang_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_use_motor_ang_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_x_lower_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_x_lower_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_x_upper_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_x_upper_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_y_lower_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_y_lower_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_y_upper_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_y_upper_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_z_lower_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_z_lower_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_z_upper_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_lin_z_upper_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_x_lower_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_x_lower_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_x_upper_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_x_upper_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_y_lower_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_y_lower_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_y_upper_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_y_upper_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_z_lower_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_z_lower_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_z_upper_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_limit_ang_z_upper_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_stiffness_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_stiffness_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_stiffness_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_stiffness_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_stiffness_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_stiffness_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_damping_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_damping_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_damping_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_damping_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_damping_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_spring_damping_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_lin_target_velocity_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_lin_target_velocity_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_lin_max_impulse_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_lin_max_impulse_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_ang_target_velocity_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_ang_target_velocity_set)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_ang_max_impulse_get)
. = ALIGN(0x1000);
*(.text.RigidBodyConstraint_motor_ang_max_impulse_set)
. = ALIGN(0x1000);
*(.text.RigidBodyWorld_convex_sweep_test_call)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyOb_path)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyWorld_path)
. = ALIGN(0x1000);
*(.text.rna_RigidBodyCon_path)
. = ALIGN(0x1000);
*(.text.Struct_identifier_get)
. = ALIGN(0x1000);
*(.text.Struct_identifier_length)
. = ALIGN(0x1000);
*(.text.Struct_name_get)
. = ALIGN(0x1000);
*(.text.Struct_name_length)
. = ALIGN(0x1000);
*(.text.Struct_rna_type_get)
. = ALIGN(0x1000);
*(.text.Struct_description_get)
. = ALIGN(0x1000);
*(.text.Struct_description_length)
. = ALIGN(0x1000);
*(.text.Struct_translation_context_get)
. = ALIGN(0x1000);
*(.text.Struct_translation_context_length)
. = ALIGN(0x1000);
*(.text.Struct_base_get)
. = ALIGN(0x1000);
*(.text.Struct_nested_get)
. = ALIGN(0x1000);
*(.text.Struct_name_property_get)
. = ALIGN(0x1000);
*(.text.rna_Property_refine)
. = ALIGN(0x1000);
*(.text.CollectionProperty_fixed_type_get)
. = ALIGN(0x1000);
*(.text.Function_identifier_get)
. = ALIGN(0x1000);
*(.text.Function_identifier_length)
. = ALIGN(0x1000);
*(.text.Function_rna_type_get)
. = ALIGN(0x1000);
*(.text.Function_description_get)
. = ALIGN(0x1000);
*(.text.Function_description_length)
. = ALIGN(0x1000);
*(.text.Function_parameters_begin)
. = ALIGN(0x1000);
*(.text.Function_parameters_next)
. = ALIGN(0x1000);
*(.text.Function_parameters_end)
. = ALIGN(0x1000);
*(.text.Function_parameters_get)
. = ALIGN(0x1000);
*(.text.rna_property_builtin)
. = ALIGN(0x1000);
*(.text.Function_is_registered_get)
. = ALIGN(0x1000);
*(.text.Function_is_registered_optional_get)
. = ALIGN(0x1000);
*(.text.Function_use_self_get)
. = ALIGN(0x1000);
*(.text.Function_use_self_type_get)
. = ALIGN(0x1000);
*(.text.Function_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Function_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Function_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Function_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Function_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_idproperty_known)
. = ALIGN(0x1000);
*(.text.BlenderRNA_structs_begin)
. = ALIGN(0x1000);
*(.text.BlenderRNA_structs_next)
. = ALIGN(0x1000);
*(.text.BlenderRNA_structs_end)
. = ALIGN(0x1000);
*(.text.BlenderRNA_structs_get)
. = ALIGN(0x1000);
*(.text.rna_BlenderRNA_structs_length)
. = ALIGN(0x1000);
*(.text.BlenderRNA_structs_lookup_int)
. = ALIGN(0x1000);
*(.text.BlenderRNA_structs_lookup_string)
. = ALIGN(0x1000);
*(.text.BlenderRNA_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlenderRNA_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlenderRNA_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlenderRNA_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlenderRNA_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlenderRNA_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PointerProperty_fixed_type_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_identifier_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_identifier_length)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_description_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_description_length)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_name_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_name_length)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_rna_type_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_value_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_icon_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_rna_properties_next)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_rna_properties_end)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_rna_properties_get)
. = ALIGN(0x1000);
*(.text.EnumPropertyItem_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.IntProperty_step_get)
. = ALIGN(0x1000);
*(.text.IntProperty_soft_max_get)
. = ALIGN(0x1000);
*(.text.IntProperty_soft_min_get)
. = ALIGN(0x1000);
*(.text.IntProperty_hard_max_get)
. = ALIGN(0x1000);
*(.text.IntProperty_hard_min_get)
. = ALIGN(0x1000);
*(.text.IntProperty_array_length_get)
. = ALIGN(0x1000);
*(.text.rna_NumberProperty_default_array_get_length)
. = ALIGN(0x1000);
*(.text.IntProperty_default_array_get)
. = ALIGN(0x1000);
*(.text.IntProperty_default_value_get)
. = ALIGN(0x1000);
*(.text.BoolProperty_array_length_get)
. = ALIGN(0x1000);
*(.text.BoolProperty_default_array_get)
. = ALIGN(0x1000);
*(.text.BoolProperty_default_value_get)
. = ALIGN(0x1000);
*(.text.Property_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Property_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Property_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Property_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Property_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Property_rna_type_get)
. = ALIGN(0x1000);
*(.text.Property_name_get)
. = ALIGN(0x1000);
*(.text.Property_name_length)
. = ALIGN(0x1000);
*(.text.Property_identifier_get)
. = ALIGN(0x1000);
*(.text.Property_identifier_length)
. = ALIGN(0x1000);
*(.text.Property_description_get)
. = ALIGN(0x1000);
*(.text.Property_description_length)
. = ALIGN(0x1000);
*(.text.Property_translation_context_get)
. = ALIGN(0x1000);
*(.text.Property_translation_context_length)
. = ALIGN(0x1000);
*(.text.Property_type_get)
. = ALIGN(0x1000);
*(.text.Property_subtype_get)
. = ALIGN(0x1000);
*(.text.Property_srna_get)
. = ALIGN(0x1000);
*(.text.Property_unit_get)
. = ALIGN(0x1000);
*(.text.Property_icon_get)
. = ALIGN(0x1000);
*(.text.Property_is_readonly_get)
. = ALIGN(0x1000);
*(.text.Property_is_animatable_get)
. = ALIGN(0x1000);
*(.text.Property_is_required_get)
. = ALIGN(0x1000);
*(.text.Property_is_argument_optional_get)
. = ALIGN(0x1000);
*(.text.Property_is_never_none_get)
. = ALIGN(0x1000);
*(.text.Property_is_hidden_get)
. = ALIGN(0x1000);
*(.text.Property_is_skip_save_get)
. = ALIGN(0x1000);
*(.text.Property_is_output_get)
. = ALIGN(0x1000);
*(.text.Property_is_registered_get)
. = ALIGN(0x1000);
*(.text.Property_is_registered_optional_get)
. = ALIGN(0x1000);
*(.text.Property_is_runtime_get)
. = ALIGN(0x1000);
*(.text.Property_is_enum_flag_get)
. = ALIGN(0x1000);
*(.text.Property_is_library_editable_get)
. = ALIGN(0x1000);
*(.text.StringProperty_length_max_get)
. = ALIGN(0x1000);
*(.text.StringProperty_default_value_get)
. = ALIGN(0x1000);
*(.text.StringProperty_default_value_length)
. = ALIGN(0x1000);
*(.text.FloatProperty_precision_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_step_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_soft_max_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_soft_min_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_hard_max_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_hard_min_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_array_length_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_default_array_get)
. = ALIGN(0x1000);
*(.text.FloatProperty_default_value_get)
. = ALIGN(0x1000);
*(.text.EnumProperty_enum_items_begin)
. = ALIGN(0x1000);
*(.text.EnumProperty_enum_items_next)
. = ALIGN(0x1000);
*(.text.EnumProperty_enum_items_end)
. = ALIGN(0x1000);
*(.text.EnumProperty_enum_items_get)
. = ALIGN(0x1000);
*(.text.rna_enum_check_separator)
. = ALIGN(0x1000);
*(.text.EnumProperty_default_flag_get)
. = ALIGN(0x1000);
*(.text.rna_EnumProperty_default_itemf)
. = ALIGN(0x1000);
*(.text.EnumProperty_default_value_get)
. = ALIGN(0x1000);
*(.text.Struct_properties_begin)
. = ALIGN(0x1000);
*(.text.Struct_properties_next)
. = ALIGN(0x1000);
*(.text.Struct_properties_end)
. = ALIGN(0x1000);
*(.text.Struct_properties_get)
. = ALIGN(0x1000);
*(.text.Struct_functions_begin)
. = ALIGN(0x1000);
*(.text.Struct_functions_next)
. = ALIGN(0x1000);
*(.text.Struct_functions_end)
. = ALIGN(0x1000);
*(.text.Struct_functions_get)
. = ALIGN(0x1000);
*(.text.rna_function_builtin)
. = ALIGN(0x1000);
*(.text.Struct_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Struct_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Struct_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Struct_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Struct_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_builtin_properties_next)
. = ALIGN(0x1000);
*(.text.rna_builtin_properties_get)
. = ALIGN(0x1000);
*(.text.rna_builtin_type_get)
. = ALIGN(0x1000);
*(.text.Scene_ray_cast_call)
. = ALIGN(0x1000);
*(.text.BKE_curve_boundbox_calc .text.BKE_curve_texspace_calc)
. = ALIGN(0x1000);
*(.text.BKE_nurb_minmax)
. = ALIGN(0x1000);
*(.text.bvhtree_from_mesh_faces)
. = ALIGN(0x1000);
*(.text.isect_ray_tri_v3)
. = ALIGN(0x1000);
*(.text.BKE_object_where_is_calc_mat4)
. = ALIGN(0x1000);
*(.text.isect_line_line_epsilon_v3)
. = ALIGN(0x1000);
*(.text.snapObjectsRay .text.snapObject .text.snapDerivedMesh .text.snapEdge .text.snapVertex)
. = ALIGN(0x1000);
*(.text.rna_Scene_ray_cast)
. = ALIGN(0x1000);
*(.text.Scene_update_call)
. = ALIGN(0x1000);
*(.text.BKE_scene_update_tagged)
. = ALIGN(0x1000);
*(.text.Scene_frame_set_call)
. = ALIGN(0x1000);
*(.text.Scene_statistics_call)
. = ALIGN(0x1000);
*(.text.ED_info_stats_string .text.stats_object)
. = ALIGN(0x1000);
*(.text.Scene_sequence_editor_clear_call)
. = ALIGN(0x1000);
*(.text.Scene_sequence_editor_create_call)
. = ALIGN(0x1000);
*(.text.Scene_sequencer_colorspace_settings_get)
. = ALIGN(0x1000);
*(.text.Scene_display_settings_get)
. = ALIGN(0x1000);
*(.text.Scene_view_settings_get)
. = ALIGN(0x1000);
*(.text.Scene_active_clip_get)
. = ALIGN(0x1000);
*(.text.Scene_active_clip_set)
. = ALIGN(0x1000);
*(.text.Scene_orientations_begin)
. = ALIGN(0x1000);
*(.text.Scene_orientations_next)
. = ALIGN(0x1000);
*(.text.Scene_orientations_end)
. = ALIGN(0x1000);
*(.text.Scene_orientations_get)
. = ALIGN(0x1000);
*(.text.Scene_orientations_lookup_int)
. = ALIGN(0x1000);
*(.text.Scene_orientations_lookup_string)
. = ALIGN(0x1000);
*(.text.TransformOrientation_name_get)
. = ALIGN(0x1000);
*(.text.TransformOrientation_name_length)
. = ALIGN(0x1000);
*(.text.TransformOrientation_name_set)
. = ALIGN(0x1000);
*(.text.TransformOrientation_matrix_get)
. = ALIGN(0x1000);
*(.text.TransformOrientation_matrix_set)
. = ALIGN(0x1000);
*(.text.TransformOrientation_rna_type_get)
. = ALIGN(0x1000);
*(.text.TransformOrientation_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TransformOrientation_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TransformOrientation_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TransformOrientation_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TransformOrientation_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_sample_max_error_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_sample_max_error_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_sample_dist_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_sample_dist_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_verts_per_poly_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_verts_per_poly_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_edge_max_error_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_edge_max_error_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_edge_max_len_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_edge_max_len_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_region_merge_size_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_region_merge_size_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_region_min_size_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_region_min_size_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_slope_max_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_slope_max_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_climb_max_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_climb_max_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_agent_radius_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_agent_radius_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_agent_height_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_agent_height_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_cell_height_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_cell_height_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_cell_size_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_cell_size_set)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_rna_type_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SceneGameRecastData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SceneGameData_recast_data_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_obstacle_simulation_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_obstacle_simulation_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_level_height_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_level_height_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_obstacle_simulation_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_obstacle_simulation_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_material_caching_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_material_caching_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_glsl_update)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_extra_textures_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_extra_textures_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_color_management_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_color_management_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_nodes_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_nodes_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_ramps_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_ramps_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_shadows_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_shadows_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_shaders_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_shaders_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_lights_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_glsl_lights_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_material_mode_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_material_mode_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_restrict_animation_updates_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_restrict_animation_updates_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_auto_start_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_auto_start_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_animation_record_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_animation_record_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_deprecation_warnings_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_deprecation_warnings_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_display_lists_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_display_lists_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_frame_rate_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_frame_rate_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_mouse_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_mouse_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_physics_visualization_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_physics_visualization_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_framerate_profile_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_framerate_profile_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_debug_properties_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_debug_properties_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_activity_culling_box_radius_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_activity_culling_box_radius_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_activity_culling_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_activity_culling_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_occlusion_culling_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_occlusion_culling_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_deactivation_time_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_deactivation_time_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_deactivation_angular_threshold_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_deactivation_angular_threshold_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_deactivation_linear_threshold_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_deactivation_linear_threshold_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_step_sub_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_step_sub_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_step_max_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_step_max_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_logic_step_max_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_logic_step_max_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_fps_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_fps_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_occlusion_culling_resolution_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_occlusion_culling_resolution_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_gravity_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_gravity_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_engine_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_physics_engine_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_text_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_text_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_tilt_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_tilt_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_angle_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_angle_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_buffer_resolution_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_buffer_resolution_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_tessellation_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_tessellation_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_mode_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_dome_mode_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_stereo_eye_separation_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_stereo_eye_separation_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_stereo_mode_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_stereo_mode_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_stereo_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_stereo_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_frame_color_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_frame_color_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_frame_type_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_frame_type_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_desktop_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_use_desktop_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_fullscreen_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_show_fullscreen_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_frequency_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_frequency_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_raster_storage_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_raster_storage_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_exit_key_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_exit_key_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_depth_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_depth_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_samples_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_samples_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_vsync_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_vsync_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_resolution_y_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_resolution_y_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_resolution_x_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_resolution_x_set)
. = ALIGN(0x1000);
*(.text.SceneGameData_rna_type_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SceneGameData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SceneGameData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SceneGameData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SceneGameData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_display_settings_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_view_settings_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_cineon_gamma_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_cineon_gamma_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_cineon_white_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_cineon_white_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_cineon_black_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_cineon_black_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_use_cineon_log_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_use_cineon_log_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_use_preview_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_use_preview_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_use_zbuffer_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_use_zbuffer_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_compression_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_compression_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_quality_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_quality_set)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_color_depth_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_color_depth_set)
. = ALIGN(0x1000);
*(.text.rna_ImageFormatSettings_color_depth_itemf)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_color_mode_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_color_mode_set)
. = ALIGN(0x1000);
*(.text.rna_ImageFormatSettings_color_mode_itemf)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_file_format_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_file_format_set)
. = ALIGN(0x1000);
*(.text.rna_ImageFormatSettings_file_format_itemf)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ImageFormatSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UnitSettings_use_separate_get)
. = ALIGN(0x1000);
*(.text.UnitSettings_use_separate_set)
. = ALIGN(0x1000);
*(.text.UnitSettings_scale_length_get)
. = ALIGN(0x1000);
*(.text.UnitSettings_scale_length_set)
. = ALIGN(0x1000);
*(.text.UnitSettings_system_rotation_get)
. = ALIGN(0x1000);
*(.text.UnitSettings_system_rotation_set)
. = ALIGN(0x1000);
*(.text.UnitSettings_system_get)
. = ALIGN(0x1000);
*(.text.UnitSettings_system_set)
. = ALIGN(0x1000);
*(.text.UnitSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.UnitSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UnitSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UnitSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UnitSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UnitSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshStatVis_path)
. = ALIGN(0x1000);
*(.text.rna_EditMesh_update)
. = ALIGN(0x1000);
*(.text.MeshStatVis_sharp_max_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_sharp_max_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_sharp_min_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_sharp_min_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_distort_max_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_distort_max_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_distort_min_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_distort_min_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_thickness_samples_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_thickness_samples_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_thickness_max_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_thickness_max_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_thickness_min_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_thickness_min_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_overhang_axis_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_overhang_axis_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_overhang_max_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_overhang_max_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_overhang_min_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_overhang_min_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_type_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_type_set)
. = ALIGN(0x1000);
*(.text.MeshStatVis_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshStatVis_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshStatVis_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshStatVis_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshStatVis_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_UnifiedPaintSettings_path)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_locked_size_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_locked_size_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_pressure_strength_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_pressure_strength_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_pressure_size_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_pressure_size_set)
. = ALIGN(0x1000);
*(.text.rna_UnifiedPaintSettings_update)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_secondary_color_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_secondary_color_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_color_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_color_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_weight_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_weight_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_strength_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_strength_set)
. = ALIGN(0x1000);
*(.text.rna_UnifiedPaintSettings_radius_update)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_unprojected_radius_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_unprojected_radius_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_size_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_size_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_color_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_color_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_weight_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_weight_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_strength_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_strength_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_size_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_use_unified_size_set)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UnifiedPaintSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ToolSettings_path)
. = ALIGN(0x1000);
*(.text.ToolSettings_statvis_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_unified_paint_settings_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_convert_mode_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_convert_mode_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_roll_mode_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_roll_mode_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_length_limit_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_length_limit_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_adaptive_limit_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_adaptive_limit_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_subdivision_number_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_subdivision_number_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_template_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_template_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_side_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_side_length)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_side_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_number_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_number_length)
. = ALIGN(0x1000);
*(.text.ToolSettings_etch_number_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_etch_autoname_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_etch_autoname_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_etch_overdraw_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_etch_overdraw_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_etch_quick_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_etch_quick_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_bone_sketching_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_bone_sketching_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_edge_path_live_unwrap_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_edge_path_live_unwrap_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_edge_path_mode_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_edge_path_mode_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_group_weight_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_group_weight_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_editmesh_select_mode_update)
. = ALIGN(0x1000);
*(.text.ToolSettings_mesh_select_mode_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_mesh_select_mode_set)
. = ALIGN(0x1000);
*(.text.recount_totsels)
. = ALIGN(0x1000);
*(.text.BM_mesh_select_mode_flush_ex)
. = ALIGN(0x1000);
*(.text.BM_edge_select_set)
. = ALIGN(0x1000);
*(.text.BM_face_select_set)
. = ALIGN(0x1000);
*(.text.BM_mesh_select_flush)
. = ALIGN(0x1000);
*(.text.EDBM_selectmode_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_show_uv_local_view_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_show_uv_local_view_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_uv_select_sync_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_uv_select_sync_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_select_mode_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_select_mode_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_keyframe_insert_keyingset_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_keyframe_insert_keyingset_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_record_with_nla_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_record_with_nla_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_auto_keying_mode_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_auto_keying_mode_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_keyframe_insert_auto_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_keyframe_insert_auto_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_grease_pencil_sessions_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_grease_pencil_sessions_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_self_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_self_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_project_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_project_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_peel_object_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_peel_object_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_target_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_target_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_uv_element_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_uv_element_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_node_element_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_node_element_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_element_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_snap_element_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_align_rotation_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_align_rotation_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_snap_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_mesh_automerge_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_mesh_automerge_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_double_threshold_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_double_threshold_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_normal_size_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_normal_size_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_proportional_size_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_proportional_size_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_proportional_edit_falloff_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_proportional_edit_falloff_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_proportional_edit_mask_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_proportional_edit_mask_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_proportional_edit_objects_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_proportional_edit_objects_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_proportional_edit_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_proportional_edit_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_relax_method_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_relax_method_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_tool_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_tool_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_all_islands_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_all_islands_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_lock_borders_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_lock_borders_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceImageEditor_uv_sculpt_update)
. = ALIGN(0x1000);
*(.text.BKE_paint_init)
. = ALIGN(0x1000);
*(.text.ED_space_image_uv_sculpt_update)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_uv_sculpt_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_uv_sculpt_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_particle_edit_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_uv_sculpt_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_image_paint_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_weight_paint_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_paint_get)
. = ALIGN(0x1000);
*(.text.rna_Scene_update_active_object_data)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_group_subset_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_group_subset_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_group_user_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_vertex_group_user_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_multipaint_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_multipaint_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_auto_normalize_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_use_auto_normalize_set)
. = ALIGN(0x1000);
*(.text.ToolSettings_sculpt_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ToolSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ToolSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ToolSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ToolSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_clear_call)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_remove_call)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_new_call)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_rna_type_get)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TimelineMarkers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_active_index_get)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_active_index_set)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_active_get)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_active_set)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyingSetsAll_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyingSets_new_call)
. = ALIGN(0x1000);
*(.text.BKE_keyingset_add)
. = ALIGN(0x1000);
*(.text.KeyingSets_active_index_get)
. = ALIGN(0x1000);
*(.text.KeyingSets_active_index_set)
. = ALIGN(0x1000);
*(.text.KeyingSets_active_get)
. = ALIGN(0x1000);
*(.text.KeyingSets_active_set)
. = ALIGN(0x1000);
*(.text.KeyingSets_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyingSets_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyingSets_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyingSets_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyingSets_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyingSets_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SceneObjects_unlink_call)
. = ALIGN(0x1000);
*(.text.rna_Scene_object_unlink)
. = ALIGN(0x1000);
*(.text.SceneObjects_link_call)
. = ALIGN(0x1000);
*(.text.rna_Scene_object_link)
. = ALIGN(0x1000);
*(.text.SceneObjects_active_get)
. = ALIGN(0x1000);
*(.text.SceneObjects_active_set)
. = ALIGN(0x1000);
*(.text.SceneObjects_rna_type_get)
. = ALIGN(0x1000);
*(.text.SceneObjects_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SceneObjects_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SceneObjects_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SceneObjects_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SceneObjects_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_audio_channels_get)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_audio_channels_set)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_audio_mixrate_get)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_audio_mixrate_set)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FFmpegSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_RenderSettings_path)
. = ALIGN(0x1000);
*(.text.RenderSettings_frame_path_call)
. = ALIGN(0x1000);
*(.text.BLI_path_frame)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_cage_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_cage_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_automatic_name_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_automatic_name_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_split_materials_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_split_materials_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_clear_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_clear_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_selected_to_active_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_use_selected_to_active_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_save_mode_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_save_mode_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_image_settings_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_b_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_b_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_g_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_g_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_r_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_r_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_space_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_normal_space_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_cage_extrusion_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_cage_extrusion_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_margin_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_margin_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_height_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_height_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_width_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_width_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_filepath_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_filepath_length)
. = ALIGN(0x1000);
*(.text.BakeSettings_filepath_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_cage_object_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_cage_object_length)
. = ALIGN(0x1000);
*(.text.BakeSettings_cage_object_set)
. = ALIGN(0x1000);
*(.text.BakeSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BakeSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BakeSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BakeSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BakeSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_SceneRenderLayer_path)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_name_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_name_length)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_name_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_SceneRenderLayer_pass_update)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_material_override_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_material_override_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_light_override_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_light_override_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_layers_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_layers_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_layers_zmask_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_layers_zmask_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_layers_exclude_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_layers_exclude_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_samples_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_samples_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_pass_alpha_threshold_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_pass_alpha_threshold_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_zmask_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_zmask_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_invert_zmask_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_invert_zmask_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_all_z_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_all_z_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_solid_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_solid_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_halo_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_halo_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_ztransp_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_ztransp_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_sky_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_sky_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_edge_enhance_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_edge_enhance_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_strand_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_strand_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_freestyle_update)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_freestyle_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_freestyle_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_combined_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_combined_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_z_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_z_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_vector_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_vector_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_normal_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_normal_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_uv_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_uv_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_mist_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_mist_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_object_index_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_object_index_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_material_index_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_material_index_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_color_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_color_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_specular_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_specular_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_shadow_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_shadow_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_ambient_occlusion_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_ambient_occlusion_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_reflection_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_reflection_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_refraction_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_refraction_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_emit_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_emit_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_environment_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_environment_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_indirect_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_indirect_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_specular_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_specular_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_shadow_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_shadow_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_ambient_occlusion_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_ambient_occlusion_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_reflection_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_reflection_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_refraction_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_refraction_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_emit_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_emit_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_environment_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_environment_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_indirect_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_exclude_indirect_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_direct_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_direct_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_indirect_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_indirect_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_color_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_diffuse_color_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_glossy_direct_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_glossy_direct_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_glossy_indirect_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_glossy_indirect_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_glossy_color_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_glossy_color_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_transmission_direct_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_transmission_direct_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_transmission_indirect_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_transmission_indirect_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_transmission_color_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_transmission_color_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_subsurface_direct_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_subsurface_direct_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_subsurface_indirect_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_subsurface_indirect_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_subsurface_color_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_use_pass_subsurface_color_set)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_freestyle_settings_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_linesets_begin)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_linesets_next)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_linesets_end)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_linesets_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_linesets_lookup_int)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_linesets_lookup_string)
. = ALIGN(0x1000);
*(.text.Linesets_remove_call)
. = ALIGN(0x1000);
*(.text.Linesets_new_call)
. = ALIGN(0x1000);
*(.text.BKE_freestyle_lineset_add)
. = ALIGN(0x1000);
*(.text.Linesets_active_index_get)
. = ALIGN(0x1000);
*(.text.Linesets_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_FreestyleSettings_active_lineset_index_range)
. = ALIGN(0x1000);
*(.text.Linesets_active_get)
. = ALIGN(0x1000);
*(.text.Linesets_rna_type_get)
. = ALIGN(0x1000);
*(.text.Linesets_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Linesets_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Linesets_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Linesets_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Linesets_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_crease_angle_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_crease_angle_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_kr_derivative_epsilon_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_kr_derivative_epsilon_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_sphere_radius_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_sphere_radius_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_use_view_map_cache_update)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_view_map_cache_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_view_map_cache_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_advanced_options_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_advanced_options_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_smoothness_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_smoothness_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_material_boundaries_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_material_boundaries_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_ridges_and_valleys_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_ridges_and_valleys_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_suggestive_contours_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_suggestive_contours_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_culling_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_use_culling_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_mode_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_mode_set)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_modules_begin)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_modules_next)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_modules_end)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_modules_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_modules_lookup_int)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FreestyleSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_use_get)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_use_set)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_script_get)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_script_set)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FreestyleModuleSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FreestyleModules_remove_call)
. = ALIGN(0x1000);
*(.text.FreestyleModules_new_call)
. = ALIGN(0x1000);
*(.text.FreestyleModules_rna_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleModules_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FreestyleModules_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FreestyleModules_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FreestyleModules_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FreestyleModules_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SceneRenderLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_name_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_name_length)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_name_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_linestyle_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_linestyle_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_rna_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_show_render_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_show_render_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_visibility_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_visibility_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_edge_types_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_edge_types_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_group_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_group_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_image_border_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_image_border_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_face_marks_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_by_face_marks_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_edge_type_negation_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_edge_type_negation_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_edge_type_combination_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_edge_type_combination_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_group_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_group_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_group_negation_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_group_negation_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_face_mark_negation_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_face_mark_negation_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_face_mark_condition_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_face_mark_condition_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_silhouette_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_silhouette_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_border_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_border_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_crease_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_crease_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_ridge_valley_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_ridge_valley_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_suggestive_contour_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_suggestive_contour_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_material_boundary_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_material_boundary_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_contour_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_contour_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_external_contour_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_external_contour_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_edge_mark_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_select_edge_mark_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_silhouette_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_silhouette_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_border_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_border_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_crease_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_crease_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_ridge_valley_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_ridge_valley_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_suggestive_contour_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_suggestive_contour_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_material_boundary_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_material_boundary_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_contour_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_contour_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_external_contour_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_external_contour_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_edge_mark_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_exclude_edge_mark_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_visibility_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_visibility_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_qi_start_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_qi_start_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_qi_end_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_qi_end_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineSet_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderSettings_line_thickness_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_line_thickness_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_line_thickness_mode_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_line_thickness_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_use_persistent_data_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_persistent_data_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_persistent_data_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_simplify_triangulate_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_simplify_triangulate_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_simplify_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_ao_sss_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_ao_sss_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_shadow_samples_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_shadow_samples_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_child_particles_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_child_particles_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_subdivision_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_simplify_subdivision_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_use_simplify_update)
. = ALIGN(0x1000);
*(.text.object_simplify_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_simplify_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_simplify_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_game_engine_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_shading_nodes_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_has_multiple_engines_get)
. = ALIGN(0x1000);
*(.text.rna_RenderSettings_engine_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_engine_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_engine_set)
. = ALIGN(0x1000);
*(.text.rna_RenderSettings_engine_itemf)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_single_layer_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_single_layer_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_layers_begin)
. = ALIGN(0x1000);
*(.text.RenderSettings_layers_next)
. = ALIGN(0x1000);
*(.text.RenderSettings_layers_end)
. = ALIGN(0x1000);
*(.text.RenderSettings_layers_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_layers_lookup_int)
. = ALIGN(0x1000);
*(.text.RenderSettings_layers_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_SceneSequencer_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sequencer_gl_textured_solid_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sequencer_gl_textured_solid_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_sequencer_gl_render_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_sequencer_gl_render_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_sequencer_gl_preview_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_sequencer_gl_preview_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sequencer_gl_preview_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sequencer_gl_preview_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_background_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_background_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_foreground_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_foreground_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_font_size_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_font_size_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_note_text_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_note_text_length)
. = ALIGN(0x1000);
*(.text.RenderSettings_stamp_note_text_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_render_time_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_render_time_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_sequencer_strip_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_sequencer_strip_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_filename_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_filename_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_marker_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_marker_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_note_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_note_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_scene_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_scene_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_lens_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_lens_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_camera_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_camera_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_frame_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_frame_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_date_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_date_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_time_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_stamp_time_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_user_scale_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_user_scale_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_user_scale_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_user_scale_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_to_vertex_color_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_to_vertex_color_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_samples_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_samples_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_lores_mesh_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_lores_mesh_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_multires_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_multires_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_bias_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_bias_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_distance_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_distance_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_margin_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_margin_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_antialiasing_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_antialiasing_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_clear_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_clear_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_normalize_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_normalize_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_selected_to_active_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_bake_selected_to_active_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_aa_mode_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_aa_mode_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_quad_split_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_quad_split_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_normal_space_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_normal_space_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_type_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_bake_type_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_render_cache_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_render_cache_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_filepath_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_filepath_length)
. = ALIGN(0x1000);
*(.text.RenderSettings_filepath_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_lock_interface_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_lock_interface_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_display_mode_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_display_mode_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_full_sample_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_full_sample_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_save_buffers_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_save_buffers_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_free_unused_nodes_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_free_unused_nodes_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_free_image_textures_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_free_image_textures_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_is_movie_format_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_file_extension_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_file_extension_length)
. = ALIGN(0x1000);
*(.text.do_add_image_extension)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_file_extension_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_file_extension_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sequencer_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sequencer_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_compositing_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_compositing_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_overwrite_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_overwrite_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_placeholder_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_placeholder_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_crop_to_border_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_crop_to_border_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_max_y_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_max_y_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_max_x_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_max_x_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_min_y_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_min_y_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_min_x_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_border_min_x_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_border_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_border_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_motion_blur_shutter_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_motion_blur_shutter_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_motion_blur_samples_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_motion_blur_samples_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_motion_blur_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_motion_blur_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_threads_mode_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_threads_mode_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_threads_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_threads_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_freestyle_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_freestyle_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_edge_color_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_edge_color_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_edge_threshold_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_edge_threshold_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_edge_enhance_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_edge_enhance_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_textures_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_textures_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_raytrace_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_raytrace_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sss_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_sss_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_envmaps_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_envmaps_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_shadows_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_shadows_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_fields_still_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_fields_still_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_field_order_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_field_order_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_fields_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_fields_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_antialiasing_samples_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_antialiasing_samples_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_antialiasing_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_antialiasing_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_local_coords_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_local_coords_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_instances_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_use_instances_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_raytrace_method_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_raytrace_method_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_octree_resolution_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_octree_resolution_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_filter_size_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_filter_size_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_pixel_filter_type_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_pixel_filter_type_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_dither_intensity_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_dither_intensity_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_framelen_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_frame_map_new_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_frame_map_new_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_frame_map_old_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_frame_map_old_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_fps_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_fps_base_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_fps_base_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_fps_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_fps_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_ffmpeg_get)
. = ALIGN(0x1000);
*(.text.rna_SceneCamera_update)
. = ALIGN(0x1000);
*(.text.RenderSettings_pixel_aspect_y_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_pixel_aspect_y_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_pixel_aspect_x_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_pixel_aspect_x_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_preview_start_resolution_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_preview_start_resolution_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_tile_y_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_tile_y_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_tile_x_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_tile_x_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_resolution_percentage_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_resolution_percentage_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_resolution_y_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_resolution_y_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_resolution_x_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_resolution_x_set)
. = ALIGN(0x1000);
*(.text.RenderSettings_image_settings_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderLayers_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_scene_remove_render_layer)
. = ALIGN(0x1000);
*(.text.RenderLayers_new_call)
. = ALIGN(0x1000);
*(.text.RenderLayers_active_get)
. = ALIGN(0x1000);
*(.text.RenderLayers_active_set)
. = ALIGN(0x1000);
*(.text.RenderLayers_active_index_get)
. = ALIGN(0x1000);
*(.text.RenderLayers_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_RenderSettings_active_layer_index_range)
. = ALIGN(0x1000);
*(.text.RenderLayers_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderLayers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderLayers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderLayers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderLayers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderLayers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Scene_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.Scene_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.Scene_game_settings_get)
. = ALIGN(0x1000);
*(.text.Scene_audio_volume_get)
. = ALIGN(0x1000);
*(.text.Scene_audio_volume_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_listener_update)
. = ALIGN(0x1000);
*(.text.Scene_audio_distance_model_get)
. = ALIGN(0x1000);
*(.text.Scene_audio_distance_model_set)
. = ALIGN(0x1000);
*(.text.Scene_audio_doppler_factor_get)
. = ALIGN(0x1000);
*(.text.Scene_audio_doppler_factor_set)
. = ALIGN(0x1000);
*(.text.Scene_audio_doppler_speed_get)
. = ALIGN(0x1000);
*(.text.Scene_audio_doppler_speed_set)
. = ALIGN(0x1000);
*(.text.Scene_use_audio_scrub_get)
. = ALIGN(0x1000);
*(.text.Scene_use_audio_scrub_set)
. = ALIGN(0x1000);
*(.text.Scene_use_audio_sync_get)
. = ALIGN(0x1000);
*(.text.Scene_use_audio_sync_set)
. = ALIGN(0x1000);
*(.text.Scene_use_audio_get)
. = ALIGN(0x1000);
*(.text.Scene_use_audio_set)
. = ALIGN(0x1000);
*(.text.Scene_timeline_markers_begin)
. = ALIGN(0x1000);
*(.text.Scene_timeline_markers_next)
. = ALIGN(0x1000);
*(.text.Scene_timeline_markers_end)
. = ALIGN(0x1000);
*(.text.Scene_timeline_markers_get)
. = ALIGN(0x1000);
*(.text.Scene_timeline_markers_lookup_int)
. = ALIGN(0x1000);
*(.text.Scene_timeline_markers_lookup_string)
. = ALIGN(0x1000);
*(.text.Scene_render_get)
. = ALIGN(0x1000);
*(.text.rna_Physics_update)
. = ALIGN(0x1000);
*(.text.Scene_use_gravity_get)
. = ALIGN(0x1000);
*(.text.Scene_use_gravity_set)
. = ALIGN(0x1000);
*(.text.Scene_gravity_get)
. = ALIGN(0x1000);
*(.text.Scene_gravity_set)
. = ALIGN(0x1000);
*(.text.Scene_unit_settings_get)
. = ALIGN(0x1000);
*(.text.Scene_tool_settings_get)
. = ALIGN(0x1000);
*(.text.Scene_rigidbody_world_get)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_all_begin)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_all_next)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_all_end)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_all_get)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_begin)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_next)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_end)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_get)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_lookup_int)
. = ALIGN(0x1000);
*(.text.Scene_keying_sets_lookup_string)
. = ALIGN(0x1000);
*(.text.Scene_sequence_editor_get)
. = ALIGN(0x1000);
*(.text.ED_node_composit_default .text.rna_Scene_use_nodes_update)
. = ALIGN(0x1000);
*(.text.Scene_use_nodes_get)
. = ALIGN(0x1000);
*(.text.Scene_use_nodes_set)
. = ALIGN(0x1000);
*(.text.Scene_node_tree_get)
. = ALIGN(0x1000);
*(.text.Scene_sync_mode_get)
. = ALIGN(0x1000);
*(.text.Scene_sync_mode_set)
. = ALIGN(0x1000);
*(.text.Scene_use_frame_drop_get)
. = ALIGN(0x1000);
*(.text.Scene_use_frame_drop_set)
. = ALIGN(0x1000);
*(.text.Scene_is_nla_tweakmode_get)
. = ALIGN(0x1000);
*(.text.Scene_animation_data_get)
. = ALIGN(0x1000);
*(.text.Scene_use_stamp_note_get)
. = ALIGN(0x1000);
*(.text.Scene_use_stamp_note_length)
. = ALIGN(0x1000);
*(.text.Scene_use_stamp_note_set)
. = ALIGN(0x1000);
*(.text.Scene_show_keys_from_selected_only_get)
. = ALIGN(0x1000);
*(.text.Scene_show_keys_from_selected_only_set)
. = ALIGN(0x1000);
*(.text.Scene_frame_preview_end_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_preview_end_set)
. = ALIGN(0x1000);
*(.text.Scene_frame_preview_start_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_preview_start_set)
. = ALIGN(0x1000);
*(.text.Scene_use_preview_range_get)
. = ALIGN(0x1000);
*(.text.Scene_use_preview_range_set)
. = ALIGN(0x1000);
*(.text.Scene_lock_frame_selection_to_range_get)
. = ALIGN(0x1000);
*(.text.Scene_lock_frame_selection_to_range_set)
. = ALIGN(0x1000);
*(.text.Scene_frame_current_final_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_step_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_step_set)
. = ALIGN(0x1000);
*(.text.Scene_frame_end_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_end_set)
. = ALIGN(0x1000);
*(.text.Scene_frame_start_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_start_set)
. = ALIGN(0x1000);
*(.text.Scene_frame_subframe_get)
. = ALIGN(0x1000);
*(.text.rna_Scene_frame_update)
. = ALIGN(0x1000);
*(.text.Scene_frame_current_get)
. = ALIGN(0x1000);
*(.text.Scene_frame_current_set)
. = ALIGN(0x1000);
*(.text.Scene_active_layer_get)
. = ALIGN(0x1000);
*(.text.rna_Scene_layer_update)
. = ALIGN(0x1000);
*(.text.Scene_layers_get)
. = ALIGN(0x1000);
*(.text.Scene_layers_set)
. = ALIGN(0x1000);
*(.text.Scene_objects_begin)
. = ALIGN(0x1000);
*(.text.Scene_objects_next)
. = ALIGN(0x1000);
*(.text.Scene_objects_end)
. = ALIGN(0x1000);
*(.text.Scene_objects_get)
. = ALIGN(0x1000);
*(.text.Scene_objects_lookup_int)
. = ALIGN(0x1000);
*(.text.Scene_objects_lookup_string)
. = ALIGN(0x1000);
*(.text.Scene_object_bases_begin)
. = ALIGN(0x1000);
*(.text.Scene_object_bases_next)
. = ALIGN(0x1000);
*(.text.Scene_object_bases_end)
. = ALIGN(0x1000);
*(.text.Scene_object_bases_get)
. = ALIGN(0x1000);
*(.text.Scene_object_bases_lookup_int)
. = ALIGN(0x1000);
*(.text.Scene_object_bases_lookup_string)
. = ALIGN(0x1000);
*(.text.Scene_cursor_location_get)
. = ALIGN(0x1000);
*(.text.Scene_cursor_location_set)
. = ALIGN(0x1000);
*(.text.Scene_world_get)
. = ALIGN(0x1000);
*(.text.Scene_world_set)
. = ALIGN(0x1000);
*(.text.Scene_background_set_get)
. = ALIGN(0x1000);
*(.text.Scene_background_set_set)
. = ALIGN(0x1000);
*(.text.rna_Scene_view3d_update)
. = ALIGN(0x1000);
*(.text.Scene_camera_get)
. = ALIGN(0x1000);
*(.text.Scene_camera_set)
. = ALIGN(0x1000);
*(.text.SceneBases_active_get)
. = ALIGN(0x1000);
*(.text.SceneBases_active_set)
. = ALIGN(0x1000);
*(.text.SceneBases_rna_type_get)
. = ALIGN(0x1000);
*(.text.SceneBases_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SceneBases_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SceneBases_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SceneBases_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SceneBases_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Screen_areas_begin)
. = ALIGN(0x1000);
*(.text.Screen_areas_next)
. = ALIGN(0x1000);
*(.text.Screen_areas_end)
. = ALIGN(0x1000);
*(.text.Screen_areas_get)
. = ALIGN(0x1000);
*(.text.Screen_areas_lookup_int)
. = ALIGN(0x1000);
*(.text.Area_header_text_set_call)
. = ALIGN(0x1000);
*(.text.ED_area_headerprint)
. = ALIGN(0x1000);
*(.text.Area_tag_redraw_call)
. = ALIGN(0x1000);
*(.text.Area_height_get)
. = ALIGN(0x1000);
*(.text.Area_width_get)
. = ALIGN(0x1000);
*(.text.Area_y_get)
. = ALIGN(0x1000);
*(.text.Area_x_get)
. = ALIGN(0x1000);
*(.text.rna_Area_type_update)
. = ALIGN(0x1000);
*(.text.Area_type_get)
. = ALIGN(0x1000);
*(.text.Area_type_set)
. = ALIGN(0x1000);
*(.text.rna_Area_type_itemf)
. = ALIGN(0x1000);
*(.text.Area_show_menus_get)
. = ALIGN(0x1000);
*(.text.Area_show_menus_set)
. = ALIGN(0x1000);
*(.text.Area_regions_begin)
. = ALIGN(0x1000);
*(.text.Area_regions_next)
. = ALIGN(0x1000);
*(.text.Area_regions_end)
. = ALIGN(0x1000);
*(.text.Area_regions_get)
. = ALIGN(0x1000);
*(.text.Area_regions_lookup_int)
. = ALIGN(0x1000);
*(.text.Region_tag_redraw_call)
. = ALIGN(0x1000);
*(.text.Region_view2d_get)
. = ALIGN(0x1000);
*(.text.Region_height_get)
. = ALIGN(0x1000);
*(.text.Region_width_get)
. = ALIGN(0x1000);
*(.text.Region_y_get)
. = ALIGN(0x1000);
*(.text.Region_x_get)
. = ALIGN(0x1000);
*(.text.Region_type_get)
. = ALIGN(0x1000);
*(.text.Region_id_get)
. = ALIGN(0x1000);
*(.text.Region_rna_type_get)
. = ALIGN(0x1000);
*(.text.Region_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Region_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Region_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Region_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Region_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.View2D_view_to_region_call)
. = ALIGN(0x1000);
*(.text.View2D_region_to_view_call)
. = ALIGN(0x1000);
*(.text.View2D_rna_type_get)
. = ALIGN(0x1000);
*(.text.View2D_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.View2D_rna_properties_next)
. = ALIGN(0x1000);
*(.text.View2D_rna_properties_end)
. = ALIGN(0x1000);
*(.text.View2D_rna_properties_get)
. = ALIGN(0x1000);
*(.text.View2D_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Area_spaces_begin)
. = ALIGN(0x1000);
*(.text.Area_spaces_next)
. = ALIGN(0x1000);
*(.text.Area_spaces_end)
. = ALIGN(0x1000);
*(.text.Area_spaces_get)
. = ALIGN(0x1000);
*(.text.Area_spaces_lookup_int)
. = ALIGN(0x1000);
*(.text.Area_rna_type_get)
. = ALIGN(0x1000);
*(.text.Area_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Area_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Area_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Area_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Area_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Screen_redraw_update)
. = ALIGN(0x1000);
*(.text.Screen_use_play_clip_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_clip_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_node_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_node_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_sequence_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_sequence_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_image_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_image_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_properties_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_properties_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_animation_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_animation_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_3d_editors_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_3d_editors_set)
. = ALIGN(0x1000);
*(.text.Screen_use_play_top_left_3d_editor_get)
. = ALIGN(0x1000);
*(.text.Screen_use_play_top_left_3d_editor_set)
. = ALIGN(0x1000);
*(.text.Screen_show_fullscreen_get)
. = ALIGN(0x1000);
*(.text.AreaSpaces_active_get)
. = ALIGN(0x1000);
*(.text.AreaSpaces_rna_type_get)
. = ALIGN(0x1000);
*(.text.AreaSpaces_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AreaSpaces_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AreaSpaces_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Histogram_rna_type_get)
. = ALIGN(0x1000);
*(.text.Histogram_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Histogram_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Histogram_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Histogram_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Histogram_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Scopes_vectorscope_alpha_get)
. = ALIGN(0x1000);
*(.text.Scopes_vectorscope_alpha_set)
. = ALIGN(0x1000);
*(.text.Scopes_waveform_alpha_get)
. = ALIGN(0x1000);
*(.text.Scopes_waveform_alpha_set)
. = ALIGN(0x1000);
*(.text.rna_Scopes_update)
. = ALIGN(0x1000);
*(.text.Scopes_waveform_mode_get)
. = ALIGN(0x1000);
*(.text.Scopes_waveform_mode_set)
. = ALIGN(0x1000);
*(.text.Scopes_histogram_get)
. = ALIGN(0x1000);
*(.text.Scopes_accuracy_get)
. = ALIGN(0x1000);
*(.text.Scopes_accuracy_set)
. = ALIGN(0x1000);
*(.text.Scopes_use_full_resolution_get)
. = ALIGN(0x1000);
*(.text.Scopes_use_full_resolution_set)
. = ALIGN(0x1000);
*(.text.Scopes_rna_type_get)
. = ALIGN(0x1000);
*(.text.Scopes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Scopes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Scopes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Scopes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Scopes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedDisplaySettings_path)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedDisplaySettings_display_device_update .text.IMB_colormanagement_validate_settings)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_display_device_get)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_display_device_set)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedDisplaySettings_display_device_itemf)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorManagedDisplaySettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedViewSettings_path)
. = ALIGN(0x1000);
*(.text.rna_ColorManagement_update)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_use_curve_mapping_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_use_curve_mapping_set)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_curve_mapping_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_gamma_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_gamma_set)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_exposure_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_exposure_set)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_view_transform_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_view_transform_set)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedViewSettings_view_transform_itemf)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_look_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_look_set)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedViewSettings_look_itemf)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorManagedViewSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedInputColorspaceSettings_path)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedColorspaceSettings_reload_update)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_name_get)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_name_set)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedColorspaceSettings_colorspace_itemf)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorManagedInputColorspaceSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ColorManagedSequencerColorspaceSettings_path)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_name_get)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_name_set)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorManagedSequencerColorspaceSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Constraint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Constraint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Constraint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Constraint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Constraint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Constraint_rna_type_get)
. = ALIGN(0x1000);
*(.text.Constraint_name_get)
. = ALIGN(0x1000);
*(.text.Constraint_name_length)
. = ALIGN(0x1000);
*(.text.Constraint_name_set)
. = ALIGN(0x1000);
*(.text.Constraint_type_get)
. = ALIGN(0x1000);
*(.text.Constraint_owner_space_get)
. = ALIGN(0x1000);
*(.text.Constraint_owner_space_set)
. = ALIGN(0x1000);
*(.text.rna_Constraint_owner_space_itemf)
. = ALIGN(0x1000);
*(.text.Constraint_target_space_get)
. = ALIGN(0x1000);
*(.text.Constraint_target_space_set)
. = ALIGN(0x1000);
*(.text.rna_Constraint_target_space_itemf)
. = ALIGN(0x1000);
*(.text.Constraint_mute_get)
. = ALIGN(0x1000);
*(.text.Constraint_mute_set)
. = ALIGN(0x1000);
*(.text.Constraint_show_expanded_get)
. = ALIGN(0x1000);
*(.text.Constraint_show_expanded_set)
. = ALIGN(0x1000);
*(.text.Constraint_is_valid_get)
. = ALIGN(0x1000);
*(.text.Constraint_active_get)
. = ALIGN(0x1000);
*(.text.Constraint_active_set)
. = ALIGN(0x1000);
*(.text.Constraint_is_proxy_local_get)
. = ALIGN(0x1000);
*(.text.Constraint_is_proxy_local_set)
. = ALIGN(0x1000);
*(.text.rna_Constraint_influence_update)
. = ALIGN(0x1000);
*(.text.Constraint_influence_get)
. = ALIGN(0x1000);
*(.text.Constraint_influence_set)
. = ALIGN(0x1000);
*(.text.Constraint_error_location_get)
. = ALIGN(0x1000);
*(.text.Constraint_error_rotation_get)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_Constraint_dependency_update)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_target_get)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_target_set)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_subtarget_get)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_subtarget_length)
. = ALIGN(0x1000);
*(.text.ConstraintTarget_subtarget_set)
. = ALIGN(0x1000);
*(.text.PythonConstraint_targets_begin)
. = ALIGN(0x1000);
*(.text.PythonConstraint_targets_next)
. = ALIGN(0x1000);
*(.text.PythonConstraint_targets_end)
. = ALIGN(0x1000);
*(.text.PythonConstraint_targets_get)
. = ALIGN(0x1000);
*(.text.PythonConstraint_targets_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_ConstraintType_refine)
. = ALIGN(0x1000);
*(.text.rna_Constraint_path)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_camera_get)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_camera_set)
. = ALIGN(0x1000);
*(.text.rna_Constraint_cameraObject_poll)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_object_get)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_object_length)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_object_set)
. = ALIGN(0x1000);
*(.text.rna_Constraint_update)
. = ALIGN(0x1000);
*(.text.ED_object_constraint_update)
. = ALIGN(0x1000);
*(.text.test_constraints)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_use_active_clip_get)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_use_active_clip_set)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_clip_get)
. = ALIGN(0x1000);
*(.text.ObjectSolverConstraint_clip_set)
. = ALIGN(0x1000);
*(.text.CameraSolverConstraint_use_active_clip_get)
. = ALIGN(0x1000);
*(.text.CameraSolverConstraint_use_active_clip_set)
. = ALIGN(0x1000);
*(.text.CameraSolverConstraint_clip_get)
. = ALIGN(0x1000);
*(.text.CameraSolverConstraint_clip_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_use_undistorted_position_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_use_undistorted_position_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_frame_method_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_frame_method_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_depth_object_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_depth_object_set)
. = ALIGN(0x1000);
*(.text.rna_Constraint_followTrack_depthObject_poll)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_camera_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_camera_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_object_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_object_length)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_object_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_use_3d_position_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_use_3d_position_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_use_active_clip_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_use_active_clip_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_track_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_track_length)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_track_set)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_clip_get)
. = ALIGN(0x1000);
*(.text.FollowTrackConstraint_clip_set)
. = ALIGN(0x1000);
*(.text.PivotConstraint_rotation_range_get)
. = ALIGN(0x1000);
*(.text.PivotConstraint_rotation_range_set)
. = ALIGN(0x1000);
*(.text.PivotConstraint_offset_get)
. = ALIGN(0x1000);
*(.text.PivotConstraint_offset_set)
. = ALIGN(0x1000);
*(.text.PivotConstraint_use_relative_location_get)
. = ALIGN(0x1000);
*(.text.PivotConstraint_use_relative_location_set)
. = ALIGN(0x1000);
*(.text.PivotConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.PivotConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.PivotConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.PivotConstraint_target_get)
. = ALIGN(0x1000);
*(.text.PivotConstraint_target_set)
. = ALIGN(0x1000);
*(.text.PivotConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.PivotConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.MaintainVolumeConstraint_volume_get)
. = ALIGN(0x1000);
*(.text.MaintainVolumeConstraint_volume_set)
. = ALIGN(0x1000);
*(.text.MaintainVolumeConstraint_free_axis_get)
. = ALIGN(0x1000);
*(.text.MaintainVolumeConstraint_free_axis_set)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_target_get)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_target_set)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.CopyTransformsConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_xz_scale_mode_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_xz_scale_mode_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_curve_radius_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_curve_radius_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_y_stretch_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_y_stretch_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_even_divisions_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_even_divisions_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_chain_offset_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_use_chain_offset_set)
. = ALIGN(0x1000);
*(.text.rna_SplineIKConstraint_joint_bindings_get_length)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_joint_bindings_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_joint_bindings_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_chain_count_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_chain_count_set)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_target_get)
. = ALIGN(0x1000);
*(.text.SplineIKConstraint_target_set)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_track_axis_get)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_track_axis_set)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_target_get)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_target_set)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.DampedTrackConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_project_limit_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_project_limit_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_project_axis_space_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_project_axis_space_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_project_axis_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_project_axis_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_distance_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_distance_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_shrinkwrap_type_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_shrinkwrap_type_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_target_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapConstraint_target_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_z_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_z_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_y_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_y_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_x_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_x_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_z_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_z_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_y_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_y_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_x_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_x_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_z_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_z_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_y_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_y_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_x_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_x_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_z_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_z_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_y_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_y_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_x_scale_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_x_scale_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_z_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_z_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_y_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_y_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_x_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_x_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_z_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_z_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_y_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_y_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_x_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_x_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_z_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_z_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_y_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_y_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_x_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_x_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_z_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_z_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_y_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_y_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_x_rot_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_x_rot_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_z_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_z_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_y_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_y_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_x_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_max_x_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_z_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_z_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_y_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_y_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_x_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_to_min_x_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_z_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_z_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_y_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_y_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_x_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_max_x_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_z_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_z_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_y_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_y_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_x_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_from_min_x_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_use_motion_extrapolate_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_use_motion_extrapolate_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_z_from_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_z_from_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_y_from_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_y_from_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_x_from_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_x_from_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_to_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_from_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_map_from_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.TransformConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.TransformConstraint_target_get)
. = ALIGN(0x1000);
*(.text.TransformConstraint_target_set)
. = ALIGN(0x1000);
*(.text.ClampToConstraint_use_cyclic_get)
. = ALIGN(0x1000);
*(.text.ClampToConstraint_use_cyclic_set)
. = ALIGN(0x1000);
*(.text.ClampToConstraint_main_axis_get)
. = ALIGN(0x1000);
*(.text.ClampToConstraint_main_axis_set)
. = ALIGN(0x1000);
*(.text.ClampToConstraint_target_get)
. = ALIGN(0x1000);
*(.text.ClampToConstraint_target_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_angular_limit_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_angular_limit_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_angular_limit_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_angular_limit_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_angular_limit_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_angular_limit_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_limit_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_limit_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_limit_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_limit_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_limit_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_limit_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_max_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_max_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_max_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_max_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_max_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_max_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_min_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_min_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_min_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_min_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_min_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_angle_min_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_max_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_max_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_max_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_max_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_max_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_max_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_min_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_min_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_min_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_min_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_min_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_limit_min_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_show_pivot_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_show_pivot_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_linked_collision_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_use_linked_collision_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_axis_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_axis_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_axis_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_axis_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_axis_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_axis_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_z_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_z_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_y_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_y_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_x_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_x_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_type_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_pivot_type_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_child_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_child_set)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_target_get)
. = ALIGN(0x1000);
*(.text.RigidBodyJointConstraint_target_set)
. = ALIGN(0x1000);
*(.text.FloorConstraint_offset_get)
. = ALIGN(0x1000);
*(.text.FloorConstraint_offset_set)
. = ALIGN(0x1000);
*(.text.FloorConstraint_use_rotation_get)
. = ALIGN(0x1000);
*(.text.FloorConstraint_use_rotation_set)
. = ALIGN(0x1000);
*(.text.FloorConstraint_use_sticky_get)
. = ALIGN(0x1000);
*(.text.FloorConstraint_use_sticky_set)
. = ALIGN(0x1000);
*(.text.FloorConstraint_floor_location_get)
. = ALIGN(0x1000);
*(.text.FloorConstraint_floor_location_set)
. = ALIGN(0x1000);
*(.text.FloorConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.FloorConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.FloorConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.FloorConstraint_target_get)
. = ALIGN(0x1000);
*(.text.FloorConstraint_target_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_smooth_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_smooth_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_max_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_max_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_min_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_min_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_use_bulge_max_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_use_bulge_max_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_use_bulge_min_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_use_bulge_min_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_bulge_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_rest_length_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_rest_length_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_keep_axis_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_keep_axis_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_volume_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_volume_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_target_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_target_set)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.StretchToConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_use_transform_limit_get)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_use_transform_limit_set)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_limit_mode_get)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_limit_mode_set)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_distance_get)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_distance_set)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_target_get)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_target_set)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.LimitDistanceConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_lock_axis_get)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_lock_axis_set)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_track_axis_get)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_track_axis_set)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_target_get)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_target_set)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_head_tail_get)
. = ALIGN(0x1000);
*(.text.LockedTrackConstraint_head_tail_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_min_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_min_set)
. = ALIGN(0x1000);
*(.text.rna_ActionConstraint_minmax_range)
. = ALIGN(0x1000);
*(.text.ActionConstraint_max_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_max_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_frame_end_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_frame_end_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_frame_start_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_frame_start_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_use_bone_object_action_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_use_bone_object_action_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_action_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_action_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_transform_channel_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_transform_channel_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_subtarget_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_subtarget_length)
. = ALIGN(0x1000);
*(.text.ActionConstraint_subtarget_set)
. = ALIGN(0x1000);
*(.text.ActionConstraint_target_get)
. = ALIGN(0x1000);
*(.text.ActionConstraint_target_set)
. = ALIGN(0x1000);
*(.text.PythonConstraint_has_script_error_get)
. = ALIGN(0x1000);
*(.text.PythonConstraint_use_targets_get)
. = ALIGN(0x1000);
*(.text.PythonConstraint_use_targets_set)
. = ALIGN(0x1000);
*(.text.PythonConstraint_text_get)
. = ALIGN(0x1000);
*(.text.PythonConstraint_text_set)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_offset_get)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_offset_set)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_z_get)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_z_set)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_y_get)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_y_set)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_x_get)
. = ALIGN(0x1000);
*(.text.CopyScaleConstraint_use_x_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_sensitivity_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_sensitivity_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_tweak_threshold_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_tweak_threshold_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_drag_threshold_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_drag_threshold_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_walk_navigation_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_navigation_mode_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_navigation_mode_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_mouse_continuous_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_mouse_continuous_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_view_rotate_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_view_rotate_method_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_invert_mouse_zoom_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_invert_mouse_zoom_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_view_zoom_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_view_zoom_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_view_zoom_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_view_zoom_method_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_select_mouse_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_select_mouse_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_particle_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_particle_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_action_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_action_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_fcurve_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_fcurve_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_texture_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_texture_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_material_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_material_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_lamp_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_lamp_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_armature_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_armature_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_metaball_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_metaball_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_text_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_text_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_curve_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_curve_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_surface_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_surface_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_mesh_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_duplicate_mesh_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_sculpt_paint_overlay_color_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_sculpt_paint_overlay_color_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_default_color_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_default_color_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_eraser_radius_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_eraser_radius_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_grease_pencil_simplify_stroke_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_grease_pencil_simplify_stroke_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_grease_pencil_smooth_stroke_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_grease_pencil_smooth_stroke_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_euclidean_distance_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_euclidean_distance_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_manhattan_distance_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_grease_pencil_manhattan_distance_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_fcurve_unselected_alpha_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_fcurve_unselected_alpha_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_negative_frames_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_negative_frames_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_keyframe_new_handle_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_keyframe_new_handle_type_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_keyframe_new_interpolation_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_keyframe_new_interpolation_type_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_insertkey_xyz_to_rgb_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_insertkey_xyz_to_rgb_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_visual_keying_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_visual_keying_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_keyframe_insert_needed_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_keyframe_insert_needed_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_auto_keying_warning_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_auto_keying_warning_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_keyframe_insert_available_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_keyframe_insert_available_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_auto_keying_mode_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_auto_keying_mode_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_auto_keying_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_auto_keying_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_global_undo_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_global_undo_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_undo_memory_limit_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_undo_memory_limit_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_undo_steps_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_undo_steps_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_drag_immediately_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_drag_immediately_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_enter_edit_mode_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_use_enter_edit_mode_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_object_align_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_object_align_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_material_link_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_material_link_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesEdit_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_timecode_style_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_timecode_style_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_view2d_grid_spacing_min_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_view2d_grid_spacing_min_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_object_origin_size_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_object_origin_size_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_manipulator_hotspot_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_manipulator_hotspot_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_manipulator_handle_size_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_manipulator_handle_size_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_manipulator_size_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_manipulator_size_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_show_manipulator_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_manipulator_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_manipulator_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rotation_angle_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rotation_angle_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_smooth_view_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_smooth_view_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_mini_axis_brightness_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_mini_axis_brightness_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_mini_axis_size_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_mini_axis_size_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_mini_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_mini_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_rotate_around_active_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_rotate_around_active_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_auto_perspective_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_auto_perspective_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_zoom_to_mouse_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_zoom_to_mouse_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_camera_lock_parent_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_camera_lock_parent_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_mouse_depth_cursor_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_mouse_depth_cursor_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_mouse_depth_navigate_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_mouse_depth_navigate_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_global_pivot_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_global_pivot_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_directional_menus_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_directional_menus_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_column_layout_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_column_layout_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_right_mouse_delay_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_right_mouse_delay_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_left_mouse_delay_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_left_mouse_delay_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_quit_dialog_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_quit_dialog_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_menu_confirm_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_menu_confirm_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_menu_threshold_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_menu_threshold_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_menu_radius_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_menu_radius_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_animation_timeout_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_animation_timeout_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_initial_timeout_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_pie_initial_timeout_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_sublevel_delay_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_sublevel_delay_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_toplevel_delay_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_open_toplevel_delay_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_mouse_over_open_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_mouse_over_open_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_playback_fps_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_playback_fps_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_splash_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_splash_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_view_name_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_view_name_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_large_cursors_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_large_cursors_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_global_scene_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_use_global_scene_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_object_info_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_object_info_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_tooltips_python_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_tooltips_python_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_tooltips_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_show_tooltips_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesView_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_remove_call)
. = ALIGN(0x1000);
*(.text.PathCompare_path_get)
. = ALIGN(0x1000);
*(.text.PathCompare_path_length)
. = ALIGN(0x1000);
*(.text.PathCompare_path_set)
. = ALIGN(0x1000);
*(.text.PathCompare_rna_type_get)
. = ALIGN(0x1000);
*(.text.PathCompare_use_glob_get)
. = ALIGN(0x1000);
*(.text.PathCompare_use_glob_set)
. = ALIGN(0x1000);
*(.text.PathCompare_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PathCompare_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PathCompare_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PathCompare_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PathCompare_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_AddonPref_refine)
. = ALIGN(0x1000);
*(.text.rna_AddonPref_register)
. = ALIGN(0x1000);
*(.text.rna_AddonPref_unregister)
. = ALIGN(0x1000);
*(.text.rna_AddonPref_idprops)
. = ALIGN(0x1000);
*(.text.AddonPreferences_bl_idname_get)
. = ALIGN(0x1000);
*(.text.AddonPreferences_bl_idname_length)
. = ALIGN(0x1000);
*(.text.AddonPreferences_bl_idname_set)
. = ALIGN(0x1000);
*(.text.AddonPreferences_rna_type_get)
. = ALIGN(0x1000);
*(.text.AddonPreferences_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.AddonPreferences_rna_properties_next)
. = ALIGN(0x1000);
*(.text.AddonPreferences_rna_properties_end)
. = ALIGN(0x1000);
*(.text.AddonPreferences_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AddonPreferences_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_new_call)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_rna_type_get)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PathCompareCollection_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Addon_module_get)
. = ALIGN(0x1000);
*(.text.Addon_module_length)
. = ALIGN(0x1000);
*(.text.Addon_module_set)
. = ALIGN(0x1000);
*(.text.Addon_rna_type_get)
. = ALIGN(0x1000);
*(.text.Addon_preferences_get)
. = ALIGN(0x1000);
*(.text.Addon_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Addon_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Addon_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Addon_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Addon_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferences_filepaths_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_inputs_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_edit_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_view_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_autoexec_paths_begin)
. = ALIGN(0x1000);
*(.text.UserPreferences_autoexec_paths_next)
. = ALIGN(0x1000);
*(.text.UserPreferences_autoexec_paths_end)
. = ALIGN(0x1000);
*(.text.UserPreferences_autoexec_paths_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_autoexec_paths_lookup_int)
. = ALIGN(0x1000);
*(.text.UserPreferences_autoexec_paths_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferences_addons_begin)
. = ALIGN(0x1000);
*(.text.UserPreferences_addons_next)
. = ALIGN(0x1000);
*(.text.UserPreferences_addons_end)
. = ALIGN(0x1000);
*(.text.UserPreferences_addons_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_addons_lookup_int)
. = ALIGN(0x1000);
*(.text.UserPreferences_addons_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferences_ui_styles_begin)
. = ALIGN(0x1000);
*(.text.UserPreferences_ui_styles_next)
. = ALIGN(0x1000);
*(.text.UserPreferences_ui_styles_end)
. = ALIGN(0x1000);
*(.text.UserPreferences_ui_styles_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_ui_styles_lookup_int)
. = ALIGN(0x1000);
*(.text.UserPreferences_themes_begin)
. = ALIGN(0x1000);
*(.text.UserPreferences_themes_next)
. = ALIGN(0x1000);
*(.text.UserPreferences_themes_end)
. = ALIGN(0x1000);
*(.text.UserPreferences_themes_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_themes_lookup_int)
. = ALIGN(0x1000);
*(.text.UserPreferences_themes_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferences_active_section_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_active_section_set)
. = ALIGN(0x1000);
*(.text.UserPreferences_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UserPreferences_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UserPreferences_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserPreferences_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserPreferences_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Addons_remove_call)
. = ALIGN(0x1000);
*(.text.Addons_new_call)
. = ALIGN(0x1000);
*(.text.Addons_rna_type_get)
. = ALIGN(0x1000);
*(.text.Addons_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Addons_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Addons_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Addons_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Addons_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeStyle_widget_label_get)
. = ALIGN(0x1000);
*(.text.VectorFont_packed_file_get)
. = ALIGN(0x1000);
*(.text.rna_VectorFont_reload_update)
. = ALIGN(0x1000);
*(.text.rna_VectorFont_filepath_editable)
. = ALIGN(0x1000);
*(.text.VectorFont_filepath_get)
. = ALIGN(0x1000);
*(.text.VectorFont_filepath_length)
. = ALIGN(0x1000);
*(.text.VectorFont_filepath_set)
. = ALIGN(0x1000);
*(.text.Operator_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Operator_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Operator_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Operator_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Operator_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Operator_rna_type_get)
. = ALIGN(0x1000);
*(.text.Operator_name_get)
. = ALIGN(0x1000);
*(.text.Operator_name_length)
. = ALIGN(0x1000);
*(.text.Operator_properties_get)
. = ALIGN(0x1000);
*(.text.rna_OperatorProperties_refine)
. = ALIGN(0x1000);
*(.text.rna_OperatorProperties_idprops)
. = ALIGN(0x1000);
*(.text.OperatorProperties_rna_type_get)
. = ALIGN(0x1000);
*(.text.OperatorProperties_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.OperatorProperties_rna_properties_next)
. = ALIGN(0x1000);
*(.text.OperatorProperties_rna_properties_end)
. = ALIGN(0x1000);
*(.text.OperatorProperties_rna_properties_get)
. = ALIGN(0x1000);
*(.text.OperatorProperties_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Operator_refine)
. = ALIGN(0x1000);
*(.text.Event_oskey_get)
. = ALIGN(0x1000);
*(.text.Event_alt_get)
. = ALIGN(0x1000);
*(.text.Event_ctrl_get)
. = ALIGN(0x1000);
*(.text.Event_shift_get)
. = ALIGN(0x1000);
*(.text.Event_is_tablet_get)
. = ALIGN(0x1000);
*(.text.Event_tilt_get)
. = ALIGN(0x1000);
*(.text.Event_pressure_get)
. = ALIGN(0x1000);
*(.text.Event_mouse_prev_y_get)
. = ALIGN(0x1000);
*(.text.Event_mouse_prev_x_get)
. = ALIGN(0x1000);
*(.text.Event_mouse_region_y_get)
. = ALIGN(0x1000);
*(.text.Event_mouse_region_x_get)
. = ALIGN(0x1000);
*(.text.Event_mouse_y_get)
. = ALIGN(0x1000);
*(.text.Event_mouse_x_get)
. = ALIGN(0x1000);
*(.text.Event_type_get)
. = ALIGN(0x1000);
*(.text.Event_value_get)
. = ALIGN(0x1000);
*(.text.Event_unicode_get)
. = ALIGN(0x1000);
*(.text.Event_unicode_length)
. = ALIGN(0x1000);
*(.text.Event_ascii_get)
. = ALIGN(0x1000);
*(.text.Event_ascii_length)
. = ALIGN(0x1000);
*(.text.Event_rna_type_get)
. = ALIGN(0x1000);
*(.text.Event_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Event_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Event_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Event_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Event_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.OperatorMacro_properties_get)
. = ALIGN(0x1000);
*(.text.OperatorMacro_rna_type_get)
. = ALIGN(0x1000);
*(.text.OperatorMacro_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.OperatorMacro_rna_properties_next)
. = ALIGN(0x1000);
*(.text.OperatorMacro_rna_properties_end)
. = ALIGN(0x1000);
*(.text.OperatorMacro_rna_properties_get)
. = ALIGN(0x1000);
*(.text.OperatorMacro_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MacroOperator_refine)
. = ALIGN(0x1000);
*(.text.Macro_report_call)
. = ALIGN(0x1000);
*(.text.Macro_bl_idname_get)
. = ALIGN(0x1000);
*(.text.Macro_bl_idname_length)
. = ALIGN(0x1000);
*(.text.Macro_bl_idname_set)
. = ALIGN(0x1000);
*(.text.Macro_properties_get)
. = ALIGN(0x1000);
*(.text.Macro_name_get)
. = ALIGN(0x1000);
*(.text.Macro_name_length)
. = ALIGN(0x1000);
*(.text.Macro_rna_type_get)
. = ALIGN(0x1000);
*(.text.Macro_bl_label_get)
. = ALIGN(0x1000);
*(.text.Macro_bl_label_length)
. = ALIGN(0x1000);
*(.text.Macro_bl_label_set)
. = ALIGN(0x1000);
*(.text.Macro_bl_translation_context_get)
. = ALIGN(0x1000);
*(.text.Macro_bl_translation_context_length)
. = ALIGN(0x1000);
*(.text.Macro_bl_translation_context_set)
. = ALIGN(0x1000);
*(.text.Macro_bl_description_get)
. = ALIGN(0x1000);
*(.text.Macro_bl_description_length)
. = ALIGN(0x1000);
*(.text.Macro_bl_description_set)
. = ALIGN(0x1000);
*(.text.Macro_bl_options_get)
. = ALIGN(0x1000);
*(.text.Macro_bl_options_set)
. = ALIGN(0x1000);
*(.text.Macro_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Macro_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Macro_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Macro_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Macro_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Timer_time_duration_get)
. = ALIGN(0x1000);
*(.text.Timer_time_delta_get)
. = ALIGN(0x1000);
*(.text.Timer_time_step_get)
. = ALIGN(0x1000);
*(.text.Timer_rna_type_get)
. = ALIGN(0x1000);
*(.text.Timer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Timer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Timer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Timer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Timer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_layout_get)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_rna_type_get)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UIPopupMenu_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UIPieMenu_layout_get)
. = ALIGN(0x1000);
*(.text.UIPieMenu_rna_type_get)
. = ALIGN(0x1000);
*(.text.UIPieMenu_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UIPieMenu_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UIPieMenu_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UIPieMenu_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UIPieMenu_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Window_cursor_modal_restore_call)
. = ALIGN(0x1000);
*(.text.Window_cursor_modal_set_call)
. = ALIGN(0x1000);
*(.text.Window_cursor_set_call)
. = ALIGN(0x1000);
*(.text.Window_cursor_warp_call)
. = ALIGN(0x1000);
*(.text.Window_height_get)
. = ALIGN(0x1000);
*(.text.Window_width_get)
. = ALIGN(0x1000);
*(.text.Window_y_get)
. = ALIGN(0x1000);
*(.text.Window_x_get)
. = ALIGN(0x1000);
*(.text.rna_Window_screen_update)
. = ALIGN(0x1000);
*(.text.Window_screen_get)
. = ALIGN(0x1000);
*(.text.Window_screen_set)
. = ALIGN(0x1000);
*(.text.rna_Window_screen_assign_poll)
. = ALIGN(0x1000);
*(.text.Window_rna_type_get)
. = ALIGN(0x1000);
*(.text.Window_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Window_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Window_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Window_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Window_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.WindowManager_piemenu_end__internal_call)
. = ALIGN(0x1000);
*(.text.uiPieMenuEnd)
. = ALIGN(0x1000);
*(.text.WindowManager_piemenu_begin__internal_call)
. = ALIGN(0x1000);
*(.text.uiPieMenuBegin)
. = ALIGN(0x1000);
*(.text.WindowManager_pupmenu_end__internal_call)
. = ALIGN(0x1000);
*(.text.WindowManager_pupmenu_begin__internal_call)
. = ALIGN(0x1000);
*(.text.WindowManager_invoke_confirm_call)
. = ALIGN(0x1000);
*(.text.WindowManager_invoke_popup_call)
. = ALIGN(0x1000);
*(.text.WindowManager_invoke_search_popup_call)
. = ALIGN(0x1000);
*(.text.uiPupBlockO)
. = ALIGN(0x1000);
*(.text.WindowManager_invoke_props_dialog_call)
. = ALIGN(0x1000);
*(.text.WindowManager_invoke_props_popup_call)
. = ALIGN(0x1000);
*(.text.uiPupBlockEx)
. = ALIGN(0x1000);
*(.text.BLI_str_utf8_as_unicode_and_size)
. = ALIGN(0x1000);
*(.text.get_named_bone_bonechildren)
. = ALIGN(0x1000);
*(.text.BKE_scene_add_render_layer)
. = ALIGN(0x1000);
*(.text.BLI_testextensie_n)
. = ALIGN(0x1000);
*(.text.add_new_constraint)
. = ALIGN(0x1000);
*(.text.BLI_mempool_clear_ex)
. = ALIGN(0x1000);
*(.text.old_mdisps_bilinear)
. = ALIGN(0x1000);
*(.text.ccgSubSurf_free)
. = ALIGN(0x1000);
*(.text.ccgSubSurf__calcVertNormals)
. = ALIGN(0x1000);
*(.text.CustomData_interp)
. = ALIGN(0x1000);
*(.text._getSubSurf .text.getCCGDerivedMesh .text.ss_sync_from_uv .text.ccgSubSurf_setSubdivisionLevels .text.BKE_mesh_uv_vert_map_create)
. = ALIGN(0x1000);
*(.text.subsurf_make_derived_from_derived)
. = ALIGN(0x1000);
*(.text.ss_sync_from_derivedmesh .text.ccgSubSurf_new .text.ccgSubSurf_initFullSync .text.ccgSubSurf_syncVert .text.ccgSubSurf_syncEdge .text.ccgSubSurf_syncFace .text._face_new .text.ccgSubSurf_processSync .text.ccgSubSurf__sync .text.ccgSubSurf__calcSubdivLevel)
. = ALIGN(0x1000);
*(.text.grid_tangent_matrix)
. = ALIGN(0x1000);
*(.text.ccgSubSurf_stitchFaces)
. = ALIGN(0x1000);
*(.text.multires_mdisps_upsample_hidden)
. = ALIGN(0x1000);
*(.text.multires_make_derived_from_derived .text.multiresModifier_disp_run)
. = ALIGN(0x1000);
*(.text.ccgSubSurf__effectedFaceNeighbours)
. = ALIGN(0x1000);
*(.text.ccgSubSurf_updateNormals)
. = ALIGN(0x1000);
*(.text.BLI_str_utf8_as_unicode)
. = ALIGN(0x1000);
*(.text.BKE_constraints_id_loop)
. = ALIGN(0x1000);
*(.text.mat3_to_vec_roll)
. = ALIGN(0x1000);
*(.text.wm_operator_props_popup_ex)
. = ALIGN(0x1000);
*(.text.undo_editmode_step .text.undo_editmode_name .text.ed_undo_step .text.ED_text_undo_step .text.PE_undo .text.PE_redo .text.ED_undo_gpencil_step .text.txt_do_undo .text.txt_undo_read_unicode .text.txt_do_redo .text.BKE_undo_step .text.BKE_undo_name .text.gpencil_layer_duplicate)
. = ALIGN(0x1000);
*(.text.ED_undo_operator_repeat)
. = ALIGN(0x1000);
*(.text.undo_clean_stack)
. = ALIGN(0x1000);
*(.text.BKE_userdef_free)
. = ALIGN(0x1000);
*(.text.setup_app_data .text.do_versions_ipos_to_animato .text.ipo_to_animdata .text.action_to_animato .text.ipo_to_animato .text.icu_to_fcurves .text.fcurve_add_to_list .text.mtex_adrcodes_to_paths .text.blo_lib_link_screen_restore)
. = ALIGN(0x1000);
*(.text.undo_stack_step)
. = ALIGN(0x1000);
*(.text.get_PTCacheUndo)
. = ALIGN(0x1000);
*(.text.BKE_read_file_from_memfile)
. = ALIGN(0x1000);
*(.text.BKE_reports_prepend)
. = ALIGN(0x1000);
*(.text.ED_viewport_render_kill_jobs)
. = ALIGN(0x1000);
*(.text.txt_duplicate_line)
. = ALIGN(0x1000);
*(.text.txt_indent)
. = ALIGN(0x1000);
*(.text.txt_unindent)
. = ALIGN(0x1000);
*(.text.txt_comment)
. = ALIGN(0x1000);
*(.text.txt_uncomment)
. = ALIGN(0x1000);
*(.text.txt_undo_add_op)
. = ALIGN(0x1000);
*(.text.txt_move_lines)
. = ALIGN(0x1000);
*(.text.txt_move_down .text.txt_move_left .text.txt_move_right)
. = ALIGN(0x1000);
*(.text.txt_move_up)
. = ALIGN(0x1000);
*(.text.txt_delete_char .text.txt_combine_lines .text.txt_backspace_char)
. = ALIGN(0x1000);
*(.text.text_scroll_to_cursor)
. = ALIGN(0x1000);
*(.text.wrap_offset)
. = ALIGN(0x1000);
*(.text.text_get_visible_lines)
. = ALIGN(0x1000);
*(.text.BLI_str_utf8_char_width_safe)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_check_file_config)
. = ALIGN(0x1000);
*(.text.BLO_expand_main .text.expand_fcurves .text.expand_animdata_nlastrips)
. = ALIGN(0x1000);
*(.text.blo_decode_and_check .text.DNA_struct_get_compareflags .text.recurs_test_compflags .text.DNA_elem_offset)
. = ALIGN(0x1000);
*(.text.blo_openblenderfile)
. = ALIGN(0x1000);
*(.text.blo_openblendermemory)
. = ALIGN(0x1000);
*(.text.CustomData_bmesh_do_versions_update_active_layers)
. = ALIGN(0x1000);
*(.text.BKE_scene_disable_color_management .text.do_version_tface .text.convert_tfacenomaterial .text.BKE_mesh_strip_loose_faces .text.BKE_mesh_calc_edges_legacy .text.multires_load_old_250 .text.multires_load_old .text.multires_load_old_faces .text.multires_load_old_edges .text.ntreeSetTypes .text.do_versions .text.read_libraries .text.lib_link_all .text.lib_verify_nodetree .text.lib_link_animdata .text.lib_link_ntree .text.lib_link_fcurves .text.lib_link_nladata_strips .text.blo_do_versions_250 .text.area_add_window_regions .text.do_version_mtex_factor_2_50 .text.do_versions_seq_unique_name_all_strips .text.do_version_bone_roll_256 .text.blo_do_versions_260 .text.do_versions_nodetree_multi_file_output_format_2_62_1 .text.do_versions_affine_tracker_track .text.blo_do_versions_270 .text.blo_do_versions_pre250 .text.do_version_bone_head_tail_237 .text.bone_version_238 .text.bone_version_239 .text.idproperties_fix_groups_lengths_recurse .text.IMB_colormanagement_view_get_default_name .text.DNA_struct_elem_find)
. = ALIGN(0x1000);
*(.text.verify_socket_template_list)
. = ALIGN(0x1000);
*(.text.blo_freefiledata)
. = ALIGN(0x1000);
*(.text.init_actuator)
. = ALIGN(0x1000);
*(.text.BKE_treehash_rebuild_from_treestore)
. = ALIGN(0x1000);
*(.text.sound_new_file)
. = ALIGN(0x1000);
*(.text.BLO_read_from_memfile .text.blo_openblendermemfile .text.blo_make_image_pointer_map .text.blo_end_image_pointer_map .text.blo_make_movieclip_pointer_map .text.blo_end_movieclip_pointer_map .text.blo_add_library_pointer_map)
. = ALIGN(0x1000);
*(.text.blo_read_file_internal .text.direct_link_keymapitem)
. = ALIGN(0x1000);
*(.text.wm_operator_exec)
. = ALIGN(0x1000);
*(.text.ED_gpencil_data_get_pointers)
. = ALIGN(0x1000);
*(.text.modifier_mdef_compact_influences)
. = ALIGN(0x1000);
*(.text.EDBM_selectmode_to_scene)
. = ALIGN(0x1000);
*(.text.BKE_nlatrack_add_strip)
. = ALIGN(0x1000);
*(.text.add_nlatrack)
. = ALIGN(0x1000);
*(.text.multires_subdivide)
. = ALIGN(0x1000);
*(.text.ccgSubSurf_updateToFaces .text.multires_mvert_to_ss)
. = ALIGN(0x1000);
*(.text.ccgSubSurf_updateFromFaces)
. = ALIGN(0x1000);
*(.text.DM_set_only_copy)
. = ALIGN(0x1000);
*(.text.ccgSubSurf_updateLevels)
. = ALIGN(0x1000);
*(.text.WindowManager_progress_end_call)
. = ALIGN(0x1000);
*(.text.WindowManager_progress_update_call)
. = ALIGN(0x1000);
*(.text.WM_cursor_time)
. = ALIGN(0x1000);
*(.text.WindowManager_progress_begin_call)
. = ALIGN(0x1000);
*(.text.WindowManager_event_timer_remove_call)
. = ALIGN(0x1000);
*(.text.WindowManager_event_timer_add_call)
. = ALIGN(0x1000);
*(.text.WindowManager_modal_handler_add_call)
. = ALIGN(0x1000);
*(.text.WindowManager_fileselect_add_call)
. = ALIGN(0x1000);
*(.text.WM_cursor_set)
. = ALIGN(0x1000);
*(.text.mat3_to_eulo2)
. = ALIGN(0x1000);
*(.text.mat4_to_eulO)
. = ALIGN(0x1000);
*(.text.id_frame_has_keyframe)
. = ALIGN(0x1000);
*(.text.ui_set_but_vectorf)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_default)
. = ALIGN(0x1000);
*(.text.wm_keymap_item_find)
. = ALIGN(0x1000);
*(.text.WM_cursor_grab_enable)
. = ALIGN(0x1000);
*(.text.wm_draw_region_clear)
. = ALIGN(0x1000);
*(.text.ui_popup_block_free)
. = ALIGN(0x1000);
*(.text.ui_bounds_block)
. = ALIGN(0x1000);
*(.text.CTX_store_add_all)
. = ALIGN(0x1000);
*(.text.WM_prop_pystring_assign .text.ui_but_anim_autokey .text.ui_apply_autokey .text.RNA_path_full_property_py .text.RNA_path_struct_property_py)
. = ALIGN(0x1000);
*(.text.wmSubWindowScissorSet)
. = ALIGN(0x1000);
*(.text.wm_operator_register .text.wm_operator_call_internal .text.wm_operator_invoke .text.wm_operator_create .text.WM_operator_last_properties_init .text.wm_operator_reports .text.wm_operator_finished .text.WM_report .text.wm_subwindow_open .text.wm_subwindow_position .text.ui_but_anim_expression_set .text.ui_but_anim_expression_create .text.button_activate_exit .text.button_activate_state .text.ui_apply_button .text.ui_apply_but_func .text.ui_add_link .text.ui_multibut_states_apply .text.ED_region_init .text.ui_block_to_window_rctf .text.ui_but_find_old .text.ui_free_but .text.uiBlockUpdateFromOld .text.uiEndBlock_ex .text.ui_block_do_align .text.ui_but_event_operator_string .text.ui_but_event_property_operator_string .text.ui_text_bounds_block .text.ui_convert_to_unit_alt_name .text.ui_set_but_string .text.uiFreeBlock .text.ui_searchbox_select .text.ui_searchbox_update .text.ui_searchbox_create .text.ui_popup_block_scrolltest .text.ui_popup_block_refresh .text.ui_popup_block_create .text.ui_popup_menu_create .text.uiPupMenuEnd .text.uiPupMenuReports .text.BKE_reports_print .text.bUnit_ToUnitAltName .text.IDP_ReplaceGroupInGroup .text.IDP_MergeGroup .text.BLI_addtail)
. = ALIGN(0x1000);
*(.text.ui_but_find_new)
. = ALIGN(0x1000);
*(.text.WM_event_remove_handlers)
. = ALIGN(0x1000);
*(.text.ED_region_exit)
. = ALIGN(0x1000);
*(.text.WM_operator_free)
. = ALIGN(0x1000);
*(.text.RNA_property_unset)
. = ALIGN(0x1000);
*(.text.RNA_property_reset)
. = ALIGN(0x1000);
*(.text.uiBlockLayoutResolve .text.ui_item_estimate .text.ui_item_layout .text.ui_layout_free .text.ui_item_align .text.ui_item_flag .text.ui_litem_layout_row)
. = ALIGN(0x1000);
*(.text.WM_operator_poll)
. = ALIGN(0x1000);
*(.text.ui_get_but_vectorf)
. = ALIGN(0x1000);
*(.text.glViewport)
. = ALIGN(0x1000);
*(.text.verify_driver_fcurve)
. = ALIGN(0x1000);
*(.text.insert_keyframe)
. = ALIGN(0x1000);
*(.text.verify_fcurve)
. = ALIGN(0x1000);
*(.text.insert_keyframe_direct .text.setting_get_rna_value)
. = ALIGN(0x1000);
*(.text.action_groups_add_new)
. = ALIGN(0x1000);
*(.text.ui_but_anim_flag)
. = ALIGN(0x1000);
*(.text.uiPupMenuBegin)
. = ALIGN(0x1000);
*(.text.glGetFloatv)
. = ALIGN(0x1000);
*(.text.uiBeginBlock)
. = ALIGN(0x1000);
*(.text.uiBlockLayout)
. = ALIGN(0x1000);
*(.text.ED_area_initialize .text.region_azone_initialize .text.ed_default_handlers)
. = ALIGN(0x1000);
*(.text.ED_area_newspace)
. = ALIGN(0x1000);
*(.text.RNA_int_get)
. = ALIGN(0x1000);
*(.text.RNA_enum_get)
. = ALIGN(0x1000);
*(.text.RNA_string_get)
. = ALIGN(0x1000);
*(.text.RNA_boolean_set)
. = ALIGN(0x1000);
*(.text.WM_event_add_fileselect)
. = ALIGN(0x1000);
*(.text.wm_handler_fileselect_do)
. = ALIGN(0x1000);
*(.text.ED_fileselect_set_params .text.RNA_struct_property_is_set_ex)
. = ALIGN(0x1000);
*(.text.ED_screen_full_newspace)
. = ALIGN(0x1000);
*(.text.ED_screen_exit)
. = ALIGN(0x1000);
*(.text.ED_screen_set)
. = ALIGN(0x1000);
*(.text.ED_screen_animation_timer)
. = ALIGN(0x1000);
*(.text.ED_screen_state_toggle)
. = ALIGN(0x1000);
*(.text.ED_area_prevspace)
. = ALIGN(0x1000);
*(.text.ED_screen_add)
. = ALIGN(0x1000);
*(.text.removenotused_scredges)
. = ALIGN(0x1000);
*(.text.BKE_area_region_copy)
. = ALIGN(0x1000);
*(.text.ED_area_data_copy .text.BKE_spacedata_copylist)
. = ALIGN(0x1000);
*(.text.BKE_spacedata_freelist)
. = ALIGN(0x1000);
*(.text.area_split)
. = ALIGN(0x1000);
*(.text.removedouble_scrverts)
. = ALIGN(0x1000);
*(.text.ED_screen_refresh)
. = ALIGN(0x1000);
*(.text.WindowManager_clipboard_get)
. = ALIGN(0x1000);
*(.text.WindowManager_clipboard_length)
. = ALIGN(0x1000);
*(.text.WindowManager_clipboard_set)
. = ALIGN(0x1000);
*(.text.WindowManager_keyconfigs_begin)
. = ALIGN(0x1000);
*(.text.WindowManager_keyconfigs_next)
. = ALIGN(0x1000);
*(.text.WindowManager_keyconfigs_end)
. = ALIGN(0x1000);
*(.text.WindowManager_keyconfigs_get)
. = ALIGN(0x1000);
*(.text.WindowManager_keyconfigs_lookup_int)
. = ALIGN(0x1000);
*(.text.WindowManager_keyconfigs_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyConfig_name_get)
. = ALIGN(0x1000);
*(.text.KeyConfig_name_length)
. = ALIGN(0x1000);
*(.text.KeyConfig_name_set)
. = ALIGN(0x1000);
*(.text.KeyConfig_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyConfig_keymaps_begin)
. = ALIGN(0x1000);
*(.text.KeyConfig_keymaps_next)
. = ALIGN(0x1000);
*(.text.KeyConfig_keymaps_end)
. = ALIGN(0x1000);
*(.text.KeyConfig_keymaps_get)
. = ALIGN(0x1000);
*(.text.KeyConfig_keymaps_lookup_int)
. = ALIGN(0x1000);
*(.text.KeyConfig_keymaps_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyMap_restore_item_to_default_call)
. = ALIGN(0x1000);
*(.text.WM_keymap_restore_item_to_default)
. = ALIGN(0x1000);
*(.text.KeyMapItem_compare_call)
. = ALIGN(0x1000);
*(.text.WM_keymap_item_compare)
. = ALIGN(0x1000);
*(.text.rna_KeyMapItem_update)
. = ALIGN(0x1000);
*(.text.KeyMapItem_idname_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_idname_length)
. = ALIGN(0x1000);
*(.text.KeyMapItem_idname_set)
. = ALIGN(0x1000);
*(.text.WM_keymap_properties_reset)
. = ALIGN(0x1000);
*(.text.KeyMapItem_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_name_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_name_length)
. = ALIGN(0x1000);
*(.text.KeyMapItem_properties_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_map_type_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_map_type_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_type_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_type_set)
. = ALIGN(0x1000);
*(.text.rna_KeyMapItem_type_itemf)
. = ALIGN(0x1000);
*(.text.KeyMapItem_value_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_value_set)
. = ALIGN(0x1000);
*(.text.rna_KeyMapItem_value_itemf)
. = ALIGN(0x1000);
*(.text.KeyMapItem_id_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_any_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_any_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_shift_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_shift_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_ctrl_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_ctrl_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_alt_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_alt_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_oskey_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_oskey_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_key_modifier_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_key_modifier_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_show_expanded_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_show_expanded_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_propvalue_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_propvalue_set)
. = ALIGN(0x1000);
*(.text.rna_KeyMapItem_propvalue_itemf)
. = ALIGN(0x1000);
*(.text.KeyMapItem_active_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_active_set)
. = ALIGN(0x1000);
*(.text.KeyMapItem_is_user_modified_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_is_user_defined_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyMapItem_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyMapItem_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyMapItem_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyMapItem_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyMap_restore_to_default_call)
. = ALIGN(0x1000);
*(.text.WM_keymap_restore_to_default)
. = ALIGN(0x1000);
*(.text.KeyMap_active_call)
. = ALIGN(0x1000);
*(.text.KeyMap_name_get)
. = ALIGN(0x1000);
*(.text.KeyMap_name_length)
. = ALIGN(0x1000);
*(.text.KeyMap_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyMap_space_type_get)
. = ALIGN(0x1000);
*(.text.KeyMap_region_type_get)
. = ALIGN(0x1000);
*(.text.KeyMap_keymap_items_begin)
. = ALIGN(0x1000);
*(.text.KeyMap_keymap_items_next)
. = ALIGN(0x1000);
*(.text.KeyMap_keymap_items_end)
. = ALIGN(0x1000);
*(.text.KeyMap_keymap_items_get)
. = ALIGN(0x1000);
*(.text.KeyMap_keymap_items_lookup_int)
. = ALIGN(0x1000);
*(.text.KeyMap_keymap_items_lookup_string)
. = ALIGN(0x1000);
*(.text.WM_operator_py_idname)
. = ALIGN(0x1000);
*(.text.KeyMap_is_user_modified_get)
. = ALIGN(0x1000);
*(.text.KeyMap_is_user_modified_set)
. = ALIGN(0x1000);
*(.text.KeyMap_is_modal_get)
. = ALIGN(0x1000);
*(.text.KeyMap_show_expanded_items_get)
. = ALIGN(0x1000);
*(.text.KeyMap_show_expanded_items_set)
. = ALIGN(0x1000);
*(.text.KeyMap_show_expanded_children_get)
. = ALIGN(0x1000);
*(.text.KeyMap_show_expanded_children_set)
. = ALIGN(0x1000);
*(.text.KeyMap_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyMap_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyMap_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyMap_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyMap_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyMapItems_from_id_call)
. = ALIGN(0x1000);
*(.text.KeyMapItems_remove_call)
. = ALIGN(0x1000);
*(.text.WM_keymap_remove_item)
. = ALIGN(0x1000);
*(.text.KeyMapItems_new_modal_call)
. = ALIGN(0x1000);
*(.text.WM_modalkeymap_add_item .text.WM_modalkeymap_add_item_str .text.rna_KeyMap_item_new_modal)
. = ALIGN(0x1000);
*(.text.KeyMapItems_new_call)
. = ALIGN(0x1000);
*(.text.WM_operator_bl_idname)
. = ALIGN(0x1000);
*(.text.WM_keymap_add_item)
. = ALIGN(0x1000);
*(.text.KeyMapItems_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyMapItems_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyMapItems_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyMapItems_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyMapItems_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyMapItems_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyConfig_is_user_defined_get)
. = ALIGN(0x1000);
*(.text.KeyConfig_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyConfig_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyConfig_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyConfig_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyConfig_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyMaps_find_modal_call)
. = ALIGN(0x1000);
*(.text.KeyMaps_find_call)
. = ALIGN(0x1000);
*(.text.KeyMaps_remove_call)
. = ALIGN(0x1000);
*(.text.KeyMaps_new_call)
. = ALIGN(0x1000);
*(.text.WM_keymap_find)
. = ALIGN(0x1000);
*(.text.WM_modalkeymap_add)
. = ALIGN(0x1000);
*(.text.KeyMaps_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyMaps_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyMaps_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyMaps_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyMaps_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyMaps_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.WindowManager_windows_begin)
. = ALIGN(0x1000);
*(.text.WindowManager_windows_next)
. = ALIGN(0x1000);
*(.text.WindowManager_windows_end)
. = ALIGN(0x1000);
*(.text.WindowManager_windows_get)
. = ALIGN(0x1000);
*(.text.WindowManager_windows_lookup_int)
. = ALIGN(0x1000);
*(.text.WindowManager_operators_begin)
. = ALIGN(0x1000);
*(.text.WindowManager_operators_next)
. = ALIGN(0x1000);
*(.text.WindowManager_operators_end)
. = ALIGN(0x1000);
*(.text.WindowManager_operators_get)
. = ALIGN(0x1000);
*(.text.WindowManager_operators_lookup_int)
. = ALIGN(0x1000);
*(.text.WindowManager_operators_lookup_string)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_remove_call)
. = ALIGN(0x1000);
*(.text.WM_keyconfig_remove)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_new_call)
. = ALIGN(0x1000);
*(.text.WM_keyconfig_new_user)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_user_get)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_addon_get)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_default_value_get)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_active_get)
. = ALIGN(0x1000);
*(.text.WM_keyconfig_set_active .text.KeyConfigurations_active_set)
. = ALIGN(0x1000);
*(.text.WM_keymap_free)
. = ALIGN(0x1000);
*(.text.WM_keyconfig_update .text.RNA_property_equals .text.RNA_struct_equals)
. = ALIGN(0x1000);
*(.text.wm_keymap_copy)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_rna_type_get)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_rna_properties_next)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_rna_properties_end)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_rna_properties_get)
. = ALIGN(0x1000);
*(.text.KeyConfigurations_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Operator_report_call)
. = ALIGN(0x1000);
*(.text.Operator_bl_idname_get)
. = ALIGN(0x1000);
*(.text.Operator_bl_idname_length)
. = ALIGN(0x1000);
*(.text.Operator_bl_idname_set)
. = ALIGN(0x1000);
*(.text.Operator_layout_get)
. = ALIGN(0x1000);
*(.text.Operator_bl_label_get)
. = ALIGN(0x1000);
*(.text.Operator_bl_label_length)
. = ALIGN(0x1000);
*(.text.Operator_bl_label_set)
. = ALIGN(0x1000);
*(.text.Operator_bl_translation_context_get)
. = ALIGN(0x1000);
*(.text.Operator_bl_translation_context_length)
. = ALIGN(0x1000);
*(.text.Operator_bl_translation_context_set)
. = ALIGN(0x1000);
*(.text.Operator_bl_description_get)
. = ALIGN(0x1000);
*(.text.Operator_bl_description_length)
. = ALIGN(0x1000);
*(.text.Operator_bl_description_set)
. = ALIGN(0x1000);
*(.text.Operator_bl_options_get)
. = ALIGN(0x1000);
*(.text.Operator_bl_options_set)
. = ALIGN(0x1000);
*(.text.Operator_has_reports_get)
. = ALIGN(0x1000);
*(.text.World_texture_slots_begin)
. = ALIGN(0x1000);
*(.text.World_texture_slots_next)
. = ALIGN(0x1000);
*(.text.World_texture_slots_end)
. = ALIGN(0x1000);
*(.text.World_texture_slots_get)
. = ALIGN(0x1000);
*(.text.rna_World_update)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_zenith_down_factor_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_zenith_down_factor_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_zenith_up_factor_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_zenith_up_factor_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_horizon_factor_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_horizon_factor_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_blend_factor_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_blend_factor_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_object_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_object_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_texture_coords_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_texture_coords_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_zenith_down_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_zenith_down_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_zenith_up_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_zenith_up_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_horizon_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_horizon_set)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_blend_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlot_use_map_blend_set)
. = ALIGN(0x1000);
*(.text.rna_World_use_nodes_update)
. = ALIGN(0x1000);
*(.text.World_use_nodes_get)
. = ALIGN(0x1000);
*(.text.World_use_nodes_set)
. = ALIGN(0x1000);
*(.text.World_node_tree_get)
. = ALIGN(0x1000);
*(.text.World_mist_settings_get)
. = ALIGN(0x1000);
*(.text.World_light_settings_get)
. = ALIGN(0x1000);
*(.text.World_use_sky_real_get)
. = ALIGN(0x1000);
*(.text.World_use_sky_real_set)
. = ALIGN(0x1000);
*(.text.World_use_sky_paper_get)
. = ALIGN(0x1000);
*(.text.World_use_sky_paper_set)
. = ALIGN(0x1000);
*(.text.World_use_sky_blend_get)
. = ALIGN(0x1000);
*(.text.World_use_sky_blend_set)
. = ALIGN(0x1000);
*(.text.World_color_range_get)
. = ALIGN(0x1000);
*(.text.World_color_range_set)
. = ALIGN(0x1000);
*(.text.World_exposure_get)
. = ALIGN(0x1000);
*(.text.World_exposure_set)
. = ALIGN(0x1000);
*(.text.World_ambient_color_get)
. = ALIGN(0x1000);
*(.text.World_ambient_color_set)
. = ALIGN(0x1000);
*(.text.World_zenith_color_get)
. = ALIGN(0x1000);
*(.text.World_zenith_color_set)
. = ALIGN(0x1000);
*(.text.World_horizon_color_get)
. = ALIGN(0x1000);
*(.text.World_horizon_color_set)
. = ALIGN(0x1000);
*(.text.World_active_texture_index_get)
. = ALIGN(0x1000);
*(.text.World_active_texture_index_set)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_falloff_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_falloff_set)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_height_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_height_set)
. = ALIGN(0x1000);
*(.text.rna_World_draw_mist_update)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_depth_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_depth_set)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_start_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_start_set)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_intensity_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_intensity_set)
. = ALIGN(0x1000);
*(.text.rna_World_draw_update)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_use_mist_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_use_mist_set)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.WorldMistSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.WorldLighting_sample_method_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_sample_method_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_samples_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_samples_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_cache_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_cache_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_falloff_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_falloff_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_correction_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_correction_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_error_threshold_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_error_threshold_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_adapt_to_speed_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_adapt_to_speed_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_threshold_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_threshold_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_bias_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_bias_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_falloff_strength_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_falloff_strength_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_distance_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_distance_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_passes_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_passes_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_gather_method_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_gather_method_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_indirect_bounces_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_indirect_bounces_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_indirect_factor_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_indirect_factor_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_indirect_light_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_indirect_light_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_environment_color_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_environment_color_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_environment_energy_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_environment_energy_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_environment_light_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_environment_light_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_ao_blend_type_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_ao_blend_type_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_ao_factor_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_ao_factor_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_ambient_occlusion_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_use_ambient_occlusion_set)
. = ALIGN(0x1000);
*(.text.WorldLighting_rna_type_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.WorldLighting_rna_properties_next)
. = ALIGN(0x1000);
*(.text.WorldLighting_rna_properties_end)
. = ALIGN(0x1000);
*(.text.WorldLighting_rna_properties_get)
. = ALIGN(0x1000);
*(.text.WorldLighting_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_clear_call)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_create_call)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_add_call)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.WorldTextureSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.World_animation_data_get)
. = ALIGN(0x1000);
*(.text.World_active_texture_get)
. = ALIGN(0x1000);
*(.text.set_current_world_texture .text.World_active_texture_set)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_vertex)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_normal)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_mcol)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_uv)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_uv_texpaint)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_edge)
. = ALIGN(0x1000);
*(.text.GPU_buffer_copy_uvedge)
. = ALIGN(0x1000);
*(.text.curvemapping_table_RGBA)
. = ALIGN(0x1000);
*(.text.glDisable)
. = ALIGN(0x1000);
*(.text.glEnable)
. = ALIGN(0x1000);
*(.text.ntreeSetOutput)
. = ALIGN(0x1000);
*(.text.GPU_lookup_function .text.gpu_node_input_link)
. = ALIGN(0x1000);
*(.text.GPU_link)
. = ALIGN(0x1000);
*(.text.GPU_shadeinput_set .text.GPU_shaderesult_set .text.texture_value_blend.58298 .text.shade_one_light)
. = ALIGN(0x1000);
*(.text.gpu_lamp_calc_winmat)
. = ALIGN(0x1000);
*(.text.GPU_lamp_from_blender)
. = ALIGN(0x1000);
*(.text.glGetError)
. = ALIGN(0x1000);
*(.text.texture_rgb_blend.58280 .text.lamp_get_visibility.58338 .text.shade_light_textures)
. = ALIGN(0x1000);
*(.text.ntreeExecGPUNodes)
. = ALIGN(0x1000);
*(.text.glColor3f)
. = ALIGN(0x1000);
*(.text.glBindTexture)
. = ALIGN(0x1000);
*(.text.ntreeLocalize)
. = ALIGN(0x1000);
*(.text.glGetIntegerv)
. = ALIGN(0x1000);
*(.text.GPU_lamp_update_buffer_mats)
. = ALIGN(0x1000);
*(.text.GPU_generate_pass .text.gpu_nodes_tag .text.codegen_convert_datatype .text.GPU_material_construct_end)
. = ALIGN(0x1000);
*(.text.GPU_shader_create .text.shader_print_errors)
. = ALIGN(0x1000);
*(.text.GPU_pass_unbind)
. = ALIGN(0x1000);
*(.text.GPU_shader_uniform_texture)
. = ALIGN(0x1000);
*(.text.GPU_shader_uniform_vector)
. = ALIGN(0x1000);
*(.text.ntreeGPUMaterialNodes .text.GPU_material_from_blender)
. = ALIGN(0x1000);
*(.text.glDepthMask)
. = ALIGN(0x1000);
*(.text.GPU_pass_bind .text.GPU_enable_material .text.GPU_texture_from_preview .text.GPU_texture_bind .text.GPU_material_bind .text.GPU_material_bind_uniforms)
. = ALIGN(0x1000);
*(.text.glMaterialfv)
. = ALIGN(0x1000);
*(.text.fd_read_gzip_from_file)
. = ALIGN(0x1000);
*(.text.gzread)
. = ALIGN(0x1000);
*(.text.gz_fetch .text.gz_decomp)
. = ALIGN(0x1000);
*(.text.gz_look)
. = ALIGN(0x1000);
*(.text.fd_read_gzip_from_memory)
. = ALIGN(0x1000);
*(.text.fd_read_from_memory)
. = ALIGN(0x1000);
*(.text.fd_read_from_memfile)
. = ALIGN(0x1000);
*(.text.lib_link_seq_clipboard_cb)
. = ALIGN(0x1000);
*(.text.verg_oldnewmap)
. = ALIGN(0x1000);
*(.text.lib_link_constraint_cb)
. = ALIGN(0x1000);
*(.text.lib_link_modifiers__linkModifiers)
. = ALIGN(0x1000);
*(.text.newlibadr)
. = ALIGN(0x1000);
*(.text.expand_doit_library)
. = ALIGN(0x1000);
*(.text.BKE_mesh_cd_validate .text.multires_free .text.blo_reportf_wrap .text.link_list .text.IDP_DirectLinkProperty .text.read_libblock .text.direct_link_region .text.direct_link_gpencil .text.direct_link_curvemapping .text.direct_link_animdata .text.link_recurs_seq .text.direct_link_nodetree .text.direct_link_pointcache_list .text.direct_link_object .text.test_pointer_array .text.direct_link_customdata .text.direct_link_preview_image .text.direct_link_bones .text.direct_link_fcurves .text.direct_link_fmodifiers .text.direct_link_constraints .text.link_glob_list .text.direct_link_pointcache .text.direct_link_nladata_strips)
. = ALIGN(0x1000);
*(.text.read_struct .text.DNA_struct_switch_endian .text.DNA_struct_reconstruct .text.reconstruct_struct .text.cast_pointer .text.cast_elem .text.sdna_type_nr)
. = ALIGN(0x1000);
*(.text.get_bhead)
. = ALIGN(0x1000);
*(.text.blo_find_main)
. = ALIGN(0x1000);
*(.text.expand_object_expandModifiers)
. = ALIGN(0x1000);
*(.text.expand_constraint_cb)
. = ALIGN(0x1000);
*(.text.TextCurve_text_boxes_lookup_int)
. = ALIGN(0x1000);
*(.text.TextCurve_underline_height_get)
. = ALIGN(0x1000);
*(.text.TextCurve_underline_height_set)
. = ALIGN(0x1000);
*(.text.TextCurve_underline_position_get)
. = ALIGN(0x1000);
*(.text.TextCurve_underline_position_set)
. = ALIGN(0x1000);
*(.text.TextCurve_offset_y_get)
. = ALIGN(0x1000);
*(.text.TextCurve_offset_y_set)
. = ALIGN(0x1000);
*(.text.TextCurve_offset_x_get)
. = ALIGN(0x1000);
*(.text.TextCurve_offset_x_set)
. = ALIGN(0x1000);
*(.text.TextCurve_shear_get)
. = ALIGN(0x1000);
*(.text.TextCurve_shear_set)
. = ALIGN(0x1000);
*(.text.TextCurve_space_character_get)
. = ALIGN(0x1000);
*(.text.TextCurve_space_character_set)
. = ALIGN(0x1000);
*(.text.TextCurve_space_word_get)
. = ALIGN(0x1000);
*(.text.TextCurve_space_word_set)
. = ALIGN(0x1000);
*(.text.TextCurve_space_line_get)
. = ALIGN(0x1000);
*(.text.TextCurve_space_line_set)
. = ALIGN(0x1000);
*(.text.TextCurve_small_caps_scale_get)
. = ALIGN(0x1000);
*(.text.TextCurve_small_caps_scale_set)
. = ALIGN(0x1000);
*(.text.TextCurve_size_get)
. = ALIGN(0x1000);
*(.text.TextCurve_size_set)
. = ALIGN(0x1000);
*(.text.TextCurve_align_get)
. = ALIGN(0x1000);
*(.text.TextCurve_align_set)
. = ALIGN(0x1000);
*(.text.SurfaceCurve_use_uv_as_generated_get)
. = ALIGN(0x1000);
*(.text.SurfaceCurve_use_uv_as_generated_set)
. = ALIGN(0x1000);
*(.text.Spline_rna_type_get)
. = ALIGN(0x1000);
*(.text.Spline_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Spline_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Spline_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Spline_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Spline_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_radius_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_radius_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_weight_softbody_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_weight_softbody_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_tilt_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_tilt_set)
. = ALIGN(0x1000);
*(.text.rna_Curve_update_points)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_right_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_right_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_co_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_co_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_left_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_left_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_right_type_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_right_type_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_left_type_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_handle_left_type_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_hide_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_hide_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_select_control_point_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_select_control_point_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_select_right_handle_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_select_right_handle_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_select_left_handle_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_select_left_handle_set)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BezierSplinePoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SplinePoints_add_call)
. = ALIGN(0x1000);
*(.text.makeknots .text.calcknots)
. = ALIGN(0x1000);
*(.text.SplinePoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.SplinePoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SplinePoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SplinePoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SplinePoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SplinePoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.CurveSplines_clear_call)
. = ALIGN(0x1000);
*(.text.CurveSplines_remove_call)
. = ALIGN(0x1000);
*(.text.CurveSplines_new_call)
. = ALIGN(0x1000);
*(.text.CurveSplines_active_get)
. = ALIGN(0x1000);
*(.text.CurveSplines_active_set)
. = ALIGN(0x1000);
*(.text.CurveSplines_rna_type_get)
. = ALIGN(0x1000);
*(.text.CurveSplines_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CurveSplines_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CurveSplines_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CurveSplines_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CurveSplines_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Curve_shape_keys_get)
. = ALIGN(0x1000);
*(.text.Curve_show_handles_get)
. = ALIGN(0x1000);
*(.text.Curve_show_handles_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_canvas_surfaces_begin)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_canvas_surfaces_next)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_canvas_surfaces_end)
. = ALIGN(0x1000);
*(.text.DynamicPaintCanvasSettings_canvas_surfaces_get)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurface_path)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_exists_call)
. = ALIGN(0x1000);
*(.text.dynamicPaint_outputLayerExists)
. = ALIGN(0x1000);
*(.text.dynamicPaintSurface_setUniqueName .text.rna_DynamicPaintSurface_uniqueName)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_name_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_name_length)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_name_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurface_changePreview)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_show_preview_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_show_preview_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaint_redoModifier)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_is_active_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_is_active_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurface_changeType)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_surface_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_surface_type_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaint_surface_type_itemf)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurfaces_changeFormat)
. = ALIGN(0x1000);
*(.text.dynamicPaintSurface_updateType)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_surface_format_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_surface_format_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaint_reset_dependency)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_brush_group_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_brush_group_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_dissolve_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_dissolve_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_dissolve_speed_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_dissolve_speed_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_drying_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_drying_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_dry_speed_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_dry_speed_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_resolution_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_resolution_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_uv_layer_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_uv_layer_length)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_uv_layer_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurfaces_updateFrames)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_frame_start_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_frame_start_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_frame_end_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_frame_end_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_frame_substeps_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_frame_substeps_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurface_reset)
. = ALIGN(0x1000);
*(.text.dynamicPaint_resetSurface)
. = ALIGN(0x1000);
*(.text.dynamicPaint_initAdjacencyData)
. = ALIGN(0x1000);
*(.text.dynamicPaint_freeSurfaceData .text.free_bakeData)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_antialiasing_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_antialiasing_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_brush_influence_scale_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_brush_influence_scale_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_brush_radius_scale_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_brush_radius_scale_set)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintSurface_initialcolortype)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_color_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_color_type_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_color_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_color_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_texture_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_texture_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_layername_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_layername_length)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_init_layername_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_effect_ui_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_effect_ui_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_dry_log_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_dry_log_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_dissolve_log_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_dissolve_log_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_spread_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_spread_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_spread_speed_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_spread_speed_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_color_dry_threshold_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_color_dry_threshold_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_color_spread_speed_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_color_spread_speed_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_drip_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_drip_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_shrink_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_shrink_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_shrink_speed_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_shrink_speed_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_effector_weights_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_drip_velocity_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_drip_velocity_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_drip_acceleration_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_drip_acceleration_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_premultiply_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_premultiply_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_output_path_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_output_path_length)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_output_path_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_name_a_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_name_a_length)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_name_a_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_output_a_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_output_a_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_name_b_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_name_b_length)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_output_name_b_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_output_b_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_output_b_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_preview_id_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_preview_id_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_depth_clamp_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_depth_clamp_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_displace_factor_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_displace_factor_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_fileformat_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_image_fileformat_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_displace_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_displace_type_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_incremental_displace_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_incremental_displace_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_damping_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_damping_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_speed_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_speed_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_timescale_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_timescale_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_spring_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_spring_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_smoothness_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_wave_smoothness_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_wave_open_border_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_wave_open_border_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_point_cache_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_is_cache_user_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_use_color_preview_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurface_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintBrushSettings_path)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_velocity_ramp_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_ramp_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_smooth_radius_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_smooth_radius_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_solid_radius_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_solid_radius_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_particle_radius_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_particle_radius_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_particle_system_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_particle_system_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_negative_volume_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_negative_volume_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_invert_proximity_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_invert_proximity_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_ray_direction_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_ray_direction_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_proximity_project_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_proximity_project_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_proximity_falloff_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_proximity_falloff_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_proximity_ramp_alpha_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_proximity_ramp_alpha_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_distance_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_distance_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_source_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_source_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_velocity_color_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_velocity_color_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_velocity_depth_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_velocity_depth_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_velocity_alpha_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_velocity_alpha_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_velocity_max_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_velocity_max_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_smudge_strength_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_smudge_strength_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_smudge_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_smudge_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_wave_clamp_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_wave_clamp_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_wave_factor_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_wave_factor_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_wave_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_wave_type_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_paint_erase_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_paint_erase_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_wetness_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_wetness_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_absolute_alpha_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_absolute_alpha_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_material_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_material_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_material_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_use_material_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_alpha_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_alpha_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_color_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_paint_color_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintBrushSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_active_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_active_index_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Surface_active_point_range)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_rna_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintSurfaces_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_DynamicPaintCanvasSettings_path)
. = ALIGN(0x1000);
*(.text.FCurve_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FCurve_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FCurve_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FCurve_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FCurve_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FCurve_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_FCurve_update_data)
. = ALIGN(0x1000);
*(.text.FCurve_extrapolation_get)
. = ALIGN(0x1000);
*(.text.FCurve_extrapolation_set)
. = ALIGN(0x1000);
*(.text.FCurve_driver_get)
. = ALIGN(0x1000);
*(.text.Driver_is_valid_get)
. = ALIGN(0x1000);
*(.text.Driver_is_valid_set)
. = ALIGN(0x1000);
*(.text.Driver_show_debug_info_get)
. = ALIGN(0x1000);
*(.text.Driver_show_debug_info_set)
. = ALIGN(0x1000);
*(.text.Driver_variables_begin)
. = ALIGN(0x1000);
*(.text.Driver_variables_next)
. = ALIGN(0x1000);
*(.text.Driver_variables_end)
. = ALIGN(0x1000);
*(.text.Driver_variables_get)
. = ALIGN(0x1000);
*(.text.Driver_variables_lookup_int)
. = ALIGN(0x1000);
*(.text.Driver_variables_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ChannelDriver_update_expr)
. = ALIGN(0x1000);
*(.text.Driver_expression_get)
. = ALIGN(0x1000);
*(.text.Driver_expression_length)
. = ALIGN(0x1000);
*(.text.Driver_expression_set)
. = ALIGN(0x1000);
*(.text.rna_ChannelDriver_update_data)
. = ALIGN(0x1000);
*(.text.Driver_type_get)
. = ALIGN(0x1000);
*(.text.Driver_type_set)
. = ALIGN(0x1000);
*(.text.Driver_rna_type_get)
. = ALIGN(0x1000);
*(.text.Driver_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Driver_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Driver_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Driver_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Driver_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_DriverTarget_update_name)
. = ALIGN(0x1000);
*(.text.DriverVariable_name_get)
. = ALIGN(0x1000);
*(.text.DriverVariable_name_length)
. = ALIGN(0x1000);
*(.text.DriverVariable_name_set)
. = ALIGN(0x1000);
*(.text.rna_DriverTarget_update_data)
. = ALIGN(0x1000);
*(.text.DriverVariable_rna_type_get)
. = ALIGN(0x1000);
*(.text.DriverVariable_type_get)
. = ALIGN(0x1000);
*(.text.DriverVariable_type_set)
. = ALIGN(0x1000);
*(.text.DriverVariable_targets_begin)
. = ALIGN(0x1000);
*(.text.DriverVariable_targets_next)
. = ALIGN(0x1000);
*(.text.DriverVariable_targets_end)
. = ALIGN(0x1000);
*(.text.DriverVariable_targets_get)
. = ALIGN(0x1000);
*(.text.DriverVariable_targets_length)
. = ALIGN(0x1000);
*(.text.DriverVariable_targets_lookup_int)
. = ALIGN(0x1000);
*(.text.DriverVariable_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DriverVariable_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DriverVariable_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DriverVariable_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DriverVariable_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.DriverTarget_transform_space_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_transform_space_set)
. = ALIGN(0x1000);
*(.text.DriverTarget_transform_type_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_transform_type_set)
. = ALIGN(0x1000);
*(.text.DriverTarget_bone_target_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_bone_target_length)
. = ALIGN(0x1000);
*(.text.DriverTarget_bone_target_set)
. = ALIGN(0x1000);
*(.text.DriverTarget_data_path_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_data_path_length)
. = ALIGN(0x1000);
*(.text.DriverTarget_data_path_set)
. = ALIGN(0x1000);
*(.text.rna_DriverTarget_id_type_editable)
. = ALIGN(0x1000);
*(.text.DriverTarget_id_type_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_id_type_set)
. = ALIGN(0x1000);
*(.text.rna_DriverTarget_id_editable)
. = ALIGN(0x1000);
*(.text.DriverTarget_id_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_id_set)
. = ALIGN(0x1000);
*(.text.rna_DriverTarget_id_typef)
. = ALIGN(0x1000);
*(.text.DriverTarget_rna_type_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.DriverTarget_rna_properties_next)
. = ALIGN(0x1000);
*(.text.DriverTarget_rna_properties_end)
. = ALIGN(0x1000);
*(.text.DriverTarget_rna_properties_get)
. = ALIGN(0x1000);
*(.text.DriverTarget_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FCurveSample_co_get)
. = ALIGN(0x1000);
*(.text.FCurveSample_co_set)
. = ALIGN(0x1000);
*(.text.FCurveSample_select_get)
. = ALIGN(0x1000);
*(.text.FCurveSample_select_set)
. = ALIGN(0x1000);
*(.text.FCurveSample_rna_type_get)
. = ALIGN(0x1000);
*(.text.FCurveSample_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FCurveSample_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FCurveSample_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FCurveSample_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FCurveSample_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_right_get)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_right_set)
. = ALIGN(0x1000);
*(.text.Keyframe_co_get)
. = ALIGN(0x1000);
*(.text.Keyframe_co_set)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_left_get)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_left_set)
. = ALIGN(0x1000);
*(.text.Keyframe_period_get)
. = ALIGN(0x1000);
*(.text.Keyframe_period_set)
. = ALIGN(0x1000);
*(.text.Keyframe_amplitude_get)
. = ALIGN(0x1000);
*(.text.Keyframe_amplitude_set)
. = ALIGN(0x1000);
*(.text.Keyframe_back_get)
. = ALIGN(0x1000);
*(.text.Keyframe_back_set)
. = ALIGN(0x1000);
*(.text.Keyframe_easing_get)
. = ALIGN(0x1000);
*(.text.Keyframe_easing_set)
. = ALIGN(0x1000);
*(.text.Keyframe_type_get)
. = ALIGN(0x1000);
*(.text.Keyframe_type_set)
. = ALIGN(0x1000);
*(.text.Keyframe_interpolation_get)
. = ALIGN(0x1000);
*(.text.Keyframe_interpolation_set)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_right_type_get)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_right_type_set)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_left_type_get)
. = ALIGN(0x1000);
*(.text.Keyframe_handle_left_type_set)
. = ALIGN(0x1000);
*(.text.Keyframe_select_control_point_get)
. = ALIGN(0x1000);
*(.text.Keyframe_select_control_point_set)
. = ALIGN(0x1000);
*(.text.Keyframe_select_right_handle_get)
. = ALIGN(0x1000);
*(.text.Keyframe_select_right_handle_set)
. = ALIGN(0x1000);
*(.text.Keyframe_select_left_handle_get)
. = ALIGN(0x1000);
*(.text.Keyframe_select_left_handle_set)
. = ALIGN(0x1000);
*(.text.Keyframe_rna_type_get)
. = ALIGN(0x1000);
*(.text.Keyframe_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Keyframe_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Keyframe_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Keyframe_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Keyframe_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.remove_fmodifier)
. = ALIGN(0x1000);
*(.text.rna_FModifierType_refine)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_end_get)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_end_set)
. = ALIGN(0x1000);
*(.text.rna_FModifierStepped_end_frame_range)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_start_get)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_start_set)
. = ALIGN(0x1000);
*(.text.rna_FModifierStepped_start_frame_range)
. = ALIGN(0x1000);
*(.text.FModifierStepped_use_frame_end_get)
. = ALIGN(0x1000);
*(.text.FModifierStepped_use_frame_end_set)
. = ALIGN(0x1000);
*(.text.FModifierStepped_use_frame_start_get)
. = ALIGN(0x1000);
*(.text.FModifierStepped_use_frame_start_set)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_offset_get)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_offset_set)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_step_get)
. = ALIGN(0x1000);
*(.text.FModifierStepped_frame_step_set)
. = ALIGN(0x1000);
*(.text.FModifierLimits_max_y_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_max_y_set)
. = ALIGN(0x1000);
*(.text.rna_FModifierLimits_maxy_range)
. = ALIGN(0x1000);
*(.text.FModifierLimits_max_x_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_max_x_set)
. = ALIGN(0x1000);
*(.text.rna_FModifierLimits_maxx_range)
. = ALIGN(0x1000);
*(.text.FModifierLimits_min_y_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_min_y_set)
. = ALIGN(0x1000);
*(.text.rna_FModifierLimits_miny_range)
. = ALIGN(0x1000);
*(.text.FModifierLimits_min_x_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_min_x_set)
. = ALIGN(0x1000);
*(.text.rna_FModifierLimits_minx_range)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_max_y_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_max_y_set)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_max_x_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_max_x_set)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_min_y_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_min_y_set)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_min_x_get)
. = ALIGN(0x1000);
*(.text.FModifierLimits_use_min_x_set)
. = ALIGN(0x1000);
*(.text.FModifierNoise_depth_get)
. = ALIGN(0x1000);
*(.text.FModifierNoise_depth_set)
. = ALIGN(0x1000);
*(.text.FModifierNoise_offset_get)
. = ALIGN(0x1000);
*(.text.FModifierNoise_offset_set)
. = ALIGN(0x1000);
*(.text.FModifierNoise_phase_get)
. = ALIGN(0x1000);
*(.text.FModifierNoise_phase_set)
. = ALIGN(0x1000);
*(.text.FModifierNoise_strength_get)
. = ALIGN(0x1000);
*(.text.FModifierNoise_strength_set)
. = ALIGN(0x1000);
*(.text.FModifierNoise_scale_get)
. = ALIGN(0x1000);
*(.text.FModifierNoise_scale_set)
. = ALIGN(0x1000);
*(.text.FModifierNoise_blend_type_get)
. = ALIGN(0x1000);
*(.text.FModifierNoise_blend_type_set)
. = ALIGN(0x1000);
*(.text.FModifierCycles_cycles_after_get)
. = ALIGN(0x1000);
*(.text.FModifierCycles_cycles_after_set)
. = ALIGN(0x1000);
*(.text.FModifierCycles_mode_after_get)
. = ALIGN(0x1000);
*(.text.FModifierCycles_mode_after_set)
. = ALIGN(0x1000);
*(.text.FModifierCycles_cycles_before_get)
. = ALIGN(0x1000);
*(.text.FModifierCycles_cycles_before_set)
. = ALIGN(0x1000);
*(.text.FModifierCycles_mode_before_get)
. = ALIGN(0x1000);
*(.text.FModifierCycles_mode_before_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_frame_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_frame_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_max_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_max_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_min_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_min_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_remove_call)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_add_call)
. = ALIGN(0x1000);
*(.text.BKE_fcm_envelope_find_index)
. = ALIGN(0x1000);
*(.text.rna_FModifierEnvelope_points_add)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelopeControlPoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_default_max_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_default_max_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_default_min_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_default_min_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_reference_value_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_reference_value_set)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_control_points_begin)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_control_points_next)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_control_points_end)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_control_points_get)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_control_points_length)
. = ALIGN(0x1000);
*(.text.FModifierEnvelope_control_points_lookup_int)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_function_type_get)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_function_type_set)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_use_additive_get)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_use_additive_set)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_value_offset_get)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_value_offset_set)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_phase_offset_get)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_phase_offset_set)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_phase_multiplier_get)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_phase_multiplier_set)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_amplitude_get)
. = ALIGN(0x1000);
*(.text.FModifierFunctionGenerator_amplitude_set)
. = ALIGN(0x1000);
*(.text.FModifier_influence_get)
. = ALIGN(0x1000);
*(.text.FModifier_influence_set)
. = ALIGN(0x1000);
*(.text.FModifier_use_influence_get)
. = ALIGN(0x1000);
*(.text.FModifier_use_influence_set)
. = ALIGN(0x1000);
*(.text.FModifier_blend_out_get)
. = ALIGN(0x1000);
*(.text.FModifier_blend_out_set)
. = ALIGN(0x1000);
*(.text.rna_FModifier_blending_range)
. = ALIGN(0x1000);
*(.text.FModifier_blend_in_get)
. = ALIGN(0x1000);
*(.text.FModifier_blend_in_set)
. = ALIGN(0x1000);
*(.text.FModifier_frame_end_get)
. = ALIGN(0x1000);
*(.text.FModifier_frame_end_set)
. = ALIGN(0x1000);
*(.text.rna_FModifier_end_frame_range)
. = ALIGN(0x1000);
*(.text.FModifier_frame_start_get)
. = ALIGN(0x1000);
*(.text.FModifier_frame_start_set)
. = ALIGN(0x1000);
*(.text.rna_FModifier_start_frame_range)
. = ALIGN(0x1000);
*(.text.FModifier_use_restricted_range_get)
. = ALIGN(0x1000);
*(.text.FModifier_use_restricted_range_set)
. = ALIGN(0x1000);
*(.text.rna_FModifier_active_update)
. = ALIGN(0x1000);
*(.text.FModifier_active_get)
. = ALIGN(0x1000);
*(.text.FModifier_active_set)
. = ALIGN(0x1000);
*(.text.FModifier_is_valid_get)
. = ALIGN(0x1000);
*(.text.FModifier_mute_get)
. = ALIGN(0x1000);
*(.text.FModifier_mute_set)
. = ALIGN(0x1000);
*(.text.FModifier_show_expanded_get)
. = ALIGN(0x1000);
*(.text.FModifier_show_expanded_set)
. = ALIGN(0x1000);
*(.text.FModifier_type_get)
. = ALIGN(0x1000);
*(.text.FModifier_rna_type_get)
. = ALIGN(0x1000);
*(.text.FModifier_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FModifier_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FModifier_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FModifier_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FModifier_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_FModifierGenerator_coefficients_get_length)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_coefficients_get)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_coefficients_set)
. = ALIGN(0x1000);
*(.text.rna_FModifier_verify_data_update)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_poly_order_get)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_poly_order_set)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_mode_get)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_mode_set)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_use_additive_get)
. = ALIGN(0x1000);
*(.text.FModifierGenerator_use_additive_set)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_new_call)
. = ALIGN(0x1000);
*(.text.add_fmodifier)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_active_get)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_active_set)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FCurveModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_remove_call)
. = ALIGN(0x1000);
*(.text.delete_fcurve_key)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_add_call)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_insert_call)
. = ALIGN(0x1000);
*(.text.insert_bezt_fcurve)
. = ALIGN(0x1000);
*(.text.insert_vert_fcurve)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FCurveKeyframePoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FCurve_update_autoflags_call)
. = ALIGN(0x1000);
*(.text.update_autoflags_fcurve)
. = ALIGN(0x1000);
*(.text.FCurve_range_call)
. = ALIGN(0x1000);
*(.text.FCurve_update_call)
. = ALIGN(0x1000);
*(.text.FCurve_evaluate_call)
. = ALIGN(0x1000);
*(.text.FCurve_modifiers_begin)
. = ALIGN(0x1000);
*(.text.FCurve_modifiers_next)
. = ALIGN(0x1000);
*(.text.FCurve_modifiers_end)
. = ALIGN(0x1000);
*(.text.FCurve_modifiers_get)
. = ALIGN(0x1000);
*(.text.FCurve_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.FCurve_keyframe_points_begin)
. = ALIGN(0x1000);
*(.text.FCurve_keyframe_points_next)
. = ALIGN(0x1000);
*(.text.FCurve_keyframe_points_end)
. = ALIGN(0x1000);
*(.text.FCurve_keyframe_points_get)
. = ALIGN(0x1000);
*(.text.FCurve_keyframe_points_length)
. = ALIGN(0x1000);
*(.text.FCurve_keyframe_points_lookup_int)
. = ALIGN(0x1000);
*(.text.FCurve_sampled_points_begin)
. = ALIGN(0x1000);
*(.text.FCurve_sampled_points_next)
. = ALIGN(0x1000);
*(.text.FCurve_sampled_points_end)
. = ALIGN(0x1000);
*(.text.FCurve_sampled_points_get)
. = ALIGN(0x1000);
*(.text.FCurve_sampled_points_length)
. = ALIGN(0x1000);
*(.text.FCurve_sampled_points_lookup_int)
. = ALIGN(0x1000);
*(.text.FCurve_is_valid_get)
. = ALIGN(0x1000);
*(.text.FCurve_is_valid_set)
. = ALIGN(0x1000);
*(.text.FCurve_hide_get)
. = ALIGN(0x1000);
*(.text.FCurve_hide_set)
. = ALIGN(0x1000);
*(.text.FCurve_mute_get)
. = ALIGN(0x1000);
*(.text.FCurve_mute_set)
. = ALIGN(0x1000);
*(.text.FCurve_lock_get)
. = ALIGN(0x1000);
*(.text.FCurve_lock_set)
. = ALIGN(0x1000);
*(.text.FCurve_select_get)
. = ALIGN(0x1000);
*(.text.FCurve_select_set)
. = ALIGN(0x1000);
*(.text.FCurve_color_get)
. = ALIGN(0x1000);
*(.text.FCurve_color_set)
. = ALIGN(0x1000);
*(.text.FCurve_color_mode_get)
. = ALIGN(0x1000);
*(.text.FCurve_color_mode_set)
. = ALIGN(0x1000);
*(.text.FCurve_array_index_get)
. = ALIGN(0x1000);
*(.text.FCurve_array_index_set)
. = ALIGN(0x1000);
*(.text.FCurve_data_path_get)
. = ALIGN(0x1000);
*(.text.FCurve_data_path_length)
. = ALIGN(0x1000);
*(.text.FCurve_data_path_set)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_remove_call)
. = ALIGN(0x1000);
*(.text.driver_free_variable)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_new_call)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_rna_type_get)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ChannelDriverVariables_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FCurve_group_get)
. = ALIGN(0x1000);
*(.text.FCurve_group_set)
. = ALIGN(0x1000);
*(.text.FluidSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FluidSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FluidSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FluidSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FluidSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FluidSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_FluidSettings_update_type)
. = ALIGN(0x1000);
*(.text.FluidSettings_type_get)
. = ALIGN(0x1000);
*(.text.FluidSettings_type_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_fluid_mesh_vertices_begin)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_fluid_mesh_vertices_next)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_fluid_mesh_vertices_end)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_fluid_mesh_vertices_get)
. = ALIGN(0x1000);
*(.text.rna_FluidMeshVertex_data_length)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_velocity_get)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_rna_type_get)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FluidMeshVertex_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_FluidSettings_refine)
. = ALIGN(0x1000);
*(.text.rna_FluidSettings_path)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_impact_factor_get)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_impact_factor_set)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_partial_slip_factor_get)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_partial_slip_factor_set)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_slip_type_get)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_slip_type_set)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_use_animated_mesh_get)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_use_animated_mesh_set)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_volume_initialization_get)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_volume_initialization_set)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_use_get)
. = ALIGN(0x1000);
*(.text.ObstacleFluidSettings_use_set)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_use_local_coords_get)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_use_local_coords_set)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_inflow_velocity_get)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_inflow_velocity_set)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_use_animated_mesh_get)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_use_animated_mesh_set)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_volume_initialization_get)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_volume_initialization_set)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_use_get)
. = ALIGN(0x1000);
*(.text.InflowFluidSettings_use_set)
. = ALIGN(0x1000);
*(.text.OutflowFluidSettings_use_animated_mesh_get)
. = ALIGN(0x1000);
*(.text.OutflowFluidSettings_use_animated_mesh_set)
. = ALIGN(0x1000);
*(.text.OutflowFluidSettings_volume_initialization_get)
. = ALIGN(0x1000);
*(.text.OutflowFluidSettings_volume_initialization_set)
. = ALIGN(0x1000);
*(.text.OutflowFluidSettings_use_get)
. = ALIGN(0x1000);
*(.text.OutflowFluidSettings_use_set)
. = ALIGN(0x1000);
*(.text.rna_fluid_update)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_filepath_get)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_filepath_length)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_filepath_set)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_alpha_influence_get)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_alpha_influence_set)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_particle_influence_get)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_particle_influence_set)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_show_tracer_get)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_show_tracer_set)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_use_floats_get)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_use_floats_set)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_use_drops_get)
. = ALIGN(0x1000);
*(.text.ParticleFluidSettings_use_drops_set)
. = ALIGN(0x1000);
*(.text.rna_fluid_find_enframe)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_quality_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_quality_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_velocity_radius_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_velocity_radius_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_velocity_strength_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_velocity_strength_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_attraction_radius_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_attraction_radius_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_attraction_strength_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_attraction_strength_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_end_time_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_end_time_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_start_time_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_start_time_set)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_use_get)
. = ALIGN(0x1000);
*(.text.ControlFluidSettings_use_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_threads_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_threads_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_resolution_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_resolution_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_preview_resolution_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_preview_resolution_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_viewport_display_mode_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_viewport_display_mode_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_render_display_mode_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_render_display_mode_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_filepath_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_filepath_length)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_filepath_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_memory_estimate_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_memory_estimate_length)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_gravity_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_gravity_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_time_override_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_time_override_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_start_time_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_start_time_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_end_time_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_end_time_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_frame_offset_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_frame_offset_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_simulation_scale_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_simulation_scale_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_simulation_rate_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_simulation_rate_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_viscosity_base_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_viscosity_base_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_viscosity_exponent_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_viscosity_exponent_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_grid_levels_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_grid_levels_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_compressibility_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_compressibility_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_slip_type_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_slip_type_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_partial_slip_factor_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_partial_slip_factor_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_surface_smooth_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_surface_smooth_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_surface_subdivisions_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_surface_subdivisions_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_speed_vectors_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_speed_vectors_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_surface_noobs_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_use_surface_noobs_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_tracer_particles_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_tracer_particles_set)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_initial_velocity_get)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_initial_velocity_set)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_use_animated_mesh_get)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_use_animated_mesh_set)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_volume_initialization_get)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_volume_initialization_set)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_use_get)
. = ALIGN(0x1000);
*(.text.FluidFluidSettings_use_set)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_generate_particles_get)
. = ALIGN(0x1000);
*(.text.DomainFluidSettings_generate_particles_set)
. = ALIGN(0x1000);
*(.text.GreasePencil_layers_begin)
. = ALIGN(0x1000);
*(.text.GreasePencil_layers_next)
. = ALIGN(0x1000);
*(.text.GreasePencil_layers_end)
. = ALIGN(0x1000);
*(.text.GreasePencil_layers_get)
. = ALIGN(0x1000);
*(.text.GreasePencil_layers_lookup_int)
. = ALIGN(0x1000);
*(.text.GreasePencil_layers_lookup_string)
. = ALIGN(0x1000);
*(.text.GPencilLayer_clear_call)
. = ALIGN(0x1000);
*(.text.free_gpencil_frames)
. = ALIGN(0x1000);
*(.text.GPencilLayer_info_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_info_length)
. = ALIGN(0x1000);
*(.text.GPencilLayer_info_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_frames_begin)
. = ALIGN(0x1000);
*(.text.GPencilLayer_frames_next)
. = ALIGN(0x1000);
*(.text.GPencilLayer_frames_end)
. = ALIGN(0x1000);
*(.text.GPencilLayer_frames_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_frames_lookup_int)
. = ALIGN(0x1000);
*(.text.GPencilFrame_clear_call)
. = ALIGN(0x1000);
*(.text.GPencilFrame_select_get)
. = ALIGN(0x1000);
*(.text.GPencilFrame_select_set)
. = ALIGN(0x1000);
*(.text.GPencilFrame_is_edited_get)
. = ALIGN(0x1000);
*(.text.GPencilFrame_is_edited_set)
. = ALIGN(0x1000);
*(.text.GPencilFrame_frame_number_get)
. = ALIGN(0x1000);
*(.text.GPencilFrame_frame_number_set)
. = ALIGN(0x1000);
*(.text.GPencilFrame_strokes_begin)
. = ALIGN(0x1000);
*(.text.GPencilFrame_strokes_next)
. = ALIGN(0x1000);
*(.text.GPencilFrame_strokes_end)
. = ALIGN(0x1000);
*(.text.GPencilFrame_strokes_get)
. = ALIGN(0x1000);
*(.text.GPencilFrame_strokes_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_GPencil_update)
. = ALIGN(0x1000);
*(.text.GPencilStroke_draw_mode_get)
. = ALIGN(0x1000);
*(.text.GPencilStroke_draw_mode_set)
. = ALIGN(0x1000);
*(.text.GPencilStroke_points_begin)
. = ALIGN(0x1000);
*(.text.GPencilStroke_points_next)
. = ALIGN(0x1000);
*(.text.GPencilStroke_points_end)
. = ALIGN(0x1000);
*(.text.GPencilStroke_points_get)
. = ALIGN(0x1000);
*(.text.GPencilStroke_points_length)
. = ALIGN(0x1000);
*(.text.GPencilStroke_points_lookup_int)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_pressure_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_pressure_set)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_co_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_co_set)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GPencilStroke_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilStroke_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilStroke_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilStroke_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilStroke_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilStroke_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_pop_call)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_add_call)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokePoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GPencilFrame_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilFrame_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilFrame_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilFrame_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilFrame_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilFrame_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_remove_call)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_new_call)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilStrokes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_GPencilLayer_active_frame_editable)
. = ALIGN(0x1000);
*(.text.GPencilLayer_active_frame_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_color_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_color_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_alpha_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_alpha_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_line_width_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_line_width_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_use_onion_skinning_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_use_onion_skinning_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_ghost_range_max_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_ghost_range_max_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_hide_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_hide_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_lock_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_lock_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_lock_frame_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_lock_frame_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_select_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_select_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_show_points_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_show_points_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_show_x_ray_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_show_x_ray_set)
. = ALIGN(0x1000);
*(.text.GPencilLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GPencilFrames_copy_call)
. = ALIGN(0x1000);
*(.text.GPencilFrames_remove_call)
. = ALIGN(0x1000);
*(.text.gpencil_layer_delframe)
. = ALIGN(0x1000);
*(.text.GPencilFrames_new_call)
. = ALIGN(0x1000);
*(.text.gpencil_frame_addnew)
. = ALIGN(0x1000);
*(.text.GPencilFrames_rna_type_get)
. = ALIGN(0x1000);
*(.text.GPencilFrames_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GPencilFrames_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GPencilFrames_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GPencilFrames_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GPencilFrames_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_remove_call)
. = ALIGN(0x1000);
*(.text.gpencil_layer_delete)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_new_call)
. = ALIGN(0x1000);
*(.text.gpencil_layer_addnew)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_active_get)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_active_set)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_rna_type_get)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GreasePencilLayers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GreasePencil_clear_call)
. = ALIGN(0x1000);
*(.text.free_gpencil_layers)
. = ALIGN(0x1000);
*(.text.GreasePencil_use_stroke_endpoints_get)
. = ALIGN(0x1000);
*(.text.GreasePencil_use_stroke_endpoints_set)
. = ALIGN(0x1000);
*(.text.GreasePencil_draw_mode_get)
. = ALIGN(0x1000);
*(.text.GreasePencil_draw_mode_set)
. = ALIGN(0x1000);
*(.text.Group_objects_begin)
. = ALIGN(0x1000);
*(.text.Group_objects_next)
. = ALIGN(0x1000);
*(.text.Group_objects_end)
. = ALIGN(0x1000);
*(.text.Group_objects_get)
. = ALIGN(0x1000);
*(.text.Group_objects_lookup_int)
. = ALIGN(0x1000);
*(.text.Group_objects_lookup_string)
. = ALIGN(0x1000);
*(.text.GroupObjects_unlink_call)
. = ALIGN(0x1000);
*(.text.BKE_group_object_unlink)
. = ALIGN(0x1000);
*(.text.GroupObjects_link_call)
. = ALIGN(0x1000);
*(.text.GroupObjects_rna_type_get)
. = ALIGN(0x1000);
*(.text.GroupObjects_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.GroupObjects_rna_properties_next)
. = ALIGN(0x1000);
*(.text.GroupObjects_rna_properties_end)
. = ALIGN(0x1000);
*(.text.GroupObjects_rna_properties_get)
. = ALIGN(0x1000);
*(.text.GroupObjects_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Group_dupli_offset_get)
. = ALIGN(0x1000);
*(.text.Group_dupli_offset_set)
. = ALIGN(0x1000);
*(.text.Group_layers_get)
. = ALIGN(0x1000);
*(.text.Group_layers_set)
. = ALIGN(0x1000);
*(.text.RenderSlot_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderSlot_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderSlot_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderSlot_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderSlot_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderSlot_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderSlot_name_get)
. = ALIGN(0x1000);
*(.text.RenderSlot_name_length)
. = ALIGN(0x1000);
*(.text.RenderSlot_name_set)
. = ALIGN(0x1000);
*(.text.RenderSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RenderSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RenderSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RenderSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RenderSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.RenderSlots_active_get)
. = ALIGN(0x1000);
*(.text.RenderSlots_active_set)
. = ALIGN(0x1000);
*(.text.Image_filepath_from_user_call)
. = ALIGN(0x1000);
*(.text.Image_gl_free_call)
. = ALIGN(0x1000);
*(.text.Image_gl_load_call)
. = ALIGN(0x1000);
*(.text.Image_gl_touch_call)
. = ALIGN(0x1000);
*(.text.glGenTextures)
. = ALIGN(0x1000);
*(.text.Image_scale_call)
. = ALIGN(0x1000);
*(.text.Image_update_call)
. = ALIGN(0x1000);
*(.text.Image_reload_call)
. = ALIGN(0x1000);
*(.text.Image_unpack_call)
. = ALIGN(0x1000);
*(.text.unpackFile)
. = ALIGN(0x1000);
*(.text.unpackImage)
. = ALIGN(0x1000);
*(.text.Image_pack_call)
. = ALIGN(0x1000);
*(.text.BKE_image_memorypack)
. = ALIGN(0x1000);
*(.text.rna_Image_pack)
. = ALIGN(0x1000);
*(.text.Image_save_call)
. = ALIGN(0x1000);
*(.text.writePackedFile .text.BLI_copy)
. = ALIGN(0x1000);
*(.text.IMB_colormanagment_colorspace_from_ibuf_ftype)
. = ALIGN(0x1000);
*(.text.rna_Image_save)
. = ALIGN(0x1000);
*(.text.Image_save_render_call)
. = ALIGN(0x1000);
*(.text.rna_Image_save_render)
. = ALIGN(0x1000);
*(.text.rna_Image_colormanage_update)
. = ALIGN(0x1000);
*(.text.Image_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.Image_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.Image_colorspace_settings_get)
. = ALIGN(0x1000);
*(.text.Image_is_float_get)
. = ALIGN(0x1000);
*(.text.Image_channels_get)
. = ALIGN(0x1000);
*(.text.rna_Image_pixels_get_length)
. = ALIGN(0x1000);
*(.text.Image_pixels_get)
. = ALIGN(0x1000);
*(.text.Image_pixels_set)
. = ALIGN(0x1000);
*(.text.Image_frame_duration_get)
. = ALIGN(0x1000);
*(.text.Image_resolution_get)
. = ALIGN(0x1000);
*(.text.Image_resolution_set)
. = ALIGN(0x1000);
*(.text.Image_size_get)
. = ALIGN(0x1000);
*(.text.Image_depth_get)
. = ALIGN(0x1000);
*(.text.Image_has_data_get)
. = ALIGN(0x1000);
*(.text.Image_render_slots_begin)
. = ALIGN(0x1000);
*(.text.Image_render_slots_next)
. = ALIGN(0x1000);
*(.text.Image_render_slots_end)
. = ALIGN(0x1000);
*(.text.Image_render_slots_get)
. = ALIGN(0x1000);
*(.text.Image_render_slots_lookup_int)
. = ALIGN(0x1000);
*(.text.Image_bindcode_get)
. = ALIGN(0x1000);
*(.text.Image_use_clamp_y_get)
. = ALIGN(0x1000);
*(.text.Image_use_clamp_y_set)
. = ALIGN(0x1000);
*(.text.Image_use_clamp_x_get)
. = ALIGN(0x1000);
*(.text.Image_use_clamp_x_set)
. = ALIGN(0x1000);
*(.text.Image_tiles_y_get)
. = ALIGN(0x1000);
*(.text.Image_tiles_y_set)
. = ALIGN(0x1000);
*(.text.Image_tiles_x_get)
. = ALIGN(0x1000);
*(.text.Image_tiles_x_set)
. = ALIGN(0x1000);
*(.text.Image_use_tiles_get)
. = ALIGN(0x1000);
*(.text.Image_use_tiles_set)
. = ALIGN(0x1000);
*(.text.Image_fps_get)
. = ALIGN(0x1000);
*(.text.Image_fps_set)
. = ALIGN(0x1000);
*(.text.rna_Image_animated_update)
. = ALIGN(0x1000);
*(.text.Image_frame_end_get)
. = ALIGN(0x1000);
*(.text.Image_frame_end_set)
. = ALIGN(0x1000);
*(.text.Image_frame_start_get)
. = ALIGN(0x1000);
*(.text.Image_frame_start_set)
. = ALIGN(0x1000);
*(.text.Image_use_animation_get)
. = ALIGN(0x1000);
*(.text.Image_use_animation_set)
. = ALIGN(0x1000);
*(.text.Image_display_aspect_get)
. = ALIGN(0x1000);
*(.text.Image_display_aspect_set)
. = ALIGN(0x1000);
*(.text.Image_mapping_get)
. = ALIGN(0x1000);
*(.text.Image_mapping_set)
. = ALIGN(0x1000);
*(.text.rna_Image_generated_update)
. = ALIGN(0x1000);
*(.text.Image_generated_color_get)
. = ALIGN(0x1000);
*(.text.Image_generated_color_set)
. = ALIGN(0x1000);
*(.text.Image_use_generated_float_get)
. = ALIGN(0x1000);
*(.text.Image_use_generated_float_set)
. = ALIGN(0x1000);
*(.text.Image_generated_height_get)
. = ALIGN(0x1000);
*(.text.Image_generated_height_set)
. = ALIGN(0x1000);
*(.text.Image_generated_width_get)
. = ALIGN(0x1000);
*(.text.Image_generated_width_set)
. = ALIGN(0x1000);
*(.text.Image_generated_type_get)
. = ALIGN(0x1000);
*(.text.Image_generated_type_set)
. = ALIGN(0x1000);
*(.text.Image_is_dirty_get)
. = ALIGN(0x1000);
*(.text.Image_use_alpha_get)
. = ALIGN(0x1000);
*(.text.Image_use_alpha_set)
. = ALIGN(0x1000);
*(.text.Image_use_view_as_render_get)
. = ALIGN(0x1000);
*(.text.Image_use_view_as_render_set)
. = ALIGN(0x1000);
*(.text.rna_Image_fields_update)
. = ALIGN(0x1000);
*(.text.Image_use_fields_get)
. = ALIGN(0x1000);
*(.text.Image_use_fields_set)
. = ALIGN(0x1000);
*(.text.Image_field_order_get)
. = ALIGN(0x1000);
*(.text.Image_field_order_set)
. = ALIGN(0x1000);
*(.text.Image_packed_file_get)
. = ALIGN(0x1000);
*(.text.Image_type_get)
. = ALIGN(0x1000);
*(.text.Image_source_get)
. = ALIGN(0x1000);
*(.text.Image_source_set)
. = ALIGN(0x1000);
*(.text.rna_Image_source_itemf)
. = ALIGN(0x1000);
*(.text.Image_file_format_get)
. = ALIGN(0x1000);
*(.text.Image_file_format_set)
. = ALIGN(0x1000);
*(.text.Image_filepath_raw_get)
. = ALIGN(0x1000);
*(.text.Image_filepath_raw_length)
. = ALIGN(0x1000);
*(.text.Image_filepath_raw_set)
. = ALIGN(0x1000);
*(.text.rna_Image_reload_update)
. = ALIGN(0x1000);
*(.text.Image_filepath_get)
. = ALIGN(0x1000);
*(.text.Image_filepath_length)
. = ALIGN(0x1000);
*(.text.Image_filepath_set)
. = ALIGN(0x1000);
*(.text.rna_ImageUser_path .text.rna_Node_ImageUser_path)
. = ALIGN(0x1000);
*(.text.ImageUser_multilayer_pass_get)
. = ALIGN(0x1000);
*(.text.ImageUser_multilayer_layer_get)
. = ALIGN(0x1000);
*(.text.rna_ImageUser_update)
. = ALIGN(0x1000);
*(.text.ImageUser_fields_per_frame_get)
. = ALIGN(0x1000);
*(.text.ImageUser_fields_per_frame_set)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_start_get)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_start_set)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_offset_get)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_offset_set)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_duration_get)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_duration_set)
. = ALIGN(0x1000);
*(.text.ImageUser_use_cyclic_get)
. = ALIGN(0x1000);
*(.text.ImageUser_use_cyclic_set)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_current_get)
. = ALIGN(0x1000);
*(.text.ImageUser_frame_current_set)
. = ALIGN(0x1000);
*(.text.ImageUser_use_auto_refresh_get)
. = ALIGN(0x1000);
*(.text.ImageUser_use_auto_refresh_set)
. = ALIGN(0x1000);
*(.text.ImageUser_rna_type_get)
. = ALIGN(0x1000);
*(.text.ImageUser_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ImageUser_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ImageUser_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ImageUser_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ImageUser_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.RenderSlots_active_index_get)
. = ALIGN(0x1000);
*(.text.RenderSlots_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_ShapeKey_path)
. = ALIGN(0x1000);
*(.text.rna_Key_update_data)
. = ALIGN(0x1000);
*(.text.ShapeKey_name_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_name_length)
. = ALIGN(0x1000);
*(.text.ShapeKey_name_set)
. = ALIGN(0x1000);
*(.text.ShapeKey_rna_type_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_frame_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_value_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_value_set)
. = ALIGN(0x1000);
*(.text.rna_ShapeKey_value_range)
. = ALIGN(0x1000);
*(.text.ShapeKey_interpolation_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_interpolation_set)
. = ALIGN(0x1000);
*(.text.ShapeKey_vertex_group_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_vertex_group_length)
. = ALIGN(0x1000);
*(.text.ShapeKey_vertex_group_set)
. = ALIGN(0x1000);
*(.text.ShapeKey_relative_key_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_relative_key_set)
. = ALIGN(0x1000);
*(.text.ShapeKey_mute_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_mute_set)
. = ALIGN(0x1000);
*(.text.ShapeKey_slider_min_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_slider_min_set)
. = ALIGN(0x1000);
*(.text.rna_ShapeKey_slider_min_range)
. = ALIGN(0x1000);
*(.text.ShapeKey_slider_max_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_slider_max_set)
. = ALIGN(0x1000);
*(.text.rna_ShapeKey_slider_max_range)
. = ALIGN(0x1000);
*(.text.ShapeKey_data_next)
. = ALIGN(0x1000);
*(.text.ShapeKey_data_end)
. = ALIGN(0x1000);
*(.text.ShapeKey_data_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_data_length)
. = ALIGN(0x1000);
*(.text.ShapeKey_data_lookup_int)
. = ALIGN(0x1000);
*(.text.ShapeKey_data_begin)
. = ALIGN(0x1000);
*(.text.rna_ShapeKeyPoint_path)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_handle_right_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_handle_right_set)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_handle_left_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_handle_left_set)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_co_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_co_set)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyBezierPoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_tilt_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_tilt_set)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_co_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_co_set)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyCurvePoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ShapeKey_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ShapeKey_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ShapeKey_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ShapeKey_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ShapeKey_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Key_slurph_get)
. = ALIGN(0x1000);
*(.text.Key_slurph_set)
. = ALIGN(0x1000);
*(.text.Key_eval_time_get)
. = ALIGN(0x1000);
*(.text.Key_eval_time_set)
. = ALIGN(0x1000);
*(.text.Key_use_relative_get)
. = ALIGN(0x1000);
*(.text.Key_use_relative_set)
. = ALIGN(0x1000);
*(.text.Key_user_get)
. = ALIGN(0x1000);
*(.text.Key_animation_data_get)
. = ALIGN(0x1000);
*(.text.Key_key_blocks_begin)
. = ALIGN(0x1000);
*(.text.Key_key_blocks_next)
. = ALIGN(0x1000);
*(.text.Key_key_blocks_end)
. = ALIGN(0x1000);
*(.text.Key_key_blocks_get)
. = ALIGN(0x1000);
*(.text.Key_key_blocks_lookup_int)
. = ALIGN(0x1000);
*(.text.Key_key_blocks_lookup_string)
. = ALIGN(0x1000);
*(.text.Key_reference_key_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_co_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_co_set)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ShapeKeyPoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Lamp_draw_update)
. = ALIGN(0x1000);
*(.text.Lamp_type_get)
. = ALIGN(0x1000);
*(.text.Lamp_type_set)
. = ALIGN(0x1000);
*(.text.Lamp_distance_get)
. = ALIGN(0x1000);
*(.text.Lamp_distance_set)
. = ALIGN(0x1000);
*(.text.Lamp_energy_get)
. = ALIGN(0x1000);
*(.text.Lamp_energy_set)
. = ALIGN(0x1000);
*(.text.Lamp_color_get)
. = ALIGN(0x1000);
*(.text.Lamp_color_set)
. = ALIGN(0x1000);
*(.text.rna_Lamp_update)
. = ALIGN(0x1000);
*(.text.Lamp_use_own_layer_get)
. = ALIGN(0x1000);
*(.text.Lamp_use_own_layer_set)
. = ALIGN(0x1000);
*(.text.Lamp_use_negative_get)
. = ALIGN(0x1000);
*(.text.Lamp_use_negative_set)
. = ALIGN(0x1000);
*(.text.Lamp_use_specular_get)
. = ALIGN(0x1000);
*(.text.Lamp_use_specular_set)
. = ALIGN(0x1000);
*(.text.Lamp_use_diffuse_get)
. = ALIGN(0x1000);
*(.text.Lamp_use_diffuse_set)
. = ALIGN(0x1000);
*(.text.Lamp_node_tree_get)
. = ALIGN(0x1000);
*(.text.rna_Lamp_use_nodes_update)
. = ALIGN(0x1000);
*(.text.Lamp_use_nodes_get)
. = ALIGN(0x1000);
*(.text.Lamp_use_nodes_set)
. = ALIGN(0x1000);
*(.text.Lamp_animation_data_get)
. = ALIGN(0x1000);
*(.text.Lamp_texture_slots_begin)
. = ALIGN(0x1000);
*(.text.Lamp_texture_slots_next)
. = ALIGN(0x1000);
*(.text.Lamp_texture_slots_end)
. = ALIGN(0x1000);
*(.text.Lamp_texture_slots_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_shadow_factor_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_shadow_factor_set)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_color_factor_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_color_factor_set)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_use_map_shadow_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_use_map_shadow_set)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_use_map_color_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_use_map_color_set)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_object_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_object_set)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_texture_coords_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlot_texture_coords_set)
. = ALIGN(0x1000);
*(.text.rna_Lamp_refine)
. = ALIGN(0x1000);
*(.text.AreaLamp_gamma_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_gamma_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_size_y_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_size_y_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_size_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_size_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shape_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shape_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_jitter_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_jitter_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_dither_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_dither_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_umbra_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_umbra_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_shadow_layer_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_shadow_layer_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_soft_size_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_soft_size_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_adaptive_threshold_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_adaptive_threshold_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_ray_samples_y_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_ray_samples_y_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_ray_samples_x_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_ray_samples_x_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_ray_sample_method_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_ray_sample_method_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_only_shadow_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_only_shadow_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_color_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_color_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_compression_threshold_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_compression_threshold_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_auto_clip_end_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_auto_clip_end_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_auto_clip_start_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_auto_clip_start_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_ge_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_ge_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_samples_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_samples_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_soft_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_soft_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_bleed_bias_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_bleed_bias_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_bias_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_bias_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_clip_end_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_clip_end_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_clip_start_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_clip_start_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_sample_buffers_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_sample_buffers_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_filter_type_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_filter_type_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_size_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_buffer_size_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_method_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_shadow_method_set)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_shadow_get)
. = ALIGN(0x1000);
*(.text.AreaLamp_use_shadow_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_show_cone_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_show_cone_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_spot_size_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_spot_size_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_spot_blend_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_spot_blend_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_halo_step_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_halo_step_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_halo_intensity_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_halo_intensity_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_halo_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_halo_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_square_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_square_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_shadow_layer_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_shadow_layer_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_soft_size_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_soft_size_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_adaptive_threshold_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_adaptive_threshold_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_ray_samples_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_ray_samples_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_ray_sample_method_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_ray_sample_method_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_only_shadow_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_only_shadow_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_color_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_color_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_compression_threshold_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_compression_threshold_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_auto_clip_end_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_auto_clip_end_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_auto_clip_start_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_auto_clip_start_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_ge_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_ge_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_samples_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_samples_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_soft_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_soft_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_bleed_bias_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_bleed_bias_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_bias_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_bias_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_clip_end_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_clip_end_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_clip_start_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_clip_start_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_sample_buffers_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_sample_buffers_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_filter_type_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_filter_type_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_size_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_buffer_size_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_method_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_shadow_method_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_shadow_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_shadow_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_quadratic_attenuation_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_quadratic_attenuation_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_linear_attenuation_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_linear_attenuation_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_sphere_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_use_sphere_set)
. = ALIGN(0x1000);
*(.text.SpotLamp_falloff_curve_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_falloff_type_get)
. = ALIGN(0x1000);
*(.text.SpotLamp_falloff_type_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_frustum_size_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_frustum_size_set)
. = ALIGN(0x1000);
*(.text.SunLamp_sky_get)
. = ALIGN(0x1000);
*(.text.SunLamp_use_shadow_layer_get)
. = ALIGN(0x1000);
*(.text.SunLamp_use_shadow_layer_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_soft_size_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_soft_size_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_adaptive_threshold_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_adaptive_threshold_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_ray_samples_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_ray_samples_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_ray_sample_method_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_ray_sample_method_set)
. = ALIGN(0x1000);
*(.text.SunLamp_use_only_shadow_get)
. = ALIGN(0x1000);
*(.text.SunLamp_use_only_shadow_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_color_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_color_set)
. = ALIGN(0x1000);
*(.text.SunLamp_compression_threshold_get)
. = ALIGN(0x1000);
*(.text.SunLamp_compression_threshold_set)
. = ALIGN(0x1000);
*(.text.SunLamp_use_auto_clip_end_get)
. = ALIGN(0x1000);
*(.text.SunLamp_use_auto_clip_end_set)
. = ALIGN(0x1000);
*(.text.SunLamp_use_auto_clip_start_get)
. = ALIGN(0x1000);
*(.text.SunLamp_use_auto_clip_start_set)
. = ALIGN(0x1000);
*(.text.SunLamp_ge_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.SunLamp_ge_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_samples_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_samples_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_soft_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_soft_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_bleed_bias_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_bleed_bias_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_bias_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_bias_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_clip_end_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_clip_end_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_clip_start_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_clip_start_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_sample_buffers_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_sample_buffers_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_filter_type_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_filter_type_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_size_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_buffer_size_set)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_method_get)
. = ALIGN(0x1000);
*(.text.SunLamp_shadow_method_set)
. = ALIGN(0x1000);
*(.text.SunLamp_use_shadow_get)
. = ALIGN(0x1000);
*(.text.SunLamp_use_shadow_set)
. = ALIGN(0x1000);
*(.text.PointLamp_use_shadow_layer_get)
. = ALIGN(0x1000);
*(.text.PointLamp_use_shadow_layer_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_soft_size_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_soft_size_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_adaptive_threshold_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_adaptive_threshold_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_ray_samples_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_ray_samples_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_ray_sample_method_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_ray_sample_method_set)
. = ALIGN(0x1000);
*(.text.PointLamp_use_only_shadow_get)
. = ALIGN(0x1000);
*(.text.PointLamp_use_only_shadow_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_color_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_color_set)
. = ALIGN(0x1000);
*(.text.PointLamp_compression_threshold_get)
. = ALIGN(0x1000);
*(.text.PointLamp_compression_threshold_set)
. = ALIGN(0x1000);
*(.text.PointLamp_use_auto_clip_end_get)
. = ALIGN(0x1000);
*(.text.PointLamp_use_auto_clip_end_set)
. = ALIGN(0x1000);
*(.text.PointLamp_use_auto_clip_start_get)
. = ALIGN(0x1000);
*(.text.PointLamp_use_auto_clip_start_set)
. = ALIGN(0x1000);
*(.text.PointLamp_ge_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.PointLamp_ge_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_type_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_type_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_samples_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_samples_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_soft_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_soft_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_bleed_bias_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_bleed_bias_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_bias_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_bias_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_clip_end_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_clip_end_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_clip_start_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_clip_start_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_sample_buffers_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_sample_buffers_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_filter_type_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_filter_type_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_size_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_buffer_size_set)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_method_get)
. = ALIGN(0x1000);
*(.text.PointLamp_shadow_method_set)
. = ALIGN(0x1000);
*(.text.PointLamp_use_shadow_get)
. = ALIGN(0x1000);
*(.text.PointLamp_use_shadow_set)
. = ALIGN(0x1000);
*(.text.PointLamp_quadratic_attenuation_get)
. = ALIGN(0x1000);
*(.text.PointLamp_quadratic_attenuation_set)
. = ALIGN(0x1000);
*(.text.PointLamp_linear_attenuation_get)
. = ALIGN(0x1000);
*(.text.PointLamp_linear_attenuation_set)
. = ALIGN(0x1000);
*(.text.PointLamp_use_sphere_get)
. = ALIGN(0x1000);
*(.text.PointLamp_use_sphere_set)
. = ALIGN(0x1000);
*(.text.PointLamp_falloff_curve_get)
. = ALIGN(0x1000);
*(.text.PointLamp_falloff_type_get)
. = ALIGN(0x1000);
*(.text.PointLamp_falloff_type_set)
. = ALIGN(0x1000);
*(.text.Lamp_active_texture_index_get)
. = ALIGN(0x1000);
*(.text.Lamp_active_texture_index_set)
. = ALIGN(0x1000);
*(.text.rna_Lamp_sky_update)
. = ALIGN(0x1000);
*(.text.LampSkySettings_use_atmosphere_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_use_atmosphere_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_use_sky_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_use_sky_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_exposure_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_exposure_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_blend_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_blend_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_distance_factor_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_distance_factor_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_extinction_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_extinction_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_inscattering_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_inscattering_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_turbidity_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_atmosphere_turbidity_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sun_intensity_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sun_intensity_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_backscattered_light_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_backscattered_light_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sun_size_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sun_size_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sun_brightness_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sun_brightness_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_spread_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_spread_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_horizon_brightness_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_horizon_brightness_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_blend_type_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_blend_type_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_color_space_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_sky_color_space_set)
. = ALIGN(0x1000);
*(.text.LampSkySettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LampSkySettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LampSkySettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LampSkySettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LampSkySettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_clear_call)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_create_call)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_add_call)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LampTextureSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Lamp_active_texture_get)
. = ALIGN(0x1000);
*(.text.set_current_lamp_texture .text.Lamp_active_texture_set)
. = ALIGN(0x1000);
*(.text.rna_Lattice_update_size)
. = ALIGN(0x1000);
*(.text.rna_Lattice_size_editable)
. = ALIGN(0x1000);
*(.text.Lattice_points_u_get)
. = ALIGN(0x1000);
*(.text.Lattice_points_u_set)
. = ALIGN(0x1000);
*(.text.Lattice_points_v_get)
. = ALIGN(0x1000);
*(.text.Lattice_points_v_set)
. = ALIGN(0x1000);
*(.text.Lattice_points_w_get)
. = ALIGN(0x1000);
*(.text.Lattice_points_w_set)
. = ALIGN(0x1000);
*(.text.rna_Lattice_update_data_editlatt)
. = ALIGN(0x1000);
*(.text.Lattice_interpolation_type_u_get)
. = ALIGN(0x1000);
*(.text.Lattice_interpolation_type_u_set)
. = ALIGN(0x1000);
*(.text.Lattice_interpolation_type_v_get)
. = ALIGN(0x1000);
*(.text.Lattice_interpolation_type_v_set)
. = ALIGN(0x1000);
*(.text.Lattice_interpolation_type_w_get)
. = ALIGN(0x1000);
*(.text.Lattice_interpolation_type_w_set)
. = ALIGN(0x1000);
*(.text.Lattice_use_outside_get)
. = ALIGN(0x1000);
*(.text.Lattice_use_outside_set)
. = ALIGN(0x1000);
*(.text.Lattice_vertex_group_get)
. = ALIGN(0x1000);
*(.text.Lattice_vertex_group_length)
. = ALIGN(0x1000);
*(.text.Lattice_vertex_group_set)
. = ALIGN(0x1000);
*(.text.Lattice_shape_keys_get)
. = ALIGN(0x1000);
*(.text.Lattice_points_begin)
. = ALIGN(0x1000);
*(.text.Lattice_points_next)
. = ALIGN(0x1000);
*(.text.Lattice_points_end)
. = ALIGN(0x1000);
*(.text.Lattice_points_get)
. = ALIGN(0x1000);
*(.text.rna_LatticePoint_path)
. = ALIGN(0x1000);
*(.text.LatticePoint_groups_begin)
. = ALIGN(0x1000);
*(.text.LatticePoint_groups_next)
. = ALIGN(0x1000);
*(.text.LatticePoint_groups_end)
. = ALIGN(0x1000);
*(.text.LatticePoint_groups_get)
. = ALIGN(0x1000);
*(.text.rna_Lattice_update_data)
. = ALIGN(0x1000);
*(.text.LatticePoint_weight_softbody_get)
. = ALIGN(0x1000);
*(.text.LatticePoint_weight_softbody_set)
. = ALIGN(0x1000);
*(.text.LatticePoint_co_deform_get)
. = ALIGN(0x1000);
*(.text.LatticePoint_co_deform_set)
. = ALIGN(0x1000);
*(.text.LatticePoint_co_get)
. = ALIGN(0x1000);
*(.text.LatticePoint_select_get)
. = ALIGN(0x1000);
*(.text.LatticePoint_select_set)
. = ALIGN(0x1000);
*(.text.LatticePoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.LatticePoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LatticePoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LatticePoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LatticePoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LatticePoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Lattice_transform_call)
. = ALIGN(0x1000);
*(.text.BKE_lattice_transform)
. = ALIGN(0x1000);
*(.text.Lattice_animation_data_get)
. = ALIGN(0x1000);
*(.text.Lattice_is_editmode_get)
. = ALIGN(0x1000);
*(.text.LineStyleModifier_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LineStyleModifier_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LineStyleModifier_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LineStyleModifier_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LineStyleModifier_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.LineStyleModifier_rna_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_texture_slots_begin)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_texture_slots_next)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_texture_slots_end)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_texture_slots_get)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_update)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_diffuse_color_factor_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_diffuse_color_factor_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_alpha_factor_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_alpha_factor_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_texture_coords_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_texture_coords_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_use_tips_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_use_tips_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_use_map_alpha_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_use_map_alpha_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_use_map_color_diffuse_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_use_map_color_diffuse_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_z_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_z_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_y_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_y_set)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_x_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlot_mapping_x_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_geometry_modifier_refine)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_geometry_modifier_path)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_scale_x_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_scale_x_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_scale_y_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_scale_y_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_angle_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_angle_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_u_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_u_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_x_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_x_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_y_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_pivot_y_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DTransform_type_get)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_default_shader .text.rna_LineStyle_use_nodes_update)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_nodes_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_nodes_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_node_tree_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_texture_spacing_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_texture_spacing_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_texture_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_texture_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_gap3_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_gap3_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_dash3_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_dash3_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_gap2_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_gap2_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_dash2_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_dash2_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_gap1_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_gap1_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_dash1_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_dash1_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_caps_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_caps_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_dashed_line_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_dashed_line_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_integration_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_integration_type_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_sort_order_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_sort_order_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_sort_key_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_sort_key_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_sorting_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_sorting_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_material_boundary_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_material_boundary_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_gap3_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_gap3_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_dash3_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_dash3_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_gap2_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_gap2_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_dash2_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_dash2_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_gap1_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_gap1_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_dash1_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_dash1_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_split_pattern_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_split_pattern_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_chain_count_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_chain_count_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_chain_count_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_chain_count_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_length_max_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_length_max_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_length_max_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_length_max_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_length_min_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_length_min_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_length_min_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_length_min_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_angle_max_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_angle_max_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_angle_max_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_angle_max_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_angle_min_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_angle_min_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_angle_min_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_angle_min_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_length_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_split_length_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_split_length_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_split_length_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_same_object_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_same_object_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_rounds_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_rounds_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_chaining_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_chaining_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_chaining_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_use_chaining_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_geometry_modifiers_begin)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_geometry_modifiers_next)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_geometry_modifiers_end)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_geometry_modifiers_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_geometry_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_modifiers_begin)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_modifiers_next)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_modifiers_end)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_modifiers_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_thickness_modifier_refine)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_thickness_modifier_path)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_range_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_range_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_range_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_range_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_value_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_value_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_value_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_value_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromCamera_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_range_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_range_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_range_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_range_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_value_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_value_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_value_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_value_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_target_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_target_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_DistanceFromObject_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_material_attribute_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_material_attribute_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_value_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_value_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_value_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_value_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Material_type_get)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_alpha_modifier_refine)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_alpha_modifier_path)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_range_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_range_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_range_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_range_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromCamera_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_AlongStroke_type_get)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_color_modifier_refine)
. = ALIGN(0x1000);
*(.text.rna_LineStyle_color_modifier_path)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_color_ramp_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_range_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_range_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_range_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_range_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromCamera_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_color_ramp_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_AlongStroke_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_material_attribute_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_material_attribute_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_color_ramp_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_use_ramp_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_use_ramp_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_Material_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_color_ramp_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_range_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_range_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_range_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_range_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_target_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_target_set)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifier_DistanceFromObject_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_material_attribute_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_material_attribute_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_Material_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_range_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_range_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_range_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_range_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_target_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_target_set)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifier_DistanceFromObject_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_mapping_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_mapping_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_invert_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_invert_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_curve_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_value_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_value_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_value_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_value_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_AlongStroke_type_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_modifiers_begin)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_modifiers_next)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_modifiers_end)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_modifiers_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_new_call)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_alpha_modifier_add)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LineStyleAlphaModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_new_call)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_color_modifier_add)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LineStyleColorModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_modifiers_begin)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_modifiers_next)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_modifiers_end)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_modifiers_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_ratio_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_ratio_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_position_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_position_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_thickness_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_alpha_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_color_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_panel_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_panel_set)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_active_texture_index_get)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_active_texture_index_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_start_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_start_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_end_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_end_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_x_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_x_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_y_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_y_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_2DOffset_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_shape_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_shape_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_rounds_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_rounds_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_backbone_length_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_backbone_length_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_random_radius_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_random_radius_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_random_center_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_random_center_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_random_backbone_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_random_backbone_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Blueprint_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_offset_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_offset_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_GuidingLines_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_error_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_error_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Polygonalization_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_tip_length_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_tip_length_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_TipRemover_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_backbone_length_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_backbone_length_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BackboneStretcher_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_frequency_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_frequency_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_amplitude_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_amplitude_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_octaves_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_octaves_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_angle_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_angle_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_seed_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_seed_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise2D_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_frequency_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_frequency_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_amplitude_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_amplitude_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_octaves_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_octaves_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_angle_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_angle_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_seed_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_seed_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_PerlinNoise1D_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_amplitude_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_amplitude_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_scale_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_scale_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_octaves_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_octaves_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_smooth_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_smooth_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_use_pure_random_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_use_pure_random_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SpatialNoise_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_wavelength_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_wavelength_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_amplitude_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_amplitude_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_phase_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_phase_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_SinusDisplacement_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_error_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_error_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_BezierCurve_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_blend_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_blend_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_influence_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_influence_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_orientation_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_orientation_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_thickness_min_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_thickness_min_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_thickness_max_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_thickness_max_set)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifier_Calligraphy_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_name_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_name_length)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_name_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_use_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_use_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_expanded_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_expanded_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_sampling_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_sampling_set)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifier_Sampling_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_new_call)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_geometry_modifier_add)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LineStyleGeometryModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_new_call)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_thickness_modifier_add)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LineStyleThicknessModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_clear_call)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_create_call)
. = ALIGN(0x1000);
*(.text.rna_mtex_texture_slots_create)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_add_call)
. = ALIGN(0x1000);
*(.text.rna_mtex_texture_slots_add)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LineStyleTextureSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FreestyleLineStyle_active_texture_get)
. = ALIGN(0x1000);
*(.text.set_current_linestyle_texture .text.FreestyleLineStyle_active_texture_set)
. = ALIGN(0x1000);
*(.text.BlendData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendData_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendData_filepath_get)
. = ALIGN(0x1000);
*(.text.BlendData_filepath_length)
. = ALIGN(0x1000);
*(.text.BlendData_is_dirty_get)
. = ALIGN(0x1000);
*(.text.BlendData_is_saved_get)
. = ALIGN(0x1000);
*(.text.BlendData_use_autopack_get)
. = ALIGN(0x1000);
*(.text.BlendData_use_autopack_set)
. = ALIGN(0x1000);
*(.text.BlendData_version_get)
. = ALIGN(0x1000);
*(.text.BlendData_cameras_begin)
. = ALIGN(0x1000);
*(.text.BlendData_cameras_next)
. = ALIGN(0x1000);
*(.text.BlendData_cameras_end)
. = ALIGN(0x1000);
*(.text.BlendData_cameras_get)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataCameras_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendData_linestyles_begin)
. = ALIGN(0x1000);
*(.text.BlendData_linestyles_next)
. = ALIGN(0x1000);
*(.text.BlendData_linestyles_end)
. = ALIGN(0x1000);
*(.text.BlendData_linestyles_get)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_new_call)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_new)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataLineStyles_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataMasks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_load_call)
. = ALIGN(0x1000);
*(.text.BKE_movieclip_file_add)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_movieclip_unlink)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataMovieClips_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataGreasePencils_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_new_call)
. = ALIGN(0x1000);
*(.text.psys_new_settings)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataParticles_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataActions_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataActions_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataActions_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataActions_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataActions_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataActions_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataActions_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataActions_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataActions_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataActions_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataArmatures_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataSounds_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataSpeakers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_load_call)
. = ALIGN(0x1000);
*(.text.text_from_buf)
. = ALIGN(0x1000);
*(.text.BKE_text_load_ex)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_text_unlink)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_new_call)
. = ALIGN(0x1000);
*(.text.BKE_text_add)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataTexts_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_group_unlink)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataGroups_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataWorlds_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataBrushes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_new_call)
. = ALIGN(0x1000);
*(.text.add_texture)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataTextures_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_load_call)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataFonts_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataMetaBalls_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_new_call)
. = ALIGN(0x1000);
*(.text.BKE_vfont_load)
. = ALIGN(0x1000);
*(.text.BKE_curve_add)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataCurves_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_new_call)
. = ALIGN(0x1000);
*(.text.BKE_lattice_resize)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataLattices_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataImages_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataImages_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataImages_load_call)
. = ALIGN(0x1000);
*(.text.BKE_image_load)
. = ALIGN(0x1000);
*(.text.BlendDataImages_new_call)
. = ALIGN(0x1000);
*(.text.BKE_image_add_generated)
. = ALIGN(0x1000);
*(.text.BlendDataImages_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataImages_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataImages_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataImages_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataImages_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataImages_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataImages_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataWindowManagers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataScreens_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataLibraries_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_new_call)
. = ALIGN(0x1000);
*(.text.BKE_lamp_add)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataLamps_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_new_from_object_call)
. = ALIGN(0x1000);
*(.text.BKE_mesh_new_from_object)
. = ALIGN(0x1000);
*(.text.BKE_mesh_from_nurbs_displist)
. = ALIGN(0x1000);
*(.text.BKE_mesh_from_metaball)
. = ALIGN(0x1000);
*(.text.DM_to_mesh)
. = ALIGN(0x1000);
*(.text.BKE_displist_make_mball_forRender)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_new_call)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataMeshes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_new_call)
. = ALIGN(0x1000);
*(.text.rna_Main_nodetree_type_itemf)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataNodeTrees_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_remove_call)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_new_call)
. = ALIGN(0x1000);
*(.text.BKE_material_add)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataMaterials_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_object_unlink .text.sca_remove_ob_poin .text.BKE_mball_is_basis_for)
. = ALIGN(0x1000);
*(.text.unlink_controllers .text.unlink_actuators)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_new_call)
. = ALIGN(0x1000);
*(.text.BKE_object_add_only_object)
. = ALIGN(0x1000);
*(.text.rna_Main_objects_new)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataObjects_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendData_masks_begin)
. = ALIGN(0x1000);
*(.text.BlendData_masks_next)
. = ALIGN(0x1000);
*(.text.BlendData_masks_end)
. = ALIGN(0x1000);
*(.text.BlendData_masks_get)
. = ALIGN(0x1000);
*(.text.BlendData_movieclips_begin)
. = ALIGN(0x1000);
*(.text.BlendData_movieclips_next)
. = ALIGN(0x1000);
*(.text.BlendData_movieclips_end)
. = ALIGN(0x1000);
*(.text.BlendData_movieclips_get)
. = ALIGN(0x1000);
*(.text.BlendData_grease_pencil_begin)
. = ALIGN(0x1000);
*(.text.BlendData_grease_pencil_next)
. = ALIGN(0x1000);
*(.text.BlendData_grease_pencil_end)
. = ALIGN(0x1000);
*(.text.BlendData_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.BlendData_particles_begin)
. = ALIGN(0x1000);
*(.text.BlendData_particles_next)
. = ALIGN(0x1000);
*(.text.BlendData_particles_end)
. = ALIGN(0x1000);
*(.text.BlendData_particles_get)
. = ALIGN(0x1000);
*(.text.BlendData_actions_begin)
. = ALIGN(0x1000);
*(.text.BlendData_actions_next)
. = ALIGN(0x1000);
*(.text.BlendData_actions_end)
. = ALIGN(0x1000);
*(.text.BlendData_actions_get)
. = ALIGN(0x1000);
*(.text.BlendData_armatures_begin)
. = ALIGN(0x1000);
*(.text.BlendData_armatures_next)
. = ALIGN(0x1000);
*(.text.BlendData_armatures_end)
. = ALIGN(0x1000);
*(.text.BlendData_armatures_get)
. = ALIGN(0x1000);
*(.text.BlendData_sounds_begin)
. = ALIGN(0x1000);
*(.text.BlendData_sounds_next)
. = ALIGN(0x1000);
*(.text.BlendData_sounds_end)
. = ALIGN(0x1000);
*(.text.BlendData_sounds_get)
. = ALIGN(0x1000);
*(.text.BlendData_speakers_begin)
. = ALIGN(0x1000);
*(.text.BlendData_speakers_next)
. = ALIGN(0x1000);
*(.text.BlendData_speakers_end)
. = ALIGN(0x1000);
*(.text.BlendData_speakers_get)
. = ALIGN(0x1000);
*(.text.BlendData_texts_begin)
. = ALIGN(0x1000);
*(.text.BlendData_texts_next)
. = ALIGN(0x1000);
*(.text.BlendData_texts_end)
. = ALIGN(0x1000);
*(.text.BlendData_texts_get)
. = ALIGN(0x1000);
*(.text.BlendData_scripts_begin)
. = ALIGN(0x1000);
*(.text.BlendData_scripts_next)
. = ALIGN(0x1000);
*(.text.BlendData_scripts_end)
. = ALIGN(0x1000);
*(.text.BlendData_scripts_get)
. = ALIGN(0x1000);
*(.text.BlendData_shape_keys_begin)
. = ALIGN(0x1000);
*(.text.BlendData_shape_keys_next)
. = ALIGN(0x1000);
*(.text.BlendData_shape_keys_end)
. = ALIGN(0x1000);
*(.text.BlendData_shape_keys_get)
. = ALIGN(0x1000);
*(.text.BlendData_groups_begin)
. = ALIGN(0x1000);
*(.text.BlendData_groups_next)
. = ALIGN(0x1000);
*(.text.BlendData_groups_end)
. = ALIGN(0x1000);
*(.text.BlendData_groups_get)
. = ALIGN(0x1000);
*(.text.BlendData_worlds_begin)
. = ALIGN(0x1000);
*(.text.BlendData_worlds_next)
. = ALIGN(0x1000);
*(.text.BlendData_worlds_end)
. = ALIGN(0x1000);
*(.text.BlendData_worlds_get)
. = ALIGN(0x1000);
*(.text.BlendData_brushes_begin)
. = ALIGN(0x1000);
*(.text.BlendData_brushes_next)
. = ALIGN(0x1000);
*(.text.BlendData_brushes_end)
. = ALIGN(0x1000);
*(.text.BlendData_brushes_get)
. = ALIGN(0x1000);
*(.text.BlendData_textures_begin)
. = ALIGN(0x1000);
*(.text.BlendData_textures_next)
. = ALIGN(0x1000);
*(.text.BlendData_textures_end)
. = ALIGN(0x1000);
*(.text.BlendData_textures_get)
. = ALIGN(0x1000);
*(.text.BlendData_fonts_begin)
. = ALIGN(0x1000);
*(.text.BlendData_fonts_next)
. = ALIGN(0x1000);
*(.text.BlendData_fonts_end)
. = ALIGN(0x1000);
*(.text.BlendData_fonts_get)
. = ALIGN(0x1000);
*(.text.BlendData_metaballs_begin)
. = ALIGN(0x1000);
*(.text.BlendData_metaballs_next)
. = ALIGN(0x1000);
*(.text.BlendData_metaballs_end)
. = ALIGN(0x1000);
*(.text.BlendData_metaballs_get)
. = ALIGN(0x1000);
*(.text.BlendData_curves_begin)
. = ALIGN(0x1000);
*(.text.BlendData_curves_next)
. = ALIGN(0x1000);
*(.text.BlendData_curves_end)
. = ALIGN(0x1000);
*(.text.BlendData_curves_get)
. = ALIGN(0x1000);
*(.text.BlendData_lattices_begin)
. = ALIGN(0x1000);
*(.text.BlendData_lattices_next)
. = ALIGN(0x1000);
*(.text.BlendData_lattices_end)
. = ALIGN(0x1000);
*(.text.BlendData_lattices_get)
. = ALIGN(0x1000);
*(.text.BlendData_images_begin)
. = ALIGN(0x1000);
*(.text.BlendData_images_next)
. = ALIGN(0x1000);
*(.text.BlendData_images_end)
. = ALIGN(0x1000);
*(.text.BlendData_images_get)
. = ALIGN(0x1000);
*(.text.BlendData_window_managers_begin)
. = ALIGN(0x1000);
*(.text.BlendData_window_managers_next)
. = ALIGN(0x1000);
*(.text.BlendData_window_managers_end)
. = ALIGN(0x1000);
*(.text.BlendData_window_managers_get)
. = ALIGN(0x1000);
*(.text.BlendData_screens_begin)
. = ALIGN(0x1000);
*(.text.BlendData_screens_next)
. = ALIGN(0x1000);
*(.text.BlendData_screens_end)
. = ALIGN(0x1000);
*(.text.BlendData_screens_get)
. = ALIGN(0x1000);
*(.text.BlendData_libraries_begin)
. = ALIGN(0x1000);
*(.text.BlendData_libraries_next)
. = ALIGN(0x1000);
*(.text.BlendData_libraries_end)
. = ALIGN(0x1000);
*(.text.BlendData_libraries_get)
. = ALIGN(0x1000);
*(.text.BlendData_lamps_begin)
. = ALIGN(0x1000);
*(.text.BlendData_lamps_next)
. = ALIGN(0x1000);
*(.text.BlendData_lamps_end)
. = ALIGN(0x1000);
*(.text.BlendData_lamps_get)
. = ALIGN(0x1000);
*(.text.BlendData_meshes_begin)
. = ALIGN(0x1000);
*(.text.BlendData_meshes_next)
. = ALIGN(0x1000);
*(.text.BlendData_meshes_end)
. = ALIGN(0x1000);
*(.text.BlendData_meshes_get)
. = ALIGN(0x1000);
*(.text.BlendData_node_groups_begin)
. = ALIGN(0x1000);
*(.text.BlendData_node_groups_next)
. = ALIGN(0x1000);
*(.text.BlendData_node_groups_end)
. = ALIGN(0x1000);
*(.text.BlendData_node_groups_get)
. = ALIGN(0x1000);
*(.text.BlendData_materials_begin)
. = ALIGN(0x1000);
*(.text.BlendData_materials_next)
. = ALIGN(0x1000);
*(.text.BlendData_materials_end)
. = ALIGN(0x1000);
*(.text.BlendData_materials_get)
. = ALIGN(0x1000);
*(.text.BlendData_objects_begin)
. = ALIGN(0x1000);
*(.text.BlendData_objects_next)
. = ALIGN(0x1000);
*(.text.BlendData_objects_end)
. = ALIGN(0x1000);
*(.text.BlendData_objects_get)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_tag_call)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_scene_unlink)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_new_call)
. = ALIGN(0x1000);
*(.text.BKE_scene_add)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_is_updated_get)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_rna_type_get)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BlendDataScenes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BlendData_scenes_begin)
. = ALIGN(0x1000);
*(.text.BlendData_scenes_next)
. = ALIGN(0x1000);
*(.text.BlendData_scenes_end)
. = ALIGN(0x1000);
*(.text.BlendData_scenes_get)
. = ALIGN(0x1000);
*(.text.MaskParent_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskParent_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskParent_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskParent_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskParent_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaskParent_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_Mask_update_parent)
. = ALIGN(0x1000);
*(.text.MaskParent_id_get)
. = ALIGN(0x1000);
*(.text.MaskParent_id_set)
. = ALIGN(0x1000);
*(.text.rna_MaskParent_id_typef)
. = ALIGN(0x1000);
*(.text.MaskParent_id_type_get)
. = ALIGN(0x1000);
*(.text.MaskParent_id_type_set)
. = ALIGN(0x1000);
*(.text.MaskParent_type_get)
. = ALIGN(0x1000);
*(.text.MaskParent_type_set)
. = ALIGN(0x1000);
*(.text.MaskParent_parent_get)
. = ALIGN(0x1000);
*(.text.MaskParent_parent_length)
. = ALIGN(0x1000);
*(.text.MaskParent_parent_set)
. = ALIGN(0x1000);
*(.text.MaskParent_sub_parent_get)
. = ALIGN(0x1000);
*(.text.MaskParent_sub_parent_length)
. = ALIGN(0x1000);
*(.text.MaskParent_sub_parent_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_Mask_update_data)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_u_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_u_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_weight_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_weight_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_select_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePointUW_select_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_left_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_left_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_co_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_co_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_right_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_right_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_type_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_type_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_left_type_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_left_type_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_right_type_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_handle_right_type_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_weight_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_weight_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_select_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_select_set)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_parent_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_points_begin)
. = ALIGN(0x1000);
*(.text.MaskSpline_points_next)
. = ALIGN(0x1000);
*(.text.MaskSpline_points_end)
. = ALIGN(0x1000);
*(.text.MaskSpline_points_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_points_length)
. = ALIGN(0x1000);
*(.text.MaskSpline_points_lookup_int)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_mask_layer_shape_changed_remove)
. = ALIGN(0x1000);
*(.text.rna_MaskSpline_point_remove)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_add_call)
. = ALIGN(0x1000);
*(.text.BKE_mask_layer_shape_changed_add)
. = ALIGN(0x1000);
*(.text.BKE_mask_calc_handle_point_auto)
. = ALIGN(0x1000);
*(.text.rna_MaskSpline_points_add)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoints_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MaskLayer_path)
. = ALIGN(0x1000);
*(.text.MaskLayer_name_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_name_length)
. = ALIGN(0x1000);
*(.text.MaskLayer_name_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_splines_begin)
. = ALIGN(0x1000);
*(.text.MaskLayer_splines_next)
. = ALIGN(0x1000);
*(.text.MaskLayer_splines_end)
. = ALIGN(0x1000);
*(.text.MaskLayer_splines_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_splines_lookup_int)
. = ALIGN(0x1000);
*(.text.MaskLayer_hide_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_hide_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_hide_select_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_hide_select_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_hide_render_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_hide_render_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_select_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_select_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_alpha_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_alpha_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_blend_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_blend_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_invert_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_invert_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_falloff_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_falloff_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_use_fill_holes_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_use_fill_holes_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_use_fill_overlap_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_use_fill_overlap_set)
. = ALIGN(0x1000);
*(.text.MaskLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Mask_animation_data_get)
. = ALIGN(0x1000);
*(.text.Mask_frame_end_get)
. = ALIGN(0x1000);
*(.text.Mask_frame_end_set)
. = ALIGN(0x1000);
*(.text.Mask_frame_start_get)
. = ALIGN(0x1000);
*(.text.Mask_frame_start_set)
. = ALIGN(0x1000);
*(.text.Mask_active_layer_index_get)
. = ALIGN(0x1000);
*(.text.Mask_active_layer_index_set)
. = ALIGN(0x1000);
*(.text.rna_Mask_layer_active_index_range)
. = ALIGN(0x1000);
*(.text.Mask_layers_begin)
. = ALIGN(0x1000);
*(.text.Mask_layers_next)
. = ALIGN(0x1000);
*(.text.Mask_layers_end)
. = ALIGN(0x1000);
*(.text.Mask_layers_get)
. = ALIGN(0x1000);
*(.text.MaskLayers_clear_call)
. = ALIGN(0x1000);
*(.text.MaskLayers_remove_call)
. = ALIGN(0x1000);
*(.text.MaskLayers_new_call)
. = ALIGN(0x1000);
*(.text.MaskLayers_active_get)
. = ALIGN(0x1000);
*(.text.MaskLayers_active_set)
. = ALIGN(0x1000);
*(.text.MaskLayers_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaskLayers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskLayers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskLayers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskLayers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskLayers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaskSpline_use_self_intersection_check_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_use_self_intersection_check_set)
. = ALIGN(0x1000);
*(.text.MaskSpline_use_fill_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_use_fill_set)
. = ALIGN(0x1000);
*(.text.MaskSpline_use_cyclic_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_use_cyclic_set)
. = ALIGN(0x1000);
*(.text.MaskSpline_weight_interpolation_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_weight_interpolation_set)
. = ALIGN(0x1000);
*(.text.MaskSpline_offset_mode_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_offset_mode_set)
. = ALIGN(0x1000);
*(.text.MaskSpline_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskSpline_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskSpline_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskSpline_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskSpline_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaskSplines_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_mask_spline_remove)
. = ALIGN(0x1000);
*(.text.MaskSplines_new_call)
. = ALIGN(0x1000);
*(.text.MaskSplines_active_point_get)
. = ALIGN(0x1000);
*(.text.MaskSplines_active_point_set)
. = ALIGN(0x1000);
*(.text.MaskSplines_active_get)
. = ALIGN(0x1000);
*(.text.MaskSplines_active_set)
. = ALIGN(0x1000);
*(.text.MaskSplines_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaskSplines_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaskSplines_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaskSplines_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaskSplines_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaskSplines_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_feather_points_begin)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_feather_points_next)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_feather_points_end)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_feather_points_get)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_feather_points_length)
. = ALIGN(0x1000);
*(.text.MaskSplinePoint_feather_points_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_Material_update)
. = ALIGN(0x1000);
*(.text.Material_specular_slope_get)
. = ALIGN(0x1000);
*(.text.Material_specular_slope_set)
. = ALIGN(0x1000);
*(.text.Material_specular_toon_smooth_get)
. = ALIGN(0x1000);
*(.text.Material_specular_toon_smooth_set)
. = ALIGN(0x1000);
*(.text.Material_specular_toon_size_get)
. = ALIGN(0x1000);
*(.text.Material_specular_toon_size_set)
. = ALIGN(0x1000);
*(.text.Material_specular_ior_get)
. = ALIGN(0x1000);
*(.text.Material_specular_ior_set)
. = ALIGN(0x1000);
*(.text.rna_Material_draw_update)
. = ALIGN(0x1000);
*(.text.Material_specular_hardness_get)
. = ALIGN(0x1000);
*(.text.Material_specular_hardness_set)
. = ALIGN(0x1000);
*(.text.Material_specular_intensity_get)
. = ALIGN(0x1000);
*(.text.Material_specular_intensity_set)
. = ALIGN(0x1000);
*(.text.Material_specular_shader_get)
. = ALIGN(0x1000);
*(.text.Material_specular_shader_set)
. = ALIGN(0x1000);
*(.text.Material_darkness_get)
. = ALIGN(0x1000);
*(.text.Material_darkness_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_fresnel_factor_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_fresnel_factor_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_fresnel_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_fresnel_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_toon_smooth_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_toon_smooth_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_toon_size_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_toon_size_set)
. = ALIGN(0x1000);
*(.text.Material_roughness_get)
. = ALIGN(0x1000);
*(.text.Material_roughness_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_intensity_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_intensity_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_shader_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_shader_set)
. = ALIGN(0x1000);
*(.text.Material_line_priority_get)
. = ALIGN(0x1000);
*(.text.Material_line_priority_set)
. = ALIGN(0x1000);
*(.text.Material_line_color_get)
. = ALIGN(0x1000);
*(.text.Material_line_color_set)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_factor_get)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_factor_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_factor_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_factor_set)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_input_get)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_input_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_input_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_input_set)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_blend_get)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_blend_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_blend_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_blend_set)
. = ALIGN(0x1000);
*(.text.Material_specular_ramp_get)
. = ALIGN(0x1000);
*(.text.Material_use_specular_ramp_get)
. = ALIGN(0x1000);
*(.text.Material_use_specular_ramp_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_ramp_get)
. = ALIGN(0x1000);
*(.text.Material_use_diffuse_ramp_get)
. = ALIGN(0x1000);
*(.text.Material_use_diffuse_ramp_set)
. = ALIGN(0x1000);
*(.text.Material_specular_alpha_get)
. = ALIGN(0x1000);
*(.text.Material_specular_alpha_set)
. = ALIGN(0x1000);
*(.text.Material_alpha_get)
. = ALIGN(0x1000);
*(.text.Material_alpha_set)
. = ALIGN(0x1000);
*(.text.Material_mirror_color_get)
. = ALIGN(0x1000);
*(.text.Material_mirror_color_set)
. = ALIGN(0x1000);
*(.text.Material_specular_color_get)
. = ALIGN(0x1000);
*(.text.Material_specular_color_set)
. = ALIGN(0x1000);
*(.text.Material_diffuse_color_get)
. = ALIGN(0x1000);
*(.text.Material_diffuse_color_set)
. = ALIGN(0x1000);
*(.text.Material_use_textures_get)
. = ALIGN(0x1000);
*(.text.Material_use_textures_set)
. = ALIGN(0x1000);
*(.text.Material_paint_clone_slot_get)
. = ALIGN(0x1000);
*(.text.Material_paint_clone_slot_set)
. = ALIGN(0x1000);
*(.text.rna_Material_active_paint_texture_index_update)
. = ALIGN(0x1000);
*(.text.Material_paint_active_slot_get)
. = ALIGN(0x1000);
*(.text.Material_paint_active_slot_set)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_slots_begin)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_slots_next)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_slots_end)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_slots_get)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_index_get)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_uv_layer_get)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_uv_layer_length)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_uv_layer_set)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_rna_type_get)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TexPaintSlot_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_fade_to_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_fade_to_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_distance_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_distance_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_depth_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_depth_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_threshold_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_threshold_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_samples_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_samples_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_anisotropic_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_anisotropic_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_gloss_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_fresnel_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_fresnel_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_fresnel_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_fresnel_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_reflect_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_reflect_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_use_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_use_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceMirror_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_images_begin)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_images_next)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_images_end)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_images_get)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_images_lookup_int)
. = ALIGN(0x1000);
*(.text.Material_texture_paint_images_lookup_string)
. = ALIGN(0x1000);
*(.text.Material_active_texture_index_get)
. = ALIGN(0x1000);
*(.text.Material_active_texture_index_set)
. = ALIGN(0x1000);
*(.text.rna_Material_active_texture_editable)
. = ALIGN(0x1000);
*(.text.Material_active_texture_get)
. = ALIGN(0x1000);
*(.text.set_current_material_texture .text.Material_active_texture_set)
. = ALIGN(0x1000);
*(.text.Material_texture_slots_begin)
. = ALIGN(0x1000);
*(.text.Material_texture_slots_next)
. = ALIGN(0x1000);
*(.text.Material_texture_slots_end)
. = ALIGN(0x1000);
*(.text.Material_texture_slots_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_bump_objectspace_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_bump_objectspace_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_bump_method_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_bump_method_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_reflection_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_reflection_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_scattering_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_scattering_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_emission_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_emission_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_density_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_density_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_transmission_color_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_transmission_color_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_reflection_color_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_reflection_color_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_emission_color_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_emission_color_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_reflect_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_reflect_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_scatter_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_scatter_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_emission_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_emission_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_density_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_density_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_transmission_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_transmission_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_reflection_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_reflection_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_emission_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_emission_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_ambient_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_ambient_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_translucency_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_translucency_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_raymir_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_raymir_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_hardness_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_hardness_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_emit_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_emit_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_specular_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_specular_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_diffuse_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_diffuse_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_alpha_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_alpha_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mirror_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mirror_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_diffuse_color_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_diffuse_color_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_specular_color_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_specular_color_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_warp_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_warp_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_displacement_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_displacement_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_normal_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_normal_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_normal_map_space_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_normal_map_space_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_z_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_z_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_y_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_y_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_x_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_mapping_x_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_warp_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_warp_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_displacement_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_displacement_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_translucency_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_translucency_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_emit_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_emit_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_alpha_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_alpha_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_raymir_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_raymir_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_hardness_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_hardness_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_ambient_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_ambient_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_specular_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_specular_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_diffuse_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_diffuse_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_mirror_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_mirror_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_spec_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_spec_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_normal_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_normal_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_diffuse_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_color_diffuse_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_from_original_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_from_original_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_to_bounds_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_map_to_bounds_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_from_dupli_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_use_from_dupli_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_uv_layer_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_uv_layer_length)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_uv_layer_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_object_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_object_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_texture_coords_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlot_texture_coords_set)
. = ALIGN(0x1000);
*(.text.rna_Material_texture_coordinates_itemf)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_use_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_use_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_back_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_back_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_front_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_front_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_texture_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_texture_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_color_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_color_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_ior_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_ior_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_scale_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_scale_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_error_threshold_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_error_threshold_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_color_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_color_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_radius_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_radius_set)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialSubsurfaceScattering_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialStrand_uv_layer_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_uv_layer_length)
. = ALIGN(0x1000);
*(.text.MaterialStrand_uv_layer_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_width_fade_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_width_fade_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_shape_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_shape_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_size_min_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_size_min_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_tip_size_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_tip_size_set)
. = ALIGN(0x1000);
*(.text.rna_MaterialStrand_end_size_range)
. = ALIGN(0x1000);
*(.text.MaterialStrand_root_size_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_root_size_set)
. = ALIGN(0x1000);
*(.text.rna_MaterialStrand_start_size_range)
. = ALIGN(0x1000);
*(.text.MaterialStrand_use_blender_units_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_use_blender_units_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_blend_distance_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_blend_distance_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_use_surface_diffuse_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_use_tangent_shading_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_use_tangent_shading_set)
. = ALIGN(0x1000);
*(.text.MaterialStrand_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialStrand_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialStrand_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialStrand_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialStrand_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_fh_damping_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_fh_damping_set)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_fh_distance_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_fh_distance_set)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_fh_force_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_fh_force_set)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_use_fh_normal_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_use_fh_normal_set)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_elasticity_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_elasticity_set)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_friction_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_friction_set)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialPhysics_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_physics_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_physics_set)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_face_orientation_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_face_orientation_set)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_alpha_blend_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_alpha_blend_set)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_invisible_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_invisible_set)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_text_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_text_set)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_use_backface_culling_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_use_backface_culling_set)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialGameSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Material_animation_data_get)
. = ALIGN(0x1000);
*(.text.Material_active_node_material_get)
. = ALIGN(0x1000);
*(.text.Material_active_node_material_set)
. = ALIGN(0x1000);
*(.text.nodeSetActiveID)
. = ALIGN(0x1000);
*(.text.rna_Material_use_nodes_update)
. = ALIGN(0x1000);
*(.text.RNA_float_set_array)
. = ALIGN(0x1000);
*(.text.ED_node_shader_default)
. = ALIGN(0x1000);
*(.text.Material_use_nodes_get)
. = ALIGN(0x1000);
*(.text.Material_use_nodes_set)
. = ALIGN(0x1000);
*(.text.Material_node_tree_get)
. = ALIGN(0x1000);
*(.text.Material_game_settings_get)
. = ALIGN(0x1000);
*(.text.Material_physics_get)
. = ALIGN(0x1000);
*(.text.Material_strand_get)
. = ALIGN(0x1000);
*(.text.Material_subsurface_scattering_get)
. = ALIGN(0x1000);
*(.text.Material_halo_get)
. = ALIGN(0x1000);
*(.text.Material_volume_get)
. = ALIGN(0x1000);
*(.text.Material_raytrace_transparency_get)
. = ALIGN(0x1000);
*(.text.Material_raytrace_mirror_get)
. = ALIGN(0x1000);
*(.text.Material_use_uv_project_get)
. = ALIGN(0x1000);
*(.text.Material_use_uv_project_set)
. = ALIGN(0x1000);
*(.text.Material_use_tangent_shading_get)
. = ALIGN(0x1000);
*(.text.Material_use_tangent_shading_set)
. = ALIGN(0x1000);
*(.text.Material_use_cast_approximate_get)
. = ALIGN(0x1000);
*(.text.Material_use_cast_approximate_set)
. = ALIGN(0x1000);
*(.text.Material_use_cast_buffer_shadows_get)
. = ALIGN(0x1000);
*(.text.Material_use_cast_buffer_shadows_set)
. = ALIGN(0x1000);
*(.text.Material_use_full_oversampling_get)
. = ALIGN(0x1000);
*(.text.Material_use_full_oversampling_set)
. = ALIGN(0x1000);
*(.text.Material_use_ray_shadow_bias_get)
. = ALIGN(0x1000);
*(.text.Material_use_ray_shadow_bias_set)
. = ALIGN(0x1000);
*(.text.Material_use_transparent_shadows_get)
. = ALIGN(0x1000);
*(.text.Material_use_transparent_shadows_set)
. = ALIGN(0x1000);
*(.text.Material_use_mist_get)
. = ALIGN(0x1000);
*(.text.Material_use_mist_set)
. = ALIGN(0x1000);
*(.text.Material_use_cast_shadows_only_get)
. = ALIGN(0x1000);
*(.text.Material_use_cast_shadows_only_set)
. = ALIGN(0x1000);
*(.text.Material_use_cast_shadows_get)
. = ALIGN(0x1000);
*(.text.Material_use_cast_shadows_set)
. = ALIGN(0x1000);
*(.text.Material_use_face_texture_alpha_get)
. = ALIGN(0x1000);
*(.text.Material_use_face_texture_alpha_set)
. = ALIGN(0x1000);
*(.text.Material_use_face_texture_get)
. = ALIGN(0x1000);
*(.text.Material_use_face_texture_set)
. = ALIGN(0x1000);
*(.text.Material_shadow_only_type_get)
. = ALIGN(0x1000);
*(.text.Material_shadow_only_type_set)
. = ALIGN(0x1000);
*(.text.Material_use_only_shadow_get)
. = ALIGN(0x1000);
*(.text.Material_use_only_shadow_set)
. = ALIGN(0x1000);
*(.text.Material_use_sky_get)
. = ALIGN(0x1000);
*(.text.Material_use_sky_set)
. = ALIGN(0x1000);
*(.text.Material_offset_z_get)
. = ALIGN(0x1000);
*(.text.Material_offset_z_set)
. = ALIGN(0x1000);
*(.text.Material_invert_z_get)
. = ALIGN(0x1000);
*(.text.Material_invert_z_set)
. = ALIGN(0x1000);
*(.text.Material_use_vertex_color_paint_get)
. = ALIGN(0x1000);
*(.text.Material_use_vertex_color_paint_set)
. = ALIGN(0x1000);
*(.text.Material_use_vertex_color_light_get)
. = ALIGN(0x1000);
*(.text.Material_use_vertex_color_light_set)
. = ALIGN(0x1000);
*(.text.Material_use_shadeless_get)
. = ALIGN(0x1000);
*(.text.Material_use_shadeless_set)
. = ALIGN(0x1000);
*(.text.Material_use_shadows_get)
. = ALIGN(0x1000);
*(.text.Material_use_shadows_set)
. = ALIGN(0x1000);
*(.text.Material_use_raytrace_get)
. = ALIGN(0x1000);
*(.text.Material_use_raytrace_set)
. = ALIGN(0x1000);
*(.text.Material_use_light_group_local_get)
. = ALIGN(0x1000);
*(.text.Material_use_light_group_local_set)
. = ALIGN(0x1000);
*(.text.Material_use_light_group_exclusive_get)
. = ALIGN(0x1000);
*(.text.Material_use_light_group_exclusive_set)
. = ALIGN(0x1000);
*(.text.Material_pass_index_get)
. = ALIGN(0x1000);
*(.text.Material_pass_index_set)
. = ALIGN(0x1000);
*(.text.Material_light_group_get)
. = ALIGN(0x1000);
*(.text.Material_light_group_set)
. = ALIGN(0x1000);
*(.text.Material_shadow_cast_alpha_get)
. = ALIGN(0x1000);
*(.text.Material_shadow_cast_alpha_set)
. = ALIGN(0x1000);
*(.text.Material_shadow_buffer_bias_get)
. = ALIGN(0x1000);
*(.text.Material_shadow_buffer_bias_set)
. = ALIGN(0x1000);
*(.text.Material_shadow_ray_bias_get)
. = ALIGN(0x1000);
*(.text.Material_shadow_ray_bias_set)
. = ALIGN(0x1000);
*(.text.Material_use_object_color_get)
. = ALIGN(0x1000);
*(.text.Material_use_object_color_set)
. = ALIGN(0x1000);
*(.text.Material_use_cubic_get)
. = ALIGN(0x1000);
*(.text.Material_use_cubic_set)
. = ALIGN(0x1000);
*(.text.Material_translucency_get)
. = ALIGN(0x1000);
*(.text.Material_translucency_set)
. = ALIGN(0x1000);
*(.text.Material_emit_get)
. = ALIGN(0x1000);
*(.text.Material_emit_set)
. = ALIGN(0x1000);
*(.text.Material_ambient_get)
. = ALIGN(0x1000);
*(.text.Material_ambient_set)
. = ALIGN(0x1000);
*(.text.rna_Material_update_previews)
. = ALIGN(0x1000);
*(.text.Material_preview_render_type_get)
. = ALIGN(0x1000);
*(.text.Material_preview_render_type_set)
. = ALIGN(0x1000);
*(.text.Material_transparency_method_get)
. = ALIGN(0x1000);
*(.text.Material_transparency_method_set)
. = ALIGN(0x1000);
*(.text.Material_use_transparency_get)
. = ALIGN(0x1000);
*(.text.Material_use_transparency_set)
. = ALIGN(0x1000);
*(.text.Material_type_get)
. = ALIGN(0x1000);
*(.text.Material_type_set)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_clear_call)
. = ALIGN(0x1000);
*(.text.rna_mtex_texture_slots_clear)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_create_call)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_add_call)
. = ALIGN(0x1000);
*(.text.add_mtex_id)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialTextureSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialVolume_asymmetry_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_asymmetry_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_emission_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_emission_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_emission_color_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_emission_color_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_reflection_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_reflection_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_reflection_color_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_reflection_color_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_transmission_color_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_transmission_color_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_scattering_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_scattering_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_density_scale_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_density_scale_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_density_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_density_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_depth_threshold_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_depth_threshold_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_ms_intensity_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_ms_intensity_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_ms_spread_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_ms_spread_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_ms_diffusion_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_ms_diffusion_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_cache_resolution_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_cache_resolution_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_use_light_cache_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_use_light_cache_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_use_external_shadows_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_use_external_shadows_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_light_method_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_light_method_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_step_size_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_step_size_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_step_method_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_step_method_set)
. = ALIGN(0x1000);
*(.text.MaterialVolume_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialVolume_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialVolume_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialVolume_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialVolume_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_falloff_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_falloff_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_depth_max_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_depth_max_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_filter_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_filter_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_depth_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_depth_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_gloss_threshold_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_gloss_threshold_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_gloss_samples_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_gloss_samples_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_gloss_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_gloss_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_fresnel_factor_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_fresnel_factor_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_fresnel_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_fresnel_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_ior_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_ior_set)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialRaytraceTransparency_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_soft_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_soft_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_shaded_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_shaded_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_extreme_alpha_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_extreme_alpha_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_vertex_normal_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_vertex_normal_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_texture_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_texture_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_star_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_star_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_lines_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_lines_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_ring_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_ring_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_subflare_count_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_subflare_count_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_seed_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_seed_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_boost_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_boost_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_subflare_size_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_subflare_size_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_size_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_flare_size_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_flare_mode_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_use_flare_mode_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_seed_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_seed_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_star_tip_count_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_star_tip_count_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_line_count_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_line_count_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_ring_count_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_ring_count_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_add_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_add_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_hardness_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_hardness_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_size_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_size_set)
. = ALIGN(0x1000);
*(.text.MaterialHalo_rna_type_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MaterialHalo_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MaterialHalo_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MaterialHalo_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MaterialHalo_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Mesh_validate_material_indices_call)
. = ALIGN(0x1000);
*(.text.Mesh_validate_call)
. = ALIGN(0x1000);
*(.text.BKE_mesh_validate_arrays .text.BKE_mesh_strip_loose_polysloops .text.BKE_mesh_strip_loose_edges .text.BKE_mesh_validate_all_customdata .text.mesh_validate_customdata .text.BKE_mesh_validate)
. = ALIGN(0x1000);
*(.text.Mesh_unit_test_compare_call)
. = ALIGN(0x1000);
*(.text.BKE_mesh_cmp .text.customdata_compare)
. = ALIGN(0x1000);
*(.text.Mesh_update_call)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_edges)
. = ALIGN(0x1000);
*(.text.ED_mesh_update)
. = ALIGN(0x1000);
*(.text.Mesh_calc_smooth_groups_call)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_smoothgroups)
. = ALIGN(0x1000);
*(.text.Mesh_calc_tessface_call)
. = ALIGN(0x1000);
*(.text.BM_bmesh_calc_tessellation)
. = ALIGN(0x1000);
*(.text.ED_mesh_calc_tessface)
. = ALIGN(0x1000);
*(.text.Mesh_free_tangents_call)
. = ALIGN(0x1000);
*(.text.Mesh_calc_tangents_call)
. = ALIGN(0x1000);
*(.text.genTangSpace .text.FindGridCell .text.MergeVertsFast .text.QuickSortEdges .text.AssignRecur .text.QuickSort)
. = ALIGN(0x1000);
*(.text.BKE_mesh_loop_tangents .text.rna_Mesh_calc_tangents)
. = ALIGN(0x1000);
*(.text.Mesh_free_normals_split_call)
. = ALIGN(0x1000);
*(.text.Mesh_calc_normals_split_call)
. = ALIGN(0x1000);
*(.text.rna_Mesh_calc_normals_split)
. = ALIGN(0x1000);
*(.text.BKE_mesh_normals_loop_split)
. = ALIGN(0x1000);
*(.text.Mesh_calc_normals_call)
. = ALIGN(0x1000);
*(.text.Mesh_transform_call)
. = ALIGN(0x1000);
*(.text.BKE_mesh_transform)
. = ALIGN(0x1000);
*(.text.Mesh_materials_begin)
. = ALIGN(0x1000);
*(.text.Mesh_materials_next)
. = ALIGN(0x1000);
*(.text.Mesh_materials_end)
. = ALIGN(0x1000);
*(.text.Mesh_materials_get)
. = ALIGN(0x1000);
*(.text.Mesh_materials_length)
. = ALIGN(0x1000);
*(.text.Mesh_materials_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_materials_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Mesh_update_data)
. = ALIGN(0x1000);
*(.text.rna_Mesh_texspace_editable)
. = ALIGN(0x1000);
*(.text.Mesh_texspace_size_get)
. = ALIGN(0x1000);
*(.text.Mesh_texspace_size_set)
. = ALIGN(0x1000);
*(.text.Mesh_texspace_location_get)
. = ALIGN(0x1000);
*(.text.Mesh_texspace_location_set)
. = ALIGN(0x1000);
*(.text.Mesh_auto_texspace_get)
. = ALIGN(0x1000);
*(.text.Mesh_auto_texspace_set)
. = ALIGN(0x1000);
*(.text.Mesh_animation_data_get)
. = ALIGN(0x1000);
*(.text.Mesh_is_editmode_get)
. = ALIGN(0x1000);
*(.text.Mesh_total_face_sel_get)
. = ALIGN(0x1000);
*(.text.Mesh_total_edge_sel_get)
. = ALIGN(0x1000);
*(.text.Mesh_total_vert_sel_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_customdata_edge_crease_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_customdata_edge_crease_set)
. = ALIGN(0x1000);
*(.text.Mesh_use_customdata_edge_bevel_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_customdata_edge_bevel_set)
. = ALIGN(0x1000);
*(.text.Mesh_use_customdata_vertex_bevel_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_customdata_vertex_bevel_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_update_vertmask)
. = ALIGN(0x1000);
*(.text.Mesh_use_paint_mask_vertex_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_paint_mask_vertex_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_update_facemask)
. = ALIGN(0x1000);
*(.text.Mesh_use_paint_mask_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_paint_mask_set)
. = ALIGN(0x1000);
*(.text.Mesh_use_mirror_topology_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_mirror_topology_set)
. = ALIGN(0x1000);
*(.text.Mesh_use_mirror_x_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_mirror_x_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_update_draw)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_indices_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_indices_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_face_area_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_face_area_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_face_angle_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_face_angle_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_edge_angle_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_edge_angle_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_edge_length_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_extra_edge_length_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_update_data_edit_color)
. = ALIGN(0x1000);
*(.text.Mesh_show_statvis_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_statvis_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_freestyle_face_marks_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_freestyle_face_marks_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_freestyle_edge_marks_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_freestyle_edge_marks_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_sharp_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_sharp_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_seams_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_seams_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_bevel_weight_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_bevel_weight_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_crease_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_edge_crease_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_weight_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_weight_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_normal_vertex_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_normal_vertex_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_normal_loop_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_normal_loop_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_normal_face_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_normal_face_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_faces_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_faces_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_edges_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_edges_set)
. = ALIGN(0x1000);
*(.text.Mesh_use_auto_texspace_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_auto_texspace_set)
. = ALIGN(0x1000);
*(.text.Mesh_shape_keys_get)
. = ALIGN(0x1000);
*(.text.Mesh_texco_mesh_get)
. = ALIGN(0x1000);
*(.text.Mesh_texco_mesh_set)
. = ALIGN(0x1000);
*(.text.Mesh_show_double_sided_get)
. = ALIGN(0x1000);
*(.text.Mesh_show_double_sided_set)
. = ALIGN(0x1000);
*(.text.Mesh_auto_smooth_angle_get)
. = ALIGN(0x1000);
*(.text.Mesh_auto_smooth_angle_set)
. = ALIGN(0x1000);
*(.text.Mesh_use_auto_smooth_get)
. = ALIGN(0x1000);
*(.text.Mesh_use_auto_smooth_set)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_begin)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_next)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_end)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_get)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_length)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_skin_vertices_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_skin_vertice_check)
. = ALIGN(0x1000);
*(.text.rna_MeshSkinVertexLayer_path)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshSkinVertexLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertexLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.StringProperties_new_call)
. = ALIGN(0x1000);
*(.text.rna_MeshStringPropertyLayer_path)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshStringPropertyLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshStringPropertyLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshIntProperty_path)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_value_get)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_value_set)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshIntProperty_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshIntPropertyLayer_path)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshIntPropertyLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshIntPropertyLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshFloatProperty_path)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_value_get)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_value_set)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshFloatProperty_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshFloatPropertyLayer_path)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_name_set)
. = ALIGN(0x1000);
*(.text.rna_MeshAnyLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshFloatPropertyLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshFloatPropertyLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshColor_path)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_color_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_color_set)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshLoopColorLayer_path)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_active_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_active_set)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_active_render_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_active_render_set)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshLoopColorLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshLoopColorLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MeshColor_color4_get)
. = ALIGN(0x1000);
*(.text.MeshColor_color4_set)
. = ALIGN(0x1000);
*(.text.MeshColor_color3_get)
. = ALIGN(0x1000);
*(.text.MeshColor_color3_set)
. = ALIGN(0x1000);
*(.text.MeshColor_color2_get)
. = ALIGN(0x1000);
*(.text.MeshColor_color2_set)
. = ALIGN(0x1000);
*(.text.MeshColor_color1_get)
. = ALIGN(0x1000);
*(.text.MeshColor_color1_set)
. = ALIGN(0x1000);
*(.text.MeshColor_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshColor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshColor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshColor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshColor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshColor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshColorLayer_path)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_active_get)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_active_set)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_active_render_get)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_active_render_set)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshColorLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshColorLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshTexturePoly_path)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_image_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_image_set)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePoly_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshTexturePolyLayer_path)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_active_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_active_set)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_active_render_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_active_render_set)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_active_clone_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_active_clone_set)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshTexturePolyLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshTexturePolyLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshTextureFace_path)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv_raw_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv_raw_set)
. = ALIGN(0x1000);
*(.text.rna_MeshTextureFace_uv_get_length)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv4_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv4_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv3_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv3_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv2_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv2_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv1_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_uv1_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_image_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_image_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFace_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshTextureFaceLayer_path)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_name_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_active_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_active_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_active_render_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_active_render_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_active_clone_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_active_clone_set)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshTextureFaceLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshTextureFaceLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshUVLoop_path)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_select_edge_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_select_edge_set)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_select_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_select_set)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_pin_uv_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_pin_uv_set)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_uv_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_uv_set)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoop_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshUVLoopLayer_path)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_name_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_name_length)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_name_set)
. = ALIGN(0x1000);
*(.text.BKE_mesh_uv_cdlayer_rename)
. = ALIGN(0x1000);
*(.text.BKE_mesh_uv_cdlayer_rename_index)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_data_begin)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_data_next)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_data_end)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_data_get)
. = ALIGN(0x1000);
*(.text.rna_MeshUVLoopLayer_data_length)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_data_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshUVLoopLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshPolygon_path)
. = ALIGN(0x1000);
*(.text.MeshPolygon_index_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_area_get)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_poly_area)
. = ALIGN(0x1000);
*(.text.MeshPolygon_center_get)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_poly_center)
. = ALIGN(0x1000);
*(.text.MeshPolygon_normal_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_use_freestyle_mark_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_use_freestyle_mark_set)
. = ALIGN(0x1000);
*(.text.MeshPolygon_use_smooth_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_use_smooth_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_update_select)
. = ALIGN(0x1000);
*(.text.MeshPolygon_hide_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_hide_set)
. = ALIGN(0x1000);
*(.text.MeshPolygon_select_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_select_set)
. = ALIGN(0x1000);
*(.text.MeshPolygon_material_index_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_material_index_set)
. = ALIGN(0x1000);
*(.text.MeshPolygon_loop_total_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_loop_total_set)
. = ALIGN(0x1000);
*(.text.MeshPolygon_loop_start_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_loop_start_set)
. = ALIGN(0x1000);
*(.text.rna_MeshPoly_vertices_get_length)
. = ALIGN(0x1000);
*(.text.MeshPolygon_vertices_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_vertices_set)
. = ALIGN(0x1000);
*(.text.MeshPolygon_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshPolygon_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshPolygon_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshPolygon_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshPolygon_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshLoop_path)
. = ALIGN(0x1000);
*(.text.MeshLoop_bitangent_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_bitangent_sign_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_tangent_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_normal_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_index_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_edge_index_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_edge_index_set)
. = ALIGN(0x1000);
*(.text.MeshLoop_vertex_index_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_vertex_index_set)
. = ALIGN(0x1000);
*(.text.MeshLoop_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshLoop_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshLoop_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshLoop_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshLoop_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshTessFace_path)
. = ALIGN(0x1000);
*(.text.MeshTessFace_index_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_area_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_split_normals_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_normal_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_use_smooth_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_use_smooth_set)
. = ALIGN(0x1000);
*(.text.MeshTessFace_hide_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_hide_set)
. = ALIGN(0x1000);
*(.text.MeshTessFace_select_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_select_set)
. = ALIGN(0x1000);
*(.text.MeshTessFace_material_index_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_material_index_set)
. = ALIGN(0x1000);
*(.text.MeshTessFace_vertices_raw_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_vertices_raw_set)
. = ALIGN(0x1000);
*(.text.rna_MeshTessFace_verts_get_length)
. = ALIGN(0x1000);
*(.text.MeshTessFace_vertices_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_vertices_set)
. = ALIGN(0x1000);
*(.text.MeshTessFace_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshTessFace_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshTessFace_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshTessFace_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshTessFace_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshEdge_path)
. = ALIGN(0x1000);
*(.text.MeshEdge_index_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_use_freestyle_mark_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_use_freestyle_mark_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_is_loose_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_is_loose_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_use_edge_sharp_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_use_edge_sharp_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_use_seam_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_use_seam_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_hide_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_hide_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_select_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_select_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_bevel_weight_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_bevel_weight_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_crease_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_crease_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_vertices_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_vertices_set)
. = ALIGN(0x1000);
*(.text.MeshEdge_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshEdge_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshEdge_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshEdge_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshEdge_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_VertexGroupElement_path)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_weight_get)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_weight_set)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_group_get)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_rna_type_get)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_rna_properties_next)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_rna_properties_end)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_rna_properties_get)
. = ALIGN(0x1000);
*(.text.VertexGroupElement_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshVertex_path)
. = ALIGN(0x1000);
*(.text.MeshVertex_undeformed_co_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_index_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_groups_begin)
. = ALIGN(0x1000);
*(.text.MeshVertex_groups_next)
. = ALIGN(0x1000);
*(.text.MeshVertex_groups_end)
. = ALIGN(0x1000);
*(.text.MeshVertex_groups_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_bevel_weight_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_bevel_weight_set)
. = ALIGN(0x1000);
*(.text.MeshVertex_hide_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_hide_set)
. = ALIGN(0x1000);
*(.text.MeshVertex_select_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_select_set)
. = ALIGN(0x1000);
*(.text.MeshVertex_normal_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_normal_set)
. = ALIGN(0x1000);
*(.text.MeshVertex_co_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_co_set)
. = ALIGN(0x1000);
*(.text.MeshVertex_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshVertex_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshVertex_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshVertex_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshVertex_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshStringProperty_path)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_value_get)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_value_length)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_value_set)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshStringProperty_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.StringProperties_rna_type_get)
. = ALIGN(0x1000);
*(.text.StringProperties_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.StringProperties_rna_properties_next)
. = ALIGN(0x1000);
*(.text.StringProperties_rna_properties_end)
. = ALIGN(0x1000);
*(.text.StringProperties_rna_properties_get)
. = ALIGN(0x1000);
*(.text.StringProperties_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.IntProperties_new_call)
. = ALIGN(0x1000);
*(.text.IntProperties_rna_type_get)
. = ALIGN(0x1000);
*(.text.IntProperties_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.IntProperties_rna_properties_next)
. = ALIGN(0x1000);
*(.text.IntProperties_rna_properties_end)
. = ALIGN(0x1000);
*(.text.IntProperties_rna_properties_get)
. = ALIGN(0x1000);
*(.text.IntProperties_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.FloatProperties_new_call)
. = ALIGN(0x1000);
*(.text.FloatProperties_rna_type_get)
. = ALIGN(0x1000);
*(.text.FloatProperties_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FloatProperties_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FloatProperties_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FloatProperties_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FloatProperties_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.LoopColors_remove_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_color_remove_named)
. = ALIGN(0x1000);
*(.text.LoopColors_new_call)
. = ALIGN(0x1000);
*(.text.LoopColors_active_index_get)
. = ALIGN(0x1000);
*(.text.LoopColors_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_vertex_color_index_range)
. = ALIGN(0x1000);
*(.text.LoopColors_active_get)
. = ALIGN(0x1000);
*(.text.LoopColors_active_set)
. = ALIGN(0x1000);
*(.text.LoopColors_rna_type_get)
. = ALIGN(0x1000);
*(.text.LoopColors_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.LoopColors_rna_properties_next)
. = ALIGN(0x1000);
*(.text.LoopColors_rna_properties_end)
. = ALIGN(0x1000);
*(.text.LoopColors_rna_properties_get)
. = ALIGN(0x1000);
*(.text.LoopColors_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.VertexColors_new_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_color_add)
. = ALIGN(0x1000);
*(.text.rna_Mesh_tessface_vertex_color_new)
. = ALIGN(0x1000);
*(.text.VertexColors_active_index_get)
. = ALIGN(0x1000);
*(.text.VertexColors_active_index_set)
. = ALIGN(0x1000);
*(.text.VertexColors_active_get)
. = ALIGN(0x1000);
*(.text.VertexColors_rna_type_get)
. = ALIGN(0x1000);
*(.text.VertexColors_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.VertexColors_rna_properties_next)
. = ALIGN(0x1000);
*(.text.VertexColors_rna_properties_end)
. = ALIGN(0x1000);
*(.text.VertexColors_rna_properties_get)
. = ALIGN(0x1000);
*(.text.VertexColors_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UVTextures_remove_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_uv_texture_remove_index)
. = ALIGN(0x1000);
*(.text.UVTextures_new_call)
. = ALIGN(0x1000);
*(.text.UVTextures_active_index_get)
. = ALIGN(0x1000);
*(.text.UVTextures_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_uv_texture_index_range)
. = ALIGN(0x1000);
*(.text.UVTextures_active_get)
. = ALIGN(0x1000);
*(.text.UVTextures_active_set)
. = ALIGN(0x1000);
*(.text.UVTextures_rna_type_get)
. = ALIGN(0x1000);
*(.text.UVTextures_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UVTextures_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UVTextures_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UVTextures_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UVTextures_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_new_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_uv_texture_add)
. = ALIGN(0x1000);
*(.text.BM_data_layer_copy)
. = ALIGN(0x1000);
*(.text.rna_Mesh_tessface_uv_texture_new)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_active_index_get)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_active_index_set)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_active_get)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_rna_type_get)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TessfaceUVTextures_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_active_index_get)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_active_index_set)
. = ALIGN(0x1000);
*(.text.rna_Mesh_uv_layer_index_range)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_active_get)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_active_set)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_rna_type_get)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UVLoopLayers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MeshPolygons_add_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_polys_add)
. = ALIGN(0x1000);
*(.text.MeshPolygons_active_get)
. = ALIGN(0x1000);
*(.text.MeshPolygons_active_set)
. = ALIGN(0x1000);
*(.text.MeshPolygons_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshPolygons_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshPolygons_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshPolygons_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshPolygons_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshPolygons_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MeshLoops_add_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_loops_add)
. = ALIGN(0x1000);
*(.text.MeshLoops_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshLoops_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshLoops_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshLoops_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshLoops_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshLoops_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_add_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_tessfaces_add)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_active_get)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_active_set)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshTessFaces_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MeshEdges_add_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_edges_add)
. = ALIGN(0x1000);
*(.text.MeshEdges_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshEdges_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshEdges_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshEdges_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshEdges_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshEdges_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_MeshSkinVertex_path)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_use_loose_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_use_loose_set)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_use_root_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_use_root_set)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_radius_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_radius_set)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshSkinVertex_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_begin)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_next)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_end)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_get)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_length)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_string_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_string_layer_check)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_begin)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_next)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_end)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_get)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_length)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_int_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_int_layer_check)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_begin)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_next)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_end)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_get)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_length)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_polygon_layers_float_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_float_layer_check)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_begin)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_next)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_end)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_get)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_length)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_vertex_colors_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_vertex_color_check)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_begin)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_next)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_end)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_get)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_length)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_vertex_colors_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_tessface_vertex_color_check)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_stencil_index_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_stencil_index_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_stencil_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_stencil_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_clone_index_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_clone_index_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_clone_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_texture_clone_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_begin)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_next)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_end)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_length)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_uv_textures_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_uv_texture_check)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_begin)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_next)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_end)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_get)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_length)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_tessface_uv_textures_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_tessface_uv_texture_check)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_stencil_index_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_stencil_index_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_stencil_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_stencil_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_clone_index_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_clone_index_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_clone_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layer_clone_set)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_begin)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_next)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_end)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_get)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_length)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_uv_layers_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_uv_layer_check)
. = ALIGN(0x1000);
*(.text.Mesh_texture_mesh_get)
. = ALIGN(0x1000);
*(.text.Mesh_texture_mesh_set)
. = ALIGN(0x1000);
*(.text.Mesh_polygons_begin)
. = ALIGN(0x1000);
*(.text.Mesh_polygons_next)
. = ALIGN(0x1000);
*(.text.Mesh_polygons_end)
. = ALIGN(0x1000);
*(.text.Mesh_polygons_get)
. = ALIGN(0x1000);
*(.text.Mesh_polygons_length)
. = ALIGN(0x1000);
*(.text.Mesh_polygons_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_loops_begin)
. = ALIGN(0x1000);
*(.text.Mesh_loops_next)
. = ALIGN(0x1000);
*(.text.Mesh_loops_end)
. = ALIGN(0x1000);
*(.text.Mesh_loops_get)
. = ALIGN(0x1000);
*(.text.Mesh_loops_length)
. = ALIGN(0x1000);
*(.text.Mesh_loops_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_tessfaces_begin)
. = ALIGN(0x1000);
*(.text.Mesh_tessfaces_next)
. = ALIGN(0x1000);
*(.text.Mesh_tessfaces_end)
. = ALIGN(0x1000);
*(.text.Mesh_tessfaces_get)
. = ALIGN(0x1000);
*(.text.Mesh_tessfaces_length)
. = ALIGN(0x1000);
*(.text.Mesh_tessfaces_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_edges_begin)
. = ALIGN(0x1000);
*(.text.Mesh_edges_next)
. = ALIGN(0x1000);
*(.text.Mesh_edges_end)
. = ALIGN(0x1000);
*(.text.Mesh_edges_get)
. = ALIGN(0x1000);
*(.text.Mesh_edges_length)
. = ALIGN(0x1000);
*(.text.Mesh_edges_lookup_int)
. = ALIGN(0x1000);
*(.text.Mesh_vertices_begin)
. = ALIGN(0x1000);
*(.text.Mesh_vertices_next)
. = ALIGN(0x1000);
*(.text.Mesh_vertices_end)
. = ALIGN(0x1000);
*(.text.Mesh_vertices_get)
. = ALIGN(0x1000);
*(.text.Mesh_vertices_length)
. = ALIGN(0x1000);
*(.text.Mesh_vertices_lookup_int)
. = ALIGN(0x1000);
*(.text.MeshVertices_add_call)
. = ALIGN(0x1000);
*(.text.ED_mesh_vertices_add)
. = ALIGN(0x1000);
*(.text.MeshVertices_rna_type_get)
. = ALIGN(0x1000);
*(.text.MeshVertices_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MeshVertices_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MeshVertices_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MeshVertices_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MeshVertices_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MetaElement_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MetaElement_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MetaElement_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MetaElement_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MetaElement_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MetaElement_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_MetaBall_update_data)
. = ALIGN(0x1000);
*(.text.MetaElement_type_get)
. = ALIGN(0x1000);
*(.text.MetaElement_type_set)
. = ALIGN(0x1000);
*(.text.MetaElement_co_get)
. = ALIGN(0x1000);
*(.text.MetaElement_co_set)
. = ALIGN(0x1000);
*(.text.rna_MetaBall_update_rotation)
. = ALIGN(0x1000);
*(.text.BKE_mball_properties_copy)
. = ALIGN(0x1000);
*(.text.MetaElement_rotation_get)
. = ALIGN(0x1000);
*(.text.MetaElement_rotation_set)
. = ALIGN(0x1000);
*(.text.MetaElement_radius_get)
. = ALIGN(0x1000);
*(.text.MetaElement_radius_set)
. = ALIGN(0x1000);
*(.text.MetaElement_size_x_get)
. = ALIGN(0x1000);
*(.text.MetaElement_size_x_set)
. = ALIGN(0x1000);
*(.text.MetaElement_size_y_get)
. = ALIGN(0x1000);
*(.text.MetaElement_size_y_set)
. = ALIGN(0x1000);
*(.text.MetaElement_size_z_get)
. = ALIGN(0x1000);
*(.text.MetaElement_size_z_set)
. = ALIGN(0x1000);
*(.text.MetaElement_stiffness_get)
. = ALIGN(0x1000);
*(.text.MetaElement_stiffness_set)
. = ALIGN(0x1000);
*(.text.MetaElement_use_negative_get)
. = ALIGN(0x1000);
*(.text.MetaElement_use_negative_set)
. = ALIGN(0x1000);
*(.text.MetaElement_hide_get)
. = ALIGN(0x1000);
*(.text.MetaElement_hide_set)
. = ALIGN(0x1000);
*(.text.MetaBall_elements_begin)
. = ALIGN(0x1000);
*(.text.MetaBall_elements_next)
. = ALIGN(0x1000);
*(.text.MetaBall_elements_end)
. = ALIGN(0x1000);
*(.text.MetaBall_elements_get)
. = ALIGN(0x1000);
*(.text.MetaBall_elements_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_MetaElement_path)
. = ALIGN(0x1000);
*(.text.MetaBall_transform_call)
. = ALIGN(0x1000);
*(.text.BKE_mball_transform)
. = ALIGN(0x1000);
*(.text.MetaBall_animation_data_get)
. = ALIGN(0x1000);
*(.text.MetaBall_is_editmode_get)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_begin)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_next)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_end)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_get)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_length)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_lookup_int)
. = ALIGN(0x1000);
*(.text.MetaBall_materials_lookup_string)
. = ALIGN(0x1000);
*(.text.ID_name_get)
. = ALIGN(0x1000);
*(.text.rna_Meta_texspace_editable)
. = ALIGN(0x1000);
*(.text.MetaBall_texspace_size_get)
. = ALIGN(0x1000);
*(.text.MetaBall_texspace_size_set)
. = ALIGN(0x1000);
*(.text.MetaBall_texspace_location_get)
. = ALIGN(0x1000);
*(.text.MetaBall_texspace_location_set)
. = ALIGN(0x1000);
*(.text.MetaBall_use_auto_texspace_get)
. = ALIGN(0x1000);
*(.text.MetaBall_use_auto_texspace_set)
. = ALIGN(0x1000);
*(.text.MetaBall_threshold_get)
. = ALIGN(0x1000);
*(.text.MetaBall_threshold_set)
. = ALIGN(0x1000);
*(.text.MetaBall_render_resolution_get)
. = ALIGN(0x1000);
*(.text.MetaBall_render_resolution_set)
. = ALIGN(0x1000);
*(.text.MetaBall_resolution_get)
. = ALIGN(0x1000);
*(.text.MetaBall_resolution_set)
. = ALIGN(0x1000);
*(.text.MetaBallElements_clear_call)
. = ALIGN(0x1000);
*(.text.MetaBallElements_remove_call)
. = ALIGN(0x1000);
*(.text.MetaBallElements_new_call)
. = ALIGN(0x1000);
*(.text.MetaBallElements_active_get)
. = ALIGN(0x1000);
*(.text.MetaBallElements_rna_type_get)
. = ALIGN(0x1000);
*(.text.MetaBallElements_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MetaBallElements_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MetaBallElements_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MetaBallElements_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MetaBallElements_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MetaBall_update_method_get)
. = ALIGN(0x1000);
*(.text.MetaBall_update_method_set)
. = ALIGN(0x1000);
*(.text.Modifier_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Modifier_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Modifier_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Modifier_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Modifier_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Modifier_rna_type_get)
. = ALIGN(0x1000);
*(.text.Modifier_name_get)
. = ALIGN(0x1000);
*(.text.Modifier_name_length)
. = ALIGN(0x1000);
*(.text.Modifier_name_set)
. = ALIGN(0x1000);
*(.text.Modifier_type_get)
. = ALIGN(0x1000);
*(.text.rna_Modifier_update)
. = ALIGN(0x1000);
*(.text.Modifier_show_viewport_get)
. = ALIGN(0x1000);
*(.text.Modifier_show_viewport_set)
. = ALIGN(0x1000);
*(.text.Modifier_show_render_get)
. = ALIGN(0x1000);
*(.text.Modifier_show_render_set)
. = ALIGN(0x1000);
*(.text.Modifier_show_in_editmode_get)
. = ALIGN(0x1000);
*(.text.Modifier_show_in_editmode_set)
. = ALIGN(0x1000);
*(.text.Modifier_show_on_cage_get)
. = ALIGN(0x1000);
*(.text.Modifier_show_on_cage_set)
. = ALIGN(0x1000);
*(.text.Modifier_show_expanded_get)
. = ALIGN(0x1000);
*(.text.Modifier_show_expanded_set)
. = ALIGN(0x1000);
*(.text.Modifier_use_apply_on_spline_get)
. = ALIGN(0x1000);
*(.text.Modifier_use_apply_on_spline_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projectors_begin)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projectors_next)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projectors_end)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projectors_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projectors_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_Modifier_dependency_update)
. = ALIGN(0x1000);
*(.text.UVProjector_object_get)
. = ALIGN(0x1000);
*(.text.UVProjector_object_set)
. = ALIGN(0x1000);
*(.text.UVProjector_rna_type_get)
. = ALIGN(0x1000);
*(.text.UVProjector_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UVProjector_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UVProjector_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UVProjector_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UVProjector_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Modifier_refine)
. = ALIGN(0x1000);
*(.text.rna_Modifier_path)
. = ALIGN(0x1000);
*(.text.WireframeModifier_invert_vertex_group_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_invert_vertex_group_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.WireframeModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_material_offset_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_material_offset_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_crease_weight_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_crease_weight_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_crease_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_crease_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_relative_offset_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_relative_offset_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_even_offset_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_even_offset_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_boundary_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_boundary_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_replace_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_use_replace_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_offset_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_offset_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_thickness_vertex_group_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_thickness_vertex_group_set)
. = ALIGN(0x1000);
*(.text.WireframeModifier_thickness_get)
. = ALIGN(0x1000);
*(.text.WireframeModifier_thickness_set)
. = ALIGN(0x1000);
*(.text.LaplacianDeformModifier_is_bind_get)
. = ALIGN(0x1000);
*(.text.LaplacianDeformModifier_iterations_get)
. = ALIGN(0x1000);
*(.text.LaplacianDeformModifier_iterations_set)
. = ALIGN(0x1000);
*(.text.LaplacianDeformModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.LaplacianDeformModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.LaplacianDeformModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_eval_factor_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_eval_factor_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_eval_time_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_eval_time_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_eval_frame_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_eval_frame_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_frame_scale_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_frame_scale_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_frame_start_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_frame_start_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_flip_axis_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_flip_axis_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_up_axis_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_up_axis_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_forward_axis_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_forward_axis_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_factor_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_factor_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_filepath_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_filepath_length)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_filepath_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_deform_mode_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_deform_mode_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_play_mode_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_play_mode_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_time_mode_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_time_mode_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_interpolation_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_interpolation_set)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_cache_format_get)
. = ALIGN(0x1000);
*(.text.MeshCacheModifier_cache_format_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_uv_layer_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_uv_layer_length)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_uv_layer_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_bone_to_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_bone_to_length)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_bone_to_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_object_to_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_object_to_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_bone_from_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_bone_from_length)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_bone_from_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_object_from_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_object_from_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_center_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_center_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_axis_v_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_axis_v_set)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_axis_u_get)
. = ALIGN(0x1000);
*(.text.UVWarpModifier_axis_u_set)
. = ALIGN(0x1000);
*(.text.TriangulateModifier_ngon_method_get)
. = ALIGN(0x1000);
*(.text.TriangulateModifier_ngon_method_set)
. = ALIGN(0x1000);
*(.text.TriangulateModifier_quad_method_get)
. = ALIGN(0x1000);
*(.text.TriangulateModifier_quad_method_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_iterations_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_iterations_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_lambda_border_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_lambda_border_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_lambda_factor_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_lambda_factor_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_normalized_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_normalized_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_volume_preserve_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_volume_preserve_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_z_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_z_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_y_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_y_set)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_x_get)
. = ALIGN(0x1000);
*(.text.LaplacianSmoothModifier_use_x_set)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_z_symmetry_get)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_z_symmetry_set)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_y_symmetry_get)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_y_symmetry_set)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_x_symmetry_get)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_x_symmetry_set)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_smooth_shade_get)
. = ALIGN(0x1000);
*(.text.SkinModifier_use_smooth_shade_set)
. = ALIGN(0x1000);
*(.text.SkinModifier_branch_smoothing_get)
. = ALIGN(0x1000);
*(.text.SkinModifier_branch_smoothing_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_use_smooth_shade_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_use_smooth_shade_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_use_remove_disconnected_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_use_remove_disconnected_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_sharpness_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_sharpness_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_octree_depth_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_octree_depth_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_threshold_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_threshold_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_scale_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_scale_set)
. = ALIGN(0x1000);
*(.text.RemeshModifier_mode_get)
. = ALIGN(0x1000);
*(.text.RemeshModifier_mode_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintModifier_ui_type_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintModifier_ui_type_set)
. = ALIGN(0x1000);
*(.text.DynamicPaintModifier_brush_settings_get)
. = ALIGN(0x1000);
*(.text.DynamicPaintModifier_canvas_settings_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_filepath_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_filepath_length)
. = ALIGN(0x1000);
*(.text.OceanModifier_filepath_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_is_cached_get)
. = ALIGN(0x1000);
*(.text.rna_OceanModifier_init_update)
. = ALIGN(0x1000);
*(.text.OceanModifier_frame_end_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_frame_end_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_frame_start_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_frame_start_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_random_seed_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_random_seed_set)
. = ALIGN(0x1000);
*(.text.rna_OceanModifier_sim_update)
. = ALIGN(0x1000);
*(.text.OceanModifier_time_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_time_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_choppiness_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_choppiness_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_foam_layer_name_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_foam_layer_name_length)
. = ALIGN(0x1000);
*(.text.OceanModifier_foam_layer_name_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_bake_foam_fade_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_bake_foam_fade_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_foam_coverage_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_foam_coverage_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_depth_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_depth_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_scale_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_scale_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_direction_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_direction_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_alignment_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_alignment_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_scale_min_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_wave_scale_min_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_damping_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_damping_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_wind_velocity_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_wind_velocity_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_spatial_size_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_spatial_size_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_resolution_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_resolution_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_use_foam_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_use_foam_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_use_normals_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_use_normals_set)
. = ALIGN(0x1000);
*(.text.rna_OceanModifier_topology_update)
. = ALIGN(0x1000);
*(.text.OceanModifier_repeat_y_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_repeat_y_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_repeat_x_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_repeat_x_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_size_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_size_set)
. = ALIGN(0x1000);
*(.text.OceanModifier_geometry_mode_get)
. = ALIGN(0x1000);
*(.text.OceanModifier_geometry_mode_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_map_object_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_map_object_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_uv_layer_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_uv_layer_length)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_uv_layer_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_mapping_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_mapping_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_use_channel_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_tex_use_channel_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_texture_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_texture_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_vertex_group_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_vertex_group_length)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_vertex_group_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_constant_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_mask_constant_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_falloff_type_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_falloff_type_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_max_dist_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_max_dist_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_min_dist_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_min_dist_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_target_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_target_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_proximity_geometry_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_proximity_geometry_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_proximity_mode_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_proximity_mode_set)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.VertexWeightProximityModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_map_object_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_map_object_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_uv_layer_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_uv_layer_length)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_uv_layer_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_mapping_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_mapping_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_use_channel_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_tex_use_channel_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_texture_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_texture_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_vertex_group_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_vertex_group_length)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_vertex_group_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_constant_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mask_constant_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mix_set_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mix_set_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mix_mode_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_mix_mode_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_default_weight_b_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_default_weight_b_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_default_weight_a_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_default_weight_a_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_vertex_group_b_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_vertex_group_b_length)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_vertex_group_b_set)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_vertex_group_a_get)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_vertex_group_a_length)
. = ALIGN(0x1000);
*(.text.VertexWeightMixModifier_vertex_group_a_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_map_object_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_map_object_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_uv_layer_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_uv_layer_length)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_uv_layer_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_mapping_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_mapping_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_use_channel_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_tex_use_channel_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_texture_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_texture_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_vertex_group_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_vertex_group_length)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_vertex_group_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_constant_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_mask_constant_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_remove_threshold_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_remove_threshold_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_add_threshold_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_add_threshold_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_map_curve_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_default_weight_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_default_weight_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_use_remove_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_use_remove_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_use_add_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_use_add_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_falloff_type_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_falloff_type_set)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.VertexWeightEditModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_texture_coords_object_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_texture_coords_object_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_uv_layer_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_uv_layer_length)
. = ALIGN(0x1000);
*(.text.WarpModifier_uv_layer_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_texture_coords_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_texture_coords_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_texture_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_texture_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.WarpModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_use_volume_preserve_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_use_volume_preserve_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_falloff_curve_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_falloff_radius_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_falloff_radius_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_falloff_type_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_falloff_type_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_strength_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_strength_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_object_to_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_object_to_set)
. = ALIGN(0x1000);
*(.text.WarpModifier_object_from_get)
. = ALIGN(0x1000);
*(.text.WarpModifier_object_from_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_stretch_v_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_stretch_v_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_stretch_u_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_stretch_u_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_smooth_shade_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_smooth_shade_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_object_screw_offset_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_object_screw_offset_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_normal_calculate_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_normal_calculate_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_normal_flip_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_use_normal_flip_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_screw_offset_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_screw_offset_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_angle_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_angle_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_axis_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_axis_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_iterations_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_iterations_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_render_steps_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_render_steps_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_steps_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_steps_set)
. = ALIGN(0x1000);
*(.text.ScrewModifier_object_get)
. = ALIGN(0x1000);
*(.text.ScrewModifier_object_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_rim_only_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_rim_only_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_flip_normals_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_flip_normals_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_invert_vertex_group_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_invert_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_quality_normals_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_quality_normals_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_even_offset_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_even_offset_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_rim_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_use_rim_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_material_offset_rim_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_material_offset_rim_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_material_offset_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_material_offset_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_edge_crease_rim_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_edge_crease_rim_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_edge_crease_outer_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_edge_crease_outer_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_edge_crease_inner_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_edge_crease_inner_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_offset_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_offset_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_thickness_vertex_group_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_thickness_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_thickness_clamp_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_thickness_clamp_set)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_thickness_get)
. = ALIGN(0x1000);
*(.text.SolidifyModifier_thickness_set)
. = ALIGN(0x1000);
*(.text.rna_Smoke_set_type)
. = ALIGN(0x1000);
*(.text.smokeModifier_free)
. = ALIGN(0x1000);
*(.text.smokeModifier_createType)
. = ALIGN(0x1000);
*(.text.SmokeModifier_smoke_type_get)
. = ALIGN(0x1000);
*(.text.SmokeModifier_smoke_type_set)
. = ALIGN(0x1000);
*(.text.SmokeModifier_coll_settings_get)
. = ALIGN(0x1000);
*(.text.SmokeModifier_flow_settings_get)
. = ALIGN(0x1000);
*(.text.SmokeModifier_domain_settings_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_use_subsurf_uv_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_use_subsurf_uv_set)
. = ALIGN(0x1000);
*(.text.MultiresModifier_show_only_control_edges_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_show_only_control_edges_set)
. = ALIGN(0x1000);
*(.text.MultiresModifier_filepath_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_filepath_length)
. = ALIGN(0x1000);
*(.text.multires_force_external_reload .text.MultiresModifier_filepath_set)
. = ALIGN(0x1000);
*(.text.MultiresModifier_is_external_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_total_levels_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_render_levels_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_render_levels_set)
. = ALIGN(0x1000);
*(.text.rna_MultiresModifier_level_range)
. = ALIGN(0x1000);
*(.text.MultiresModifier_sculpt_levels_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_sculpt_levels_set)
. = ALIGN(0x1000);
*(.text.MultiresModifier_levels_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_levels_set)
. = ALIGN(0x1000);
*(.text.MultiresModifier_subdivision_type_get)
. = ALIGN(0x1000);
*(.text.MultiresModifier_subdivision_type_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_lock_y_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_lock_y_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_lock_x_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_lock_x_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_limits_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_limits_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_angle_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_angle_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_factor_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_factor_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_origin_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_origin_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_deform_method_get)
. = ALIGN(0x1000);
*(.text.SimpleDeformModifier_deform_method_set)
. = ALIGN(0x1000);
*(.text.MaskModifier_invert_vertex_group_get)
. = ALIGN(0x1000);
*(.text.MaskModifier_invert_vertex_group_set)
. = ALIGN(0x1000);
*(.text.MaskModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.MaskModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.MaskModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.MaskModifier_armature_get)
. = ALIGN(0x1000);
*(.text.MaskModifier_armature_set)
. = ALIGN(0x1000);
*(.text.MaskModifier_mode_get)
. = ALIGN(0x1000);
*(.text.MaskModifier_mode_set)
. = ALIGN(0x1000);
*(.text.FluidSimulationModifier_settings_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_keep_above_surface_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_keep_above_surface_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_positive_direction_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_positive_direction_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_negative_direction_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_negative_direction_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_subsurf_levels_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_subsurf_levels_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_project_z_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_project_z_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_project_y_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_project_y_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_project_x_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_use_project_x_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_project_limit_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_project_limit_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_offset_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_offset_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_auxiliary_target_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_auxiliary_target_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_target_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_target_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_cull_face_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_cull_face_set)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_wrap_method_get)
. = ALIGN(0x1000);
*(.text.ShrinkwrapModifier_wrap_method_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_material_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_material_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_profile_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_profile_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_offset_type_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_offset_type_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_use_clamp_overlap_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_use_clamp_overlap_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.BevelModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_angle_limit_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_angle_limit_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_edge_weight_method_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_edge_weight_method_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_limit_method_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_limit_method_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_use_only_vertices_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_use_only_vertices_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_segments_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_segments_set)
. = ALIGN(0x1000);
*(.text.BevelModifier_width_get)
. = ALIGN(0x1000);
*(.text.BevelModifier_width_set)
. = ALIGN(0x1000);
*(.text.CollisionModifier_settings_get)
. = ALIGN(0x1000);
*(.text.ClothModifier_point_cache_get)
. = ALIGN(0x1000);
*(.text.ClothModifier_collision_settings_get)
. = ALIGN(0x1000);
*(.text.ClothModifier_settings_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_particle_uv_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_particle_uv_length)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_particle_uv_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_use_size_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_use_size_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_show_dead_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_show_dead_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_show_alive_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_show_alive_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_show_unborn_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_show_unborn_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_use_edge_cut_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_use_edge_cut_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_protect_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_protect_set)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.ExplodeModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_random_position_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_random_position_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_position_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_position_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_size_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_size_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_preserve_shape_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_preserve_shape_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_show_dead_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_show_dead_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_show_alive_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_show_alive_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_show_unborn_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_show_unborn_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_path_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_path_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_children_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_children_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_normal_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_use_normal_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_axis_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_axis_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_particle_system_index_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_particle_system_index_set)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_object_get)
. = ALIGN(0x1000);
*(.text.ParticleInstanceModifier_object_set)
. = ALIGN(0x1000);
*(.text.ParticleSystemModifier_particle_system_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_use_dynamic_bind_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_use_dynamic_bind_set)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_precision_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_precision_set)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_invert_vertex_group_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_invert_vertex_group_set)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_is_bound_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_object_get)
. = ALIGN(0x1000);
*(.text.MeshDeformModifier_object_set)
. = ALIGN(0x1000);
*(.text.CastModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.CastModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.CastModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.CastModifier_size_get)
. = ALIGN(0x1000);
*(.text.CastModifier_size_set)
. = ALIGN(0x1000);
*(.text.CastModifier_radius_get)
. = ALIGN(0x1000);
*(.text.CastModifier_radius_set)
. = ALIGN(0x1000);
*(.text.CastModifier_factor_get)
. = ALIGN(0x1000);
*(.text.CastModifier_factor_set)
. = ALIGN(0x1000);
*(.text.CastModifier_use_transform_get)
. = ALIGN(0x1000);
*(.text.CastModifier_use_transform_set)
. = ALIGN(0x1000);
*(.text.CastModifier_use_radius_as_size_get)
. = ALIGN(0x1000);
*(.text.CastModifier_use_radius_as_size_set)
. = ALIGN(0x1000);
*(.text.CastModifier_use_z_get)
. = ALIGN(0x1000);
*(.text.CastModifier_use_z_set)
. = ALIGN(0x1000);
*(.text.CastModifier_use_y_get)
. = ALIGN(0x1000);
*(.text.CastModifier_use_y_set)
. = ALIGN(0x1000);
*(.text.CastModifier_use_x_get)
. = ALIGN(0x1000);
*(.text.CastModifier_use_x_set)
. = ALIGN(0x1000);
*(.text.CastModifier_object_get)
. = ALIGN(0x1000);
*(.text.CastModifier_object_set)
. = ALIGN(0x1000);
*(.text.CastModifier_cast_type_get)
. = ALIGN(0x1000);
*(.text.CastModifier_cast_type_set)
. = ALIGN(0x1000);
*(.text.EdgeSplitModifier_use_edge_sharp_get)
. = ALIGN(0x1000);
*(.text.EdgeSplitModifier_use_edge_sharp_set)
. = ALIGN(0x1000);
*(.text.EdgeSplitModifier_use_edge_angle_get)
. = ALIGN(0x1000);
*(.text.EdgeSplitModifier_use_edge_angle_set)
. = ALIGN(0x1000);
*(.text.EdgeSplitModifier_split_angle_get)
. = ALIGN(0x1000);
*(.text.EdgeSplitModifier_split_angle_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_end_cap_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_end_cap_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_start_cap_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_start_cap_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_offset_object_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_offset_object_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_object_offset_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_object_offset_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_merge_threshold_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_merge_threshold_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_merge_vertices_cap_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_merge_vertices_cap_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_merge_vertices_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_merge_vertices_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_relative_offset_displace_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_relative_offset_displace_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_relative_offset_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_relative_offset_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_constant_offset_displace_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_constant_offset_displace_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_constant_offset_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_use_constant_offset_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_curve_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_curve_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_fit_length_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_fit_length_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_count_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_count_set)
. = ALIGN(0x1000);
*(.text.ArrayModifier_fit_type_get)
. = ALIGN(0x1000);
*(.text.ArrayModifier_fit_type_set)
. = ALIGN(0x1000);
*(.text.BooleanModifier_operation_get)
. = ALIGN(0x1000);
*(.text.BooleanModifier_operation_set)
. = ALIGN(0x1000);
*(.text.BooleanModifier_object_get)
. = ALIGN(0x1000);
*(.text.BooleanModifier_object_set)
. = ALIGN(0x1000);
*(.text.SoftBodyModifier_point_cache_get)
. = ALIGN(0x1000);
*(.text.SoftBodyModifier_settings_get)
. = ALIGN(0x1000);
*(.text.HookModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.HookModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.HookModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.HookModifier_subtarget_get)
. = ALIGN(0x1000);
*(.text.HookModifier_subtarget_length)
. = ALIGN(0x1000);
*(.text.HookModifier_subtarget_set)
. = ALIGN(0x1000);
*(.text.HookModifier_object_get)
. = ALIGN(0x1000);
*(.text.HookModifier_object_set)
. = ALIGN(0x1000);
*(.text.BKE_object_modifier_hook_reset)
. = ALIGN(0x1000);
*(.text.HookModifier_center_get)
. = ALIGN(0x1000);
*(.text.HookModifier_center_set)
. = ALIGN(0x1000);
*(.text.HookModifier_force_get)
. = ALIGN(0x1000);
*(.text.HookModifier_force_set)
. = ALIGN(0x1000);
*(.text.HookModifier_falloff_get)
. = ALIGN(0x1000);
*(.text.HookModifier_falloff_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_invert_vertex_group_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_invert_vertex_group_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_multi_modifier_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_multi_modifier_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_deform_preserve_volume_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_deform_preserve_volume_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_vertex_groups_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_vertex_groups_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_bone_envelopes_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_use_bone_envelopes_set)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_object_get)
. = ALIGN(0x1000);
*(.text.ArmatureModifier_object_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_texture_coords_object_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_texture_coords_object_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_uv_layer_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_uv_layer_length)
. = ALIGN(0x1000);
*(.text.WaveModifier_uv_layer_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_texture_coords_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_texture_coords_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_texture_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_texture_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_narrowness_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_narrowness_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_width_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_width_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_height_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_height_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_speed_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_speed_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.WaveModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_start_position_object_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_start_position_object_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_start_position_y_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_start_position_y_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_start_position_x_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_start_position_x_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_falloff_radius_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_falloff_radius_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_damping_time_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_damping_time_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_lifetime_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_lifetime_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_time_offset_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_time_offset_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_z_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_z_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_y_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_y_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_x_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_x_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_normal_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_cyclic_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_cyclic_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_y_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_y_set)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_x_get)
. = ALIGN(0x1000);
*(.text.WaveModifier_use_x_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_face_count_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_delimit_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_delimit_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_use_dissolve_boundaries_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_use_dissolve_boundaries_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_use_collapse_triangulate_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_use_collapse_triangulate_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_invert_vertex_group_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_invert_vertex_group_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.DecimateModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_angle_limit_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_angle_limit_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_iterations_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_iterations_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_ratio_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_ratio_set)
. = ALIGN(0x1000);
*(.text.DecimateModifier_decimate_type_get)
. = ALIGN(0x1000);
*(.text.DecimateModifier_decimate_type_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_mirror_object_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_mirror_object_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_merge_threshold_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_merge_threshold_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_v_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_v_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_u_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_u_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_merge_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_merge_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_vertex_groups_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_mirror_vertex_groups_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_clip_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_clip_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_z_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_z_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_y_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_y_set)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_x_get)
. = ALIGN(0x1000);
*(.text.MirrorModifier_use_x_set)
. = ALIGN(0x1000);
*(.text.BuildModifier_seed_get)
. = ALIGN(0x1000);
*(.text.BuildModifier_seed_set)
. = ALIGN(0x1000);
*(.text.BuildModifier_use_random_order_get)
. = ALIGN(0x1000);
*(.text.BuildModifier_use_random_order_set)
. = ALIGN(0x1000);
*(.text.BuildModifier_use_reverse_get)
. = ALIGN(0x1000);
*(.text.BuildModifier_use_reverse_set)
. = ALIGN(0x1000);
*(.text.BuildModifier_frame_duration_get)
. = ALIGN(0x1000);
*(.text.BuildModifier_frame_duration_set)
. = ALIGN(0x1000);
*(.text.BuildModifier_frame_start_get)
. = ALIGN(0x1000);
*(.text.BuildModifier_frame_start_set)
. = ALIGN(0x1000);
*(.text.CurveModifier_deform_axis_get)
. = ALIGN(0x1000);
*(.text.CurveModifier_deform_axis_set)
. = ALIGN(0x1000);
*(.text.CurveModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.CurveModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.CurveModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.CurveModifier_object_get)
. = ALIGN(0x1000);
*(.text.CurveModifier_object_set)
. = ALIGN(0x1000);
*(.text.LatticeModifier_strength_get)
. = ALIGN(0x1000);
*(.text.LatticeModifier_strength_set)
. = ALIGN(0x1000);
*(.text.LatticeModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.LatticeModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.LatticeModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.LatticeModifier_object_get)
. = ALIGN(0x1000);
*(.text.LatticeModifier_object_set)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_use_subsurf_uv_get)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_use_subsurf_uv_set)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_show_only_control_edges_get)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_show_only_control_edges_set)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_render_levels_get)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_render_levels_set)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_levels_get)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_levels_set)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_subdivision_type_get)
. = ALIGN(0x1000);
*(.text.SubsurfModifier_subdivision_type_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_use_image_override_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_use_image_override_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_scale_y_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_scale_y_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_scale_x_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_scale_x_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_aspect_y_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_aspect_y_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_aspect_x_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_aspect_x_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_uv_layer_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_uv_layer_length)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_uv_layer_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_texture_coords_object_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_texture_coords_object_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_uv_layer_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_uv_layer_length)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_uv_layer_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_texture_coords_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_texture_coords_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_texture_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_texture_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_direction_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_direction_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_strength_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_strength_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_mid_level_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_mid_level_set)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.DisplaceModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SmoothModifier_vertex_group_get)
. = ALIGN(0x1000);
*(.text.SmoothModifier_vertex_group_length)
. = ALIGN(0x1000);
*(.text.SmoothModifier_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SmoothModifier_iterations_get)
. = ALIGN(0x1000);
*(.text.SmoothModifier_iterations_set)
. = ALIGN(0x1000);
*(.text.SmoothModifier_factor_get)
. = ALIGN(0x1000);
*(.text.SmoothModifier_factor_set)
. = ALIGN(0x1000);
*(.text.SmoothModifier_use_z_get)
. = ALIGN(0x1000);
*(.text.SmoothModifier_use_z_set)
. = ALIGN(0x1000);
*(.text.SmoothModifier_use_y_get)
. = ALIGN(0x1000);
*(.text.SmoothModifier_use_y_set)
. = ALIGN(0x1000);
*(.text.SmoothModifier_use_x_get)
. = ALIGN(0x1000);
*(.text.SmoothModifier_use_x_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projector_count_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_projector_count_set)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_image_get)
. = ALIGN(0x1000);
*(.text.UVProjectModifier_image_set)
. = ALIGN(0x1000);
*(.text.rna_MovieClip_reload_update)
. = ALIGN(0x1000);
*(.text.IMB_testiffname)
. = ALIGN(0x1000);
*(.text.BKE_movieclip_reload)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_directory_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_directory_length)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_directory_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_timecode_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_timecode_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_quality_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_quality_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_free_run_rec_date_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_free_run_rec_date_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_free_run_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_free_run_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_record_run_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_record_run_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_100_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_100_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_75_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_75_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_50_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_50_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_25_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_undistorted_25_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_100_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_100_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_75_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_75_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_50_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_50_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_25_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_build_25_set)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieClipProxy_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieClip_colorspace_settings_get)
. = ALIGN(0x1000);
*(.text.MovieClip_frame_duration_get)
. = ALIGN(0x1000);
*(.text.MovieClip_frame_offset_get)
. = ALIGN(0x1000);
*(.text.MovieClip_frame_offset_set)
. = ALIGN(0x1000);
*(.text.MovieClip_frame_start_get)
. = ALIGN(0x1000);
*(.text.MovieClip_frame_start_set)
. = ALIGN(0x1000);
*(.text.MovieClip_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.MovieClip_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.MovieClip_use_proxy_custom_directory_get)
. = ALIGN(0x1000);
*(.text.MovieClip_use_proxy_custom_directory_set)
. = ALIGN(0x1000);
*(.text.MovieClip_source_get)
. = ALIGN(0x1000);
*(.text.MovieClip_display_aspect_get)
. = ALIGN(0x1000);
*(.text.MovieClip_display_aspect_set)
. = ALIGN(0x1000);
*(.text.MovieClip_size_get)
. = ALIGN(0x1000);
*(.text.MovieClip_use_proxy_get)
. = ALIGN(0x1000);
*(.text.MovieClip_use_proxy_set)
. = ALIGN(0x1000);
*(.text.MovieClip_proxy_get)
. = ALIGN(0x1000);
*(.text.MovieClip_tracking_get)
. = ALIGN(0x1000);
*(.text.MovieClip_filepath_get)
. = ALIGN(0x1000);
*(.text.MovieClip_filepath_length)
. = ALIGN(0x1000);
*(.text.MovieClip_filepath_set)
. = ALIGN(0x1000);
*(.text.rna_MovieClipUser_proxy_render_settings_update)
. = ALIGN(0x1000);
*(.text.MovieClipUser_use_render_undistorted_get)
. = ALIGN(0x1000);
*(.text.MovieClipUser_use_render_undistorted_set)
. = ALIGN(0x1000);
*(.text.MovieClipUser_proxy_render_size_get)
. = ALIGN(0x1000);
*(.text.MovieClipUser_proxy_render_size_set)
. = ALIGN(0x1000);
*(.text.MovieClipUser_frame_current_get)
. = ALIGN(0x1000);
*(.text.MovieClipUser_frame_current_set)
. = ALIGN(0x1000);
*(.text.MovieClipUser_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieClipUser_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieClipUser_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieClipUser_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieClipUser_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieClipUser_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieClipScopes_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieClipScopes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieClipScopes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieClipScopes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieClipScopes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieClipScopes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NlaTrack_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NlaTrack_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NlaTrack_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NlaTrack_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NlaTrack_rna_type_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_strips_begin)
. = ALIGN(0x1000);
*(.text.NlaTrack_strips_next)
. = ALIGN(0x1000);
*(.text.NlaTrack_strips_end)
. = ALIGN(0x1000);
*(.text.NlaTrack_strips_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_strips_lookup_int)
. = ALIGN(0x1000);
*(.text.NlaTrack_strips_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_NlaStrip_path)
. = ALIGN(0x1000);
*(.text.NlaStrip_name_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_name_length)
. = ALIGN(0x1000);
*(.text.NlaStrip_name_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_rna_type_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_type_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_extrapolation_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_extrapolation_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_blend_type_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_blend_type_set)
. = ALIGN(0x1000);
*(.text.rna_NlaStrip_transform_update)
. = ALIGN(0x1000);
*(.text.RNA_float_set)
. = ALIGN(0x1000);
*(.text.BKE_nlameta_flush_transforms)
. = ALIGN(0x1000);
*(.text.NlaStrip_frame_start_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_frame_start_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_frame_end_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_frame_end_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_blend_in_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_blend_in_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_blend_out_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_blend_out_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_auto_blend_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_auto_blend_set)
. = ALIGN(0x1000);
*(.text.BKE_nla_validate_state)
. = ALIGN(0x1000);
*(.text.rna_NlaStrip_action_editable)
. = ALIGN(0x1000);
*(.text.NlaStrip_action_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_action_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_action_frame_start_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_action_frame_start_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_action_frame_end_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_action_frame_end_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_repeat_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_repeat_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_scale_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_scale_set)
. = ALIGN(0x1000);
*(.text.BKE_nlastrip_recalculate_bounds)
. = ALIGN(0x1000);
*(.text.NlaStrip_fcurves_begin)
. = ALIGN(0x1000);
*(.text.NlaStrip_fcurves_next)
. = ALIGN(0x1000);
*(.text.NlaStrip_fcurves_end)
. = ALIGN(0x1000);
*(.text.NlaStrip_fcurves_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_fcurves_lookup_int)
. = ALIGN(0x1000);
*(.text.NlaStrip_modifiers_begin)
. = ALIGN(0x1000);
*(.text.NlaStrip_modifiers_next)
. = ALIGN(0x1000);
*(.text.NlaStrip_modifiers_end)
. = ALIGN(0x1000);
*(.text.NlaStrip_modifiers_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.NlaStrip_strips_begin)
. = ALIGN(0x1000);
*(.text.NlaStrip_strips_next)
. = ALIGN(0x1000);
*(.text.NlaStrip_strips_end)
. = ALIGN(0x1000);
*(.text.NlaStrip_strips_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_strips_lookup_int)
. = ALIGN(0x1000);
*(.text.NlaStrip_strips_lookup_string)
. = ALIGN(0x1000);
*(.text.NlaStrip_influence_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_influence_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_strip_time_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_strip_time_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_animated_influence_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_animated_influence_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_animated_time_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_animated_time_set)
. = ALIGN(0x1000);
*(.text.BKE_nlastrip_validate_fcurves)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_animated_time_cyclic_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_animated_time_cyclic_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_active_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_select_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_select_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_mute_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_mute_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_reverse_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_reverse_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_sync_length_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_use_sync_length_set)
. = ALIGN(0x1000);
*(.text.NlaStrip_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NlaStrip_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NlaStrip_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NlaStrip_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NlaStrip_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NlaStrips_remove_call)
. = ALIGN(0x1000);
*(.text.NlaStrips_new_call)
. = ALIGN(0x1000);
*(.text.BKE_nlastrip_validate_name)
. = ALIGN(0x1000);
*(.text.add_nlastrip)
. = ALIGN(0x1000);
*(.text.BKE_nlastrips_add_strip .text.rna_NlaStrip_new)
. = ALIGN(0x1000);
*(.text.NlaStrips_rna_type_get)
. = ALIGN(0x1000);
*(.text.NlaStrips_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NlaStrips_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NlaStrips_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NlaStrips_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NlaStrips_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NlaTrack_lock_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_lock_set)
. = ALIGN(0x1000);
*(.text.NlaTrack_mute_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_mute_set)
. = ALIGN(0x1000);
*(.text.NlaTrack_select_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_select_set)
. = ALIGN(0x1000);
*(.text.NlaTrack_is_solo_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_is_solo_set)
. = ALIGN(0x1000);
*(.text.NlaTrack_active_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_name_get)
. = ALIGN(0x1000);
*(.text.NlaTrack_name_length)
. = ALIGN(0x1000);
*(.text.NlaTrack_name_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeSocket_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeSocket_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeSocket_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeSocket_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_update)
. = ALIGN(0x1000);
*(.text.NodeSocket_name_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_name_length)
. = ALIGN(0x1000);
*(.text.NodeSocket_name_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_identifier_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_identifier_length)
. = ALIGN(0x1000);
*(.text.NodeSocket_is_output_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_hide_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_hide_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_enabled_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_enabled_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_link_limit_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_link_limit_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_is_linked_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_show_expanded_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_show_expanded_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_hide_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_hide_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocket_node_get)
. = ALIGN(0x1000);
*(.text.rna_Node_refine)
. = ALIGN(0x1000);
*(.text.rna_Node_path)
. = ALIGN(0x1000);
*(.text.rna_Node_register)
. = ALIGN(0x1000);
*(.text.rna_Node_unregister)
. = ALIGN(0x1000);
*(.text.rna_Node_idprops)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_refine)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_register)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_unregister)
. = ALIGN(0x1000);
*(.text.NodeTree_interface_update_call)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_poll)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_update_reg)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_get_from_context)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_icon_get)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_icon_set)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_description_get)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_description_length)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_description_set)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_label_get)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_label_length)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_label_set)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_idname_get)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_idname_length)
. = ALIGN(0x1000);
*(.text.NodeTree_bl_idname_set)
. = ALIGN(0x1000);
*(.text.NodeTree_active_output_get)
. = ALIGN(0x1000);
*(.text.NodeTree_active_output_set)
. = ALIGN(0x1000);
*(.text.NodeTree_outputs_begin)
. = ALIGN(0x1000);
*(.text.NodeTree_outputs_next)
. = ALIGN(0x1000);
*(.text.NodeTree_outputs_end)
. = ALIGN(0x1000);
*(.text.NodeTree_outputs_get)
. = ALIGN(0x1000);
*(.text.NodeTree_outputs_lookup_int)
. = ALIGN(0x1000);
*(.text.NodeTree_outputs_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_move_call)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_outputs_move)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_clear_call)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_remove_call)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_new_call)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeTreeOutputs_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_move_call)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_inputs_move)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_clear_call)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_remove_call)
. = ALIGN(0x1000);
*(.text.ntreeRemoveSocketInterface)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_socket_remove)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_new_call)
. = ALIGN(0x1000);
*(.text.make_socket_interface)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeTreeInputs_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeLinks_clear_call)
. = ALIGN(0x1000);
*(.text.NodeLinks_remove_call)
. = ALIGN(0x1000);
*(.text.NodeLink_is_hidden_get)
. = ALIGN(0x1000);
*(.text.NodeLink_to_socket_get)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_refine)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_path)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_register)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_unregister)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_idprops)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_draw)
. = ALIGN(0x1000);
*(.text.rna_NodeSocket_draw_color)
. = ALIGN(0x1000);
*(.text.NodeSocket_bl_idname_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_bl_idname_length)
. = ALIGN(0x1000);
*(.text.NodeSocket_bl_idname_set)
. = ALIGN(0x1000);
*(.text.NodeLink_from_socket_get)
. = ALIGN(0x1000);
*(.text.NodeLink_to_node_get)
. = ALIGN(0x1000);
*(.text.NodeLink_from_node_get)
. = ALIGN(0x1000);
*(.text.NodeLink_is_valid_get)
. = ALIGN(0x1000);
*(.text.NodeLink_is_valid_set)
. = ALIGN(0x1000);
*(.text.NodeLink_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeLink_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeLink_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeLink_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeLink_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeLink_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeOutputs_move_call)
. = ALIGN(0x1000);
*(.text.rna_Node_outputs_move)
. = ALIGN(0x1000);
*(.text.NodeOutputs_clear_call)
. = ALIGN(0x1000);
*(.text.NodeOutputs_remove_call)
. = ALIGN(0x1000);
*(.text.NodeOutputs_new_call)
. = ALIGN(0x1000);
*(.text.NodeOutputs_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeOutputs_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeOutputs_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeOutputs_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeOutputs_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeOutputs_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_type_get)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_identifier_get)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_identifier_length)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_name_get)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_name_length)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeInternalSocketTemplate_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeInternal_draw_buttons_ext_call)
. = ALIGN(0x1000);
*(.text.NodeInternal_draw_buttons_call)
. = ALIGN(0x1000);
*(.text.NodeInternal_update_call)
. = ALIGN(0x1000);
*(.text.NodeInternal_poll_instance_call)
. = ALIGN(0x1000);
*(.text.NodeInternal_poll_call)
. = ALIGN(0x1000);
*(.text.rna_ShaderNode_register)
. = ALIGN(0x1000);
*(.text.rna_Node_is_registered_node_type_runtime)
. = ALIGN(0x1000);
*(.text.rna_Node_poll)
. = ALIGN(0x1000);
*(.text.rna_Node_poll_instance_default)
. = ALIGN(0x1000);
*(.text.rna_Node_poll_instance)
. = ALIGN(0x1000);
*(.text.rna_Node_update_reg)
. = ALIGN(0x1000);
*(.text.rna_Node_init)
. = ALIGN(0x1000);
*(.text.rna_Node_copy)
. = ALIGN(0x1000);
*(.text.rna_Node_free)
. = ALIGN(0x1000);
*(.text.rna_Node_draw_buttons)
. = ALIGN(0x1000);
*(.text.rna_Node_draw_buttons_ext)
. = ALIGN(0x1000);
*(.text.rna_Node_draw_label)
. = ALIGN(0x1000);
*(.text.rna_CompositorNode_register)
. = ALIGN(0x1000);
*(.text.CompositorNode_tag_need_exec_call)
. = ALIGN(0x1000);
*(.text.NodeLinks_new_call)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_link_new)
. = ALIGN(0x1000);
*(.text.NodeLinks_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeLinks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeLinks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeLinks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeLinks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeLinks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeSocketStandard_draw_color_call)
. = ALIGN(0x1000);
*(.text.NodeSocketStandard_draw_call)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_refine)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_path)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_register)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_unregister)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_idprops)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceStandard_draw_color_call)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceStandard_draw_call)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_draw)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_draw_color)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_register_properties)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_init_socket)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_from_socket)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketInterface_update)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_name_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_name_length)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_name_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_identifier_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_identifier_length)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_is_output_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_bl_socket_idname_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_bl_socket_idname_length)
. = ALIGN(0x1000);
*(.text.NodeSocketInterface_bl_socket_idname_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceStandard_type_get)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketStandard_value_update)
. = ALIGN(0x1000);
*(.text.nodeSynchronizeID)
. = ALIGN(0x1000);
*(.text.NodeSocketFloat_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketFloat_default_value_set)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketStandard_float_range)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloat_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloat_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloat_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloat_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloat_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloat_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatUnsigned_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatUnsigned_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatUnsigned_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatUnsigned_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatUnsigned_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatUnsigned_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatUnsigned_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatUnsigned_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatPercentage_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatPercentage_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatPercentage_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatPercentage_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatPercentage_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatPercentage_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatPercentage_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatPercentage_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatFactor_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatFactor_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatFactor_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatFactor_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatFactor_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatFactor_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatFactor_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatFactor_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatAngle_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatAngle_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatAngle_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatAngle_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatAngle_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatAngle_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatAngle_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatAngle_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatTime_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketFloatTime_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatTime_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatTime_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatTime_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatTime_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatTime_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceFloatTime_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInt_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInt_default_value_set)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketStandard_int_range)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceInt_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceInt_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceInt_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceInt_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceInt_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceInt_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketIntUnsigned_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketIntUnsigned_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntUnsigned_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntUnsigned_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntUnsigned_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntUnsigned_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntUnsigned_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntUnsigned_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketIntPercentage_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketIntPercentage_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntPercentage_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntPercentage_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntPercentage_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntPercentage_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntPercentage_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntPercentage_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketIntFactor_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketIntFactor_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntFactor_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntFactor_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntFactor_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntFactor_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntFactor_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceIntFactor_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketBool_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketBool_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceBool_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceBool_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVector_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVector_default_value_set)
. = ALIGN(0x1000);
*(.text.rna_NodeSocketStandard_vector_range)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVector_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVector_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVector_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVector_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVector_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVector_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorTranslation_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorTranslation_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorTranslation_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorTranslation_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorTranslation_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorTranslation_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorTranslation_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorTranslation_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorDirection_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorDirection_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorDirection_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorDirection_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorDirection_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorDirection_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorDirection_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorDirection_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorVelocity_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorVelocity_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorVelocity_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorVelocity_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorVelocity_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorVelocity_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorVelocity_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorVelocity_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorAcceleration_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorAcceleration_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorAcceleration_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorAcceleration_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorAcceleration_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorAcceleration_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorAcceleration_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorAcceleration_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorEuler_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorEuler_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorEuler_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorEuler_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorEuler_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorEuler_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorEuler_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorEuler_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorXYZ_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketVectorXYZ_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorXYZ_max_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorXYZ_max_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorXYZ_min_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorXYZ_min_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorXYZ_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceVectorXYZ_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketColor_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketColor_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceColor_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceColor_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketString_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketString_default_value_length)
. = ALIGN(0x1000);
*(.text.NodeSocketString_default_value_set)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceString_default_value_get)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceString_default_value_length)
. = ALIGN(0x1000);
*(.text.NodeSocketInterfaceString_default_value_set)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_update)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_viewer_border_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_viewer_border_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_two_pass_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_two_pass_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_groupnode_buffer_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_groupnode_buffer_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_opencl_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_use_opencl_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_chunk_size_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_chunk_size_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_edit_quality_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_edit_quality_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_render_quality_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTree_render_quality_set)
. = ALIGN(0x1000);
*(.text.NodeFrame_output_template_call)
. = ALIGN(0x1000);
*(.text.NodeFrame_input_template_call)
. = ALIGN(0x1000);
*(.text.NodeFrame_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.NodeFrame_label_size_get)
. = ALIGN(0x1000);
*(.text.NodeFrame_label_size_set)
. = ALIGN(0x1000);
*(.text.NodeFrame_shrink_get)
. = ALIGN(0x1000);
*(.text.NodeFrame_shrink_set)
. = ALIGN(0x1000);
*(.text.NodeGroup_output_template_call)
. = ALIGN(0x1000);
*(.text.NodeGroup_input_template_call)
. = ALIGN(0x1000);
*(.text.NodeGroup_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_NodeGroup_interface_typef)
. = ALIGN(0x1000);
*(.text.rna_NodeGroup_update)
. = ALIGN(0x1000);
*(.text.NodeGroup_node_tree_get)
. = ALIGN(0x1000);
*(.text.NodeGroup_node_tree_set)
. = ALIGN(0x1000);
*(.text.rna_NodeGroup_node_tree_poll)
. = ALIGN(0x1000);
*(.text.NodeGroupInput_output_template_call)
. = ALIGN(0x1000);
*(.text.NodeGroupInput_input_template_call)
. = ALIGN(0x1000);
*(.text.NodeGroupInput_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_NodeGroupInputOutput_interface_typef)
. = ALIGN(0x1000);
*(.text.ntreeInterfaceTypeGet)
. = ALIGN(0x1000);
*(.text.NodeGroupOutput_output_template_call)
. = ALIGN(0x1000);
*(.text.NodeGroupOutput_input_template_call)
. = ALIGN(0x1000);
*(.text.NodeGroupOutput_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_Node_update)
. = ALIGN(0x1000);
*(.text.NodeGroupOutput_is_active_output_get)
. = ALIGN(0x1000);
*(.text.NodeGroupOutput_is_active_output_set)
. = ALIGN(0x1000);
*(.text.NodeReroute_output_template_call)
. = ALIGN(0x1000);
*(.text.NodeReroute_input_template_call)
. = ALIGN(0x1000);
*(.text.NodeReroute_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutput_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutput_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutput_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutput_is_active_output_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutput_is_active_output_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_invert_normal_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_invert_normal_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_use_specular_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_use_specular_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_use_diffuse_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_use_diffuse_set)
. = ALIGN(0x1000);
*(.text.rna_Node_material_update)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_material_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMaterial_material_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeValue_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeValue_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeValue_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_use_clamp_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_use_clamp_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_use_alpha_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_use_alpha_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_blend_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixRGB_blend_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeValToRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeValToRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeValToRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeValToRGB_color_ramp_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBToBW_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBToBW_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBToBW_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_node_output_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_node_output_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_texture_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexture_texture_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormal_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormal_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormal_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGamma_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGamma_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGamma_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBrightContrast_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBrightContrast_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBrightContrast_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_color_layer_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_color_layer_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_color_layer_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_uv_layer_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_uv_layer_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeGeometry_uv_layer_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_Mapping_Node_update)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_use_max_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_use_max_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_use_min_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_use_min_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_max_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_max_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_min_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_min_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_scale_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_scale_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_rotation_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_rotation_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_translation_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_translation_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_vector_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMapping_vector_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorCurve_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorCurve_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorCurve_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorCurve_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBCurve_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBCurve_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBCurve_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeRGBCurve_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeCameraData_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCameraData_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCameraData_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLampData_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLampData_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLampData_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLampData_lamp_object_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeLampData_lamp_object_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_use_clamp_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_use_clamp_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_operation_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeMath_operation_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorMath_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorMath_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorMath_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorMath_operation_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorMath_operation_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeSqueeze_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSqueeze_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSqueeze_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_invert_normal_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_invert_normal_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_use_specular_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_use_specular_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_use_diffuse_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_use_diffuse_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_material_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeExtendedMaterial_material_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeInvert_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeInvert_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeInvert_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHueSaturation_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHueSaturation_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHueSaturation_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputMaterial_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputMaterial_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputMaterial_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputMaterial_is_active_output_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputMaterial_is_active_output_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLamp_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLamp_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLamp_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLamp_is_active_output_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLamp_is_active_output_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputWorld_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputWorld_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputWorld_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputWorld_is_active_output_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputWorld_is_active_output_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_use_clamp_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_use_clamp_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_use_alpha_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_use_alpha_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_blend_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_blend_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_is_active_output_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeOutputLineStyle_is_active_output_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeFresnel_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeFresnel_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeFresnel_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLayerWeight_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLayerWeight_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLayerWeight_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixShader_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixShader_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeMixShader_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAddShader_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAddShader_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAddShader_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAttribute_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAttribute_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAttribute_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAttribute_attribute_name_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeAttribute_attribute_name_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeAttribute_attribute_name_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeAmbientOcclusion_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAmbientOcclusion_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeAmbientOcclusion_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBackground_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBackground_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBackground_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHoldout_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHoldout_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHoldout_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfAnisotropic_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfAnisotropic_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfAnisotropic_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfAnisotropic_distribution_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfAnisotropic_distribution_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfDiffuse_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfDiffuse_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfDiffuse_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlossy_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlossy_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlossy_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlossy_distribution_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlossy_distribution_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlass_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlass_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlass_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlass_distribution_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfGlass_distribution_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfRefraction_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfRefraction_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfRefraction_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfRefraction_distribution_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfRefraction_distribution_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfTranslucent_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfTranslucent_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfTranslucent_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfTransparent_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfTransparent_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfTransparent_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfVelvet_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfVelvet_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfVelvet_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfToon_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfToon_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfToon_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfToon_component_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfToon_component_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfHair_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfHair_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfHair_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfHair_component_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBsdfHair_component_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeSubsurfaceScattering_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSubsurfaceScattering_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSubsurfaceScattering_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_ShaderNodeSubsurface_update)
. = ALIGN(0x1000);
*(.text.ShaderNodeSubsurfaceScattering_falloff_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeSubsurfaceScattering_falloff_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeVolumeAbsorption_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVolumeAbsorption_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVolumeAbsorption_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVolumeScatter_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVolumeScatter_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVolumeScatter_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeEmission_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeEmission_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeEmission_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNewGeometry_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNewGeometry_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNewGeometry_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLightPath_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLightPath_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLightPath_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLightFalloff_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLightFalloff_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeLightFalloff_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeObjectInfo_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeObjectInfo_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeObjectInfo_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeParticleInfo_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeParticleInfo_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeParticleInfo_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHairInfo_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHairInfo_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeHairInfo_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeWireframe_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeWireframe_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeWireframe_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeWireframe_use_pixel_size_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeWireframe_use_pixel_size_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeWavelength_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeWavelength_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeWavelength_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBlackbody_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBlackbody_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBlackbody_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBump_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBump_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBump_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeBump_invert_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeBump_invert_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_uv_map_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_uv_map_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_uv_map_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_space_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeNormalMap_space_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_uv_map_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_uv_map_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_uv_map_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_axis_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_axis_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_direction_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTangent_direction_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_bytecode_hash_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_bytecode_hash_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_bytecode_hash_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_bytecode_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_bytecode_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_bytecode_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_use_auto_update_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_use_auto_update_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_mode_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_mode_set)
. = ALIGN(0x1000);
*(.text.BLI_path_rel)
. = ALIGN(0x1000);
*(.text.rna_ShaderNodeScript_update)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_filepath_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_filepath_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_filepath_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_script_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeScript_script_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_image_user_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_projection_blend_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_projection_blend_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_interpolation_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_interpolation_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_projection_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_projection_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_color_space_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_color_space_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.rna_Node_tex_image_update)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_image_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexImage_image_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_image_user_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_projection_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_projection_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_color_space_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_color_space_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_image_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexEnvironment_image_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_ground_albedo_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_ground_albedo_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_turbidity_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_turbidity_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_sun_direction_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_sun_direction_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_sky_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_sky_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexSky_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_gradient_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_gradient_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexGradient_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexNoise_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexNoise_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexNoise_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexNoise_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexNoise_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_turbulence_depth_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_turbulence_depth_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMagic_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_wave_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_wave_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexWave_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_musgrave_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_musgrave_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexMusgrave_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_coloring_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_coloring_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexVoronoi_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexChecker_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexChecker_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexChecker_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexChecker_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexChecker_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_squash_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_squash_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_offset_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_offset_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_squash_frequency_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_squash_frequency_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_offset_frequency_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_offset_frequency_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_color_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexBrick_texture_mapping_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexCoord_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexCoord_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexCoord_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexCoord_from_dupli_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeTexCoord_from_dupli_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_convert_to_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_convert_to_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_convert_from_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_convert_from_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_vector_type_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeVectorTransform_vector_type_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateHSV_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateHSV_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateHSV_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineHSV_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineHSV_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineHSV_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_uv_map_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_uv_map_length)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_uv_map_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_from_dupli_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVMap_from_dupli_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVAlongStroke_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVAlongStroke_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVAlongStroke_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVAlongStroke_use_tips_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeUVAlongStroke_use_tips_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateXYZ_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateXYZ_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeSeparateXYZ_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineXYZ_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineXYZ_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeCombineXYZ_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_use_alpha_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_use_alpha_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_center_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_center_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_center_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_center_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_tile_order_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeViewer_tile_order_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeValue_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeValue_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeValue_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_use_clamp_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_use_clamp_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_use_alpha_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_use_alpha_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_blend_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMixRGB_blend_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeValToRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeValToRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeValToRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeValToRGB_color_ramp_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeRGBToBW_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRGBToBW_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRGBToBW_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeNormal_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeNormal_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeNormal_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveVec_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveVec_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveVec_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveVec_mapping_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCurveRGB_mapping_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_premul_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_premul_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_use_premultiply_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeAlphaOver_use_premultiply_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_gamma_correction_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_gamma_correction_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_bokeh_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_bokeh_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_filter_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_filter_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_factor_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_factor_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_factor_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_factor_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_factor_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_factor_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_aspect_correction_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_aspect_correction_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_relative_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_relative_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_size_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_size_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_size_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_size_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_variable_size_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBlur_use_variable_size_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeFilter_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeFilter_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeFilter_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeFilter_filter_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeFilter_filter_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_min_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_min_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_use_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_use_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_use_min_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_use_min_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_size_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_size_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_offset_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapValue_offset_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapRange_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapRange_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapRange_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapRange_use_clamp_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapRange_use_clamp_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_frame_end_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_frame_end_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_frame_start_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_frame_start_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTime_curve_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_use_curved_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_use_curved_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_factor_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_factor_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_speed_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_speed_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_speed_min_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_speed_min_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_samples_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeVecBlur_samples_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepRGBA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepRGBA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepRGBA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepHSVA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepHSVA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepHSVA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSetAlpha_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSetAlpha_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSetAlpha_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_color_value_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_color_value_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_color_saturation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_color_saturation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_color_hue_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueSat_color_hue_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_Node_image_layer_update)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_layer_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_layer_set)
. = ALIGN(0x1000);
*(.text.rna_Node_image_layer_itemf)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_use_auto_refresh_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_use_auto_refresh_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_use_cyclic_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_use_cyclic_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_frame_offset_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_frame_offset_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_frame_start_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_frame_start_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_frame_duration_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_frame_duration_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_use_straight_alpha_output_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_use_straight_alpha_output_set)
. = ALIGN(0x1000);
*(.text.rna_Image_Node_update_id)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_image_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeImage_image_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_layer_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_layer_set)
. = ALIGN(0x1000);
*(.text.rna_Node_scene_layer_itemf)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_scene_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeRLayers_scene_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeComposite_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeComposite_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeComposite_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeComposite_use_alpha_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeComposite_use_alpha_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_layer_slots_begin)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_layer_slots_next)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_layer_slots_end)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_layer_slots_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_name_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_name_length)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_name_set)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotLayer_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_path_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_path_length)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_path_set)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_format_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_use_node_format_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_use_node_format_set)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeOutputFileSlotFile_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_NodeCustomGroup_register)
. = ALIGN(0x1000);
*(.text.NodeCustomGroup_node_tree_get)
. = ALIGN(0x1000);
*(.text.NodeCustomGroup_node_tree_set)
. = ALIGN(0x1000);
*(.text.rna_TextureNode_register)
. = ALIGN(0x1000);
*(.text.rna_Node_register_base)
. = ALIGN(0x1000);
*(.text.rna_def_function)
. = ALIGN(0x1000);
*(.text.node_type_base_custom)
. = ALIGN(0x1000);
*(.text.update_typeinfo)
. = ALIGN(0x1000);
*(.text.TextureNodeGroup_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeGroup_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeGroup_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeGroup_node_tree_get)
. = ALIGN(0x1000);
*(.text.TextureNodeGroup_node_tree_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGroup_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGroup_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGroup_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGroup_node_tree_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGroup_node_tree_set)
. = ALIGN(0x1000);
*(.text.ShaderNodeGroup_output_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGroup_input_template_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGroup_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.ShaderNodeGroup_node_tree_get)
. = ALIGN(0x1000);
*(.text.ShaderNodeGroup_node_tree_set)
. = ALIGN(0x1000);
*(.text.TextureNodeTexDistNoise_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexDistNoise_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexDistNoise_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexStucci_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexStucci_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexStucci_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexNoise_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexNoise_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexNoise_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMusgrave_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMusgrave_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMusgrave_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexWood_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexWood_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexWood_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexClouds_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexClouds_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexClouds_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMarble_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMarble_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMarble_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMagic_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMagic_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexMagic_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexBlend_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexBlend_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexBlend_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexVoronoi_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexVoronoi_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexVoronoi_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeAt_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeAt_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeAt_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeScale_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeScale_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeScale_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeValToNor_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeValToNor_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeValToNor_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeDecompose_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeDecompose_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeDecompose_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCompose_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCompose_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCompose_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeDistance_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeDistance_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeDistance_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCoordinates_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCoordinates_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCoordinates_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTranslate_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTranslate_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTranslate_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeViewer_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeViewer_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeViewer_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeRotate_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeRotate_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeRotate_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_frame_end_get)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_frame_end_set)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_frame_start_get)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_frame_start_set)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveTime_curve_get)
. = ALIGN(0x1000);
*(.text.TextureNodeHueSaturation_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeHueSaturation_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeHueSaturation_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeInvert_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeInvert_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeInvert_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeCurveRGB_mapping_get)
. = ALIGN(0x1000);
*(.text.TextureNodeImage_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeImage_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeImage_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeImage_image_get)
. = ALIGN(0x1000);
*(.text.TextureNodeImage_image_set)
. = ALIGN(0x1000);
*(.text.TextureNodeValToRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeValToRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeValToRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeValToRGB_color_ramp_get)
. = ALIGN(0x1000);
*(.text.TextureNodeRGBToBW_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeRGBToBW_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeRGBToBW_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_use_clamp_get)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_use_clamp_set)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_use_alpha_get)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_use_alpha_set)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_blend_type_get)
. = ALIGN(0x1000);
*(.text.TextureNodeMixRGB_blend_type_set)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_use_clamp_get)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_use_clamp_set)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_operation_get)
. = ALIGN(0x1000);
*(.text.TextureNodeMath_operation_set)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_squash_frequency_get)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_squash_frequency_set)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_squash_get)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_squash_set)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_offset_frequency_get)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_offset_frequency_set)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_offset_get)
. = ALIGN(0x1000);
*(.text.TextureNodeBricks_offset_set)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_node_output_get)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_node_output_set)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_texture_get)
. = ALIGN(0x1000);
*(.text.TextureNodeTexture_texture_set)
. = ALIGN(0x1000);
*(.text.TextureNodeChecker_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeChecker_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeChecker_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeOutput_output_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeOutput_input_template_call)
. = ALIGN(0x1000);
*(.text.TextureNodeOutput_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.TextureNodeOutput_filepath_get)
. = ALIGN(0x1000);
*(.text.TextureNodeOutput_filepath_length)
. = ALIGN(0x1000);
*(.text.TextureNodeOutput_filepath_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_ray_length_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_ray_length_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_source_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeSunBeams_source_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCornerPin_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCornerPin_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCornerPin_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_plane_track_name_get)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_plane_track_name_length)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_plane_track_name_set)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_tracking_object_get)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_tracking_object_length)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_tracking_object_set)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_clip_get)
. = ALIGN(0x1000);
*(.text.CompositorNodePlaneTrackDeform_clip_set)
. = ALIGN(0x1000);
*(.text.CompositorNodePixelate_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePixelate_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePixelate_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_track_name_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_track_name_length)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_track_name_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_tracking_object_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_tracking_object_length)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_tracking_object_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_frame_relative_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_frame_relative_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_position_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_position_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_clip_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTrackPos_clip_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_feather_distance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_feather_distance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_feather_falloff_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_feather_falloff_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_edge_kernel_tolerance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_edge_kernel_tolerance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_edge_kernel_radius_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_edge_kernel_radius_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_dilate_distance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_dilate_distance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_blur_post_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_blur_post_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_blur_pre_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_blur_pre_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_clip_white_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_clip_white_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_clip_black_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_clip_black_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_despill_balance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_despill_balance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_despill_factor_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_despill_factor_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_screen_balance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeying_screen_balance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_tracking_object_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_tracking_object_length)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_tracking_object_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_clip_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeKeyingScreen_clip_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_size_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_size_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_size_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_size_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_size_source_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_size_source_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_motion_blur_shutter_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_motion_blur_shutter_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_motion_blur_samples_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_motion_blur_samples_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_use_motion_blur_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_use_motion_blur_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_use_feather_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_use_feather_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_use_antialiasing_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_use_antialiasing_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_mask_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMask_mask_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_lift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_lift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_gain_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_gain_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_gamma_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_gamma_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_contrast_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_contrast_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_saturation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_highlights_saturation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_lift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_lift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_gain_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_gain_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_gamma_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_gamma_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_contrast_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_contrast_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_saturation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_saturation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_lift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_lift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_gain_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_gain_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_gamma_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_gamma_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_contrast_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_contrast_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_saturation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_shadows_saturation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_lift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_lift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_gain_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_gain_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_gamma_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_gamma_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_contrast_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_contrast_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_saturation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_master_saturation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_end_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_end_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_start_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_midtones_start_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_blue_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_blue_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_green_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_green_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_red_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorCorrection_red_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSwitch_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSwitch_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSwitch_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSwitch_check_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeSwitch_check_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_blur_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_blur_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_use_variable_size_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehBlur_use_variable_size_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_shift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_shift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_catadioptric_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_catadioptric_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_rounding_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_rounding_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_flaps_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_flaps_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_angle_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBokehImage_angle_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_rotation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_rotation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_height_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_height_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_width_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_width_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_mask_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeEllipseMask_mask_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_rotation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_rotation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_height_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_height_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_width_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_width_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_mask_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBoxMask_mask_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_distortion_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_distortion_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_clip_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieDistortion_clip_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_filter_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_filter_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_clip_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeStabilize_clip_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTransform_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTransform_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTransform_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTransform_filter_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTransform_filter_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieClip_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieClip_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieClip_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieClip_clip_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMovieClip_clip_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueCorrect_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueCorrect_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueCorrect_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeHueCorrect_mapping_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.rna_NodeColorBalance_update_cdl)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_slope_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_slope_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_power_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_power_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_offset_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_offset_set)
. = ALIGN(0x1000);
*(.text.rna_NodeColorBalance_update_lgg)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_gain_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_gain_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_gamma_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_gamma_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_lift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_lift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_correction_method_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorBalance_correction_method_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_falloff_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_falloff_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_tolerance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_tolerance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_channel_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDistanceMatte_channel_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_color_value_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_color_value_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_color_saturation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_color_saturation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_color_hue_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorMatte_color_hue_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeLevels_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLevels_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLevels_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLevels_channel_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeLevels_channel_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_use_fit_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_use_fit_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_use_jitter_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_use_jitter_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_use_projector_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeLensdist_use_projector_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_correction_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_correction_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_adaptation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_adaptation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_contrast_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_contrast_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_intensity_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_intensity_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_gamma_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_gamma_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_offset_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_offset_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_key_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_key_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_tonemap_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTonemap_tonemap_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_size_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_size_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_use_rotate_45_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_use_rotate_45_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_fade_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_fade_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_angle_offset_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_angle_offset_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_streaks_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_streaks_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_threshold_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_threshold_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_mix_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_mix_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_color_modulation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_color_modulation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_iterations_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_iterations_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_quality_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_quality_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_glare_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeGlare_glare_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodePremulKey_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePremulKey_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePremulKey_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodePremulKey_mapping_get)
. = ALIGN(0x1000);
*(.text.CompositorNodePremulKey_mapping_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_sigma_space_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_sigma_space_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_sigma_color_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_sigma_color_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_iterations_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeBilateralblur_iterations_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_zoom_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_zoom_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_spin_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_spin_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_angle_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_angle_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_distance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_distance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_center_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_center_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_center_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_center_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_use_wrap_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_use_wrap_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_iterations_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDBlur_iterations_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_max_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_max_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_min_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_min_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_max_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_max_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_min_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_rel_min_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_max_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_max_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_min_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_min_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_max_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_max_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_min_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_min_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_relative_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_relative_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_use_crop_size_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCrop_use_crop_size_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeNormalize_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeNormalize_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeNormalize_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_invert_alpha_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_invert_alpha_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_invert_rgb_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeInvert_invert_rgb_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeGamma_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGamma_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeGamma_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBrightContrast_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBrightContrast_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeBrightContrast_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_limit_min_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_limit_min_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_limit_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeLumaMatte_limit_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_use_clamp_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_use_clamp_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_operation_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMath_operation_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombHSVA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombHSVA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombHSVA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDisplace_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDisplace_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDisplace_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_z_scale_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_z_scale_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_use_zbuffer_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_use_zbuffer_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_use_preview_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_use_preview_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_threshold_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_threshold_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_blur_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_blur_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_f_stop_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_f_stop_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_use_gamma_correction_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_use_gamma_correction_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_angle_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_angle_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_bokeh_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_bokeh_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_scene_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDefocus_scene_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_edge_mode_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_edge_mode_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_inner_mode_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDoubleEdgeMask_inner_mode_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_use_antialiasing_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_use_antialiasing_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_index_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeIDMask_index_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapUV_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapUV_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapUV_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapUV_alpha_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeMapUV_alpha_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_factor_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_factor_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_axis_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeSplitViewer_axis_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeFlip_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeFlip_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeFlip_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeFlip_axis_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeFlip_axis_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_min_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_min_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_max_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_max_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_channel_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_channel_set)
. = ALIGN(0x1000);
*(.text.rna_Node_channel_itemf)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_method_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_limit_method_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_matte_channel_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_matte_channel_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_color_space_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChannelMatte_color_space_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_shadow_adjust_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_shadow_adjust_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_gain_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_gain_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_lift_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_lift_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_threshold_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_threshold_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_tolerance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeChromaMatte_tolerance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_unspill_blue_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_unspill_blue_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_unspill_green_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_unspill_green_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_unspill_red_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_unspill_red_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_use_unspill_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_use_unspill_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_ratio_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_ratio_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_limit_channel_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_limit_channel_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_limit_method_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_limit_method_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_channel_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeColorSpill_channel_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_falloff_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_falloff_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_tolerance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDiffMatte_tolerance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYUVA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYUVA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYUVA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYUVA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYUVA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYUVA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYCCA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYCCA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYCCA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYCCA_mode_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombYCCA_mode_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYCCA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYCCA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYCCA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYCCA_mode_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeSepYCCA_mode_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_offset_y_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_offset_y_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_offset_x_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_offset_x_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_frame_method_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_frame_method_set)
. = ALIGN(0x1000);
*(.text.rna_CompositorNodeScale_update)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_space_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeScale_space_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeRotate_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRotate_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRotate_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeRotate_filter_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeRotate_filter_type_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_threshold_neighbor_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_threshold_neighbor_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_threshold_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDespeckle_threshold_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeInpaint_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInpaint_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInpaint_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeInpaint_distance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeInpaint_distance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_falloff_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_falloff_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_edge_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_edge_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_distance_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_distance_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_mode_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeDilateErode_mode_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombRGBA_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombRGBA_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeCombRGBA_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_use_antialias_z_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_use_antialias_z_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_use_alpha_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeZcombine_use_alpha_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_wrap_axis_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_wrap_axis_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_use_relative_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTranslate_use_relative_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_output_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_input_template_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_node_output_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_node_output_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_texture_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeTexture_texture_set)
. = ALIGN(0x1000);
*(.text.NodeInstanceHash_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeInstanceHash_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeInstanceHash_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeInstanceHash_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeInstanceHash_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeInstanceHash_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_move_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_clear_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_remove_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_new_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileLayerSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_file_slots_begin)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_file_slots_next)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_file_slots_end)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_file_slots_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_format_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_active_input_index_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_active_input_index_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_base_path_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_base_path_length)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFile_base_path_set)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_move_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_clear_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_remove_call)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_new_call)
. = ALIGN(0x1000);
*(.text.ntreeCompositOutputFileAddSocket)
. = ALIGN(0x1000);
*(.text.BKE_color_managed_display_settings_init)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_rna_type_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_rna_properties_next)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_rna_properties_end)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_rna_properties_get)
. = ALIGN(0x1000);
*(.text.CompositorNodeOutputFileFileSlots_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeTree_active_input_get)
. = ALIGN(0x1000);
*(.text.NodeTree_active_input_set)
. = ALIGN(0x1000);
*(.text.NodeTree_inputs_begin)
. = ALIGN(0x1000);
*(.text.NodeTree_inputs_next)
. = ALIGN(0x1000);
*(.text.NodeTree_inputs_end)
. = ALIGN(0x1000);
*(.text.NodeTree_inputs_get)
. = ALIGN(0x1000);
*(.text.NodeTree_inputs_lookup_int)
. = ALIGN(0x1000);
*(.text.NodeTree_inputs_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeTree_type_get)
. = ALIGN(0x1000);
*(.text.NodeTree_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.NodeTree_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.NodeTree_links_begin)
. = ALIGN(0x1000);
*(.text.NodeTree_links_next)
. = ALIGN(0x1000);
*(.text.NodeTree_links_end)
. = ALIGN(0x1000);
*(.text.NodeTree_links_get)
. = ALIGN(0x1000);
*(.text.NodeTree_links_lookup_int)
. = ALIGN(0x1000);
*(.text.NodeTree_nodes_begin)
. = ALIGN(0x1000);
*(.text.NodeTree_nodes_next)
. = ALIGN(0x1000);
*(.text.NodeTree_nodes_end)
. = ALIGN(0x1000);
*(.text.NodeTree_nodes_get)
. = ALIGN(0x1000);
*(.text.NodeTree_nodes_lookup_int)
. = ALIGN(0x1000);
*(.text.NodeTree_nodes_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeTree_animation_data_get)
. = ALIGN(0x1000);
*(.text.NodeTree_view_center_get)
. = ALIGN(0x1000);
*(.text.Nodes_clear_call)
. = ALIGN(0x1000);
*(.text.Nodes_remove_call)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_node_remove)
. = ALIGN(0x1000);
*(.text.Nodes_new_call)
. = ALIGN(0x1000);
*(.text.nodeAddNode)
. = ALIGN(0x1000);
*(.text.rna_NodeTree_node_new)
. = ALIGN(0x1000);
*(.text.Nodes_active_get)
. = ALIGN(0x1000);
*(.text.Nodes_active_set)
. = ALIGN(0x1000);
*(.text.Nodes_rna_type_get)
. = ALIGN(0x1000);
*(.text.Nodes_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Nodes_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Nodes_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Nodes_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Nodes_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Node_is_registered_node_type_call)
. = ALIGN(0x1000);
*(.text.Node_socket_value_update_call)
. = ALIGN(0x1000);
*(.text.Node_name_get)
. = ALIGN(0x1000);
*(.text.Node_name_length)
. = ALIGN(0x1000);
*(.text.Node_name_set)
. = ALIGN(0x1000);
*(.text.BKE_all_animdata_fix_paths_rename)
. = ALIGN(0x1000);
*(.text.Node_dimensions_get)
. = ALIGN(0x1000);
*(.text.Node_height_get)
. = ALIGN(0x1000);
*(.text.Node_height_set)
. = ALIGN(0x1000);
*(.text.rna_Node_height_range)
. = ALIGN(0x1000);
*(.text.Node_width_hidden_get)
. = ALIGN(0x1000);
*(.text.Node_width_hidden_set)
. = ALIGN(0x1000);
*(.text.rna_Node_width_range)
. = ALIGN(0x1000);
*(.text.Node_width_get)
. = ALIGN(0x1000);
*(.text.Node_width_set)
. = ALIGN(0x1000);
*(.text.Node_location_get)
. = ALIGN(0x1000);
*(.text.Node_location_set)
. = ALIGN(0x1000);
*(.text.Node_type_get)
. = ALIGN(0x1000);
*(.text.rna_node_static_type_itemf)
. = ALIGN(0x1000);
*(.text.Node_rna_type_get)
. = ALIGN(0x1000);
*(.text.Node_label_get)
. = ALIGN(0x1000);
*(.text.Node_label_length)
. = ALIGN(0x1000);
*(.text.Node_label_set)
. = ALIGN(0x1000);
*(.text.Node_inputs_begin)
. = ALIGN(0x1000);
*(.text.Node_inputs_next)
. = ALIGN(0x1000);
*(.text.Node_inputs_end)
. = ALIGN(0x1000);
*(.text.Node_inputs_get)
. = ALIGN(0x1000);
*(.text.Node_inputs_lookup_int)
. = ALIGN(0x1000);
*(.text.Node_inputs_lookup_string)
. = ALIGN(0x1000);
*(.text.Node_outputs_begin)
. = ALIGN(0x1000);
*(.text.Node_outputs_next)
. = ALIGN(0x1000);
*(.text.Node_outputs_end)
. = ALIGN(0x1000);
*(.text.Node_outputs_get)
. = ALIGN(0x1000);
*(.text.Node_outputs_lookup_int)
. = ALIGN(0x1000);
*(.text.Node_outputs_lookup_string)
. = ALIGN(0x1000);
*(.text.Node_internal_links_begin)
. = ALIGN(0x1000);
*(.text.Node_internal_links_next)
. = ALIGN(0x1000);
*(.text.Node_internal_links_end)
. = ALIGN(0x1000);
*(.text.Node_internal_links_get)
. = ALIGN(0x1000);
*(.text.Node_internal_links_lookup_int)
. = ALIGN(0x1000);
*(.text.Node_parent_get)
. = ALIGN(0x1000);
*(.text.Node_parent_set)
. = ALIGN(0x1000);
*(.text.nodeFromView)
. = ALIGN(0x1000);
*(.text.rna_Node_parent_poll)
. = ALIGN(0x1000);
*(.text.Node_use_custom_color_get)
. = ALIGN(0x1000);
*(.text.Node_use_custom_color_set)
. = ALIGN(0x1000);
*(.text.Node_color_get)
. = ALIGN(0x1000);
*(.text.Node_color_set)
. = ALIGN(0x1000);
*(.text.Node_select_get)
. = ALIGN(0x1000);
*(.text.Node_select_set)
. = ALIGN(0x1000);
*(.text.Node_show_options_get)
. = ALIGN(0x1000);
*(.text.Node_show_options_set)
. = ALIGN(0x1000);
*(.text.Node_show_preview_get)
. = ALIGN(0x1000);
*(.text.Node_show_preview_set)
. = ALIGN(0x1000);
*(.text.Node_hide_get)
. = ALIGN(0x1000);
*(.text.Node_hide_set)
. = ALIGN(0x1000);
*(.text.Node_mute_get)
. = ALIGN(0x1000);
*(.text.Node_mute_set)
. = ALIGN(0x1000);
*(.text.Node_show_texture_get)
. = ALIGN(0x1000);
*(.text.Node_show_texture_set)
. = ALIGN(0x1000);
*(.text.Node_bl_idname_get)
. = ALIGN(0x1000);
*(.text.Node_bl_idname_length)
. = ALIGN(0x1000);
*(.text.Node_bl_idname_set)
. = ALIGN(0x1000);
*(.text.Node_bl_label_get)
. = ALIGN(0x1000);
*(.text.Node_bl_label_length)
. = ALIGN(0x1000);
*(.text.Node_bl_label_set)
. = ALIGN(0x1000);
*(.text.Node_bl_description_get)
. = ALIGN(0x1000);
*(.text.Node_bl_description_length)
. = ALIGN(0x1000);
*(.text.Node_bl_description_set)
. = ALIGN(0x1000);
*(.text.Node_bl_icon_get)
. = ALIGN(0x1000);
*(.text.Node_bl_icon_set)
. = ALIGN(0x1000);
*(.text.Node_bl_static_type_get)
. = ALIGN(0x1000);
*(.text.Node_bl_static_type_set)
. = ALIGN(0x1000);
*(.text.Node_bl_width_default_get)
. = ALIGN(0x1000);
*(.text.Node_bl_width_default_set)
. = ALIGN(0x1000);
*(.text.Node_bl_width_min_get)
. = ALIGN(0x1000);
*(.text.Node_bl_width_min_set)
. = ALIGN(0x1000);
*(.text.Node_bl_width_max_get)
. = ALIGN(0x1000);
*(.text.Node_bl_width_max_set)
. = ALIGN(0x1000);
*(.text.Node_bl_height_default_get)
. = ALIGN(0x1000);
*(.text.Node_bl_height_default_set)
. = ALIGN(0x1000);
*(.text.Node_bl_height_min_get)
. = ALIGN(0x1000);
*(.text.Node_bl_height_min_set)
. = ALIGN(0x1000);
*(.text.Node_bl_height_max_get)
. = ALIGN(0x1000);
*(.text.Node_bl_height_max_set)
. = ALIGN(0x1000);
*(.text.Node_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Node_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Node_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Node_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Node_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeInputs_move_call)
. = ALIGN(0x1000);
*(.text.rna_Node_inputs_move)
. = ALIGN(0x1000);
*(.text.NodeInputs_clear_call)
. = ALIGN(0x1000);
*(.text.NodeInputs_remove_call)
. = ALIGN(0x1000);
*(.text.nodeRemoveSocket)
. = ALIGN(0x1000);
*(.text.NodeInputs_new_call)
. = ALIGN(0x1000);
*(.text.NodeInputs_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeInputs_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeInputs_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeInputs_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeInputs_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeInputs_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.NodeSocket_type_get)
. = ALIGN(0x1000);
*(.text.NodeSocket_type_set)
. = ALIGN(0x1000);
*(.text.AreaSpaces_rna_properties_get)
. = ALIGN(0x1000);
*(.text.AreaSpaces_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Screen_scene_update)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_free_list)
. = ALIGN(0x1000);
*(.text.BKE_mask_layer_free)
. = ALIGN(0x1000);
*(.text.ED_update_for_newframe .text.ntreeTexTagAnimated)
. = ALIGN(0x1000);
*(.text.ED_screen_set_scene)
. = ALIGN(0x1000);
*(.text.ED_object_editmode_exit)
. = ALIGN(0x1000);
*(.text.ntreeCompositTagAnimated)
. = ALIGN(0x1000);
*(.text.ED_armature_from_edit .text.fix_bonelist_roll)
. = ALIGN(0x1000);
*(.text.load_editText .text.ED_object_editmode_load_ex)
. = ALIGN(0x1000);
*(.text.BLI_strncpy_wchar_as_utf8)
. = ALIGN(0x1000);
*(.text.load_editLatt)
. = ALIGN(0x1000);
*(.text.curve_rename_fcurves .text.fcurve_path_rename)
. = ALIGN(0x1000);
*(.text.load_editNurb .text.initialize_index_map)
. = ALIGN(0x1000);
*(.text.BKE_editmesh_free)
. = ALIGN(0x1000);
*(.text.BKE_pose_where_is_bone)
. = ALIGN(0x1000);
*(.text.BKE_pchan_to_mat4)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_overlap .text.traverse)
. = ALIGN(0x1000);
*(.text.bvhtree_update_from_cloth .text.clothModifier_do .text.do_init_cloth .text.do_step_cloth .text.cloth_apply_vgroup .text.get_collisionobjects .text.add_collision_object .text.cloth_bvh_objcollision .text.implicit_init .text.implicit_solver .text.cloth_calc_force .text.simulate_implicit_euler .text.BLI_edgeset_insert)
. = ALIGN(0x1000);
*(.text.psys_render_simplify_distribution .text.psys_particle_value_from_verts .text.precalc_guides .text.psys_cache_vgroup .text.psys_find_parents .text.psys_cache_paths .text.psys_sph_init .text.psys_changed_type .text.particle_system_update .text.system_step .text.psys_update_path_cache .text.realloc_particles .text.distribute_particles .text.initialize_all_particles .text.cached_step .text.psys_update_particle_bvhtree .text.basic_integrate .text.collision_check .text.basic_rotate .text.integrate_particle .text.collision_point_distance_with_normal .text.boid_brain .text.boid_body .text.boid_find_ground .text.boid_climb .text.isect_axial_line_tri_v3)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_range_query)
. = ALIGN(0x1000);
*(.text.distribute_threads_exec_cb .text.distribute_threads_exec)
. = ALIGN(0x1000);
*(.text.boid_new_rule)
. = ALIGN(0x1000);
*(.text.reset_particle .text.evaluate_emitter_anim)
. = ALIGN(0x1000);
*(.text.psys_get_texture .text.psys_get_birth_coordinates)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_read .text.ptcache_read .text.ptcache_read_stream)
. = ALIGN(0x1000);
*(.text.isect_line_tri_v3)
. = ALIGN(0x1000);
*(.text.BLI_kdtree_find_nearest_n__normal)
. = ALIGN(0x1000);
*(.text.psys_particle_dm_face_lookup)
. = ALIGN(0x1000);
*(.text.psys_calc_dmcache)
. = ALIGN(0x1000);
*(.text.ptcache_file_header_begin_read)
. = ALIGN(0x1000);
*(.text.ptcache_file_compressed_read)
. = ALIGN(0x1000);
*(.text.ptcache_data_copy)
. = ALIGN(0x1000);
*(.text.ptcache_disk_frame_to_mem .text.ptcache_data_alloc)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_id_time)
. = ALIGN(0x1000);
*(.text.ptcache_mem_frame_to_disk)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_write)
. = ALIGN(0x1000);
*(.text.BKE_tracking_marker_get_subframe_position .text.BKE_mask_point_parent_matrix_get .text.BKE_mask_layer_calc_handles .text.BKE_mask_layer_evaluate .text.BKE_mask_layer_shape_to_mask .text.BKE_mask_layer_shape_to_mask_interp .text._va_mul_m3_series_4)
. = ALIGN(0x1000);
*(.text.BKE_pose_where_is)
. = ALIGN(0x1000);
*(.text.BKE_displist_make_mball)
. = ALIGN(0x1000);
*(.text.BKE_lattice_modifiers_calc)
. = ALIGN(0x1000);
*(.text.BKE_object_handle_update_ex .text.BKE_pose_copy_result)
. = ALIGN(0x1000);
*(.text.lamp_node_drivers_update)
. = ALIGN(0x1000);
*(.text.material_node_drivers_update)
. = ALIGN(0x1000);
*(.text.scene_update_tagged_recursive .text.DAG_ids_flush_tagged .text.dag_id_flush_update .text.DAG_ids_clear_recalc)
. = ALIGN(0x1000);
*(.text.BKE_object_sculpt_modifiers_changed)
. = ALIGN(0x1000);
*(.text.invert_m3_m3)
. = ALIGN(0x1000);
*(.text.BKE_sculpt_update_mesh_elements .text.mesh_build_data .text.BKE_crazyspace_set_quats_mesh .text.BKE_sculpt_get_first_deform_matrices .text.BKE_crazyspace_build_sculpt .text.BKE_key_convert_to_vertcos)
. = ALIGN(0x1000);
*(.text.BKE_bmbvh_new_ex)
. = ALIGN(0x1000);
*(.text.editbmesh_build_data .text.BKE_editmesh_statvis_calc .text.modifiers_getCageIndex)
. = ALIGN(0x1000);
*(.text.getEditDerivedBMesh)
. = ALIGN(0x1000);
*(.text.BLI_jitter_init)
. = ALIGN(0x1000);
*(.text.fill_vn_fl)
. = ALIGN(0x1000);
*(.text.BM_edge_calc_face_angle_signed_ex)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_apply_vertCos)
. = ALIGN(0x1000);
*(.text.update_node_vb)
. = ALIGN(0x1000);
*(.text.pbvh_flush_bb)
. = ALIGN(0x1000);
*(.text.pbvh_vertex_iter_init)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_search_gather)
. = ALIGN(0x1000);
*(.text.pbvh_iter_next)
. = ALIGN(0x1000);
*(.text.cddm_from_bmesh_ex)
. = ALIGN(0x1000);
*(.text.BM_face_calc_normal_vcos .text.emDM_ensurePolyNormals)
. = ALIGN(0x1000);
*(.text.BKE_sculpt_mask_layers_ensure)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_new .text.BLI_bvhtree_balance .text.BLI_bvhtree_insert)
. = ALIGN(0x1000);
*(.text.BLI_jitterate1 .text.BLI_jitterate2)
. = ALIGN(0x1000);
*(.text.BKE_scene_update_for_newframe_ex .text.scene_depsgraph_hack .text.BKE_animsys_evaluate_all_animation .text.BKE_image_update_frame)
. = ALIGN(0x1000);
*(.text.ED_render_id_flush_update .text.nodes_use_material .text.texture_changed .text.lamp_changed .text.mtex_use_tex .text.nodes_use_tex)
. = ALIGN(0x1000);
*(.text.ED_render_engine_changed)
. = ALIGN(0x1000);
*(.text.BKE_screen_view3d_sync)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_normals_tessface)
. = ALIGN(0x1000);
*(.text.accumulate_vertex_normals)
. = ALIGN(0x1000);
*(.text.BLI_edgeset_add)
. = ALIGN(0x1000);
*(.text.BKE_armature_where_is_bone)
. = ALIGN(0x1000);
*(.text.vec_roll_to_mat3_normalized)
. = ALIGN(0x1000);
*(.text.BKE_scene_set_background)
. = ALIGN(0x1000);
*(.text.DAG_scene_relations_rebuild)
. = ALIGN(0x1000);
*(.text.CustomData_external_write .text.cdf_write_open .text.cdf_layer_add)
. = ALIGN(0x1000);
*(.text.BKE_main_free)
. = ALIGN(0x1000);
*(.text.blo_join_main)
. = ALIGN(0x1000);
*(.text.IDP_WriteProperty_OnlyData)
. = ALIGN(0x1000);
*(.text.writestruct .text.mywrite)
. = ALIGN(0x1000);
*(.text.BKE_mesh_loops_to_mface_corners .text.BKE_mesh_mpoly_to_mface .text.write_file_handle .text.write_region .text.write_animdata .text.write_nodetree .text.write_pointcaches .text.write_previews .text.write_bone .text.write_fcurves .text.write_constraints .text.write_customdata .text.write_fmodifiers .text.write_node_socket .text.write_nlastrips)
. = ALIGN(0x1000);
*(.text.DNA_sdna_from_data)
. = ALIGN(0x1000);
*(.text.blo_split_main)
. = ALIGN(0x1000);
*(.text.ED_undo_push .text.BKE_write_undo .text.BLO_merge_memfile)
. = ALIGN(0x1000);
*(.text.undo_editmode_push)
. = ALIGN(0x1000);
*(.text.action_groups_add_channel)
. = ALIGN(0x1000);
*(.text.CDDM_from_mesh)
. = ALIGN(0x1000);
*(.text.modifier_setError)
. = ALIGN(0x1000);
*(.text.modifiers_isDeformedByArmature)
. = ALIGN(0x1000);
*(.text.fill_vn_i)
. = ALIGN(0x1000);
*(.text.add_shapekey_layers .text.mesh_calc_modifiers .text.modifiers_getLastPreview)
. = ALIGN(0x1000);
*(.text.DM_update_weight_mcol .text.add_orco_dm .text.BKE_mesh_orco_verts_transform .text.modifiers_calcDataMasks)
. = ALIGN(0x1000);
*(.text.BKE_objdef_selected_get)
. = ALIGN(0x1000);
*(.text.densfunc)
. = ALIGN(0x1000);
*(.text.BKE_mball_texspace_calc .text.BKE_mball_polygonize .text.init_metaball_octal_tree .text.free_metaball_octal_node .text.testface .text.setcorner .text.subdivide_metaball_octal_node)
. = ALIGN(0x1000);
*(.text.free_hair)
. = ALIGN(0x1000);
*(.text.psys_free)
. = ALIGN(0x1000);
*(.text.GPU_lamp_free)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_editing_free)
. = ALIGN(0x1000);
*(.text.BM_mesh_bm_to_me .text.bm_to_mesh_vertex_map)
. = ALIGN(0x1000);
*(.text.BKE_keyblock_add)
. = ALIGN(0x1000);
*(.text.BM_mesh_data_free)
. = ALIGN(0x1000);
*(.text.BKE_mesh_free)
. = ALIGN(0x1000);
*(.text.BM_mesh_remap)
. = ALIGN(0x1000);
*(.text.BKE_texture_free)
. = ALIGN(0x1000);
*(.text.BKE_material_free_ex)
. = ALIGN(0x1000);
*(.text.BKE_gpencil_free)
. = ALIGN(0x1000);
*(.text.BKE_area_region_free)
. = ALIGN(0x1000);
*(.text.BKE_screen_area_free)
. = ALIGN(0x1000);
*(.text.BKE_screen_free)
. = ALIGN(0x1000);
*(.text.BKE_mask_free)
. = ALIGN(0x1000);
*(.text.BKE_keyingsets_free)
. = ALIGN(0x1000);
*(.text.BKE_particlesettings_free .text.BKE_scene_free .text.BKE_tracking_free .text.BKE_action_free .text.BKE_armature_free .text.BKE_brush_free .text.BKE_curve_free .text.DAG_scene_free .text.BKE_image_free .text.BKE_ipo_free .text.BKE_lattice_free .text.BKE_libblock_free_ex .text.BKE_mball_free .text.BKE_movieclip_free)
. = ALIGN(0x1000);
*(.text.BKE_object_free_ex .text.BKE_free_sculptsession .text.BKE_curve_unlink)
. = ALIGN(0x1000);
*(.text.BKE_world_free_ex)
. = ALIGN(0x1000);
*(.text.BKE_lamp_free)
. = ALIGN(0x1000);
*(.text.BM_log_free)
. = ALIGN(0x1000);
*(.text.sculptsession_bm_to_me_update_data_only .text.BM_log_mesh_elems_reorder)
. = ALIGN(0x1000);
*(.text._ZNSt8_Rb_treeIN9RangeTreeIjE5RangeES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
. = ALIGN(0x1000);
*(.text.free_actuators)
. = ALIGN(0x1000);
*(.text.BKE_object_free_modifiers)
. = ALIGN(0x1000);
*(.text.BKE_pose_channels_free_ex)
. = ALIGN(0x1000);
*(.text.BKE_armature_bonelist_free)
. = ALIGN(0x1000);
*(.text.BKE_curve_editNurb_free)
. = ALIGN(0x1000);
*(.text.BKE_vfont_free_data)
. = ALIGN(0x1000);
*(.text.GPU_framebuffer_free)
. = ALIGN(0x1000);
*(.text.Screen_scene_get)
. = ALIGN(0x1000);
*(.text.Screen_scene_set)
. = ALIGN(0x1000);
*(.text.Screen_is_animation_playing_get)
. = ALIGN(0x1000);
*(.text.PaletteColor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PaletteColor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PaletteColor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PaletteColor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PaletteColor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PaletteColor_rna_type_get)
. = ALIGN(0x1000);
*(.text.PaletteColor_color_get)
. = ALIGN(0x1000);
*(.text.PaletteColor_color_set)
. = ALIGN(0x1000);
*(.text.PaletteColor_strength_get)
. = ALIGN(0x1000);
*(.text.PaletteColor_strength_set)
. = ALIGN(0x1000);
*(.text.PaletteColor_weight_get)
. = ALIGN(0x1000);
*(.text.PaletteColor_weight_set)
. = ALIGN(0x1000);
*(.text.Palette_colors_begin)
. = ALIGN(0x1000);
*(.text.Palette_colors_next)
. = ALIGN(0x1000);
*(.text.Palette_colors_end)
. = ALIGN(0x1000);
*(.text.Palette_colors_get)
. = ALIGN(0x1000);
*(.text.Palette_colors_lookup_int)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_feather_get)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_feather_set)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_z_get)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_z_set)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_y_get)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_y_set)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_x_get)
. = ALIGN(0x1000);
*(.text.Paint_use_symmetry_x_set)
. = ALIGN(0x1000);
*(.text.Paint_input_samples_get)
. = ALIGN(0x1000);
*(.text.Paint_input_samples_set)
. = ALIGN(0x1000);
*(.text.Paint_show_low_resolution_get)
. = ALIGN(0x1000);
*(.text.Paint_show_low_resolution_set)
. = ALIGN(0x1000);
*(.text.Paint_show_brush_on_surface_get)
. = ALIGN(0x1000);
*(.text.Paint_show_brush_on_surface_set)
. = ALIGN(0x1000);
*(.text.Paint_show_brush_get)
. = ALIGN(0x1000);
*(.text.Paint_show_brush_set)
. = ALIGN(0x1000);
*(.text.Paint_palette_get)
. = ALIGN(0x1000);
*(.text.Paint_palette_set)
. = ALIGN(0x1000);
*(.text.rna_Paint_brush_update)
. = ALIGN(0x1000);
*(.text.Paint_brush_get)
. = ALIGN(0x1000);
*(.text.Paint_brush_set)
. = ALIGN(0x1000);
*(.text.rna_Brush_mode_poll)
. = ALIGN(0x1000);
*(.text.Paint_rna_type_get)
. = ALIGN(0x1000);
*(.text.Paint_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Paint_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Paint_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Paint_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Paint_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Sculpt_path)
. = ALIGN(0x1000);
*(.text.Sculpt_gravity_object_get)
. = ALIGN(0x1000);
*(.text.Sculpt_gravity_object_set)
. = ALIGN(0x1000);
*(.text.Sculpt_gravity_get)
. = ALIGN(0x1000);
*(.text.Sculpt_gravity_set)
. = ALIGN(0x1000);
*(.text.Sculpt_detail_type_method_get)
. = ALIGN(0x1000);
*(.text.Sculpt_detail_type_method_set)
. = ALIGN(0x1000);
*(.text.Sculpt_detail_refine_method_get)
. = ALIGN(0x1000);
*(.text.Sculpt_detail_refine_method_set)
. = ALIGN(0x1000);
*(.text.Sculpt_symmetrize_direction_get)
. = ALIGN(0x1000);
*(.text.Sculpt_symmetrize_direction_set)
. = ALIGN(0x1000);
*(.text.rna_Sculpt_update)
. = ALIGN(0x1000);
*(.text.Sculpt_use_smooth_shading_get)
. = ALIGN(0x1000);
*(.text.Sculpt_use_smooth_shading_set)
. = ALIGN(0x1000);
*(.text.Sculpt_constant_detail_get)
. = ALIGN(0x1000);
*(.text.Sculpt_constant_detail_set)
. = ALIGN(0x1000);
*(.text.Sculpt_detail_size_get)
. = ALIGN(0x1000);
*(.text.Sculpt_detail_size_set)
. = ALIGN(0x1000);
*(.text.rna_Sculpt_ShowDiffuseColor_update)
. = ALIGN(0x1000);
*(.text.Sculpt_show_diffuse_color_get)
. = ALIGN(0x1000);
*(.text.Sculpt_show_diffuse_color_set)
. = ALIGN(0x1000);
*(.text.Sculpt_use_deform_only_get)
. = ALIGN(0x1000);
*(.text.Sculpt_use_deform_only_set)
. = ALIGN(0x1000);
*(.text.Sculpt_use_threaded_get)
. = ALIGN(0x1000);
*(.text.Sculpt_use_threaded_set)
. = ALIGN(0x1000);
*(.text.Sculpt_lock_z_get)
. = ALIGN(0x1000);
*(.text.Sculpt_lock_z_set)
. = ALIGN(0x1000);
*(.text.Sculpt_lock_y_get)
. = ALIGN(0x1000);
*(.text.Sculpt_lock_y_set)
. = ALIGN(0x1000);
*(.text.Sculpt_lock_x_get)
. = ALIGN(0x1000);
*(.text.Sculpt_lock_x_set)
. = ALIGN(0x1000);
*(.text.Sculpt_radial_symmetry_get)
. = ALIGN(0x1000);
*(.text.Sculpt_radial_symmetry_set)
. = ALIGN(0x1000);
*(.text.rna_UvSculpt_path)
. = ALIGN(0x1000);
*(.text.rna_VertexPaint_path)
. = ALIGN(0x1000);
*(.text.VertexPaint_use_group_restrict_get)
. = ALIGN(0x1000);
*(.text.VertexPaint_use_group_restrict_set)
. = ALIGN(0x1000);
*(.text.VertexPaint_use_spray_get)
. = ALIGN(0x1000);
*(.text.VertexPaint_use_spray_set)
. = ALIGN(0x1000);
*(.text.VertexPaint_use_normal_get)
. = ALIGN(0x1000);
*(.text.VertexPaint_use_normal_set)
. = ALIGN(0x1000);
*(.text.rna_ImagePaintSettings_path)
. = ALIGN(0x1000);
*(.text.ImagePaint_detect_data_call)
. = ALIGN(0x1000);
*(.text.ImagePaint_missing_texture_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_missing_stencil_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_missing_materials_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_missing_uvs_get)
. = ALIGN(0x1000);
*(.text.rna_ImaPaint_mode_update)
. = ALIGN(0x1000);
*(.text.ImagePaint_mode_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_mode_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_screen_grab_size_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_screen_grab_size_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_normal_angle_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_normal_angle_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_seam_bleed_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_seam_bleed_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_clone_layer_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_clone_layer_set)
. = ALIGN(0x1000);
*(.text.rna_ImaPaint_viewport_update)
. = ALIGN(0x1000);
*(.text.ImagePaint_stencil_color_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_stencil_color_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_clone_image_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_clone_image_set)
. = ALIGN(0x1000);
*(.text.rna_ImaPaint_canvas_update)
. = ALIGN(0x1000);
*(.text.ImagePaint_canvas_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_canvas_set)
. = ALIGN(0x1000);
*(.text.rna_ImaPaint_stencil_update)
. = ALIGN(0x1000);
*(.text.GPU_buffer_free)
. = ALIGN(0x1000);
*(.text.GPU_drawobject_free)
. = ALIGN(0x1000);
*(.text.nodeGetActiveTexture)
. = ALIGN(0x1000);
*(.text.BKE_texpaint_slot_refresh_cache)
. = ALIGN(0x1000);
*(.text.BKE_paint_proj_mesh_data_check)
. = ALIGN(0x1000);
*(.text.ImagePaint_stencil_image_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_stencil_image_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_invert_stencil_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_invert_stencil_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_stencil_layer_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_stencil_layer_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_normal_falloff_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_normal_falloff_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_backface_culling_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_backface_culling_set)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_occlude_get)
. = ALIGN(0x1000);
*(.text.ImagePaint_use_occlude_set)
. = ALIGN(0x1000);
*(.text.rna_ParticleEdit_path)
. = ALIGN(0x1000);
*(.text.ParticleEdit_object_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_is_hair_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_is_editable_get)
. = ALIGN(0x1000);
*(.text.rna_ParticleEdit_redo)
. = ALIGN(0x1000);
*(.text.calc_latt_deform)
. = ALIGN(0x1000);
*(.text.init_latt_deform)
. = ALIGN(0x1000);
*(.text.PTCacheUndo_clear)
. = ALIGN(0x1000);
*(.text.psys_mat_hair_to_global)
. = ALIGN(0x1000);
*(.text.psys_cache_edit_paths .text.psys_mat_hair_to_orco .text.pe_get_current .text.PE_create_particle_edit .text.update_world_cos .text.recalc_emitter_field .text.PE_update_object .text.PE_undo_push .text.PE_update_mirror_cache .text.PE_mirror_particle)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_id_from_particles .text.BKE_ptcache_ids_from_object)
. = ALIGN(0x1000);
*(.text.psys_interpolate_face .text.psys_particle_on_dm .text.psys_map_index_on_dm .text.interp_weights_poly_v3)
. = ALIGN(0x1000);
*(.text.psys_face_mat)
. = ALIGN(0x1000);
*(.text.effector_falloff .text.closest_point_on_surface .text.get_effector_data)
. = ALIGN(0x1000);
*(.text.texture_value_blend)
. = ALIGN(0x1000);
*(.text.psys_interpolate_particle .text.do_guides .text.do_kink .text.get_child_modifier_parameters .text.do_child_modifiers .text.do_rough .text.get_particle_uv .text.init_particle_interpolation .text.do_particle_interpolation .text.psys_get_child_time .text.psys_get_particle_on_path .text.interpolate_pathcache .text.psys_get_particle_state)
. = ALIGN(0x1000);
*(.text.externtex)
. = ALIGN(0x1000);
*(.text.collision_move_object .text.add_collider_cache_object)
. = ALIGN(0x1000);
*(.text.pdDoEffectors)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_update_tree)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_update_node)
. = ALIGN(0x1000);
*(.text.bvhtree_update_from_mvert)
. = ALIGN(0x1000);
*(.text.mat3_to_quat_is_ok)
. = ALIGN(0x1000);
*(.text.BLI_kdtree_find_nearest)
. = ALIGN(0x1000);
*(.text.exec_child_path_cache .text.do_path_effectors .text.get_strand_normal)
. = ALIGN(0x1000);
*(.text.psys_cache_child_paths .text.cache_key_incremental_rotation .text.psys_threads_create .text.psys_threads_free)
. = ALIGN(0x1000);
*(.text.psys_create_lattice_deform_data)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_mem_pointers_seek)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_find_nearest .text.dfs_find_nearest_dfs)
. = ALIGN(0x1000);
*(.text.BLI_bvhtree_ray_cast .text.dfs_raycast)
. = ALIGN(0x1000);
*(.text.ray_nearest_hit)
. = ALIGN(0x1000);
*(.text.BKE_mesh_boundbox_calc .text.BKE_mesh_texspace_calc)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_free_mem)
. = ALIGN(0x1000);
*(.text.ParticleEdit_type_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_type_set)
. = ALIGN(0x1000);
*(.text.rna_ParticleEdit_update)
. = ALIGN(0x1000);
*(.text.ParticleEdit_fade_frames_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_fade_frames_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_draw_step_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_draw_step_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_brush_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_default_key_count_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_default_key_count_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_default_interpolate_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_default_interpolate_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_show_particles_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_show_particles_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_auto_velocity_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_auto_velocity_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_fade_time_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_fade_time_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_emitter_distance_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_emitter_distance_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_emitter_deflect_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_emitter_deflect_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_preserve_root_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_preserve_root_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_preserve_length_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_use_preserve_length_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_select_mode_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_select_mode_set)
. = ALIGN(0x1000);
*(.text.ParticleEdit_tool_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_tool_set)
. = ALIGN(0x1000);
*(.text.rna_ParticleEdit_tool_itemf)
. = ALIGN(0x1000);
*(.text.ParticleEdit_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleEdit_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleEdit_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleEdit_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleEdit_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_ParticleBrush_path)
. = ALIGN(0x1000);
*(.text.ParticleBrush_curve_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_length_mode_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_length_mode_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_use_puff_volume_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_use_puff_volume_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_puff_mode_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_puff_mode_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_steps_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_steps_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_count_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_count_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_strength_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_strength_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_size_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_size_set)
. = ALIGN(0x1000);
*(.text.ParticleBrush_rna_type_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ParticleBrush_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ParticleBrush_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ParticleBrush_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ParticleBrush_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Sensor_refine)
. = ALIGN(0x1000);
*(.text.Sensor_unlink_call)
. = ALIGN(0x1000);
*(.text.Sensor_link_call)
. = ALIGN(0x1000);
*(.text.link_logicbricks)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_value_get)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_value_set)
. = ALIGN(0x1000);
*(.text.rna_Sensor_Armature_update)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_constraint_get)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_constraint_length)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_constraint_set)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_bone_get)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_bone_length)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_bone_set)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_test_type_get)
. = ALIGN(0x1000);
*(.text.ArmatureSensor_test_type_set)
. = ALIGN(0x1000);
*(.text.DelaySensor_use_repeat_get)
. = ALIGN(0x1000);
*(.text.DelaySensor_use_repeat_set)
. = ALIGN(0x1000);
*(.text.DelaySensor_duration_get)
. = ALIGN(0x1000);
*(.text.DelaySensor_duration_set)
. = ALIGN(0x1000);
*(.text.DelaySensor_delay_get)
. = ALIGN(0x1000);
*(.text.DelaySensor_delay_set)
. = ALIGN(0x1000);
*(.text.ActuatorSensor_actuator_get)
. = ALIGN(0x1000);
*(.text.ActuatorSensor_actuator_length)
. = ALIGN(0x1000);
*(.text.ActuatorSensor_actuator_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_hat_direction_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_hat_direction_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_hat_number_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_hat_number_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_single_axis_number_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_single_axis_number_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_axis_direction_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_axis_direction_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_axis_threshold_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_axis_threshold_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_axis_number_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_axis_number_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_button_number_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_button_number_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_use_all_events_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_use_all_events_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_event_type_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_event_type_set)
. = ALIGN(0x1000);
*(.text.JoystickSensor_joystick_index_get)
. = ALIGN(0x1000);
*(.text.JoystickSensor_joystick_index_set)
. = ALIGN(0x1000);
*(.text.MessageSensor_subject_get)
. = ALIGN(0x1000);
*(.text.MessageSensor_subject_length)
. = ALIGN(0x1000);
*(.text.MessageSensor_subject_set)
. = ALIGN(0x1000);
*(.text.RaySensor_axis_get)
. = ALIGN(0x1000);
*(.text.RaySensor_axis_set)
. = ALIGN(0x1000);
*(.text.RaySensor_range_get)
. = ALIGN(0x1000);
*(.text.RaySensor_range_set)
. = ALIGN(0x1000);
*(.text.RaySensor_use_x_ray_get)
. = ALIGN(0x1000);
*(.text.RaySensor_use_x_ray_set)
. = ALIGN(0x1000);
*(.text.RaySensor_material_get)
. = ALIGN(0x1000);
*(.text.RaySensor_material_length)
. = ALIGN(0x1000);
*(.text.RaySensor_material_set)
. = ALIGN(0x1000);
*(.text.RaySensor_property_get)
. = ALIGN(0x1000);
*(.text.RaySensor_property_length)
. = ALIGN(0x1000);
*(.text.RaySensor_property_set)
. = ALIGN(0x1000);
*(.text.RaySensor_ray_type_get)
. = ALIGN(0x1000);
*(.text.RaySensor_ray_type_set)
. = ALIGN(0x1000);
*(.text.RandomSensor_seed_get)
. = ALIGN(0x1000);
*(.text.RandomSensor_seed_set)
. = ALIGN(0x1000);
*(.text.RadarSensor_distance_get)
. = ALIGN(0x1000);
*(.text.RadarSensor_distance_set)
. = ALIGN(0x1000);
*(.text.RadarSensor_angle_get)
. = ALIGN(0x1000);
*(.text.RadarSensor_angle_set)
. = ALIGN(0x1000);
*(.text.RadarSensor_axis_get)
. = ALIGN(0x1000);
*(.text.RadarSensor_axis_set)
. = ALIGN(0x1000);
*(.text.RadarSensor_property_get)
. = ALIGN(0x1000);
*(.text.RadarSensor_property_length)
. = ALIGN(0x1000);
*(.text.RadarSensor_property_set)
. = ALIGN(0x1000);
*(.text.CollisionSensor_material_get)
. = ALIGN(0x1000);
*(.text.CollisionSensor_material_length)
. = ALIGN(0x1000);
*(.text.CollisionSensor_material_set)
. = ALIGN(0x1000);
*(.text.CollisionSensor_property_get)
. = ALIGN(0x1000);
*(.text.CollisionSensor_property_length)
. = ALIGN(0x1000);
*(.text.CollisionSensor_property_set)
. = ALIGN(0x1000);
*(.text.CollisionSensor_use_material_get)
. = ALIGN(0x1000);
*(.text.CollisionSensor_use_material_set)
. = ALIGN(0x1000);
*(.text.CollisionSensor_use_pulse_get)
. = ALIGN(0x1000);
*(.text.CollisionSensor_use_pulse_set)
. = ALIGN(0x1000);
*(.text.MouseSensor_use_x_ray_get)
. = ALIGN(0x1000);
*(.text.MouseSensor_use_x_ray_set)
. = ALIGN(0x1000);
*(.text.MouseSensor_material_get)
. = ALIGN(0x1000);
*(.text.MouseSensor_material_length)
. = ALIGN(0x1000);
*(.text.MouseSensor_material_set)
. = ALIGN(0x1000);
*(.text.MouseSensor_property_get)
. = ALIGN(0x1000);
*(.text.MouseSensor_property_length)
. = ALIGN(0x1000);
*(.text.MouseSensor_property_set)
. = ALIGN(0x1000);
*(.text.MouseSensor_use_material_get)
. = ALIGN(0x1000);
*(.text.MouseSensor_use_material_set)
. = ALIGN(0x1000);
*(.text.MouseSensor_use_pulse_get)
. = ALIGN(0x1000);
*(.text.MouseSensor_use_pulse_set)
. = ALIGN(0x1000);
*(.text.MouseSensor_mouse_event_get)
. = ALIGN(0x1000);
*(.text.MouseSensor_mouse_event_set)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_max_get)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_max_length)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_max_set)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_min_get)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_min_length)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_min_set)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_get)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_length)
. = ALIGN(0x1000);
*(.text.PropertySensor_value_set)
. = ALIGN(0x1000);
*(.text.PropertySensor_property_get)
. = ALIGN(0x1000);
*(.text.PropertySensor_property_length)
. = ALIGN(0x1000);
*(.text.PropertySensor_property_set)
. = ALIGN(0x1000);
*(.text.PropertySensor_evaluation_type_get)
. = ALIGN(0x1000);
*(.text.PropertySensor_evaluation_type_set)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_use_all_keys_get)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_use_all_keys_set)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_log_get)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_log_length)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_log_set)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_target_get)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_target_length)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_target_set)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_modifier_key_2_get)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_modifier_key_2_set)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_modifier_key_1_get)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_modifier_key_1_set)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_key_get)
. = ALIGN(0x1000);
*(.text.KeyboardSensor_key_set)
. = ALIGN(0x1000);
*(.text.NearSensor_reset_distance_get)
. = ALIGN(0x1000);
*(.text.NearSensor_reset_distance_set)
. = ALIGN(0x1000);
*(.text.NearSensor_distance_get)
. = ALIGN(0x1000);
*(.text.NearSensor_distance_set)
. = ALIGN(0x1000);
*(.text.NearSensor_property_get)
. = ALIGN(0x1000);
*(.text.NearSensor_property_length)
. = ALIGN(0x1000);
*(.text.NearSensor_property_set)
. = ALIGN(0x1000);
*(.text.Sensor_name_get)
. = ALIGN(0x1000);
*(.text.Sensor_name_length)
. = ALIGN(0x1000);
*(.text.Sensor_name_set)
. = ALIGN(0x1000);
*(.text.Sensor_rna_type_get)
. = ALIGN(0x1000);
*(.text.Sensor_type_get)
. = ALIGN(0x1000);
*(.text.Sensor_type_set)
. = ALIGN(0x1000);
*(.text.init_sensor)
. = ALIGN(0x1000);
*(.text.rna_Sensor_type_itemf)
. = ALIGN(0x1000);
*(.text.Sensor_pin_get)
. = ALIGN(0x1000);
*(.text.Sensor_pin_set)
. = ALIGN(0x1000);
*(.text.Sensor_active_get)
. = ALIGN(0x1000);
*(.text.Sensor_active_set)
. = ALIGN(0x1000);
*(.text.Sensor_show_expanded_get)
. = ALIGN(0x1000);
*(.text.Sensor_show_expanded_set)
. = ALIGN(0x1000);
*(.text.Sensor_invert_get)
. = ALIGN(0x1000);
*(.text.Sensor_invert_set)
. = ALIGN(0x1000);
*(.text.Sensor_use_level_get)
. = ALIGN(0x1000);
*(.text.Sensor_use_level_set)
. = ALIGN(0x1000);
*(.text.Sensor_use_pulse_true_level_get)
. = ALIGN(0x1000);
*(.text.Sensor_use_pulse_true_level_set)
. = ALIGN(0x1000);
*(.text.Sensor_use_pulse_false_level_get)
. = ALIGN(0x1000);
*(.text.Sensor_use_pulse_false_level_set)
. = ALIGN(0x1000);
*(.text.Sensor_frequency_get)
. = ALIGN(0x1000);
*(.text.Sensor_frequency_set)
. = ALIGN(0x1000);
*(.text.Sensor_use_tap_get)
. = ALIGN(0x1000);
*(.text.Sensor_use_tap_set)
. = ALIGN(0x1000);
*(.text.Sensor_controllers_begin)
. = ALIGN(0x1000);
*(.text.Sensor_controllers_next)
. = ALIGN(0x1000);
*(.text.Sensor_controllers_end)
. = ALIGN(0x1000);
*(.text.Sensor_controllers_get)
. = ALIGN(0x1000);
*(.text.rna_Sensor_controllers_length)
. = ALIGN(0x1000);
*(.text.Sensor_controllers_lookup_int)
. = ALIGN(0x1000);
*(.text.Sensor_controllers_lookup_string)
. = ALIGN(0x1000);
*(.text.Sensor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Sensor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Sensor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Sensor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Sensor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_SequenceColorBalance_update)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_lift_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_lift_set)
. = ALIGN(0x1000);
*(.text.colbalance_seq_cmp_cb)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_gamma_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_gamma_set)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_gain_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_gain_set)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_invert_gain_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_invert_gain_set)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_invert_gamma_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_invert_gamma_set)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_invert_lift_get)
. = ALIGN(0x1000);
*(.text.SequenceColorBalanceData_invert_lift_set)
. = ALIGN(0x1000);
*(.text.SequenceElement_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceElement_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceElement_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceElement_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceElement_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceElement_rna_type_get)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_from_elem .text.rna_SequenceElement_update)
. = ALIGN(0x1000);
*(.text.SequenceElement_filename_get)
. = ALIGN(0x1000);
*(.text.SequenceElement_filename_length)
. = ALIGN(0x1000);
*(.text.SequenceElement_filename_set)
. = ALIGN(0x1000);
*(.text.SequenceElement_orig_width_get)
. = ALIGN(0x1000);
*(.text.SequenceElement_orig_height_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceProxy_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceProxy_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceProxy_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceProxy_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_SequenceProxy_update)
. = ALIGN(0x1000);
*(.text.SequenceProxy_directory_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_directory_length)
. = ALIGN(0x1000);
*(.text.SequenceProxy_directory_set)
. = ALIGN(0x1000);
*(.text.seqproxy_seq_cmp_cb)
. = ALIGN(0x1000);
*(.text.SequenceProxy_filepath_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_filepath_length)
. = ALIGN(0x1000);
*(.text.SequenceProxy_filepath_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_25_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_25_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_50_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_50_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_75_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_75_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_100_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_100_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_record_run_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_record_run_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_free_run_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_free_run_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_free_run_rec_date_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_build_free_run_rec_date_set)
. = ALIGN(0x1000);
*(.text.SequenceProxy_quality_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_quality_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_tcindex_update)
. = ALIGN(0x1000);
*(.text.SequenceProxy_timecode_get)
. = ALIGN(0x1000);
*(.text.SequenceProxy_timecode_set)
. = ALIGN(0x1000);
*(.text.SequenceCrop_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceCrop_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceCrop_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceCrop_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceCrop_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceCrop_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_SequenceCrop_update)
. = ALIGN(0x1000);
*(.text.SequenceCrop_max_y_get)
. = ALIGN(0x1000);
*(.text.SequenceCrop_max_y_set)
. = ALIGN(0x1000);
*(.text.crop_seq_cmp_cb)
. = ALIGN(0x1000);
*(.text.SequenceCrop_min_y_get)
. = ALIGN(0x1000);
*(.text.SequenceCrop_min_y_set)
. = ALIGN(0x1000);
*(.text.SequenceCrop_min_x_get)
. = ALIGN(0x1000);
*(.text.SequenceCrop_min_x_set)
. = ALIGN(0x1000);
*(.text.SequenceCrop_max_x_get)
. = ALIGN(0x1000);
*(.text.SequenceCrop_max_x_set)
. = ALIGN(0x1000);
*(.text.SequenceTransform_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceTransform_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceTransform_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceTransform_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceTransform_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceTransform_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_SequenceTransform_update)
. = ALIGN(0x1000);
*(.text.SequenceTransform_offset_x_get)
. = ALIGN(0x1000);
*(.text.SequenceTransform_offset_x_set)
. = ALIGN(0x1000);
*(.text.transform_seq_cmp_cb)
. = ALIGN(0x1000);
*(.text.SequenceTransform_offset_y_get)
. = ALIGN(0x1000);
*(.text.SequenceTransform_offset_y_set)
. = ALIGN(0x1000);
*(.text.Sequence_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Sequence_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Sequence_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Sequence_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Sequence_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Sequence_rna_type_get)
. = ALIGN(0x1000);
*(.text.Sequence_name_get)
. = ALIGN(0x1000);
*(.text.Sequence_name_length)
. = ALIGN(0x1000);
*(.text.Sequence_name_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_update)
. = ALIGN(0x1000);
*(.text.Sequence_type_get)
. = ALIGN(0x1000);
*(.text.Sequence_select_get)
. = ALIGN(0x1000);
*(.text.Sequence_select_set)
. = ALIGN(0x1000);
*(.text.Sequence_select_left_handle_get)
. = ALIGN(0x1000);
*(.text.Sequence_select_left_handle_set)
. = ALIGN(0x1000);
*(.text.Sequence_select_right_handle_get)
. = ALIGN(0x1000);
*(.text.Sequence_select_right_handle_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_mute_update)
. = ALIGN(0x1000);
*(.text.Sequence_mute_get)
. = ALIGN(0x1000);
*(.text.Sequence_mute_set)
. = ALIGN(0x1000);
*(.text.Sequence_lock_get)
. = ALIGN(0x1000);
*(.text.Sequence_lock_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_frame_editable)
. = ALIGN(0x1000);
*(.text.Sequence_frame_final_duration_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_final_duration_set)
. = ALIGN(0x1000);
*(.text.Sequence_frame_duration_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_start_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_start_set)
. = ALIGN(0x1000);
*(.text.Sequence_frame_final_start_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_final_start_set)
. = ALIGN(0x1000);
*(.text.Sequence_frame_final_end_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_final_end_set)
. = ALIGN(0x1000);
*(.text.BKE_sequence_single_fix)
. = ALIGN(0x1000);
*(.text.rna_Sequence_frame_change_update)
. = ALIGN(0x1000);
*(.text.Sequence_frame_offset_start_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_offset_start_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_frame_offset_range)
. = ALIGN(0x1000);
*(.text.Sequence_frame_offset_end_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_offset_end_set)
. = ALIGN(0x1000);
*(.text.Sequence_frame_still_start_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_still_start_set)
. = ALIGN(0x1000);
*(.text.Sequence_frame_still_end_get)
. = ALIGN(0x1000);
*(.text.Sequence_frame_still_end_set)
. = ALIGN(0x1000);
*(.text.Sequence_channel_get)
. = ALIGN(0x1000);
*(.text.Sequence_channel_set)
. = ALIGN(0x1000);
*(.text.Sequence_use_linear_modifiers_get)
. = ALIGN(0x1000);
*(.text.Sequence_use_linear_modifiers_set)
. = ALIGN(0x1000);
*(.text.Sequence_blend_type_get)
. = ALIGN(0x1000);
*(.text.Sequence_blend_type_set)
. = ALIGN(0x1000);
*(.text.Sequence_blend_alpha_get)
. = ALIGN(0x1000);
*(.text.Sequence_blend_alpha_set)
. = ALIGN(0x1000);
*(.text.Sequence_effect_fader_get)
. = ALIGN(0x1000);
*(.text.Sequence_effect_fader_set)
. = ALIGN(0x1000);
*(.text.Sequence_use_default_fade_get)
. = ALIGN(0x1000);
*(.text.Sequence_use_default_fade_set)
. = ALIGN(0x1000);
*(.text.Sequence_speed_factor_get)
. = ALIGN(0x1000);
*(.text.Sequence_speed_factor_set)
. = ALIGN(0x1000);
*(.text.Sequence_modifiers_begin)
. = ALIGN(0x1000);
*(.text.Sequence_modifiers_next)
. = ALIGN(0x1000);
*(.text.Sequence_modifiers_end)
. = ALIGN(0x1000);
*(.text.Sequence_modifiers_get)
. = ALIGN(0x1000);
*(.text.Sequence_modifiers_lookup_int)
. = ALIGN(0x1000);
*(.text.Sequence_modifiers_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_SequenceModifier_refine)
. = ALIGN(0x1000);
*(.text.rna_SequenceModifier_path)
. = ALIGN(0x1000);
*(.text.modifier_seq_cmp_cb)
. = ALIGN(0x1000);
*(.text.rna_SequenceModifier_update)
. = ALIGN(0x1000);
*(.text.BrightContrastModifier_contrast_get)
. = ALIGN(0x1000);
*(.text.BrightContrastModifier_contrast_set)
. = ALIGN(0x1000);
*(.text.BrightContrastModifier_bright_get)
. = ALIGN(0x1000);
*(.text.BrightContrastModifier_bright_set)
. = ALIGN(0x1000);
*(.text.HueCorrectModifier_curve_mapping_get)
. = ALIGN(0x1000);
*(.text.CurvesModifier_curve_mapping_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_name_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_name_length)
. = ALIGN(0x1000);
*(.text.SequenceModifier_name_set)
. = ALIGN(0x1000);
*(.text.rna_path_rename_fix .text.BKE_animdata_fix_paths_rename .text.nlastrips_path_rename_fix)
. = ALIGN(0x1000);
*(.text.SequenceModifier_rna_type_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_type_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_mute_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_mute_set)
. = ALIGN(0x1000);
*(.text.SequenceModifier_show_expanded_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_show_expanded_set)
. = ALIGN(0x1000);
*(.text.SequenceModifier_input_mask_type_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_input_mask_type_set)
. = ALIGN(0x1000);
*(.text.SequenceModifier_input_mask_strip_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_input_mask_strip_set)
. = ALIGN(0x1000);
*(.text.rna_SequenceModifier_otherSequence_poll)
. = ALIGN(0x1000);
*(.text.rna_Sequence_refine)
. = ALIGN(0x1000);
*(.text.rna_Sequence_path)
. = ALIGN(0x1000);
*(.text.Sequence_swap_call)
. = ALIGN(0x1000);
*(.text.BKE_sequence_swap)
. = ALIGN(0x1000);
*(.text.Sequence_strip_elem_from_frame_call)
. = ALIGN(0x1000);
*(.text.rna_SequenceColorBalance_path)
. = ALIGN(0x1000);
*(.text.rna_SequenceCrop_path)
. = ALIGN(0x1000);
*(.text.Sequence_update_call)
. = ALIGN(0x1000);
*(.text.update_changed_seq_recurs)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_proxy_custom_file_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_proxy_custom_file_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_proxy_custom_directory_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_proxy_custom_directory_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_proxy_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_proxy_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_proxy_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_crop_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_transform_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.EffectSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_update_reopen_files)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_free_imbuf)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.EffectSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.AdjustmentSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.AdjustmentSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.AdjustmentSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.AdjustmentSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.AdjustmentSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.MulticamSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.MulticamSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.MulticamSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.MulticamSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.MulticamSequence_multicam_source_get)
. = ALIGN(0x1000);
*(.text.MulticamSequence_multicam_source_set)
. = ALIGN(0x1000);
*(.text.MulticamSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_scale_to_length_get)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_scale_to_length_set)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_use_as_speed_get)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_use_as_speed_set)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_multiply_speed_get)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_multiply_speed_set)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.SpeedControlSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.ColorSequence_color_get)
. = ALIGN(0x1000);
*(.text.ColorSequence_color_set)
. = ALIGN(0x1000);
*(.text.ColorSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_interpolation_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_interpolation_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_translation_unit_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_translation_unit_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_rotation_start_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_rotation_start_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_translate_start_y_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_translate_start_y_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_translate_start_x_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_translate_start_x_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_use_uniform_scale_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_use_uniform_scale_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_scale_start_y_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_scale_start_y_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_scale_start_x_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_scale_start_x_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.TransformSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.TransformSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_use_only_boost_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_use_only_boost_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_quality_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_quality_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_blur_radius_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_blur_radius_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_boost_factor_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_boost_factor_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_clamp_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_clamp_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_threshold_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_threshold_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.GlowSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.GlowSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.WipeSequence_transition_type_get)
. = ALIGN(0x1000);
*(.text.WipeSequence_transition_type_set)
. = ALIGN(0x1000);
*(.text.WipeSequence_direction_get)
. = ALIGN(0x1000);
*(.text.WipeSequence_direction_set)
. = ALIGN(0x1000);
*(.text.WipeSequence_angle_get)
. = ALIGN(0x1000);
*(.text.WipeSequence_angle_set)
. = ALIGN(0x1000);
*(.text.WipeSequence_blur_width_get)
. = ALIGN(0x1000);
*(.text.WipeSequence_blur_width_set)
. = ALIGN(0x1000);
*(.text.WipeSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.WipeSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.WipeSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.OverDropSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.OverDropSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.OverDropSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.OverDropSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.OverDropSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.MultiplySequence_input_2_get)
. = ALIGN(0x1000);
*(.text.MultiplySequence_input_2_set)
. = ALIGN(0x1000);
*(.text.MultiplySequence_input_1_get)
. = ALIGN(0x1000);
*(.text.MultiplySequence_input_1_set)
. = ALIGN(0x1000);
*(.text.MultiplySequence_input_count_get)
. = ALIGN(0x1000);
*(.text.GammaCrossSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.GammaCrossSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.GammaCrossSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.GammaCrossSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.GammaCrossSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.AlphaUnderSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.AlphaUnderSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.AlphaUnderSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.AlphaUnderSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.AlphaUnderSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.AlphaOverSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.AlphaOverSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.AlphaOverSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.AlphaOverSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.AlphaOverSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.SubtractSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.SubtractSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.SubtractSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.SubtractSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.SubtractSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.AddSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.AddSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.AddSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.AddSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.AddSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.CrossSequence_input_2_get)
. = ALIGN(0x1000);
*(.text.CrossSequence_input_2_set)
. = ALIGN(0x1000);
*(.text.CrossSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.CrossSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.CrossSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_crop_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_transform_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.MaskSequence_mask_get)
. = ALIGN(0x1000);
*(.text.MaskSequence_mask_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_crop_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_transform_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_stabilize2d_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_stabilize2d_set)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_undistort_get)
. = ALIGN(0x1000);
*(.text.MovieClipSequence_undistort_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_show_waveform_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_show_waveform_set)
. = ALIGN(0x1000);
*(.text.rna_Sequence_filepath_update)
. = ALIGN(0x1000);
*(.text.BKE_sequence_invalidate_cache)
. = ALIGN(0x1000);
*(.text.SoundSequence_filepath_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_filepath_length)
. = ALIGN(0x1000);
*(.text.SoundSequence_filepath_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_pan_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_pan_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_pitch_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_pitch_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_volume_get)
. = ALIGN(0x1000);
*(.text.SoundSequence_volume_set)
. = ALIGN(0x1000);
*(.text.SoundSequence_sound_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_colorspace_settings_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_proxy_custom_file_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_proxy_custom_file_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_proxy_custom_directory_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_proxy_custom_directory_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_proxy_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_proxy_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_proxy_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_crop_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_transform_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_filepath_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_filepath_length)
. = ALIGN(0x1000);
*(.text.MovieSequence_filepath_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_elements_begin)
. = ALIGN(0x1000);
*(.text.MovieSequence_elements_next)
. = ALIGN(0x1000);
*(.text.MovieSequence_elements_end)
. = ALIGN(0x1000);
*(.text.MovieSequence_elements_get)
. = ALIGN(0x1000);
*(.text.rna_SequenceEditor_elements_length)
. = ALIGN(0x1000);
*(.text.MovieSequence_elements_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieSequence_stream_index_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_stream_index_set)
. = ALIGN(0x1000);
*(.text.MovieSequence_mpeg_preseek_get)
. = ALIGN(0x1000);
*(.text.MovieSequence_mpeg_preseek_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_proxy_custom_file_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_proxy_custom_file_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_proxy_custom_directory_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_proxy_custom_directory_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_proxy_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_proxy_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_proxy_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_crop_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_transform_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_scene_camera_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_scene_camera_set)
. = ALIGN(0x1000);
*(.text.SceneSequence_scene_get)
. = ALIGN(0x1000);
*(.text.SceneSequence_scene_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_proxy_custom_file_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_proxy_custom_file_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_proxy_custom_directory_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_proxy_custom_directory_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_proxy_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_proxy_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_proxy_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_crop_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_transform_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.MetaSequence_sequences_begin)
. = ALIGN(0x1000);
*(.text.MetaSequence_sequences_next)
. = ALIGN(0x1000);
*(.text.MetaSequence_sequences_end)
. = ALIGN(0x1000);
*(.text.MetaSequence_sequences_get)
. = ALIGN(0x1000);
*(.text.MetaSequence_sequences_lookup_int)
. = ALIGN(0x1000);
*(.text.MetaSequence_sequences_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceElements_pop_call)
. = ALIGN(0x1000);
*(.text.rna_SequenceElements_pop)
. = ALIGN(0x1000);
*(.text.SequenceElements_append_call)
. = ALIGN(0x1000);
*(.text.SequenceElements_rna_type_get)
. = ALIGN(0x1000);
*(.text.SequenceElements_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceElements_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceElements_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceElements_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceElements_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ImageSequence_colorspace_settings_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_animation_offset_end_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_animation_offset_end_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_animation_offset_start_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_animation_offset_start_set)
. = ALIGN(0x1000);
*(.text.do_sequence_frame_change_update)
. = ALIGN(0x1000);
*(.text.BKE_sequence_seqbase)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_offset_animdata)
. = ALIGN(0x1000);
*(.text.BKE_sequence_translate)
. = ALIGN(0x1000);
*(.text.BKE_sequence_base_shuffle)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_sort)
. = ALIGN(0x1000);
*(.text.BKE_sequence_calc)
. = ALIGN(0x1000);
*(.text.BKE_sequence_reload_new_file)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_proxy_custom_file_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_proxy_custom_file_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_proxy_custom_directory_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_proxy_custom_directory_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_proxy_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_proxy_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_proxy_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_crop_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_crop_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_crop_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_transform_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_translation_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_translation_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_strobe_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_strobe_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_color_saturation_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_color_saturation_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_color_multiply_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_color_multiply_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_reverse_frames_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_reverse_frames_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_float_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_float_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_flip_y_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_flip_y_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_flip_x_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_flip_x_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_alpha_mode_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_alpha_mode_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_deinterlace_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_use_deinterlace_set)
. = ALIGN(0x1000);
*(.text.ImageSequence_elements_begin)
. = ALIGN(0x1000);
*(.text.ImageSequence_elements_next)
. = ALIGN(0x1000);
*(.text.ImageSequence_elements_end)
. = ALIGN(0x1000);
*(.text.ImageSequence_elements_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_elements_lookup_int)
. = ALIGN(0x1000);
*(.text.ImageSequence_directory_get)
. = ALIGN(0x1000);
*(.text.ImageSequence_directory_length)
. = ALIGN(0x1000);
*(.text.ImageSequence_directory_set)
. = ALIGN(0x1000);
*(.text.Sequences_remove_call)
. = ALIGN(0x1000);
*(.text.Sequences_new_effect_call)
. = ALIGN(0x1000);
*(.text.rna_Sequences_new_effect)
. = ALIGN(0x1000);
*(.text.Sequences_new_sound_call)
. = ALIGN(0x1000);
*(.text.Sequences_new_movie_call)
. = ALIGN(0x1000);
*(.text.rna_Sequences_new_movie)
. = ALIGN(0x1000);
*(.text.Sequences_new_image_call)
. = ALIGN(0x1000);
*(.text.BKE_sequence_free_ex)
. = ALIGN(0x1000);
*(.text.Sequences_new_scene_call)
. = ALIGN(0x1000);
*(.text.Sequences_new_mask_call)
. = ALIGN(0x1000);
*(.text.Sequences_new_clip_call)
. = ALIGN(0x1000);
*(.text.BKE_sequence_init_colorspace)
. = ALIGN(0x1000);
*(.text.BKE_sequence_base_unique_name_recursive)
. = ALIGN(0x1000);
*(.text.movieclip_calc_length)
. = ALIGN(0x1000);
*(.text.Sequences_rna_type_get)
. = ALIGN(0x1000);
*(.text.Sequences_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Sequences_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Sequences_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Sequences_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Sequences_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceEditor_overlay_frame_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_overlay_frame_set)
. = ALIGN(0x1000);
*(.text.SequenceEditor_use_overlay_lock_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_use_overlay_lock_set)
. = ALIGN(0x1000);
*(.text.SequenceEditor_show_overlay_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_show_overlay_set)
. = ALIGN(0x1000);
*(.text.SequenceEditor_active_strip_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_active_strip_set)
. = ALIGN(0x1000);
*(.text.SequenceEditor_meta_stack_begin)
. = ALIGN(0x1000);
*(.text.SequenceEditor_meta_stack_next)
. = ALIGN(0x1000);
*(.text.SequenceEditor_meta_stack_end)
. = ALIGN(0x1000);
*(.text.SequenceEditor_meta_stack_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_meta_stack_lookup_int)
. = ALIGN(0x1000);
*(.text.SequenceEditor_meta_stack_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_all_begin)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_all_next)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_all_end)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_all_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_all_lookup_string)
. = ALIGN(0x1000);
*(.text.meta_tmp_ref)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_begin)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_next)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_end)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_lookup_int)
. = ALIGN(0x1000);
*(.text.SequenceEditor_sequences_lookup_string)
. = ALIGN(0x1000);
*(.text.SequenceEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_SequenceTransform_path)
. = ALIGN(0x1000);
*(.text.BKE_sequencer_base_recursive_apply)
. = ALIGN(0x1000);
*(.text.SequenceModifier_input_mask_id_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_input_mask_id_set)
. = ALIGN(0x1000);
*(.text.SequenceModifier_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceModifier_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceModifier_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceModifier_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceModifier_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_size_y_get)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_size_y_set)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_size_x_get)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_size_x_set)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_input_1_get)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_input_1_set)
. = ALIGN(0x1000);
*(.text.GaussianBlurSequence_input_count_get)
. = ALIGN(0x1000);
*(.text.ColorBalanceModifier_color_multiply_get)
. = ALIGN(0x1000);
*(.text.ColorBalanceModifier_color_multiply_set)
. = ALIGN(0x1000);
*(.text.ColorBalanceModifier_color_balance_get)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_clear_call)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_remove_call)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_new_call)
. = ALIGN(0x1000);
*(.text.sequence_do_invalidate_dependent)
. = ALIGN(0x1000);
*(.text.id_data_find_fcurve)
. = ALIGN(0x1000);
*(.text.BKE_sequence_effect_speed_rebuild_map)
. = ALIGN(0x1000);
*(.text.BKE_sequence_modifier_new)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_rna_type_get)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SequenceModifiers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_Smoke_reset)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_resolution_max_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_resolution_max_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_amplify_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_amplify_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_high_resolution_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_high_resolution_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_show_high_resolution_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_show_high_resolution_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_noise_type_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_noise_type_set)
. = ALIGN(0x1000);
*(.text.rna_Smoke_resetCache)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_alpha_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_alpha_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_beta_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_beta_set)
. = ALIGN(0x1000);
*(.text.rna_Smoke_reset_dependency)
. = ALIGN(0x1000);
*(.text.DAG_relations_tag_update)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_collision_group_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_collision_group_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_fluid_group_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_fluid_group_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_effector_group_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_effector_group_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_strength_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_strength_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_dissolve_speed_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_dissolve_speed_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_dissolve_smoke_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_dissolve_smoke_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_dissolve_smoke_log_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_dissolve_smoke_log_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_point_cache_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_point_cache_compress_type_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_point_cache_compress_type_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_collision_extents_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_collision_extents_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_effector_weights_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_highres_sampling_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_highres_sampling_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_time_scale_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_time_scale_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_vorticity_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_vorticity_set)
. = ALIGN(0x1000);
*(.text.rna_SmokeModifier_grid_get_length)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_density_grid_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_grid_get)
. = ALIGN(0x1000);
*(.text.rna_SmokeModifier_color_grid_get_length)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_color_grid_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_cell_size_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_start_point_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_domain_resolution_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_burning_rate_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_burning_rate_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_smoke_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_smoke_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_vorticity_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_vorticity_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_ignition_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_ignition_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_max_temp_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_max_temp_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_smoke_color_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_flame_smoke_color_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_adaptive_domain_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_use_adaptive_domain_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_additional_res_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_additional_res_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_adapt_margin_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_adapt_margin_set)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_adapt_threshold_get)
. = ALIGN(0x1000);
*(.text.SmokeDomainSettings_adapt_threshold_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_density_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_density_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_smoke_color_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_smoke_color_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_fuel_amount_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_fuel_amount_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_temperature_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_temperature_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_particle_system_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_particle_system_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_smoke_flow_type_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_smoke_flow_type_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_smoke_flow_source_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_smoke_flow_source_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_absolute_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_absolute_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_initial_velocity_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_initial_velocity_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_velocity_factor_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_velocity_factor_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_velocity_normal_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_velocity_normal_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_velocity_random_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_velocity_random_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_volume_density_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_volume_density_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_surface_distance_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_surface_distance_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_particle_size_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_particle_size_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_particle_size_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_particle_size_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_subframes_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_subframes_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_density_vertex_group_get)
. = ALIGN(0x1000);
*(.text.rna_object_vgroup_name_index_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_density_vertex_group_length)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_density_vertex_group_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_texture_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_use_texture_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_texture_map_type_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_texture_map_type_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_uv_layer_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_uv_layer_length)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_uv_layer_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_noise_texture_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_noise_texture_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_texture_size_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_texture_size_set)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_texture_offset_get)
. = ALIGN(0x1000);
*(.text.SmokeFlowSettings_texture_offset_set)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_collision_type_get)
. = ALIGN(0x1000);
*(.text.SmokeCollSettings_collision_type_set)
. = ALIGN(0x1000);
*(.text.rna_SmokeFlowSettings_path)
. = ALIGN(0x1000);
*(.text.rna_SmokeDomainSettings_path)
. = ALIGN(0x1000);
*(.text.rna_SmokeCollSettings_path)
. = ALIGN(0x1000);
*(.text.Sound_packed_file_get)
. = ALIGN(0x1000);
*(.text.rna_Sound_update)
. = ALIGN(0x1000);
*(.text.Sound_filepath_get)
. = ALIGN(0x1000);
*(.text.Sound_filepath_length)
. = ALIGN(0x1000);
*(.text.Sound_filepath_set)
. = ALIGN(0x1000);
*(.text.rna_Sound_caching_update)
. = ALIGN(0x1000);
*(.text.Sound_use_memory_cache_get)
. = ALIGN(0x1000);
*(.text.Sound_use_memory_cache_set)
. = ALIGN(0x1000);
*(.text.Sound_use_mono_get)
. = ALIGN(0x1000);
*(.text.Sound_use_mono_set)
. = ALIGN(0x1000);
*(.text.rna_Space_refine)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_pivot_point_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_pivot_point_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_grease_pencil_source_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_grease_pencil_source_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_seconds_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_seconds_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_use_grayscale_preview_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_use_grayscale_preview_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_blue_channel_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_blue_channel_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_green_channel_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_green_channel_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_red_channel_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_red_channel_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_hidden_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_hidden_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_only_selected_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_only_selected_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_tracks_error_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_tracks_error_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_tracks_motion_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_tracks_motion_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_frames_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_graph_frames_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_filters_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_filters_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_use_manual_calibration_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_use_manual_calibration_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_stable_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_stable_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_grid_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_grid_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_names_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_names_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_scopes_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_disabled_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_disabled_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_use_mute_footage_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_use_mute_footage_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_bundles_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_bundles_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_tiny_markers_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_tiny_markers_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_path_length_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_path_length_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_track_path_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_track_path_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_lock_time_cursor_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_lock_time_cursor_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceClipEditor_lock_selection_update)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_lock_selection_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_lock_selection_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_marker_search_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_marker_search_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_marker_pattern_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_marker_pattern_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceClipEditor_view_type_update)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_view_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_view_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceClipEditor_clip_mode_update)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mode_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mask_overlay_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mask_overlay_mode_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_mask_overlay_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_mask_overlay_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_mask_smooth_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_show_mask_smooth_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mask_draw_type_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mask_draw_type_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mask_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_mask_set)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_clip_user_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_clip_get)
. = ALIGN(0x1000);
*(.text.SpaceClipEditor_clip_set)
. = ALIGN(0x1000);
*(.text.BKE_movieclip_clear_cache)
. = ALIGN(0x1000);
*(.text.ED_space_clip_set_clip)
. = ALIGN(0x1000);
*(.text.SpaceUserPreferences_filter_text_get)
. = ALIGN(0x1000);
*(.text.SpaceUserPreferences_filter_text_length)
. = ALIGN(0x1000);
*(.text.SpaceUserPreferences_filter_text_set)
. = ALIGN(0x1000);
*(.text.SpaceUserPreferences_filter_type_get)
. = ALIGN(0x1000);
*(.text.SpaceUserPreferences_filter_type_set)
. = ALIGN(0x1000);
*(.text.NodeTreePath_node_tree_get)
. = ALIGN(0x1000);
*(.text.NodeTreePath_rna_type_get)
. = ALIGN(0x1000);
*(.text.NodeTreePath_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.NodeTreePath_rna_properties_next)
. = ALIGN(0x1000);
*(.text.NodeTreePath_rna_properties_end)
. = ALIGN(0x1000);
*(.text.NodeTreePath_rna_properties_get)
. = ALIGN(0x1000);
*(.text.NodeTreePath_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SpaceConsole_scrollback_begin)
. = ALIGN(0x1000);
*(.text.SpaceConsole_scrollback_next)
. = ALIGN(0x1000);
*(.text.SpaceConsole_scrollback_end)
. = ALIGN(0x1000);
*(.text.SpaceConsole_scrollback_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_scrollback_lookup_int)
. = ALIGN(0x1000);
*(.text.SpaceConsole_history_begin)
. = ALIGN(0x1000);
*(.text.SpaceConsole_history_next)
. = ALIGN(0x1000);
*(.text.SpaceConsole_history_end)
. = ALIGN(0x1000);
*(.text.SpaceConsole_history_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_history_lookup_int)
. = ALIGN(0x1000);
*(.text.SpaceConsole_language_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_language_length)
. = ALIGN(0x1000);
*(.text.SpaceConsole_language_set)
. = ALIGN(0x1000);
*(.text.SpaceConsole_prompt_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_prompt_length)
. = ALIGN(0x1000);
*(.text.SpaceConsole_prompt_set)
. = ALIGN(0x1000);
*(.text.SpaceConsole_select_end_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_select_end_set)
. = ALIGN(0x1000);
*(.text.SpaceConsole_select_start_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_select_start_set)
. = ALIGN(0x1000);
*(.text.SpaceConsole_font_size_get)
. = ALIGN(0x1000);
*(.text.SpaceConsole_font_size_set)
. = ALIGN(0x1000);
*(.text.ConsoleLine_type_get)
. = ALIGN(0x1000);
*(.text.ConsoleLine_type_set)
. = ALIGN(0x1000);
*(.text.ConsoleLine_current_character_get)
. = ALIGN(0x1000);
*(.text.ConsoleLine_current_character_set)
. = ALIGN(0x1000);
*(.text.rna_ConsoleLine_cursor_index_range)
. = ALIGN(0x1000);
*(.text.ConsoleLine_body_get)
. = ALIGN(0x1000);
*(.text.ConsoleLine_body_length)
. = ALIGN(0x1000);
*(.text.ConsoleLine_body_set)
. = ALIGN(0x1000);
*(.text.ConsoleLine_rna_type_get)
. = ALIGN(0x1000);
*(.text.ConsoleLine_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ConsoleLine_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ConsoleLine_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ConsoleLine_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ConsoleLine_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_active_states_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_active_states_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_linked_controller_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_linked_controller_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_active_object_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_active_object_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_selected_objects_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_actuators_selected_objects_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_controllers_linked_controller_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_controllers_linked_controller_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_controllers_active_object_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_controllers_active_object_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_controllers_selected_objects_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_controllers_selected_objects_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_active_states_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_active_states_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_linked_controller_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_linked_controller_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_active_object_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_active_object_set)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_selected_objects_get)
. = ALIGN(0x1000);
*(.text.SpaceLogicEditor_show_sensors_selected_objects_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_pop_call)
. = ALIGN(0x1000);
*(.text.ED_node_tree_pop)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_append_call)
. = ALIGN(0x1000);
*(.text.ED_node_tree_push)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_start_call)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_clear_call)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_to_string_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_to_string_length)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_rna_type_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditorPath_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_cursor_location_from_region_call)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_cursor_location_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_cursor_location_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_show_highlight_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_show_highlight_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_channels_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_channels_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_y_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_y_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_x_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_x_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_zoom_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_backdrop_zoom_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_use_auto_render_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_use_auto_render_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_show_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_show_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceNodeEditor_show_backdrop_update)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_show_backdrop_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_show_backdrop_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_pin_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_pin_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_edit_tree_get)
. = ALIGN(0x1000);
*(.text.rna_SpaceNodeEditor_node_tree_update)
. = ALIGN(0x1000);
*(.text.node_cmp_rlayers_force_hidden_passes)
. = ALIGN(0x1000);
*(.text.snode_set_context)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_node_tree_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_node_tree_set)
. = ALIGN(0x1000);
*(.text.ED_node_tree_start)
. = ALIGN(0x1000);
*(.text.rna_SpaceNodeEditor_node_tree_poll)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_path_begin)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_path_next)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_path_end)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_path_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_path_lookup_int)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_id_from_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_id_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_shader_type_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_shader_type_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_texture_type_get)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_texture_type_set)
. = ALIGN(0x1000);
*(.text.SpaceNodeEditor_tree_type_get)
. = ALIGN(0x1000);
*(.text.ED_node_set_tree_type .text.SpaceNodeEditor_tree_type_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceNodeEditor_tree_type_itemf)
. = ALIGN(0x1000);
*(.text.rna_node_tree_type_itemf)
. = ALIGN(0x1000);
*(.text.rna_SpaceNodeEditor_tree_type_poll)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_rigidbody_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_rigidbody_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_dynamicpaint_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_dynamicpaint_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_smoke_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_smoke_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_cloth_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_cloth_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_particles_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_particles_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_softbody_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_cache_softbody_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_show_cache_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_show_cache_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_show_seconds_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_show_seconds_set)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_show_frame_indicator_get)
. = ALIGN(0x1000);
*(.text.SpaceTimeline_show_frame_indicator_set)
. = ALIGN(0x1000);
*(.text.SpaceNLA_auto_snap_get)
. = ALIGN(0x1000);
*(.text.SpaceNLA_auto_snap_set)
. = ALIGN(0x1000);
*(.text.SpaceNLA_dopesheet_get)
. = ALIGN(0x1000);
*(.text.SpaceNLA_use_realtime_update_get)
. = ALIGN(0x1000);
*(.text.SpaceNLA_use_realtime_update_set)
. = ALIGN(0x1000);
*(.text.SpaceNLA_show_strip_curves_get)
. = ALIGN(0x1000);
*(.text.SpaceNLA_show_strip_curves_set)
. = ALIGN(0x1000);
*(.text.SpaceNLA_show_frame_indicator_get)
. = ALIGN(0x1000);
*(.text.SpaceNLA_show_frame_indicator_set)
. = ALIGN(0x1000);
*(.text.SpaceNLA_show_seconds_get)
. = ALIGN(0x1000);
*(.text.SpaceNLA_show_seconds_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_auto_snap_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_auto_snap_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_dopesheet_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_use_marker_sync_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_use_marker_sync_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_use_realtime_update_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_use_realtime_update_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_use_auto_merge_keyframes_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_use_auto_merge_keyframes_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_group_colors_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_group_colors_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_pose_markers_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_pose_markers_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_sliders_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_sliders_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_frame_indicator_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_frame_indicator_set)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_seconds_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_show_seconds_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceDopeSheetEditor_mode_update)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_mode_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceDopeSheetEditor_action_update)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_action_get)
. = ALIGN(0x1000);
*(.text.SpaceDopeSheetEditor_action_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_replace_text_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_replace_text_length)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_replace_text_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_find_text_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_find_text_length)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_find_text_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_match_case_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_match_case_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_find_wrap_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_find_wrap_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_find_all_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_find_all_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_live_edit_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_live_edit_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_overwrite_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_use_overwrite_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_visible_lines_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_top_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_margin_column_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_margin_column_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_margin_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_margin_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_font_size_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_font_size_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceTextEditor_updateEdited)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_tab_width_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_tab_width_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_line_highlight_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_line_highlight_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_syntax_highlight_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_syntax_highlight_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_line_numbers_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_line_numbers_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_word_wrap_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_show_word_wrap_set)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_text_get)
. = ALIGN(0x1000);
*(.text.SpaceTextEditor_text_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_filter_glob_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_filter_glob_length)
. = ALIGN(0x1000);
*(.text.FileSelectParams_filter_glob_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_folder_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_folder_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_text_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_text_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_sound_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_sound_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_font_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_font_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_script_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_script_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_movie_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_movie_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_backup_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_backup_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_blender_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_blender_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_image_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_image_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_sort_method_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_sort_method_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_show_hidden_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_show_hidden_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_use_filter_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_display_type_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_display_type_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_filename_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_filename_length)
. = ALIGN(0x1000);
*(.text.FileSelectParams_filename_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_directory_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_directory_length)
. = ALIGN(0x1000);
*(.text.FileSelectParams_directory_set)
. = ALIGN(0x1000);
*(.text.FileSelectParams_title_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_title_length)
. = ALIGN(0x1000);
*(.text.FileSelectParams_rna_type_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.FileSelectParams_rna_properties_next)
. = ALIGN(0x1000);
*(.text.FileSelectParams_rna_properties_end)
. = ALIGN(0x1000);
*(.text.FileSelectParams_rna_properties_get)
. = ALIGN(0x1000);
*(.text.FileSelectParams_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_overlay_type_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_overlay_type_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_proxy_render_size_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_proxy_render_size_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_draw_overexposed_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_draw_overexposed_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_preview_channels_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_preview_channels_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_display_channel_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_display_channel_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_seconds_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_seconds_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_safe_margin_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_safe_margin_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_separate_color_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_separate_color_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_use_marker_sync_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_use_marker_sync_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_frames_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_frames_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_frame_indicator_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_show_frame_indicator_set)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_display_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_display_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Sequencer_view_type_update)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_view_type_get)
. = ALIGN(0x1000);
*(.text.SpaceSequenceEditor_view_type_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_use_live_unwrap_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_use_live_unwrap_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_lock_bounds_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_lock_bounds_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_use_snap_to_pixels_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_use_snap_to_pixels_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_faces_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_faces_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_normalized_coords_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_normalized_coords_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_texpaint_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_texpaint_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_other_objects_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_other_objects_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_modified_edges_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_modified_edges_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_draw_stretch_type_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_draw_stretch_type_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_stretch_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_stretch_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_smooth_edges_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_show_smooth_edges_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_edge_draw_type_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_edge_draw_type_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_sticky_select_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_sticky_select_mode_set)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.SpaceUVEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_error_get)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_error_set)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_warning_get)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_warning_set)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_operator_get)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_operator_set)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_info_get)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_info_set)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_debug_get)
. = ALIGN(0x1000);
*(.text.SpaceInfo_show_report_debug_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mask_overlay_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mask_overlay_mode_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_mask_overlay_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_mask_overlay_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_mask_smooth_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_mask_smooth_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mask_draw_type_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mask_draw_type_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mask_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mask_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_maskedit_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_uvedit_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_paint_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_render_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_use_realtime_update_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_use_realtime_update_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_pivot_point_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_pivot_point_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceImageEditor_pivot_itemf)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_cursor_location_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_cursor_location_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceImageEditor_mode_update)
. = ALIGN(0x1000);
*(.text.BKE_brush_add)
. = ALIGN(0x1000);
*(.text.ED_space_image_paint_update)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_mode_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_uv_editor_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_draw_channels_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_draw_channels_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceImageEditor_draw_channels_itemf)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_repeat_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_show_repeat_set)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_zoom_get)
. = ALIGN(0x1000);
*(.text.ED_space_image_get_size)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_sample_histogram_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_use_image_pin_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_use_image_pin_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceImageEditor_scopes_update)
. = ALIGN(0x1000);
*(.text.IMB_partial_display_buffer_update .text.colormanage_cache_get .text.IMB_colormanagement_processor_apply_pixel)
. = ALIGN(0x1000);
*(.text.IMB_display_buffer_acquire)
. = ALIGN(0x1000);
*(.text.scopes_update)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_scopes_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_image_user_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_image_get)
. = ALIGN(0x1000);
*(.text.SpaceImageEditor_image_set)
. = ALIGN(0x1000);
*(.text.ED_uvedit_assign_image)
. = ALIGN(0x1000);
*(.text.ED_space_image_set)
. = ALIGN(0x1000);
*(.text.ED_mesh_uv_loop_reset_ex .text.mesh_uv_reset_bmface .text.mesh_uv_reset_mface)
. = ALIGN(0x1000);
*(.text.CustomData_bmesh_copy_data)
. = ALIGN(0x1000);
*(.text.update_data_blocks)
. = ALIGN(0x1000);
*(.text.CustomData_bmesh_free_block)
. = ALIGN(0x1000);
*(.text.bmiter__loop_of_face_step)
. = ALIGN(0x1000);
*(.text.SpaceFileBrowser_operator_value_get)
. = ALIGN(0x1000);
*(.text.SpaceFileBrowser_active_operator_get)
. = ALIGN(0x1000);
*(.text.SpaceFileBrowser_params_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_use_pin_id_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_use_pin_id_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceProperties_pin_id_update)
. = ALIGN(0x1000);
*(.text.SpaceProperties_pin_id_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_pin_id_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceProperties_pin_id_typef)
. = ALIGN(0x1000);
*(.text.SpaceProperties_use_limited_texture_context_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_use_limited_texture_context_set)
. = ALIGN(0x1000);
*(.text.SpaceProperties_texture_context_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_texture_context_set)
. = ALIGN(0x1000);
*(.text.ED_texture_context_check_others .text.rna_SpaceProperties_texture_context_itemf)
. = ALIGN(0x1000);
*(.text.BKE_paint_get_active_from_context)
. = ALIGN(0x1000);
*(.text.SpaceProperties_align_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_align_set)
. = ALIGN(0x1000);
*(.text.SpaceProperties_context_get)
. = ALIGN(0x1000);
*(.text.SpaceProperties_context_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceProperties_context_itemf)
. = ALIGN(0x1000);
*(.text.RegionView3D_update_call)
. = ALIGN(0x1000);
*(.text.glMatrixMode)
. = ALIGN(0x1000);
*(.text.BKE_camera_params_from_view3d)
. = ALIGN(0x1000);
*(.text.view3d_winmatrix_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_camera_offset_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_camera_offset_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_camera_zoom_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_camera_zoom_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_distance_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_distance_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_rotation_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_rotation_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_location_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_location_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_is_perspective_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_is_perspective_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_perspective_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_perspective_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_matrix_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_view_matrix_set)
. = ALIGN(0x1000);
*(.text.ED_view3d_from_m4)
. = ALIGN(0x1000);
*(.text.RegionView3D_perspective_matrix_get)
. = ALIGN(0x1000);
*(.text.rna_RegionView3D_quadview_clip_update)
. = ALIGN(0x1000);
*(.text.RegionView3D_use_box_clip_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_use_box_clip_set)
. = ALIGN(0x1000);
*(.text.rna_RegionView3D_quadview_update)
. = ALIGN(0x1000);
*(.text.ED_view3d_quadview_update)
. = ALIGN(0x1000);
*(.text.view3d_boxview_clip)
. = ALIGN(0x1000);
*(.text.view3d_boxview_sync)
. = ALIGN(0x1000);
*(.text.RegionView3D_show_sync_view_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_show_sync_view_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_lock_rotation_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_lock_rotation_set)
. = ALIGN(0x1000);
*(.text.RegionView3D_rna_type_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.RegionView3D_rna_properties_next)
. = ALIGN(0x1000);
*(.text.RegionView3D_rna_properties_end)
. = ALIGN(0x1000);
*(.text.RegionView3D_rna_properties_get)
. = ALIGN(0x1000);
*(.text.RegionView3D_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_show_restrict_columns_get)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_show_restrict_columns_set)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_use_filter_complete_get)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_use_filter_complete_set)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_use_filter_case_sensitive_get)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_use_filter_case_sensitive_set)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_filter_text_get)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_filter_text_length)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_filter_text_set)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_display_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceOutliner_display_mode_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_auto_normalization_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_auto_normalization_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_normalization_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_normalization_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_has_ghost_curves_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_has_ghost_curves_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_auto_snap_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_auto_snap_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_dopesheet_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_pivot_point_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_pivot_point_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_cursor_position_y_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_cursor_position_y_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_cursor_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_cursor_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_realtime_update_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_realtime_update_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_auto_merge_keyframes_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_auto_merge_keyframes_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_group_colors_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_group_colors_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_beauty_drawing_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_beauty_drawing_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_only_selected_keyframe_handles_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_only_selected_keyframe_handles_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_only_selected_curves_handles_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_use_only_selected_curves_handles_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_handles_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_handles_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_sliders_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_sliders_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_frame_indicator_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_frame_indicator_set)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_seconds_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_show_seconds_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceGraphEditor_display_mode_update)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_mode_get)
. = ALIGN(0x1000);
*(.text.SpaceGraphEditor_mode_set)
. = ALIGN(0x1000);
*(.text.rna_Space_view2d_sync_update)
. = ALIGN(0x1000);
*(.text.UI_view2d_sync)
. = ALIGN(0x1000);
*(.text.Space_show_locked_time_get)
. = ALIGN(0x1000);
*(.text.Space_show_locked_time_set)
. = ALIGN(0x1000);
*(.text.Space_type_get)
. = ALIGN(0x1000);
*(.text.Space_rna_type_get)
. = ALIGN(0x1000);
*(.text.Space_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Space_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Space_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Space_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Space_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_SpaceView3D_matcap_update)
. = ALIGN(0x1000);
*(.text.GPU_pass_free .text.GPU_material_free)
. = ALIGN(0x1000);
*(.text.SpaceView3D_matcap_icon_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_matcap_icon_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceView3D_matcap_enable)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_matcap_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_matcap_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_bundle_names_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_bundle_names_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_camera_path_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_camera_path_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_tracks_draw_type_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_tracks_draw_type_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_tracks_draw_size_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_tracks_draw_size_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_reconstruction_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_reconstruction_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_region_quadviews_begin)
. = ALIGN(0x1000);
*(.text.SpaceView3D_region_quadviews_next)
. = ALIGN(0x1000);
*(.text.SpaceView3D_region_quadviews_end)
. = ALIGN(0x1000);
*(.text.SpaceView3D_region_quadviews_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_region_3d_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_layers_used_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_layers_local_view_get)
. = ALIGN(0x1000);
*(.text.rna_SpaceView3D_layer_update)
. = ALIGN(0x1000);
*(.text.evaluate_fcurve .text.evaluate_fmodifiers_storage_new .text.evaluate_time_fmodifiers .text.evaluate_value_fmodifiers .text.BLI_easing_elastic_ease_in_out)
. = ALIGN(0x1000);
*(.text.binarysearch_bezt_index_ex)
. = ALIGN(0x1000);
*(.text.object_duplilist_ex)
. = ALIGN(0x1000);
*(.text.CustomData_copy_data)
. = ALIGN(0x1000);
*(.text.CustomData_free_layer)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_poly_normal)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_normals_poly .text.mesh_calc_normals_poly_accum)
. = ALIGN(0x1000);
*(.text.BKE_mesh_loops_to_tessdata)
. = ALIGN(0x1000);
*(.text.test_index_face)
. = ALIGN(0x1000);
*(.text.BKE_mesh_recalc_tessellation)
. = ALIGN(0x1000);
*(.text.BLI_polyfill_calc_arena)
. = ALIGN(0x1000);
*(.text.polyfill_prepare .text.polyfill_calc .text.kdtree2d_balance_recursive .text.kdtree2d_isect_tri_recursive)
. = ALIGN(0x1000);
*(.text.CustomData_external_read .text.cdf_read_open)
. = ALIGN(0x1000);
*(.text.CustomData_to_bmeshpoly .text.BKE_mesh_convert_mfaces_to_mpolys_ex)
. = ALIGN(0x1000);
*(.text.BLI_edgehash_insert)
. = ALIGN(0x1000);
*(.text.calchandleNurb_intern)
. = ALIGN(0x1000);
*(.text.kdtree_balance)
. = ALIGN(0x1000);
*(.text.psys_free_path_cache)
. = ALIGN(0x1000);
*(.text.FT_Init_FreeType)
. = ALIGN(0x1000);
*(.text.BLI_vfontdata_from_freetypefont)
. = ALIGN(0x1000);
*(.text.outside_lattice)
. = ALIGN(0x1000);
*(.text.CDDM_apply_vert_coords)
. = ALIGN(0x1000);
*(.text.DM_DupPolys .text.cddm_copy_ex)
. = ALIGN(0x1000);
*(.text.DM_from_template)
. = ALIGN(0x1000);
*(.text.CDDM_calc_normals_mapping_ex)
. = ALIGN(0x1000);
*(.text.BKE_mesh_calc_normals_mapping_ex)
. = ALIGN(0x1000);
*(.text.BKE_key_evaluate_relative .text.cp_key .text.BKE_key_evaluate_object_ex .text.setkeys .text.do_key .text.do_curve_key)
. = ALIGN(0x1000);
*(.text.get_weights_array)
. = ALIGN(0x1000);
*(.text.CDDM_new)
. = ALIGN(0x1000);
*(.text.where_on_path)
. = ALIGN(0x1000);
*(.text.tri_to_quat_ex)
. = ALIGN(0x1000);
*(.text.BKE_curve_nurbs_vertexCos_get .text.BK_curve_nurbs_vertexCos_apply)
. = ALIGN(0x1000);
*(.text.BLI_strncpy_wchar_from_utf8)
. = ALIGN(0x1000);
*(.text.BKE_vfont_to_curve_ex .text.vfont_get_data)
. = ALIGN(0x1000);
*(.text.calc_curvepath .text.BKE_nurb_makeFaces .text.basisNurb .text.BKE_nurb_makeCurve .text.BKE_curve_bevel_make .text.BKE_curve_bevelList_make .text.bevlist_firstlast_direction_calc_from_bpoint .text.BKE_curve_nurbs_keyVertexCos_get .text.BKE_curve_nurbs_keyVertexTilts_apply .text.BKE_displist_fill .text.displist_calc_taper .text.BKE_displist_make_curveTypes .text.do_makeDispListCurveTypes .text.BKE_displist_make_surf .text.curve_calc_modifiers_pre .text.rotateBevelPiece .text.displist_surf_indices .text.curve_to_filledpoly .text.curve_calc_modifiers_post)
. = ALIGN(0x1000);
*(.text.BLI_edgehash_reinsert)
. = ALIGN(0x1000);
*(.text.BKE_mesh_nurbs_displist_to_mdata)
. = ALIGN(0x1000);
*(.text.CDDM_from_curve_displist)
. = ALIGN(0x1000);
*(.text.vec_to_quat)
. = ALIGN(0x1000);
*(.text.BLI_scanfill_vert_add .text.BLI_scanfill_edge_add)
. = ALIGN(0x1000);
*(.text.BLI_scanfill_calc_ex .text.addedgetoscanlist)
. = ALIGN(0x1000);
*(.text.DM_update_tessface_data)
. = ALIGN(0x1000);
*(.text.bmiter__elem_of_mesh_step)
. = ALIGN(0x1000);
*(.text.free_softbody_intern)
. = ALIGN(0x1000);
*(.text.BM_mesh_elem_table_ensure)
. = ALIGN(0x1000);
*(.text.implicit_free)
. = ALIGN(0x1000);
*(.text.cloth_free_modifier)
. = ALIGN(0x1000);
*(.text.BKE_mball_basis_find)
. = ALIGN(0x1000);
*(.text.dynamicPaint_setInitialColor)
. = ALIGN(0x1000);
*(.text.CustomData_validate_layer_name)
. = ALIGN(0x1000);
*(.text.RNA_property_boolean_get_default_index .text.RNA_property_int_get_default_index .text.RNA_property_float_get_default_index)
. = ALIGN(0x1000);
*(.text.BKE_pchan_to_pose_mat)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_id_clear)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_update_info)
. = ALIGN(0x1000);
*(.text.BKE_object_insert_ptcache .text.ptcache_filename)
. = ALIGN(0x1000);
*(.text.ptcache_path)
. = ALIGN(0x1000);
*(.text.psys_reset)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_id_reset)
. = ALIGN(0x1000);
*(.text.BKE_ptcache_object_reset)
. = ALIGN(0x1000);
*(.text.DAG_scene_update_flags .text.dag_group_update_flags .text.dag_object_time_update_flags)
. = ALIGN(0x1000);
*(.text.BKE_object_rot_to_mat3)
. = ALIGN(0x1000);
*(.text.eulO_to_mat3)
. = ALIGN(0x1000);
*(.text.where_is_object_parslow)
. = ALIGN(0x1000);
*(.text.quat_apply_track)
. = ALIGN(0x1000);
*(.text.ob_get_parent_matrix .text.give_parvert)
. = ALIGN(0x1000);
*(.text.DAG_scene_flush_update .text.dag_scene_flush_layers .text.flush_update_node .text.flush_pointcache_reset .text.flush_layer_node .text.dag_current_scene_layers)
. = ALIGN(0x1000);
*(.text.build_dag .text.build_dag_object .text.build_dag_group .text.dag_add_driver_relation .text.dag_add_shader_nodetree_driver_relations .text.DAG_scene_relations_update .text.dag_invisible_dependencies_check_flush)
. = ALIGN(0x1000);
*(.text.animsys_write_rna_setting)
. = ALIGN(0x1000);
*(.text.calc_action_range .text.animsys_evaluate_action .text.nlastrips_ctime_get_strip .text.nlastrip_evaluate_controls .text.nlastrip_evaluate .text.nladata_flush_channels .text.BKE_animsys_evaluate_animdata)
. = ALIGN(0x1000);
*(.text.nlastrip_get_frame)
. = ALIGN(0x1000);
*(.text.BKE_object_where_is_calc_time_ex)
. = ALIGN(0x1000);
*(.text.psys_update_particle_tree .text.pdInitEffectors .text.add_particles_to_effectors .text.pdPrecalculateEffectors)
. = ALIGN(0x1000);
*(.text.BKE_constraints_clear_evalob .text.BKE_constraint_targets_for_solving_get .text.BKE_constraints_solve)
. = ALIGN(0x1000);
*(.text.BKE_constraint_mat_convertspace)
. = ALIGN(0x1000);
*(.text.DAG_on_visible_update .text.dag_group_on_visible_update)
. = ALIGN(0x1000);
*(.text.BKE_scene_base_iter_next)
. = ALIGN(0x1000);
*(.text.SpaceView3D_layers_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_layers_set)
. = ALIGN(0x1000);
*(.text.ED_view3d_scene_layer_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_camera_and_layers_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_camera_and_layers_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_current_orientation_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_transform_orientation_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_transform_orientation_set)
. = ALIGN(0x1000);
*(.text.rna_TransformOrientation_itemf)
. = ALIGN(0x1000);
*(.text.SpaceView3D_transform_manipulators_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_transform_manipulators_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_manipulator_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_manipulator_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceView3D_pivot_update)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_pivot_point_align_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_pivot_point_align_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_pivot_point_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_pivot_point_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_background_images_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_background_images_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_background_images_begin)
. = ALIGN(0x1000);
*(.text.SpaceView3D_background_images_next)
. = ALIGN(0x1000);
*(.text.SpaceView3D_background_images_end)
. = ALIGN(0x1000);
*(.text.SpaceView3D_background_images_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_background_images_lookup_int)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_occlude_geometry_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_occlude_geometry_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_only_render_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_only_render_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_camera_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_camera_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_occlude_wire_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_occlude_wire_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_textured_shadeless_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_textured_shadeless_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_backface_culling_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_backface_culling_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_textured_solid_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_textured_solid_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_relationship_lines_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_relationship_lines_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_all_objects_origin_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_all_objects_origin_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_outline_selected_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_outline_selected_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_axis_z_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_axis_z_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_axis_y_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_axis_y_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_axis_x_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_axis_x_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_floor_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_show_floor_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_scale_unit_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_subdivisions_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_subdivisions_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_lines_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_lines_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_scale_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_grid_scale_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_clip_end_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_clip_end_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_clip_start_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_clip_start_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lens_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lens_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_cursor_location_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_cursor_location_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_local_view_get)
. = ALIGN(0x1000);
*(.text.rna_SpaceView3D_viewport_shade_update)
. = ALIGN(0x1000);
*(.text.IMB_moviecache_cleanup)
. = ALIGN(0x1000);
*(.text.free_strand_surface .text.RE_Database_Free .text.free_renderdata_tables .text.freeshadowbuf .text.free_sss)
. = ALIGN(0x1000);
*(.text.image_mem_size)
. = ALIGN(0x1000);
*(.text.wm_jobs_kill_job)
. = ALIGN(0x1000);
*(.text.ED_view3d_shade_update)
. = ALIGN(0x1000);
*(.text.SpaceView3D_viewport_shade_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_viewport_shade_set)
. = ALIGN(0x1000);
*(.text.rna_SpaceView3D_viewport_shade_itemf)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_cursor_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_cursor_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_bone_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_bone_length)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_bone_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_object_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_lock_object_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_max_y_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_max_y_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_max_x_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_max_x_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_min_y_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_min_y_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_min_x_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_render_border_min_x_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_render_border_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_use_render_border_set)
. = ALIGN(0x1000);
*(.text.SpaceView3D_camera_get)
. = ALIGN(0x1000);
*(.text.SpaceView3D_camera_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_frame_method_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_frame_method_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_draw_depth_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_draw_depth_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_show_on_foreground_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_show_on_foreground_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_show_background_image_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_show_background_image_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_use_camera_clip_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_use_camera_clip_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_show_expanded_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_show_expanded_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_view_axis_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_view_axis_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_opacity_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_opacity_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_size_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_size_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_offset_y_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_offset_y_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_offset_x_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_offset_x_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_clip_user_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_image_user_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_clip_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_clip_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_image_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_image_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_source_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_source_set)
. = ALIGN(0x1000);
*(.text.BackgroundImage_rna_type_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BackgroundImage_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BackgroundImage_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BackgroundImage_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BackgroundImage_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.BackgroundImages_clear_call)
. = ALIGN(0x1000);
*(.text.BackgroundImages_remove_call)
. = ALIGN(0x1000);
*(.text.BackgroundImages_new_call)
. = ALIGN(0x1000);
*(.text.BackgroundImages_rna_type_get)
. = ALIGN(0x1000);
*(.text.BackgroundImages_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.BackgroundImages_rna_properties_next)
. = ALIGN(0x1000);
*(.text.BackgroundImages_rna_properties_end)
. = ALIGN(0x1000);
*(.text.BackgroundImages_rna_properties_get)
. = ALIGN(0x1000);
*(.text.BackgroundImages_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Speaker_muted_get)
. = ALIGN(0x1000);
*(.text.Speaker_muted_set)
. = ALIGN(0x1000);
*(.text.Speaker_relative_get)
. = ALIGN(0x1000);
*(.text.Speaker_sound_get)
. = ALIGN(0x1000);
*(.text.Speaker_sound_set)
. = ALIGN(0x1000);
*(.text.Speaker_volume_max_get)
. = ALIGN(0x1000);
*(.text.Speaker_volume_max_set)
. = ALIGN(0x1000);
*(.text.Speaker_volume_min_get)
. = ALIGN(0x1000);
*(.text.Speaker_volume_min_set)
. = ALIGN(0x1000);
*(.text.Speaker_distance_max_get)
. = ALIGN(0x1000);
*(.text.Speaker_distance_max_set)
. = ALIGN(0x1000);
*(.text.Speaker_distance_reference_get)
. = ALIGN(0x1000);
*(.text.Speaker_distance_reference_set)
. = ALIGN(0x1000);
*(.text.Speaker_attenuation_get)
. = ALIGN(0x1000);
*(.text.Speaker_attenuation_set)
. = ALIGN(0x1000);
*(.text.Speaker_cone_angle_outer_get)
. = ALIGN(0x1000);
*(.text.Speaker_cone_angle_outer_set)
. = ALIGN(0x1000);
*(.text.Speaker_cone_angle_inner_get)
. = ALIGN(0x1000);
*(.text.Speaker_cone_angle_inner_set)
. = ALIGN(0x1000);
*(.text.Speaker_cone_volume_outer_get)
. = ALIGN(0x1000);
*(.text.Speaker_cone_volume_outer_set)
. = ALIGN(0x1000);
*(.text.Speaker_volume_get)
. = ALIGN(0x1000);
*(.text.Speaker_volume_set)
. = ALIGN(0x1000);
*(.text.Speaker_pitch_get)
. = ALIGN(0x1000);
*(.text.Speaker_pitch_set)
. = ALIGN(0x1000);
*(.text.Speaker_animation_data_get)
. = ALIGN(0x1000);
*(.text.TextLine_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TextLine_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TextLine_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TextLine_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TextLine_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.TextLine_rna_type_get)
. = ALIGN(0x1000);
*(.text.TextLine_body_get)
. = ALIGN(0x1000);
*(.text.TextLine_body_length)
. = ALIGN(0x1000);
*(.text.TextLine_body_set)
. = ALIGN(0x1000);
*(.text.Text_lines_begin)
. = ALIGN(0x1000);
*(.text.Text_lines_next)
. = ALIGN(0x1000);
*(.text.Text_lines_end)
. = ALIGN(0x1000);
*(.text.Text_lines_get)
. = ALIGN(0x1000);
*(.text.Text_lines_lookup_int)
. = ALIGN(0x1000);
*(.text.Text_write_call)
. = ALIGN(0x1000);
*(.text.txt_extended_ascii_as_utf8)
. = ALIGN(0x1000);
*(.text.txt_undo_add_charop)
. = ALIGN(0x1000);
*(.text.txt_insert_buf .text.txt_add_char_intern .text.txt_split_curline)
. = ALIGN(0x1000);
*(.text.Text_clear_call)
. = ALIGN(0x1000);
*(.text.txt_sel_to_buf)
. = ALIGN(0x1000);
*(.text.txt_undo_store_cursors .text.txt_undo_store_cur)
. = ALIGN(0x1000);
*(.text.txt_delete_sel .text.txt_undo_add_blockop)
. = ALIGN(0x1000);
*(.text.Text_select_end_character_get)
. = ALIGN(0x1000);
*(.text.Text_select_end_line_get)
. = ALIGN(0x1000);
*(.text.Text_current_line_index_get)
. = ALIGN(0x1000);
*(.text.Text_current_line_index_set)
. = ALIGN(0x1000);
*(.text.Text_current_character_get)
. = ALIGN(0x1000);
*(.text.Text_filepath_get)
. = ALIGN(0x1000);
*(.text.Text_filepath_length)
. = ALIGN(0x1000);
*(.text.Text_filepath_set)
. = ALIGN(0x1000);
*(.text.Text_is_dirty_get)
. = ALIGN(0x1000);
*(.text.Text_is_modified_get)
. = ALIGN(0x1000);
*(.text.BKE_text_file_modified_check)
. = ALIGN(0x1000);
*(.text.Text_is_in_memory_get)
. = ALIGN(0x1000);
*(.text.Text_use_module_get)
. = ALIGN(0x1000);
*(.text.Text_use_module_set)
. = ALIGN(0x1000);
*(.text.Text_use_tabs_as_spaces_get)
. = ALIGN(0x1000);
*(.text.Text_use_tabs_as_spaces_set)
. = ALIGN(0x1000);
*(.text.Text_current_line_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_save_call)
. = ALIGN(0x1000);
*(.text.create_display_buffer_processor)
. = ALIGN(0x1000);
*(.text.curvemapping_premultiply)
. = ALIGN(0x1000);
*(.text.IMB_processor_apply_threaded)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_display_processor_new)
. = ALIGN(0x1000);
*(.text.colormanage_display_buffer_process_ex)
. = ALIGN(0x1000);
*(.text.BLI_task_pool_free)
. = ALIGN(0x1000);
*(.text.BLI_task_pool_work_and_wait)
. = ALIGN(0x1000);
*(.text.BLI_dir_create_recursive)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_imbuf_for_write)
. = ALIGN(0x1000);
*(.text.BKE_imbuf_write)
. = ALIGN(0x1000);
*(.text.IMB_saveiff)
. = ALIGN(0x1000);
*(.text.RE_WriteEnvmapResult)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_clear_call)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_is_valid_get)
. = ALIGN(0x1000);
*(.text.rna_Texture_update)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_depth_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_depth_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_resolution_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_resolution_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_layers_ignore_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_layers_ignore_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_zoom_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_zoom_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_clip_end_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_clip_end_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_clip_start_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_clip_start_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_mapping_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_mapping_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_viewpoint_object_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_viewpoint_object_set)
. = ALIGN(0x1000);
*(.text.rna_Envmap_source_update)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_source_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_source_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_rna_type_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_rna_properties_next)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_rna_properties_end)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_rna_properties_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMap_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_TextureSlot_path)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_lookup_index)
. = ALIGN(0x1000);
*(.text.TextureSlot_name_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_name_length)
. = ALIGN(0x1000);
*(.text.TextureSlot_texture_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_texture_set)
. = ALIGN(0x1000);
*(.text.rna_Texture_refine)
. = ALIGN(0x1000);
*(.text.Texture_evaluate_call)
. = ALIGN(0x1000);
*(.text.BKE_free_envmapdata)
. = ALIGN(0x1000);
*(.text.IMB_moviecacheIter_new)
. = ALIGN(0x1000);
*(.text.do_colorband)
. = ALIGN(0x1000);
*(.text.key_curve_position_weights)
. = ALIGN(0x1000);
*(.text.accum_density)
. = ALIGN(0x1000);
*(.text.ntreeExecThreadNodes)
. = ALIGN(0x1000);
*(.text.imb_half_y_no_alloc)
. = ALIGN(0x1000);
*(.text.imb_half_x_no_alloc)
. = ALIGN(0x1000);
*(.text.ocean_texture .text.voxeldatatex .text.ntreeTexExecTree .text.envmaptex .text.imagewrap .text.boxsample .text.imagewraposa .text.pointdensitytex .text.do_2d_mapping .text.multitex .text.tex_normal_derivate .text.wood_int .text.cubemap .text.IMB_filterN .text.IMB_remakemipmap .text.IMB_makemipmap .text.imb_onehalf_no_alloc .text.IMB_onehalf .text.BLI_gTurbulence .text.BLI_voxel_sample_trilinear .text.BLI_voxel_sample_triquadratic .text.BLI_voxel_sample_tricubic)
. = ALIGN(0x1000);
*(.text.BKE_image_pool_acquire_ibuf)
. = ALIGN(0x1000);
*(.text.ibuf_get_color .text.boxsampleclip)
. = ALIGN(0x1000);
*(.text.dfs_range_query)
. = ALIGN(0x1000);
*(.text.multitex_nodes_intern)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_colorspace_to_scene_linear .text.IMB_float_from_rect .text.IMB_premultiply_rect_float)
. = ALIGN(0x1000);
*(.text.RNA_float_get_array)
. = ALIGN(0x1000);
*(.text.RNA_float_get)
. = ALIGN(0x1000);
*(.text.ntree_exec_begin)
. = ALIGN(0x1000);
*(.text.rna_Texture_voxeldata_update)
. = ALIGN(0x1000);
*(.text.VoxelDataTexture_image_user_get)
. = ALIGN(0x1000);
*(.text.rna_Texture_voxeldata_image_update)
. = ALIGN(0x1000);
*(.text.VoxelDataTexture_image_get)
. = ALIGN(0x1000);
*(.text.VoxelDataTexture_image_set)
. = ALIGN(0x1000);
*(.text.VoxelDataTexture_voxel_data_get)
. = ALIGN(0x1000);
*(.text.rna_VoxelData_path)
. = ALIGN(0x1000);
*(.text.VoxelData_domain_object_get)
. = ALIGN(0x1000);
*(.text.VoxelData_domain_object_set)
. = ALIGN(0x1000);
*(.text.VoxelData_still_frame_get)
. = ALIGN(0x1000);
*(.text.VoxelData_still_frame_set)
. = ALIGN(0x1000);
*(.text.VoxelData_use_still_frame_get)
. = ALIGN(0x1000);
*(.text.VoxelData_use_still_frame_set)
. = ALIGN(0x1000);
*(.text.VoxelData_resolution_get)
. = ALIGN(0x1000);
*(.text.VoxelData_resolution_set)
. = ALIGN(0x1000);
*(.text.VoxelData_filepath_get)
. = ALIGN(0x1000);
*(.text.VoxelData_filepath_length)
. = ALIGN(0x1000);
*(.text.VoxelData_filepath_set)
. = ALIGN(0x1000);
*(.text.VoxelData_file_format_get)
. = ALIGN(0x1000);
*(.text.VoxelData_file_format_set)
. = ALIGN(0x1000);
*(.text.VoxelData_intensity_get)
. = ALIGN(0x1000);
*(.text.VoxelData_intensity_set)
. = ALIGN(0x1000);
*(.text.VoxelData_extension_get)
. = ALIGN(0x1000);
*(.text.VoxelData_extension_set)
. = ALIGN(0x1000);
*(.text.VoxelData_smoke_data_type_get)
. = ALIGN(0x1000);
*(.text.VoxelData_smoke_data_type_set)
. = ALIGN(0x1000);
*(.text.VoxelData_interpolation_get)
. = ALIGN(0x1000);
*(.text.VoxelData_interpolation_set)
. = ALIGN(0x1000);
*(.text.VoxelData_rna_type_get)
. = ALIGN(0x1000);
*(.text.VoxelData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.VoxelData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.VoxelData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.VoxelData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.VoxelData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_OceanTex_path)
. = ALIGN(0x1000);
*(.text.OceanTexData_ocean_object_get)
. = ALIGN(0x1000);
*(.text.OceanTexData_ocean_object_set)
. = ALIGN(0x1000);
*(.text.OceanTexData_output_get)
. = ALIGN(0x1000);
*(.text.OceanTexData_output_set)
. = ALIGN(0x1000);
*(.text.OceanTexData_rna_type_get)
. = ALIGN(0x1000);
*(.text.OceanTexData_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.OceanTexData_rna_properties_next)
. = ALIGN(0x1000);
*(.text.OceanTexData_rna_properties_end)
. = ALIGN(0x1000);
*(.text.OceanTexData_rna_properties_get)
. = ALIGN(0x1000);
*(.text.OceanTexData_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.PointDensityTexture_point_density_get)
. = ALIGN(0x1000);
*(.text.rna_PointDensity_path)
. = ALIGN(0x1000);
*(.text.PointDensity_noise_basis_get)
. = ALIGN(0x1000);
*(.text.PointDensity_noise_basis_set)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_influence_get)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_influence_set)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_depth_get)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_depth_set)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_strength_get)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_strength_set)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_scale_get)
. = ALIGN(0x1000);
*(.text.PointDensity_turbulence_scale_set)
. = ALIGN(0x1000);
*(.text.PointDensity_use_turbulence_get)
. = ALIGN(0x1000);
*(.text.PointDensity_use_turbulence_set)
. = ALIGN(0x1000);
*(.text.PointDensity_use_falloff_curve_get)
. = ALIGN(0x1000);
*(.text.PointDensity_use_falloff_curve_set)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_curve_get)
. = ALIGN(0x1000);
*(.text.PointDensity_color_ramp_get)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_speed_scale_get)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_speed_scale_set)
. = ALIGN(0x1000);
*(.text.PointDensity_speed_scale_get)
. = ALIGN(0x1000);
*(.text.PointDensity_speed_scale_set)
. = ALIGN(0x1000);
*(.text.PointDensity_color_source_get)
. = ALIGN(0x1000);
*(.text.PointDensity_color_source_set)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_soft_get)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_soft_set)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_get)
. = ALIGN(0x1000);
*(.text.PointDensity_falloff_set)
. = ALIGN(0x1000);
*(.text.PointDensity_radius_get)
. = ALIGN(0x1000);
*(.text.PointDensity_radius_set)
. = ALIGN(0x1000);
*(.text.PointDensity_vertex_cache_space_get)
. = ALIGN(0x1000);
*(.text.PointDensity_vertex_cache_space_set)
. = ALIGN(0x1000);
*(.text.PointDensity_particle_cache_space_get)
. = ALIGN(0x1000);
*(.text.PointDensity_particle_cache_space_set)
. = ALIGN(0x1000);
*(.text.PointDensity_particle_system_get)
. = ALIGN(0x1000);
*(.text.PointDensity_particle_system_set)
. = ALIGN(0x1000);
*(.text.PointDensity_object_get)
. = ALIGN(0x1000);
*(.text.PointDensity_object_set)
. = ALIGN(0x1000);
*(.text.PointDensity_point_source_get)
. = ALIGN(0x1000);
*(.text.PointDensity_point_source_set)
. = ALIGN(0x1000);
*(.text.PointDensity_rna_type_get)
. = ALIGN(0x1000);
*(.text.PointDensity_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.PointDensity_rna_properties_next)
. = ALIGN(0x1000);
*(.text.PointDensity_rna_properties_end)
. = ALIGN(0x1000);
*(.text.PointDensity_rna_properties_get)
. = ALIGN(0x1000);
*(.text.PointDensity_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_nabla_get)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_nabla_set)
. = ALIGN(0x1000);
*(.text.rna_Texture_nodes_update)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_noise_distortion_get)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_noise_distortion_set)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_noise_basis_get)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_noise_basis_set)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_distortion_get)
. = ALIGN(0x1000);
*(.text.DistortedNoiseTexture_distortion_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_nabla_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_nabla_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_noise_intensity_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_noise_intensity_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_color_mode_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_color_mode_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_distance_metric_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_distance_metric_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_minkovsky_exponent_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_minkovsky_exponent_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_4_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_4_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_3_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_3_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_2_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_2_set)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_1_get)
. = ALIGN(0x1000);
*(.text.VoronoiTexture_weight_1_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_nabla_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_nabla_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_noise_basis_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_noise_basis_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_noise_intensity_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_noise_intensity_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_gain_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_gain_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_offset_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_offset_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_octaves_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_octaves_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_lacunarity_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_lacunarity_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_dimension_max_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_dimension_max_set)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_musgrave_type_get)
. = ALIGN(0x1000);
*(.text.MusgraveTexture_musgrave_type_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_environment_map_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_size_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_size_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_use_filter_size_min_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_use_filter_size_min_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_eccentricity_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_eccentricity_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_probes_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_probes_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_type_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_filter_type_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_use_mipmap_gauss_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_use_mipmap_gauss_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_use_mipmap_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_use_mipmap_set)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_image_user_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_image_get)
. = ALIGN(0x1000);
*(.text.EnvironmentMapTexture_image_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_derivative_map_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_derivative_map_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_normal_map_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_normal_map_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_image_user_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_image_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_image_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_max_y_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_max_y_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_max_x_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_max_x_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_min_y_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_min_y_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_min_x_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_crop_min_x_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_checker_distance_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_checker_distance_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_checker_even_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_checker_even_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_checker_odd_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_checker_odd_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mirror_y_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mirror_y_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mirror_x_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mirror_x_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_repeat_y_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_repeat_y_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_repeat_x_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_repeat_x_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_extension_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_extension_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_size_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_size_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_filter_size_min_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_filter_size_min_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_eccentricity_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_eccentricity_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_probes_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_probes_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_type_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_filter_type_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mipmap_gauss_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mipmap_gauss_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mipmap_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_mipmap_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_invert_alpha_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_invert_alpha_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_calculate_alpha_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_calculate_alpha_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_alpha_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_alpha_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_flip_axis_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_flip_axis_set)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_interpolation_get)
. = ALIGN(0x1000);
*(.text.ImageTexture_use_interpolation_set)
. = ALIGN(0x1000);
*(.text.StucciTexture_stucci_type_get)
. = ALIGN(0x1000);
*(.text.StucciTexture_stucci_type_set)
. = ALIGN(0x1000);
*(.text.StucciTexture_noise_type_get)
. = ALIGN(0x1000);
*(.text.StucciTexture_noise_type_set)
. = ALIGN(0x1000);
*(.text.StucciTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.StucciTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.StucciTexture_noise_basis_get)
. = ALIGN(0x1000);
*(.text.StucciTexture_noise_basis_set)
. = ALIGN(0x1000);
*(.text.StucciTexture_turbulence_get)
. = ALIGN(0x1000);
*(.text.StucciTexture_turbulence_set)
. = ALIGN(0x1000);
*(.text.BlendTexture_use_flip_axis_get)
. = ALIGN(0x1000);
*(.text.BlendTexture_use_flip_axis_set)
. = ALIGN(0x1000);
*(.text.BlendTexture_progression_get)
. = ALIGN(0x1000);
*(.text.BlendTexture_progression_set)
. = ALIGN(0x1000);
*(.text.MagicTexture_noise_depth_get)
. = ALIGN(0x1000);
*(.text.MagicTexture_noise_depth_set)
. = ALIGN(0x1000);
*(.text.MagicTexture_turbulence_get)
. = ALIGN(0x1000);
*(.text.MagicTexture_turbulence_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_nabla_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_nabla_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_basis_2_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_basis_2_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_basis_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_basis_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_marble_type_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_marble_type_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_type_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_type_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_depth_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_depth_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_turbulence_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_turbulence_set)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.MarbleTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_nabla_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_nabla_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_basis_2_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_basis_2_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_wood_type_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_wood_type_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_type_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_type_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_basis_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_basis_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_turbulence_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_turbulence_set)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.WoodTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.Texture_animation_data_get)
. = ALIGN(0x1000);
*(.text.Texture_node_tree_get)
. = ALIGN(0x1000);
*(.text.ED_node_texture_default .text.rna_Texture_use_nodes_update)
. = ALIGN(0x1000);
*(.text.node_get_deplist_recurs)
. = ALIGN(0x1000);
*(.text.ntreeUpdateTree)
. = ALIGN(0x1000);
*(.text.RNA_def_struct_duplicate_pointers .text.RNA_identifier_sanitize .text.ntree_interface_type_create)
. = ALIGN(0x1000);
*(.text.node_socket_init_default_value)
. = ALIGN(0x1000);
*(.text.make_socket)
. = ALIGN(0x1000);
*(.text.nodeSetActive)
. = ALIGN(0x1000);
*(.text.node_set_typeinfo)
. = ALIGN(0x1000);
*(.text.node_add_socket_from_template .text.nodeAddStaticSocket)
. = ALIGN(0x1000);
*(.text.nodeAddLink)
. = ALIGN(0x1000);
*(.text.nodeAddStaticNode)
. = ALIGN(0x1000);
*(.text.ntreeAddTree)
. = ALIGN(0x1000);
*(.text.Texture_use_nodes_get)
. = ALIGN(0x1000);
*(.text.Texture_use_nodes_set)
. = ALIGN(0x1000);
*(.text.Texture_use_preview_alpha_get)
. = ALIGN(0x1000);
*(.text.Texture_use_preview_alpha_set)
. = ALIGN(0x1000);
*(.text.Texture_factor_blue_get)
. = ALIGN(0x1000);
*(.text.Texture_factor_blue_set)
. = ALIGN(0x1000);
*(.text.Texture_factor_green_get)
. = ALIGN(0x1000);
*(.text.Texture_factor_green_set)
. = ALIGN(0x1000);
*(.text.Texture_factor_red_get)
. = ALIGN(0x1000);
*(.text.Texture_factor_red_set)
. = ALIGN(0x1000);
*(.text.Texture_saturation_get)
. = ALIGN(0x1000);
*(.text.Texture_saturation_set)
. = ALIGN(0x1000);
*(.text.Texture_contrast_get)
. = ALIGN(0x1000);
*(.text.Texture_contrast_set)
. = ALIGN(0x1000);
*(.text.Texture_intensity_get)
. = ALIGN(0x1000);
*(.text.Texture_intensity_set)
. = ALIGN(0x1000);
*(.text.Texture_color_ramp_get)
. = ALIGN(0x1000);
*(.text.Texture_use_color_ramp_get)
. = ALIGN(0x1000);
*(.text.Texture_use_color_ramp_set)
. = ALIGN(0x1000);
*(.text.Texture_use_clamp_get)
. = ALIGN(0x1000);
*(.text.Texture_use_clamp_set)
. = ALIGN(0x1000);
*(.text.Texture_type_get)
. = ALIGN(0x1000);
*(.text.Texture_type_set)
. = ALIGN(0x1000);
*(.text.curvemap_make_table)
. = ALIGN(0x1000);
*(.text.curvemapping_changed)
. = ALIGN(0x1000);
*(.text.tex_set_type .text.BKE_add_pointdensity)
. = ALIGN(0x1000);
*(.text.curvemap_reset)
. = ALIGN(0x1000);
*(.text.CloudsTexture_nabla_get)
. = ALIGN(0x1000);
*(.text.CloudsTexture_nabla_set)
. = ALIGN(0x1000);
*(.text.CloudsTexture_cloud_type_get)
. = ALIGN(0x1000);
*(.text.CloudsTexture_cloud_type_set)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_type_get)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_type_set)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_basis_get)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_basis_set)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_depth_get)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_depth_set)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_scale_get)
. = ALIGN(0x1000);
*(.text.CloudsTexture_noise_scale_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_TextureSlot_brush_update)
. = ALIGN(0x1000);
*(.text.rna_TextureSlot_update)
. = ALIGN(0x1000);
*(.text.TextureSlot_offset_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_offset_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_scale_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_scale_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_color_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_color_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_blend_type_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_blend_type_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_use_stencil_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_use_stencil_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_invert_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_invert_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_use_rgb_to_intensity_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_use_rgb_to_intensity_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_default_value_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_default_value_set)
. = ALIGN(0x1000);
*(.text.TextureSlot_output_node_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_output_node_set)
. = ALIGN(0x1000);
*(.text.rna_TextureSlot_output_node_itemf)
. = ALIGN(0x1000);
*(.text.TextureSlot_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TextureSlot_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TextureSlot_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TextureSlot_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TextureSlot_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.OceanTexture_ocean_get)
. = ALIGN(0x1000);
*(.text.rna_Texture_mapping_update)
. = ALIGN(0x1000);
*(.text.ED_node_tag_update_id)
. = ALIGN(0x1000);
*(.text.ED_node_tag_update_nodetree)
. = ALIGN(0x1000);
*(.text.ntreeHasTree)
. = ALIGN(0x1000);
*(.text.ntreeTexCheckCyclics)
. = ALIGN(0x1000);
*(.text.invert_m4_m4)
. = ALIGN(0x1000);
*(.text.init_tex_mapping)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_get)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_set)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_z_get)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_z_set)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_y_get)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_y_set)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_x_get)
. = ALIGN(0x1000);
*(.text.TexMapping_mapping_x_set)
. = ALIGN(0x1000);
*(.text.TexMapping_use_max_get)
. = ALIGN(0x1000);
*(.text.TexMapping_use_max_set)
. = ALIGN(0x1000);
*(.text.TexMapping_use_min_get)
. = ALIGN(0x1000);
*(.text.TexMapping_use_min_set)
. = ALIGN(0x1000);
*(.text.TexMapping_max_get)
. = ALIGN(0x1000);
*(.text.TexMapping_max_set)
. = ALIGN(0x1000);
*(.text.TexMapping_min_get)
. = ALIGN(0x1000);
*(.text.TexMapping_min_set)
. = ALIGN(0x1000);
*(.text.TexMapping_scale_get)
. = ALIGN(0x1000);
*(.text.TexMapping_scale_set)
. = ALIGN(0x1000);
*(.text.TexMapping_rotation_get)
. = ALIGN(0x1000);
*(.text.TexMapping_rotation_set)
. = ALIGN(0x1000);
*(.text.TexMapping_translation_get)
. = ALIGN(0x1000);
*(.text.TexMapping_translation_set)
. = ALIGN(0x1000);
*(.text.TexMapping_vector_type_get)
. = ALIGN(0x1000);
*(.text.TexMapping_vector_type_set)
. = ALIGN(0x1000);
*(.text.TexMapping_rna_type_get)
. = ALIGN(0x1000);
*(.text.TexMapping_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TexMapping_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TexMapping_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TexMapping_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TexMapping_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Color_mapping_update)
. = ALIGN(0x1000);
*(.text.ColorMapping_blend_factor_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_blend_factor_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_blend_color_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_blend_color_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_blend_type_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_blend_type_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_saturation_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_saturation_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_contrast_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_contrast_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_brightness_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_brightness_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_color_ramp_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_use_color_ramp_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_use_color_ramp_set)
. = ALIGN(0x1000);
*(.text.ColorMapping_rna_type_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ColorMapping_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ColorMapping_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ColorMapping_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ColorMapping_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.TimelineMarker_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.TimelineMarker_rna_properties_next)
. = ALIGN(0x1000);
*(.text.TimelineMarker_rna_properties_end)
. = ALIGN(0x1000);
*(.text.TimelineMarker_rna_properties_get)
. = ALIGN(0x1000);
*(.text.TimelineMarker_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.TimelineMarker_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_TimelineMarker_update)
. = ALIGN(0x1000);
*(.text.TimelineMarker_name_get)
. = ALIGN(0x1000);
*(.text.TimelineMarker_name_length)
. = ALIGN(0x1000);
*(.text.TimelineMarker_name_set)
. = ALIGN(0x1000);
*(.text.TimelineMarker_frame_get)
. = ALIGN(0x1000);
*(.text.TimelineMarker_frame_set)
. = ALIGN(0x1000);
*(.text.TimelineMarker_select_get)
. = ALIGN(0x1000);
*(.text.TimelineMarker_select_set)
. = ALIGN(0x1000);
*(.text.TimelineMarker_camera_get)
. = ALIGN(0x1000);
*(.text.TimelineMarker_camera_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_speed_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_speed_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_keyframe_selection_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_keyframe_selection_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_refine_intrinsics_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_refine_intrinsics_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_distance_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_distance_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_clean_frames_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_clean_frames_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_clean_error_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_clean_error_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_clean_action_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_clean_action_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_show_default_expanded_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_show_default_expanded_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_show_extra_expanded_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_show_extra_expanded_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_tripod_solver_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_tripod_solver_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_frames_limit_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_frames_limit_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_pattern_match_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_pattern_match_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_margin_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_margin_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_motion_model_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_motion_model_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_brute_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_brute_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_mask_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_mask_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_normalization_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_normalization_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_correlation_min_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_correlation_min_set)
. = ALIGN(0x1000);
*(.text.rna_tracking_defaultSettings_patternUpdate)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_pattern_size_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_pattern_size_set)
. = ALIGN(0x1000);
*(.text.rna_tracking_defaultSettings_searchUpdate)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_search_size_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_search_size_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_red_channel_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_red_channel_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_green_channel_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_green_channel_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_blue_channel_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_use_default_blue_channel_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_weight_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_default_weight_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_object_distance_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingSettings_object_distance_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_tracking_resetIntrinsics)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_distortion_model_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_distortion_model_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_sensor_width_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_sensor_width_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_focal_length_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_focal_length_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_focal_length_pixels_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_focal_length_pixels_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_units_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_units_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_principal_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_principal_set)
. = ALIGN(0x1000);
*(.text.rna_tracking_flushUpdate)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_k1_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_k1_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_k2_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_k2_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_k3_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_k3_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_division_k1_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_division_k1_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_division_k2_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_division_k2_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_pixel_aspect_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingCamera_pixel_aspect_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_co_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_co_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_frame_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_frame_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_mute_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_mute_set)
. = ALIGN(0x1000);
*(.text.rna_tracking_markerPattern_update)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_pattern_corners_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_pattern_corners_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_pattern_bound_box_get)
. = ALIGN(0x1000);
*(.text.rna_tracking_markerSearch_update)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_search_min_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_search_min_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_search_max_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_search_max_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_is_keyed_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarker_is_keyed_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_name_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_name_length)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_name_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_frames_limit_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_frames_limit_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_pattern_match_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_pattern_match_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_margin_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_margin_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_motion_model_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_motion_model_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_correlation_min_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_correlation_min_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_brute_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_brute_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_mask_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_mask_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_normalization_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_normalization_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_markers_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_markers_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_markers_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_markers_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_markers_length)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_markers_lookup_int)
. = ALIGN(0x1000);
*(.text.rna_trackingCamera_path)
. = ALIGN(0x1000);
*(.text.rna_trackingTrack_path)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_offset_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_offset_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_weight_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_weight_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_grease_pencil_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_grease_pencil_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_average_error_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_color_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_color_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_custom_color_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_custom_color_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_lock_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_lock_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_search_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_search_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_pattern_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_pattern_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_anchor_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_anchor_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_select_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_hide_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_hide_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_bundle_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_has_bundle_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_alpha_preview_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_alpha_preview_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_grayscale_preview_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_grayscale_preview_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_blue_channel_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_blue_channel_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_green_channel_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_green_channel_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_delete_frame_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_insert_frame_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_find_frame_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingMarkers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_mute_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_mute_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_corners_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_corners_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_frame_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_frame_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarker_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_trackingPlaneTrack_path)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_name_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_name_length)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_name_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_markers_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_markers_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_markers_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_markers_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_markers_length)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_markers_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_select_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_select_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_use_auto_keying_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_use_auto_keying_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_image_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_image_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_image_opacity_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_image_opacity_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTrack_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_delete_frame_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_insert_frame_call)
. = ALIGN(0x1000);
*(.text.BKE_tracking_plane_marker_insert)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_find_frame_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneMarkers_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_new_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_active_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_active_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTracks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_active_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_active_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingPlaneTracks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_new_call)
. = ALIGN(0x1000);
*(.text.BKE_tracking_marker_insert)
. = ALIGN(0x1000);
*(.text.rna_trackingObject_tracks_new)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_active_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_active_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectTracks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_active_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_active_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjectPlaneTracks_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_trackingStabilization_path)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_filter_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_filter_type_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_influence_rotation_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_influence_rotation_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_use_stabilize_rotation_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_use_stabilize_rotation_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_influence_scale_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_influence_scale_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_influence_location_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_influence_location_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_scale_max_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_scale_max_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_use_autoscale_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_use_autoscale_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_active_track_index_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_active_track_index_set)
. = ALIGN(0x1000);
*(.text.rna_tracking_stabTracks_active_index_range)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rotation_track_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rotation_track_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_tracks_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_tracks_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_tracks_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_tracks_get)
. = ALIGN(0x1000);
*(.text.rna_track_2d_stabilization)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_use_2d_stabilization_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_use_2d_stabilization_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingStabilization_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_matrix_from_frame_call)
. = ALIGN(0x1000);
*(.text.mat3_to_rot_size)
. = ALIGN(0x1000);
*(.text.blend_m4_m4m4)
. = ALIGN(0x1000);
*(.text.mat3_to_quat)
. = ALIGN(0x1000);
*(.text.BKE_tracking_camera_get_reconstructed_interpolate)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_find_frame_call)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstructedCameras_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_average_error_get)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_matrix_get)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_frame_get)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieReconstructedCamera_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_cameras_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_cameras_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_cameras_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_cameras_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_cameras_length)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_cameras_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_average_error_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_is_valid_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingReconstruction_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_name_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_name_length)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_name_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_is_camera_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_tracks_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_tracks_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_tracks_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_tracks_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_tracks_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_tracks_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_plane_tracks_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_plane_tracks_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_plane_tracks_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_plane_tracks_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_plane_tracks_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_plane_tracks_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_reconstruction_get)
. = ALIGN(0x1000);
*(.text.rna_trackingObject_flushUpdate)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_scale_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_scale_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_keyframe_a_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_keyframe_a_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_keyframe_b_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_keyframe_b_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObject_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_trackingDopesheet_tagUpdate)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_show_hidden_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_show_hidden_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_show_only_selected_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_show_only_selected_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_use_invert_sort_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_use_invert_sort_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_sort_method_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_sort_method_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingDopesheet_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_tracking_path)
. = ALIGN(0x1000);
*(.text.MovieTracking_dopesheet_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_active_object_index_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_active_object_index_set)
. = ALIGN(0x1000);
*(.text.rna_tracking_active_object_index_range)
. = ALIGN(0x1000);
*(.text.MovieTracking_objects_begin)
. = ALIGN(0x1000);
*(.text.MovieTracking_objects_next)
. = ALIGN(0x1000);
*(.text.MovieTracking_objects_end)
. = ALIGN(0x1000);
*(.text.MovieTracking_objects_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_objects_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTracking_objects_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTracking_reconstruction_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_stabilization_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_plane_tracks_begin)
. = ALIGN(0x1000);
*(.text.MovieTracking_plane_tracks_next)
. = ALIGN(0x1000);
*(.text.MovieTracking_plane_tracks_end)
. = ALIGN(0x1000);
*(.text.MovieTracking_plane_tracks_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_plane_tracks_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTracking_plane_tracks_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTracking_tracks_begin)
. = ALIGN(0x1000);
*(.text.MovieTracking_tracks_next)
. = ALIGN(0x1000);
*(.text.MovieTracking_tracks_end)
. = ALIGN(0x1000);
*(.text.MovieTracking_tracks_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_tracks_lookup_int)
. = ALIGN(0x1000);
*(.text.MovieTracking_tracks_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTracking_camera_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_settings_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTracking_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTracking_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTracking_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTracking_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_remove_call)
. = ALIGN(0x1000);
*(.text.BKE_tracking_object_delete)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_new_call)
. = ALIGN(0x1000);
*(.text.BKE_tracking_object_add)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_active_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_active_set)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_rna_type_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_rna_properties_next)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_rna_properties_end)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_rna_properties_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingObjects_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_red_channel_get)
. = ALIGN(0x1000);
*(.text.MovieTrackingTrack_use_red_channel_set)
. = ALIGN(0x1000);
*(.text.UILayout_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UILayout_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UILayout_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UILayout_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UILayout_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UILayout_rna_type_get)
. = ALIGN(0x1000);
*(.text.UILayout_active_get)
. = ALIGN(0x1000);
*(.text.UILayout_active_set)
. = ALIGN(0x1000);
*(.text.UILayout_operator_context_get)
. = ALIGN(0x1000);
*(.text.UILayout_operator_context_set)
. = ALIGN(0x1000);
*(.text.UILayout_enabled_get)
. = ALIGN(0x1000);
*(.text.UILayout_enabled_set)
. = ALIGN(0x1000);
*(.text.UILayout_alert_get)
. = ALIGN(0x1000);
*(.text.UILayout_alert_set)
. = ALIGN(0x1000);
*(.text.UILayout_alignment_get)
. = ALIGN(0x1000);
*(.text.UILayout_alignment_set)
. = ALIGN(0x1000);
*(.text.UILayout_scale_x_get)
. = ALIGN(0x1000);
*(.text.UILayout_scale_x_set)
. = ALIGN(0x1000);
*(.text.UILayout_scale_y_get)
. = ALIGN(0x1000);
*(.text.UILayout_scale_y_set)
. = ALIGN(0x1000);
*(.text.Panel_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Panel_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Panel_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Panel_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Panel_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Panel_rna_type_get)
. = ALIGN(0x1000);
*(.text.Panel_layout_get)
. = ALIGN(0x1000);
*(.text.UILayout_template_node_socket_call)
. = ALIGN(0x1000);
*(.text.uiTemplateNodeSocket)
. = ALIGN(0x1000);
*(.text.UILayout_template_colormanaged_view_settings_call)
. = ALIGN(0x1000);
*(.text.UILayout_template_colorspace_settings_call)
. = ALIGN(0x1000);
*(.text.UILayout_introspect_call)
. = ALIGN(0x1000);
*(.text.WM_operator_pystring_ex)
. = ALIGN(0x1000);
*(.text.RNA_pointer_as_string_id .text.RNA_property_as_string .text.RNA_pointer_as_string)
. = ALIGN(0x1000);
*(.text.RNA_pointer_as_string_keywords_ex)
. = ALIGN(0x1000);
*(.text.uiLayoutIntrospect .text.ui_intro_items)
. = ALIGN(0x1000);
*(.text.UILayout_template_component_menu_call)
. = ALIGN(0x1000);
*(.text.uiTemplateComponentMenu)
. = ALIGN(0x1000);
*(.text.UILayout_template_keymap_item_properties_call)
. = ALIGN(0x1000);
*(.text.template_keymap_item_properties)
. = ALIGN(0x1000);
*(.text.UILayout_template_texture_user_call)
. = ALIGN(0x1000);
*(.text.uiTemplateTextureUser)
. = ALIGN(0x1000);
*(.text.UILayout_template_node_view_call)
. = ALIGN(0x1000);
*(.text.ui_node_draw_input .text.ui_node_draw_node)
. = ALIGN(0x1000);
*(.text.UILayout_template_node_link_call)
. = ALIGN(0x1000);
*(.text.uiTemplateNodeLink)
. = ALIGN(0x1000);
*(.text.UILayout_template_reports_banner_call)
. = ALIGN(0x1000);
*(.text.uiTemplateReportsBanner)
. = ALIGN(0x1000);
*(.text.UILayout_template_edit_mode_selection_call)
. = ALIGN(0x1000);
*(.text.UILayout_template_header_3D_call)
. = ALIGN(0x1000);
*(.text.uiTemplateEditModeSelection)
. = ALIGN(0x1000);
*(.text.uiTemplateHeader3D)
. = ALIGN(0x1000);
*(.text.UILayout_template_operator_search_call)
. = ALIGN(0x1000);
*(.text.uiTemplateOperatorSearch)
. = ALIGN(0x1000);
*(.text.UILayout_template_running_jobs_call)
. = ALIGN(0x1000);
*(.text.uiTemplateRunningJobs)
. = ALIGN(0x1000);
*(.text.UILayout_template_list_call)
. = ALIGN(0x1000);
*(.text.ui_layout_list_set_labels_active .text.uiLayoutListBox .text.uiTemplateList .text.prepare_list)
. = ALIGN(0x1000);
*(.text.UILayout_template_movieclip_information_call)
. = ALIGN(0x1000);
*(.text.uiTemplateMovieclipInformation)
. = ALIGN(0x1000);
*(.text.UILayout_template_marker_call)
. = ALIGN(0x1000);
*(.text.IMB_scaleImBuf .text.scalefast_Z_ImBuf)
. = ALIGN(0x1000);
*(.text.put_imbuf_cache)
. = ALIGN(0x1000);
*(.text.BKE_tracking_disable_channels)
. = ALIGN(0x1000);
*(.text.movieclip_get_postprocessed_ibuf)
. = ALIGN(0x1000);
*(.text.BKE_movieclip_get_size)
. = ALIGN(0x1000);
*(.text.BKE_tracking_distortion_exec)
. = ALIGN(0x1000);
*(.text.get_proxy_fname)
. = ALIGN(0x1000);
*(.text.get_sequence_fname)
. = ALIGN(0x1000);
*(.text.movieclip_open_anim_file)
. = ALIGN(0x1000);
*(.text.uiTemplateMarker)
. = ALIGN(0x1000);
*(.text.UILayout_template_track_call)
. = ALIGN(0x1000);
*(.text.uiTemplateTrack)
. = ALIGN(0x1000);
*(.text.UILayout_template_movieclip_call)
. = ALIGN(0x1000);
*(.text.uiTemplateMovieClip)
. = ALIGN(0x1000);
*(.text.UILayout_template_image_settings_call)
. = ALIGN(0x1000);
*(.text.uiTemplateColormanagedViewSettings)
. = ALIGN(0x1000);
*(.text.uiTemplateImageSettings)
. = ALIGN(0x1000);
*(.text.UILayout_template_image_call)
. = ALIGN(0x1000);
*(.text.uiTemplateColorspaceSettings)
. = ALIGN(0x1000);
*(.text._ZN16MEM_CacheLimiterI28MEM_CacheLimiterHandleCClassE14enforce_limitsEv .text._ZN22MEM_CacheLimiterHandleI28MEM_CacheLimiterHandleCClassE19destroy_if_possibleEv)
. = ALIGN(0x1000);
*(.text.do_moviecache_put)
. = ALIGN(0x1000);
*(.text.IMB_moviecache_create)
. = ALIGN(0x1000);
*(.text.colormanage_imbuf_make_linear)
. = ALIGN(0x1000);
*(.text.IMB_premultiply_alpha)
. = ALIGN(0x1000);
*(.text.IMB_unpremultiply_alpha .text.IMB_ibImageFromMemory .text.imb_handle_alpha)
. = ALIGN(0x1000);
*(.text.IMB_de_interlace .text.IMB_loadifffile .text.IMB_loadiffname)
. = ALIGN(0x1000);
*(.text.IMB_ispic_type)
. = ALIGN(0x1000);
*(.text.openanim)
. = ALIGN(0x1000);
*(.text.IMB_open_anim .text.IMB_anim_absolute .text.IMB_anim_open_proxy)
. = ALIGN(0x1000);
*(.text.IMB_filtery)
. = ALIGN(0x1000);
*(.text.IMB_indexer_open .text.IMB_anim_open_index)
. = ALIGN(0x1000);
*(.text.BLI_stringdec)
. = ALIGN(0x1000);
*(.text.blf_font_buffer)
. = ALIGN(0x1000);
*(.text.IMB_buffer_float_from_float)
. = ALIGN(0x1000);
*(.text.add_ibuf_size .text.BKE_image_buf_fill_color .text.BKE_image_buf_fill_checker .text.BKE_image_buf_fill_checker_color .text.checker_board_color_tint)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_display_to_scene_linear_v3)
. = ALIGN(0x1000);
*(.text.BKE_image_user_frame_calc)
. = ALIGN(0x1000);
*(.text.image_get_cached_ibuf)
. = ALIGN(0x1000);
*(.text.de_interlace_ng)
. = ALIGN(0x1000);
*(.text.de_interlace_st)
. = ALIGN(0x1000);
*(.text.readBitmapFontVersion0 .text.detectBitmapFont .text.image_acquire_ibuf .text.image_load_sequence_file .text.image_load_image_file)
. = ALIGN(0x1000);
*(.text.RNA_boolean_get)
. = ALIGN(0x1000);
*(.text.uiTemplateImage .text.image_info .text.uiblock_layer_pass_arrow_buttons)
. = ALIGN(0x1000);
*(.text.UILayout_template_image_layers_call)
. = ALIGN(0x1000);
*(.text.uiblock_layer_pass_buttons)
. = ALIGN(0x1000);
*(.text.uiTemplateImageLayers)
. = ALIGN(0x1000);
*(.text.UILayout_template_palette_call)
. = ALIGN(0x1000);
*(.text.uiTemplatePalette)
. = ALIGN(0x1000);
*(.text.UILayout_template_color_picker_call)
. = ALIGN(0x1000);
*(.text.uiTemplateColorPicker)
. = ALIGN(0x1000);
*(.text.UILayout_template_layers_call)
. = ALIGN(0x1000);
*(.text.uiTemplateLayers)
. = ALIGN(0x1000);
*(.text.UILayout_template_vectorscope_call)
. = ALIGN(0x1000);
*(.text.uiTemplateVectorscope)
. = ALIGN(0x1000);
*(.text.UILayout_template_waveform_call)
. = ALIGN(0x1000);
*(.text.uiTemplateWaveform)
. = ALIGN(0x1000);
*(.text.UILayout_template_histogram_call)
. = ALIGN(0x1000);
*(.text.uiTemplateHistogram)
. = ALIGN(0x1000);
*(.text.UILayout_template_icon_view_call)
. = ALIGN(0x1000);
*(.text.uiTemplateIconView)
. = ALIGN(0x1000);
*(.text.UILayout_template_color_ramp_call)
. = ALIGN(0x1000);
*(.text.uiTemplateColorRamp)
. = ALIGN(0x1000);
*(.text.UILayout_template_curve_mapping_call)
. = ALIGN(0x1000);
*(.text.uiTemplateCurveMapping)
. = ALIGN(0x1000);
*(.text.UILayout_template_preview_call)
. = ALIGN(0x1000);
*(.text.uiTemplatePreview)
. = ALIGN(0x1000);
*(.text.UILayout_template_constraint_call)
. = ALIGN(0x1000);
*(.text.uiTemplateConstraint)
. = ALIGN(0x1000);
*(.text.UILayout_template_modifier_call)
. = ALIGN(0x1000);
*(.text.uiItemFullO)
. = ALIGN(0x1000);
*(.text.uiItemEnumO)
. = ALIGN(0x1000);
*(.text.uiItemEnumO_ptr)
. = ALIGN(0x1000);
*(.text.uiItemStringO)
. = ALIGN(0x1000);
*(.text.uiTemplateModifier)
. = ALIGN(0x1000);
*(.text.UILayout_template_path_builder_call)
. = ALIGN(0x1000);
*(.text.uiItemR)
. = ALIGN(0x1000);
*(.text.uiTemplatePathBuilder)
. = ALIGN(0x1000);
*(.text.UILayout_template_any_ID_call)
. = ALIGN(0x1000);
*(.text.uiTemplateAnyID)
. = ALIGN(0x1000);
*(.text.UILayout_template_ID_preview_call)
. = ALIGN(0x1000);
*(.text.UILayout_template_ID_call)
. = ALIGN(0x1000);
*(.text.uiTemplateTextureShow .text.ui_template_id .text.template_id_browse_tip)
. = ALIGN(0x1000);
*(.text.RNA_type_to_ID_code)
. = ALIGN(0x1000);
*(.text.id_clear_lib_data)
. = ALIGN(0x1000);
*(.text.BKE_object_make_local .text.extern_local_object .text.BKE_particlesettings_make_local .text.expand_local_particlesettings .text.BKE_speaker_make_local .text.BKE_texture_make_local .text.BKE_world_make_local .text.BKE_armature_make_local .text.BKE_brush_make_local .text.BKE_camera_make_local .text.BKE_curve_make_local .text.BKE_image_make_local .text.BKE_lamp_make_local .text.BKE_lattice_make_local .text.id_make_local .text.BKE_material_make_local .text.extern_local_material .text.BKE_mball_make_local .text.BKE_mesh_make_local .text.expand_local_mesh .text.ntreeMakeLocal)
. = ALIGN(0x1000);
*(.text.BKE_action_make_local)
. = ALIGN(0x1000);
*(.text.BKE_mask_layer_copy)
. = ALIGN(0x1000);
*(.text.BKE_particlesettings_copy .text.boid_copy_settings)
. = ALIGN(0x1000);
*(.text.BKE_material_copy)
. = ALIGN(0x1000);
*(.text.BKE_lamp_copy)
. = ALIGN(0x1000);
*(.text.copy_bonechildren)
. = ALIGN(0x1000);
*(.text.BKE_lattice_copy .text.BKE_mball_copy)
. = ALIGN(0x1000);
*(.text.BKE_texture_copy)
. = ALIGN(0x1000);
*(.text.BKE_color_managed_colorspace_settings_copy .text.BKE_image_copy)
. = ALIGN(0x1000);
*(.text.BKE_brush_copy)
. = ALIGN(0x1000);
*(.text.BKE_world_copy)
. = ALIGN(0x1000);
*(.text.BKE_text_copy .text.id_copy .text.BKE_linestyle_copy .text.BKE_linestyle_color_modifier_copy .text.BKE_linestyle_alpha_modifier_copy .text.BKE_linestyle_thickness_modifier_copy .text.BKE_linestyle_geometry_modifier_copy)
. = ALIGN(0x1000);
*(.text.RNA_int_set)
. = ALIGN(0x1000);
*(.text.multiresModifier_set_levels_from_disps)
. = ALIGN(0x1000);
*(.text.BKE_bpath_traverse_id)
. = ALIGN(0x1000);
*(.text.ntreeCopyTree_internal)
. = ALIGN(0x1000);
*(.text.BKE_libblock_copy_nolib)
. = ALIGN(0x1000);
*(.text.nodeCopyNode)
. = ALIGN(0x1000);
*(.text.alloc_libblock_notest)
. = ALIGN(0x1000);
*(.text.BKE_action_copy .text.BKE_copy_animdata .text.BKE_libblock_copy .text.copy_nlastrip)
. = ALIGN(0x1000);
*(.text.BKE_libblock_copy_ex)
. = ALIGN(0x1000);
*(.text.copy_softbody .text.BKE_object_copy_ex .text.BKE_ptcache_copy_list)
. = ALIGN(0x1000);
*(.text.BKE_curve_copy)
. = ALIGN(0x1000);
*(.text.BKE_mesh_copy_ex)
. = ALIGN(0x1000);
*(.text.BKE_bproperty_copy_list)
. = ALIGN(0x1000);
*(.text.copy_object_pose)
. = ALIGN(0x1000);
*(.text.BKE_pose_copy_data)
. = ALIGN(0x1000);
*(.text.BKE_object_copy_particlesystems)
. = ALIGN(0x1000);
*(.text.test_object_materials)
. = ALIGN(0x1000);
*(.text.BKE_animdata_fix_paths_remove .text.nlastrips_path_remove_fix)
. = ALIGN(0x1000);
*(.text.node_free_node_ex)
. = ALIGN(0x1000);
*(.text.GPU_free_pbvh_buffers)
. = ALIGN(0x1000);
*(.text.BKE_pbvh_free)
. = ALIGN(0x1000);
*(.text.BKE_editmesh_update_linked_customdata .text.BKE_mesh_update_customdata_pointers)
. = ALIGN(0x1000);
*(.text.modifier_new)
. = ALIGN(0x1000);
*(.text.fcurve_copy_driver)
. = ALIGN(0x1000);
*(.text.copy_fmodifiers)
. = ALIGN(0x1000);
*(.text.BKE_pose_update_constraint_flags)
. = ALIGN(0x1000);
*(.text.BKE_pose_channel_verify)
. = ALIGN(0x1000);
*(.text.BKE_pose_channel_free)
. = ALIGN(0x1000);
*(.text.BKE_object_copy_proxy_drivers .text.BKE_pose_rebuild .text.rebuild_pose_bone)
. = ALIGN(0x1000);
*(.text.DAG_pose_sort)
. = ALIGN(0x1000);
*(.text.IDP_SyncGroupValues)
. = ALIGN(0x1000);
*(.text.BKE_constraints_copy)
. = ALIGN(0x1000);
*(.text.BKE_constraint_free_data)
. = ALIGN(0x1000);
*(.text.BKE_linestyle_free)
. = ALIGN(0x1000);
*(.text.seq_count)
. = ALIGN(0x1000);
*(.text.seq_build_array)
. = ALIGN(0x1000);
*(.text.ntreeFreeTree_ex)
. = ALIGN(0x1000);
*(.text.BKE_animdata_main_cb)
. = ALIGN(0x1000);
*(.text.fcurve_free_driver)
. = ALIGN(0x1000);
*(.text.free_fmodifiers)
. = ALIGN(0x1000);
*(.text.BKE_free_animdata)
. = ALIGN(0x1000);
*(.text.free_nlastrip)
. = ALIGN(0x1000);
*(.text.BKE_image_signal)
. = ALIGN(0x1000);
*(.text.customData_add_layer__internal)
. = ALIGN(0x1000);
*(.text.BKE_displist_free)
. = ALIGN(0x1000);
*(.text.BKE_object_free_derived_caches)
. = ALIGN(0x1000);
*(.text.CustomData_merge)
. = ALIGN(0x1000);
*(.text.CustomData_bmesh_update_active_layers)
. = ALIGN(0x1000);
*(.text.CustomData_from_bmeshpoly)
. = ALIGN(0x1000);
*(.text.BKE_nurb_duplicate)
. = ALIGN(0x1000);
*(.text.BKE_nurbList_duplicate)
. = ALIGN(0x1000);
*(.text.CustomData_number_of_layers)
. = ALIGN(0x1000);
*(.text.dag_check_cycle .text.dag_node_recurs_level .text.dag_node_print_dependency_recurs)
. = ALIGN(0x1000);
*(.text.ntreeShaderEndExecTree)
. = ALIGN(0x1000);
*(.text.ntreeTexEndExecTree_internal)
. = ALIGN(0x1000);
*(.text.curvemapping_copy_data)
. = ALIGN(0x1000);
*(.text.newPackedFile)
. = ALIGN(0x1000);
*(.text.render_result_free)
. = ALIGN(0x1000);
*(.text.BLI_utf8_invalid_byte)
. = ALIGN(0x1000);
*(.text.new_id)
. = ALIGN(0x1000);
*(.text.id_sort_by_name)
. = ALIGN(0x1000);
*(.text.which_libbase)
. = ALIGN(0x1000);
*(.text.BLI_uniquename_cb)
. = ALIGN(0x1000);
*(.text.IMB_dupImBuf)
. = ALIGN(0x1000);
*(.text.BLI_cleanup_path .text.BLI_path_abs)
. = ALIGN(0x1000);
*(.text.IMB_moviecache_get)
. = ALIGN(0x1000);
*(.text.BLI_mempool_create)
. = ALIGN(0x1000);
*(.text.IMB_free_indices)
. = ALIGN(0x1000);
*(.text.RNA_string_set)
. = ALIGN(0x1000);
*(.text.RNA_property_string_set .text.IDP_NewString)
. = ALIGN(0x1000);
*(.text.IDP_ResizeArray)
. = ALIGN(0x1000);
*(.text.UILayout_template_header_call)
. = ALIGN(0x1000);
*(.text.uiDefButR)
. = ALIGN(0x1000);
*(.text.uiTemplateHeader)
. = ALIGN(0x1000);
*(.text.UILayout_context_pointer_set_call)
. = ALIGN(0x1000);
*(.text.CTX_store_add)
. = ALIGN(0x1000);
*(.text.UILayout_separator_call)
. = ALIGN(0x1000);
*(.text.UILayout_menu_call)
. = ALIGN(0x1000);
*(.text.uiItemM)
. = ALIGN(0x1000);
*(.text.UILayout_label_call)
. = ALIGN(0x1000);
*(.text.UILayout_operator_menu_enum_call)
. = ALIGN(0x1000);
*(.text.uiItemMenuEnumO)
. = ALIGN(0x1000);
*(.text.wm_keymap_item_find_props)
. = ALIGN(0x1000);
*(.text.IDP_EqualsProperties_ex)
. = ALIGN(0x1000);
*(.text.wm_keymap_item_find_handlers)
. = ALIGN(0x1000);
*(.text.UILayout_operator_enum_call)
. = ALIGN(0x1000);
*(.text.IDP_CopyProperty)
. = ALIGN(0x1000);
*(.text.WM_operator_properties_sanitize)
. = ALIGN(0x1000);
*(.text.uiItemsFullEnumO)
. = ALIGN(0x1000);
*(.text.UILayout_operator_call)
. = ALIGN(0x1000);
*(.text.uiItemFullO_ptr)
. = ALIGN(0x1000);
*(.text.UILayout_prop_search_call)
. = ALIGN(0x1000);
*(.text.uiItemPointerR)
. = ALIGN(0x1000);
*(.text.UILayout_prop_enum_call)
. = ALIGN(0x1000);
*(.text.uiItemEnumR_string)
. = ALIGN(0x1000);
*(.text.UILayout_prop_menu_enum_call)
. = ALIGN(0x1000);
*(.text.ui_item_menu)
. = ALIGN(0x1000);
*(.text.RNA_property_description)
. = ALIGN(0x1000);
*(.text.uiItemMenuEnumR)
. = ALIGN(0x1000);
*(.text.UILayout_props_enum_call)
. = ALIGN(0x1000);
*(.text.uiItemL_)
. = ALIGN(0x1000);
*(.text.uiItemEnumR .text.uiItemsEnumR)
. = ALIGN(0x1000);
*(.text.UILayout_prop_call)
. = ALIGN(0x1000);
*(.text.uiDefAutoButR)
. = ALIGN(0x1000);
*(.text.ui_item_rna_size .text.ui_item_with_label)
. = ALIGN(0x1000);
*(.text.ui_but_search_test)
. = ALIGN(0x1000);
*(.text.RNA_property_ui_description)
. = ALIGN(0x1000);
*(.text.ui_def_but_rna)
. = ALIGN(0x1000);
*(.text.WM_keymap_item_to_string)
. = ALIGN(0x1000);
*(.text.WM_operatortype_find)
. = ALIGN(0x1000);
*(.text.RNA_property_enum_items_gettexted_all)
. = ALIGN(0x1000);
*(.text.uiItemFullR .text.ui_but_add_search)
. = ALIGN(0x1000);
*(.text.FT_Get_Char_Index)
. = ALIGN(0x1000);
*(.text.FT_Get_Kerning)
. = ALIGN(0x1000);
*(.text.BLI_str_utf8_as_unicode_step)
. = ALIGN(0x1000);
*(.text.blf_font_boundbox)
. = ALIGN(0x1000);
*(.text.UI_GetStringWidth)
. = ALIGN(0x1000);
*(.text.UILayout_enum_item_icon_call)
. = ALIGN(0x1000);
*(.text.rna_ui_get_enum_icon)
. = ALIGN(0x1000);
*(.text.UILayout_enum_item_description_call)
. = ALIGN(0x1000);
*(.text.rna_ui_get_enum_description)
. = ALIGN(0x1000);
*(.text.UILayout_enum_item_name_call)
. = ALIGN(0x1000);
*(.text._RNA_warning)
. = ALIGN(0x1000);
*(.text.rna_ui_get_enum_name)
. = ALIGN(0x1000);
*(.text.UILayout_icon_call)
. = ALIGN(0x1000);
*(.text.ED_preview_icon_job .text.ui_id_icon_get)
. = ALIGN(0x1000);
*(.text.WM_jobs_get)
. = ALIGN(0x1000);
*(.text.WM_jobs_start)
. = ALIGN(0x1000);
*(.text.BKE_previewimg_get)
. = ALIGN(0x1000);
*(.text.BKE_icon_getid)
. = ALIGN(0x1000);
*(.text.UI_rnaptr_icon_get)
. = ALIGN(0x1000);
*(.text.RNA_pointer_get)
. = ALIGN(0x1000);
*(.text.UILayout_menu_pie_call)
. = ALIGN(0x1000);
*(.text.uiLayoutRadial)
. = ALIGN(0x1000);
*(.text.UILayout_split_call)
. = ALIGN(0x1000);
*(.text.UILayout_box_call)
. = ALIGN(0x1000);
*(.text.ctx_data_get)
. = ALIGN(0x1000);
*(.text.BLI_sprintfN)
. = ALIGN(0x1000);
*(.text.RNA_property_float_get_array)
. = ALIGN(0x1000);
*(.text.ID_code_to_RNA_type)
. = ALIGN(0x1000);
*(.text.RNA_property_int_get_array)
. = ALIGN(0x1000);
*(.text.RNA_property_boolean_get_array)
. = ALIGN(0x1000);
*(.text.RNA_path_from_ID_to_struct .text.rna_idp_path .text.rna_idp_path_create)
. = ALIGN(0x1000);
*(.text.BLI_dynstr_appendf)
. = ALIGN(0x1000);
*(.text.ui_get_but_val)
. = ALIGN(0x1000);
*(.text.ui_def_but)
. = ALIGN(0x1000);
*(.text.RNA_property_int_ui_range .text.RNA_property_float_ui_range)
. = ALIGN(0x1000);
*(.text.ui_check_but .text.ui_set_but_val .text.RNA_property_int_get_array_range .text.RNA_property_float_get_array_range)
. = ALIGN(0x1000);
*(.text.ui_is_but_push_ex)
. = ALIGN(0x1000);
*(.text.ui_get_but_string_ex)
. = ALIGN(0x1000);
*(.text.bUnit_AsString .text.unit_as_string)
. = ALIGN(0x1000);
*(.text.uiFloatPrecisionCalc)
. = ALIGN(0x1000);
*(.text.node_get_active_id_recursive)
. = ALIGN(0x1000);
*(.text.BKE_animdata_driver_path_hack .text.rna_get_fcurve_context_ui)
. = ALIGN(0x1000);
*(.text.RNA_path_from_ID_to_property)
. = ALIGN(0x1000);
*(.text.id_type_can_have_animdata)
. = ALIGN(0x1000);
*(.text.give_current_material)
. = ALIGN(0x1000);
*(.text.RNA_property_int_range)
. = ALIGN(0x1000);
*(.text.RNA_property_int_set)
. = ALIGN(0x1000);
*(.text.RNA_property_enum_set)
. = ALIGN(0x1000);
*(.text.RNA_property_boolean_set)
. = ALIGN(0x1000);
*(.text.RNA_property_boolean_set_array)
. = ALIGN(0x1000);
*(.text.RNA_property_int_set_index .text.RNA_property_float_set_index)
. = ALIGN(0x1000);
*(.text.RNA_property_int_set_array)
. = ALIGN(0x1000);
*(.text.RNA_property_boolean_set_index)
. = ALIGN(0x1000);
*(.text.RNA_property_float_set_array)
. = ALIGN(0x1000);
*(.text.RNA_property_float_range)
. = ALIGN(0x1000);
*(.text.RNA_property_float_set)
. = ALIGN(0x1000);
*(.text.BLI_snprintf)
. = ALIGN(0x1000);
*(.text.uiLayoutBox)
. = ALIGN(0x1000);
*(.text.UILayout_column_flow_call)
. = ALIGN(0x1000);
*(.text.UILayout_column_call)
. = ALIGN(0x1000);
*(.text.UILayout_row_call)
. = ALIGN(0x1000);
*(.text.rna_Panel_refine)
. = ALIGN(0x1000);
*(.text.rna_Panel_register)
. = ALIGN(0x1000);
*(.text.rna_Panel_unregister)
. = ALIGN(0x1000);
*(.text.panel_poll)
. = ALIGN(0x1000);
*(.text.panel_draw_header)
. = ALIGN(0x1000);
*(.text.panel_draw)
. = ALIGN(0x1000);
*(.text.Panel_use_pin_get)
. = ALIGN(0x1000);
*(.text.Panel_use_pin_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_options_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_options_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_context_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_context_length)
. = ALIGN(0x1000);
*(.text.Panel_bl_context_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_region_type_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_region_type_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_space_type_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_space_type_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_category_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_category_length)
. = ALIGN(0x1000);
*(.text.Panel_bl_category_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_translation_context_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_translation_context_length)
. = ALIGN(0x1000);
*(.text.Panel_bl_translation_context_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_label_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_label_length)
. = ALIGN(0x1000);
*(.text.Panel_bl_label_set)
. = ALIGN(0x1000);
*(.text.Panel_bl_idname_get)
. = ALIGN(0x1000);
*(.text.Panel_bl_idname_length)
. = ALIGN(0x1000);
*(.text.Panel_bl_idname_set)
. = ALIGN(0x1000);
*(.text.rna_UIList_refine)
. = ALIGN(0x1000);
*(.text.rna_UIList_register)
. = ALIGN(0x1000);
*(.text.rna_UIList_unregister)
. = ALIGN(0x1000);
*(.text.rna_UIList_idprops)
. = ALIGN(0x1000);
*(.text.uilist_draw_item)
. = ALIGN(0x1000);
*(.text.uilist_draw_filter)
. = ALIGN(0x1000);
*(.text.RNA_parameter_get .text.RNA_parameter_dynamic_length_get .text.uilist_filter_items)
. = ALIGN(0x1000);
*(.text.IDP_New)
. = ALIGN(0x1000);
*(.text.RNA_property_string_get_alloc)
. = ALIGN(0x1000);
*(.text.rna_idproperty_check)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_begin)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_lookup_string)
. = ALIGN(0x1000);
*(.text.IDP_FreeProperty)
. = ALIGN(0x1000);
*(.text.rna_path_token)
. = ALIGN(0x1000);
*(.text.rna_path_parse .text.RNA_property_array_item_index)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_lookup_int)
. = ALIGN(0x1000);
*(.text.RNA_property_pointer_add)
. = ALIGN(0x1000);
*(.text.RNA_property_pointer_get)
. = ALIGN(0x1000);
*(.text.RNA_property_collection_length)
. = ALIGN(0x1000);
*(.text.RNA_collection_length)
. = ALIGN(0x1000);
*(.text.UIList_bitflag_filter_item_get)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_sort_reverse_get)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_sort_reverse_set)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_sort_alpha_get)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_sort_alpha_set)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_invert_get)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_invert_set)
. = ALIGN(0x1000);
*(.text.UIList_filter_name_get)
. = ALIGN(0x1000);
*(.text.UIList_filter_name_length)
. = ALIGN(0x1000);
*(.text.UIList_filter_name_set)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_show_get)
. = ALIGN(0x1000);
*(.text.UIList_use_filter_show_set)
. = ALIGN(0x1000);
*(.text.UIList_layout_type_get)
. = ALIGN(0x1000);
*(.text.UIList_bl_idname_get)
. = ALIGN(0x1000);
*(.text.UIList_bl_idname_length)
. = ALIGN(0x1000);
*(.text.UIList_bl_idname_set)
. = ALIGN(0x1000);
*(.text.UIList_rna_type_get)
. = ALIGN(0x1000);
*(.text.UIList_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UIList_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UIList_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UIList_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UIList_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Header_refine)
. = ALIGN(0x1000);
*(.text.rna_Header_register)
. = ALIGN(0x1000);
*(.text.BKE_report)
. = ALIGN(0x1000);
*(.text.rna_Header_unregister)
. = ALIGN(0x1000);
*(.text.header_draw)
. = ALIGN(0x1000);
*(.text.Header_bl_space_type_get)
. = ALIGN(0x1000);
*(.text.Header_bl_space_type_set)
. = ALIGN(0x1000);
*(.text.Header_bl_idname_get)
. = ALIGN(0x1000);
*(.text.Header_bl_idname_length)
. = ALIGN(0x1000);
*(.text.Header_bl_idname_set)
. = ALIGN(0x1000);
*(.text.Header_layout_get)
. = ALIGN(0x1000);
*(.text.Header_rna_type_get)
. = ALIGN(0x1000);
*(.text.Header_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Header_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Header_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Header_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Header_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_Menu_refine)
. = ALIGN(0x1000);
*(.text.rna_Menu_register)
. = ALIGN(0x1000);
*(.text.RNA_def_struct_ptr)
. = ALIGN(0x1000);
*(.text.RNA_def_property_enum_sdna)
. = ALIGN(0x1000);
*(.text.RNA_def_property_boolean_sdna)
. = ALIGN(0x1000);
*(.text.rna_def_property_sdna .text.rna_find_sdna_member)
. = ALIGN(0x1000);
*(.text.RNA_def_property .text.RNA_def_property_int_sdna .text.RNA_def_property_float_sdna .text.RNA_def_property_pointer_sdna .text.RNA_def_property_collection_sdna)
. = ALIGN(0x1000);
*(.text.rna_validate_identifier)
. = ALIGN(0x1000);
*(.text.BKE_reportf)
. = ALIGN(0x1000);
*(.text.BLI_mempool_alloc)
. = ALIGN(0x1000);
*(.text.BLI_ghash_insert)
. = ALIGN(0x1000);
*(.text.BLI_dynstr_vappendf)
. = ALIGN(0x1000);
*(.text.rna_Menu_unregister)
. = ALIGN(0x1000);
*(.text.RNA_struct_free)
. = ALIGN(0x1000);
*(.text.RNA_def_property_free_pointers)
. = ALIGN(0x1000);
*(.text.menu_poll)
. = ALIGN(0x1000);
*(.text.RNA_parameter_get_lookup)
. = ALIGN(0x1000);
*(.text.menu_draw)
. = ALIGN(0x1000);
*(.text.RNA_parameter_set_lookup)
. = ALIGN(0x1000);
*(.text.RNA_parameter_list_create)
. = ALIGN(0x1000);
*(.text.RNA_parameter_list_free)
. = ALIGN(0x1000);
*(.text.Menu_bl_description_get)
. = ALIGN(0x1000);
*(.text.Menu_bl_description_length)
. = ALIGN(0x1000);
*(.text.Menu_bl_description_set)
. = ALIGN(0x1000);
*(.text.Menu_bl_translation_context_get)
. = ALIGN(0x1000);
*(.text.Menu_bl_translation_context_length)
. = ALIGN(0x1000);
*(.text.Menu_bl_translation_context_set)
. = ALIGN(0x1000);
*(.text.Menu_bl_label_get)
. = ALIGN(0x1000);
*(.text.Menu_bl_label_length)
. = ALIGN(0x1000);
*(.text.Menu_bl_label_set)
. = ALIGN(0x1000);
*(.text.Menu_bl_idname_get)
. = ALIGN(0x1000);
*(.text.Menu_bl_idname_length)
. = ALIGN(0x1000);
*(.text.Menu_bl_idname_set)
. = ALIGN(0x1000);
*(.text.Menu_layout_get)
. = ALIGN(0x1000);
*(.text.Menu_rna_type_get)
. = ALIGN(0x1000);
*(.text.Menu_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Menu_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Menu_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Menu_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Menu_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Panel_text_get)
. = ALIGN(0x1000);
*(.text.Panel_text_length)
. = ALIGN(0x1000);
*(.text.Panel_text_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_rna_type_get)
. = ALIGN(0x1000);
*(.text.rna_userdef_update)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_points_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_points_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_font_kerning_style_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_font_kerning_style_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_offset_x_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_offset_x_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_offset_y_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_offset_y_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_alpha_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_alpha_set)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_value_get)
. = ALIGN(0x1000);
*(.text.ThemeFontStyle_shadow_value_set)
. = ALIGN(0x1000);
*(.text.ThemeStyle_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeStyle_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeStyle_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeStyle_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeStyle_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeStyle_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeStyle_panel_title_get)
. = ALIGN(0x1000);
*(.text.ThemeStyle_widget_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_shadedown_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_shadedown_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_shadetop_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_shadetop_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_show_shaded_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_show_shaded_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_text_sel_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_text_sel_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_text_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_text_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_item_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_item_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_inner_sel_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_inner_sel_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_inner_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_inner_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_outline_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_outline_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetColors_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_blend_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_blend_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_driven_sel_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_driven_sel_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_driven_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_driven_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_key_sel_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_key_sel_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_key_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_key_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_anim_sel_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_anim_sel_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_anim_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_inner_anim_set)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeWidgetStateColors_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_show_back_get)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_show_back_set)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_show_header_get)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_show_header_set)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_back_get)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_back_set)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_header_get)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_header_set)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemePanelColors_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_high_gradient_get)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_high_gradient_set)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_gradient_get)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_gradient_set)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_show_grad_get)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_show_grad_set)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeGradientColors_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_axis_z_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_axis_z_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_axis_y_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_axis_y_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_axis_x_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_axis_x_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_emboss_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_emboss_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_icon_alpha_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_icon_alpha_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_icon_file_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_icon_file_length)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_icon_file_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_menu_shadow_width_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_menu_shadow_width_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_menu_shadow_fac_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_menu_shadow_fac_set)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_state_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_list_item_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_progress_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_scroll_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_menu_item_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_tooltip_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_pie_menu_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_menu_back_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_pulldown_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_menu_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_box_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_numslider_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_num_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_toggle_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_option_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_text_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_radio_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_tool_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_wcol_regular_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeUserInterface_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_outline_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_outline_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_back_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_back_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_inactive_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_inactive_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_active_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_tab_active_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_title_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_title_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_button_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_panelcolors_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_header_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_header_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_header_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_header_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_header_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_header_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_title_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_title_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_back_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_back_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGeneric_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_outline_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_outline_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_back_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_back_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_inactive_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_inactive_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_active_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_tab_active_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_title_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_title_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_button_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_panelcolors_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_header_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_header_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_header_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_header_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_header_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_header_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_title_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_title_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_gradients_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceGradient_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_text_hi_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_text_hi_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_text_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_text_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_title_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_title_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_list_set)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeSpaceListGeneric_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeView3D_paint_curve_pivot_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_paint_curve_pivot_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_paint_curve_handle_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_paint_curve_handle_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_skin_root_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_skin_root_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_camera_path_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_camera_path_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bundle_solid_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bundle_solid_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_outline_width_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_outline_width_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bone_pose_active_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bone_pose_active_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bone_pose_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bone_pose_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bone_solid_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_bone_solid_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_split_normal_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_split_normal_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_normal_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_normal_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_normal_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_normal_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_editmesh_active_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_editmesh_active_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_face_area_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_face_area_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_face_angle_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_face_angle_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_edge_angle_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_edge_angle_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_edge_len_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_extra_edge_len_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_lastsel_point_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_lastsel_point_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_align_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_align_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_free_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_free_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_align_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_align_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_vect_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_sel_vect_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_vect_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_vect_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_free_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_handle_free_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_act_spline_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_act_spline_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_sel_vline_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_sel_vline_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_sel_uline_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_sel_uline_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_vline_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_vline_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_uline_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_nurb_uline_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_freestyle_face_mark_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_freestyle_face_mark_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_facedot_size_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_facedot_size_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_face_dot_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_face_dot_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_face_select_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_face_select_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_face_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_face_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_freestyle_edge_mark_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_freestyle_edge_mark_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_facesel_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_facesel_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_crease_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_crease_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_sharp_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_sharp_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_seam_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_seam_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_select_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_edge_select_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_unreferenced_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_unreferenced_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_size_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_size_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_select_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_select_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_vertex_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_transform_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_transform_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_grouped_active_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_grouped_active_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_grouped_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_grouped_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_active_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_active_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_object_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_empty_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_empty_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_view_overlay_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_view_overlay_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_camera_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_camera_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_speaker_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_speaker_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_lamp_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_lamp_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_wire_edit_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_wire_edit_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_wire_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_wire_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_grid_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_grid_set)
. = ALIGN(0x1000);
*(.text.ThemeView3D_space_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeView3D_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeView3D_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeView3D_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeView3D_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vertex_size_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vertex_size_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vertex_select_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vertex_select_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vertex_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vertex_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_lastsel_point_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_lastsel_point_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_auto_clamped_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_auto_clamped_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_auto_clamped_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_auto_clamped_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_align_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_align_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_free_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_free_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_align_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_align_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_vect_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_sel_vect_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vect_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_vect_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_free_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_handle_free_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_unreferenced_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_unreferenced_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_size_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_size_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_select_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_select_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_vertex_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_active_channels_group_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_active_channels_group_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_channel_group_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_channel_group_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_dopesheet_subchannel_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_dopesheet_subchannel_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_dopesheet_channel_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_dopesheet_channel_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_channels_region_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_channels_region_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_window_sliders_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_window_sliders_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_grid_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_grid_set)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_space_list_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeGraphEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_active_file_text_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_active_file_text_set)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_active_file_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_active_file_set)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_scroll_handle_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_scroll_handle_set)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_scrollbar_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_scrollbar_set)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_selected_file_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_selected_file_set)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_space_list_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_space_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeFileBrowser_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_keyframe_border_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_keyframe_border_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_keyframe_border_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_keyframe_border_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_tweak_duplicate_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_tweak_duplicate_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_tweak_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_tweak_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_sound_strips_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_sound_strips_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_sound_strips_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_sound_strips_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_meta_strips_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_meta_strips_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_meta_strips_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_meta_strips_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_transition_strips_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_transition_strips_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_transition_strips_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_transition_strips_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_strips_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_strips_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_strips_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_strips_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_active_action_unset_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_active_action_unset_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_active_action_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_active_action_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_view_sliders_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_view_sliders_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_grid_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_grid_set)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_space_list_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeNLAEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_summary_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_summary_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_border_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_border_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_border_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_border_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_jitter_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_jitter_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_jitter_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_jitter_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_breakdown_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_breakdown_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_breakdown_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_breakdown_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_extreme_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_extreme_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_extreme_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_extreme_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_keyframe_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_long_key_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_long_key_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_long_key_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_long_key_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_active_channels_group_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_active_channels_group_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_channel_group_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_channel_group_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_channels_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_channels_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_channels_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_channels_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_dopesheet_subchannel_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_dopesheet_subchannel_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_dopesheet_channel_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_dopesheet_channel_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_view_sliders_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_view_sliders_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_value_sliders_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_value_sliders_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_grid_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_grid_set)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_space_list_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_space_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeDopeSheet_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_paint_curve_pivot_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_paint_curve_pivot_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_paint_curve_handle_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_paint_curve_handle_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_vertex_size_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_vertex_size_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_vertex_select_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_vertex_select_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_vertex_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_vertex_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_auto_clamped_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_auto_clamped_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_auto_clamped_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_auto_clamped_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_align_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_align_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_free_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_sel_free_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_align_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_align_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_free_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_handle_free_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_uv_others_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_uv_others_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_uv_shadow_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_uv_shadow_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_active_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_active_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_unstitchable_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_unstitchable_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_stitchable_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_stitchable_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_vert_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_vert_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_edge_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_edge_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_face_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_preview_stitch_face_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_scope_back_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_scope_back_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_edge_select_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_edge_select_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_wire_edit_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_wire_edit_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_editmesh_active_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_editmesh_active_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_freestyle_face_mark_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_freestyle_face_mark_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_facedot_size_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_facedot_size_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_face_dot_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_face_dot_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_face_select_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_face_select_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_face_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_face_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_unreferenced_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_unreferenced_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_size_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_size_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_select_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_select_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_vertex_set)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeImageEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_preview_back_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_preview_back_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_draw_action_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_draw_action_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_keyframe_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_keyframe_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_meta_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_meta_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_transition_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_transition_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_effect_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_effect_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_audio_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_audio_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_scene_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_scene_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_image_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_image_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_movieclip_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_movieclip_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_movie_strip_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_movie_strip_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_window_sliders_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_window_sliders_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_grid_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_grid_set)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeSequenceEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeProperties_space_get)
. = ALIGN(0x1000);
*(.text.ThemeProperties_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeProperties_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeProperties_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeProperties_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeProperties_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeProperties_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_numbers_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_numbers_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_string_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_string_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_comment_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_comment_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_reserved_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_reserved_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_preprocessor_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_preprocessor_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_special_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_special_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_symbols_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_symbols_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_builtin_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_syntax_builtin_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_cursor_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_cursor_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_selected_text_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_selected_text_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_line_numbers_background_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_line_numbers_background_set)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeTextEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_grid_get)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_grid_set)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_space_get)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeTimeline_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_layout_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_layout_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_pattern_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_pattern_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_script_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_script_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_shader_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_shader_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_texture_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_texture_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_vector_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_vector_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_filter_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_filter_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_output_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_output_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_input_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_input_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_noodle_curving_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_noodle_curving_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_distor_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_distor_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_matte_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_matte_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_frame_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_frame_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_group_socket_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_group_socket_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_group_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_group_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_color_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_color_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_converter_node_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_converter_node_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_node_backdrop_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_node_backdrop_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_selected_text_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_selected_text_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_wire_select_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_wire_select_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_wire_inner_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_wire_inner_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_wire_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_wire_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_node_active_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_node_active_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_node_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_node_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_space_list_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeNodeEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_selected_highlight_get)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_selected_highlight_set)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_match_get)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_match_set)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_space_get)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeOutliner_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_debug_text_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_debug_text_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_debug_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_debug_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_info_text_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_info_text_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_info_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_info_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_warning_text_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_warning_text_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_warning_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_warning_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_error_text_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_error_text_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_error_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_error_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_selected_text_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_selected_text_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_info_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeInfo_space_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeInfo_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeInfo_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeInfo_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeInfo_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_space_get)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeUserPreferences_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeConsole_select_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_select_set)
. = ALIGN(0x1000);
*(.text.ThemeConsole_cursor_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_cursor_set)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_error_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_error_set)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_info_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_info_set)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_input_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_input_set)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_output_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_line_output_set)
. = ALIGN(0x1000);
*(.text.ThemeConsole_space_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeConsole_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeConsole_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeConsole_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeConsole_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeLogicEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_vertex_size_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_vertex_size_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_vertex_select_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_vertex_select_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_vertex_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_vertex_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_auto_clamped_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_auto_clamped_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_auto_clamped_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_auto_clamped_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_align_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_align_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_free_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_sel_free_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_align_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_align_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_auto_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_auto_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_free_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_handle_free_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_strips_selected_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_strips_selected_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_strips_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_strips_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_frame_current_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_frame_current_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_path_after_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_path_after_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_path_before_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_path_before_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_locked_marker_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_locked_marker_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_disabled_marker_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_disabled_marker_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_selected_marker_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_selected_marker_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_active_marker_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_active_marker_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_marker_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_marker_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_marker_outline_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_marker_outline_set)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_space_list_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_space_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeClipEditor_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_show_colored_constraints_get)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_show_colored_constraints_set)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_active_get)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_active_set)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_select_get)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_select_set)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_normal_get)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_normal_set)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_rna_type_get)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_rna_properties_next)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_rna_properties_end)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_rna_properties_get)
. = ALIGN(0x1000);
*(.text.ThemeBoneColorSet_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.Theme_name_get)
. = ALIGN(0x1000);
*(.text.Theme_name_length)
. = ALIGN(0x1000);
*(.text.Theme_name_set)
. = ALIGN(0x1000);
*(.text.Theme_rna_type_get)
. = ALIGN(0x1000);
*(.text.Theme_theme_area_get)
. = ALIGN(0x1000);
*(.text.Theme_theme_area_set)
. = ALIGN(0x1000);
*(.text.Theme_user_interface_get)
. = ALIGN(0x1000);
*(.text.Theme_view_3d_get)
. = ALIGN(0x1000);
*(.text.Theme_graph_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_file_browser_get)
. = ALIGN(0x1000);
*(.text.Theme_nla_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_dopesheet_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_image_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_sequence_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_properties_get)
. = ALIGN(0x1000);
*(.text.Theme_text_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_timeline_get)
. = ALIGN(0x1000);
*(.text.Theme_node_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_logic_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_outliner_get)
. = ALIGN(0x1000);
*(.text.Theme_info_get)
. = ALIGN(0x1000);
*(.text.Theme_user_preferences_get)
. = ALIGN(0x1000);
*(.text.Theme_console_get)
. = ALIGN(0x1000);
*(.text.Theme_bone_color_sets_begin)
. = ALIGN(0x1000);
*(.text.Theme_bone_color_sets_next)
. = ALIGN(0x1000);
*(.text.Theme_bone_color_sets_end)
. = ALIGN(0x1000);
*(.text.Theme_bone_color_sets_get)
. = ALIGN(0x1000);
*(.text.Theme_bone_color_sets_length)
. = ALIGN(0x1000);
*(.text.Theme_bone_color_sets_lookup_int)
. = ALIGN(0x1000);
*(.text.Theme_clip_editor_get)
. = ALIGN(0x1000);
*(.text.Theme_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.Theme_rna_properties_next)
. = ALIGN(0x1000);
*(.text.Theme_rna_properties_end)
. = ALIGN(0x1000);
*(.text.Theme_rna_properties_get)
. = ALIGN(0x1000);
*(.text.Theme_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.rna_UserDef_viewport_lights_update)
. = ALIGN(0x1000);
*(.text.UserSolidLight_specular_color_get)
. = ALIGN(0x1000);
*(.text.UserSolidLight_specular_color_set)
. = ALIGN(0x1000);
*(.text.UserSolidLight_diffuse_color_get)
. = ALIGN(0x1000);
*(.text.UserSolidLight_diffuse_color_set)
. = ALIGN(0x1000);
*(.text.UserSolidLight_direction_get)
. = ALIGN(0x1000);
*(.text.UserSolidLight_direction_set)
. = ALIGN(0x1000);
*(.text.UserSolidLight_use_get)
. = ALIGN(0x1000);
*(.text.UserSolidLight_use_set)
. = ALIGN(0x1000);
*(.text.UserSolidLight_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserSolidLight_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UserSolidLight_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UserSolidLight_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserSolidLight_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserSolidLight_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.WalkNavigation_use_mouse_reverse_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_use_mouse_reverse_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_use_gravity_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_use_gravity_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_teleport_time_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_teleport_time_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_jump_height_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_jump_height_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_view_height_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_view_height_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_walk_speed_factor_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_walk_speed_factor_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_walk_speed_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_walk_speed_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_mouse_speed_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_mouse_speed_set)
. = ALIGN(0x1000);
*(.text.WalkNavigation_rna_type_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.WalkNavigation_rna_properties_next)
. = ALIGN(0x1000);
*(.text.WalkNavigation_rna_properties_end)
. = ALIGN(0x1000);
*(.text.WalkNavigation_rna_properties_get)
. = ALIGN(0x1000);
*(.text.WalkNavigation_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferences_system_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_is_occlusion_query_supported_call)
. = ALIGN(0x1000);
*(.text.rna_userdef_dpi_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_region_overlap_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_region_overlap_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_multi_sample_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_multi_sample_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_select_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_select_method_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_text_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_text_antialiasing_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_text_antialiasing_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_screencast_wait_time_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_screencast_wait_time_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_screencast_fps_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_screencast_fps_set)
. = ALIGN(0x1000);
*(.text.rna_UserDef_audio_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_channels_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_channels_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_sample_format_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_sample_format_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_sample_rate_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_sample_rate_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_device_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_device_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_audio_device_itemf)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_mixing_buffer_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_audio_mixing_buffer_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_window_draw_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_window_draw_method_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_texture_collection_rate_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_texture_collection_rate_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_texture_time_out_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_texture_time_out_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_gl_texture_limit_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_gl_texture_limit_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_gl_texture_limit_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_anisotropic_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_anisotropic_filter_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_anisotropic_filter_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_vertex_buffer_objects_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_vertex_buffer_objects_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_image_draw_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_image_draw_method_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_gl_gpu_mipmaps)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_gpu_mipmap_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_gpu_mipmap_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_gl_use_16bit_textures)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_16bit_textures_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_16bit_textures_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_mipmap_update)
. = ALIGN(0x1000);
*(.text.GPU_texture_free)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_mipmaps_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_mipmaps_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_gl_clip_alpha_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_gl_clip_alpha_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_frame_server_port_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_frame_server_port_set)
. = ALIGN(0x1000);
*(.text.rna_Userdef_memcache_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_memory_cache_limit_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_memory_cache_limit_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_prefetch_frames_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_prefetch_frames_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_tabs_as_spaces_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_tabs_as_spaces_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_script_autoexec_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_scripts_auto_execute_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_scripts_auto_execute_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_preview_images_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_preview_images_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_color_picker_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_color_picker_type_set)
. = ALIGN(0x1000);
*(.text.rna_UserDef_weight_color_update)
. = ALIGN(0x1000);
*(.text.DAG_id_tag_update_ex)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_weight_color_range_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_weight_color_range_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_weight_color_range_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_solid_lights_begin)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_solid_lights_next)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_solid_lights_end)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_solid_lights_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_solid_lights_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_solid_lights_lookup_int)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_textured_fonts_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_textured_fonts_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_translate_new_dataname_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_translate_new_dataname_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_translate_interface_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_translate_interface_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_translate_tooltips_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_translate_tooltips_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_language_update)
. = ALIGN(0x1000);
*(.text.blf_font_size .text.FT_Set_Char_Size)
. = ALIGN(0x1000);
*(.text.blf_font_free .text.blf_glyph_cache_free .text.FT_Done_Face)
. = ALIGN(0x1000);
*(.text.blf_search)
. = ALIGN(0x1000);
*(.text.blf_font_new .text.FT_New_Face)
. = ALIGN(0x1000);
*(.text.blf_dir_search)
. = ALIGN(0x1000);
*(.text.uiStyleInit .text.BLF_load .text.BLF_load_mem .text.BLF_load_mem_unique .text.blf_font_new_from_mem .text.FT_New_Memory_Face)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_language_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_language_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_author_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_author_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_author_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_scrollback_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_scrollback_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_font_path_ui_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_font_path_ui_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_font_path_ui_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_virtual_pixel_update)
. = ALIGN(0x1000);
*(.text.BLF_cache_clear .text.blf_glyph_cache_clear)
. = ALIGN(0x1000);
*(.text.glDeleteTextures)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_virtual_pixel_mode_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_virtual_pixel_mode_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_dpi_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_dpi_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_international_fonts_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_use_international_fonts_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_rna_properties_next)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesSystem_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_save_preview_images_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_save_preview_images_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_recent_files_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_recent_files_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_keep_session_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_keep_session_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_autosave_update)
. = ALIGN(0x1000);
*(.text.WM_autosave_init)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_auto_save_time_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_auto_save_time_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_auto_save_temporary_files_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_auto_save_temporary_files_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_save_version_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_save_version_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_animation_player_preset_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_animation_player_preset_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_animation_player_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_animation_player_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_animation_player_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_image_editor_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_image_editor_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_image_editor_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_render_cache_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_render_cache_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_render_cache_directory_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_temp_update)
. = ALIGN(0x1000);
*(.text.recursive_operation)
. = ALIGN(0x1000);
*(.text.BLI_temp_dir_init)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_temporary_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_temporary_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_temporary_directory_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_sound_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_sound_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_sound_directory_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_i18n_branches_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_i18n_branches_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_i18n_branches_directory_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_script_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_script_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_script_directory_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_render_output_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_render_output_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_render_output_directory_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_texture_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_texture_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_texture_directory_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_font_directory_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_font_directory_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_font_directory_set)
. = ALIGN(0x1000);
*(.text.rna_userdef_load_ui_update)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_load_ui_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_load_ui_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_file_compression_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_file_compression_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_relative_paths_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_relative_paths_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_show_thumbnails_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_show_thumbnails_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_hide_system_bookmarks_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_hide_system_bookmarks_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_hide_recent_locations_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_hide_recent_locations_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_filter_files_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_use_filter_files_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_show_hidden_files_datablocks_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_show_hidden_files_datablocks_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_rna_type_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_rna_properties_begin)
. = ALIGN(0x1000);
*(.text.rna_builtin_properties_begin)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_rna_properties_next)
. = ALIGN(0x1000);
*(.text.rna_Struct_properties_next)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_rna_properties_end)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_rna_properties_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesFilePaths_rna_properties_lookup_string)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_active_keyconfig_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_active_keyconfig_length)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_active_keyconfig_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_trackpad_natural_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_trackpad_natural_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_wheel_scroll_lines_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_wheel_scroll_lines_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_invert_zoom_wheel_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_invert_zoom_wheel_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_mouse_mmb_paste_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_mouse_mmb_paste_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_emulate_numpad_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_emulate_numpad_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_mouse_emulate_3_button_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_use_mouse_emulate_3_button_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_mouse_double_click_time_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_mouse_double_click_time_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_fly_helicopter_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_fly_helicopter_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_lock_horizon_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_lock_horizon_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_panz_invert_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_panz_invert_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_pany_invert_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_pany_invert_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_panx_invert_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_panx_invert_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_rotz_invert_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_rotz_invert_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_roty_invert_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_roty_invert_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_rotx_invert_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_rotx_invert_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_view_rotate_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_view_rotate_method_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_view_navigate_method_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_view_navigate_method_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_show_guide_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_show_guide_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_zoom_invert_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_zoom_invert_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_pan_yz_swap_axis_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_pan_yz_swap_axis_set)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_orbit_sensitivity_get)
. = ALIGN(0x1000);
*(.text.UserPreferencesInput_ndof_orbit_sensitivity_set)
. = ALIGN(0x1000);
*(.text.verg_bheadsort)
. = ALIGN(0x1000);
*(.text.fd_read_from_file)
. = ALIGN(0x1000);
*(.text.ww_open_none)
. = ALIGN(0x1000);
*(.text.ww_open_zlib)
. = ALIGN(0x1000);
*(.text.gz_open)
. = ALIGN(0x1000);
*(.text.ww_close_none)
. = ALIGN(0x1000);
*(.text.ww_close_zlib)
. = ALIGN(0x1000);
*(.text.gzclose_w)
. = ALIGN(0x1000);
*(.text.gzclose_r)
. = ALIGN(0x1000);
*(.text.ww_write_none)
. = ALIGN(0x1000);
*(.text.ww_write_zlib)
. = ALIGN(0x1000);
*(.text.gz_comp)
. = ALIGN(0x1000);
*(.text.gz_init)
. = ALIGN(0x1000);
*(.text.gz_error)
. = ALIGN(0x1000);
*(.text.gzwrite)
. = ALIGN(0x1000);
*(.text.imb_is_a_bmp)
. = ALIGN(0x1000);
*(.text.imb_bmp_decode)
. = ALIGN(0x1000);
*(.text.imb_savebmp)
. = ALIGN(0x1000);
*(.text.imb_global_tile_hash)
. = ALIGN(0x1000);
*(.text.imb_global_tile_cmp)
. = ALIGN(0x1000);
*(.text.imb_thread_tile_hash)
. = ALIGN(0x1000);
*(.text.imb_thread_tile_cmp)
. = ALIGN(0x1000);
*(.text.processor_transform_init_handle)
. = ALIGN(0x1000);
*(.text.do_processor_transform_thread)
. = ALIGN(0x1000);
*(.text.display_buffer_init_handle)
. = ALIGN(0x1000);
*(.text.do_display_buffer_apply_thread)
. = ALIGN(0x1000);
*(.text.colormanage_hashhash)
. = ALIGN(0x1000);
*(.text.colormanage_hashcmp)
. = ALIGN(0x1000);
*(.text.imb_ftype_default)
. = ALIGN(0x1000);
*(.text.imb_ftype_iris)
. = ALIGN(0x1000);
*(.text.bicubic_interpolation)
. = ALIGN(0x1000);
*(.text.bicubic_interpolation.60744)
. = ALIGN(0x1000);
*(.text.bilinear_interpolation)
. = ALIGN(0x1000);
*(.text.nearest_interpolation)
. = ALIGN(0x1000);
*(.text.processor_apply_func)
. = ALIGN(0x1000);
*(.text.imb_is_a_iris)
. = ALIGN(0x1000);
*(.text.imb_loadiris .text.expandrow .text.expandrow2)
. = ALIGN(0x1000);
*(.text.IMB_buffer_byte_from_float)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_transform)
. = ALIGN(0x1000);
*(.text.curvemapping_free_data)
. = ALIGN(0x1000);
*(.text.IMB_colormanagement_processor_apply)
. = ALIGN(0x1000);
*(.text.curvemap_evaluateF)
. = ALIGN(0x1000);
*(.text.IMB_allocImBuf)
. = ALIGN(0x1000);
*(.text.IMB_rect_from_float)
. = ALIGN(0x1000);
*(.text.imb_saveiris .text.compressrow)
. = ALIGN(0x1000);
*(.text.imb_is_a_jpeg)
. = ALIGN(0x1000);
*(.text.colorspace_set_default_role .text.imb_load_jpeg)
. = ALIGN(0x1000);
*(.text.imb_savejpeg)
. = ALIGN(0x1000);
*(.text.jpeg_std_error)
. = ALIGN(0x1000);
*(.text.IMB_rectblend)
. = ALIGN(0x1000);
*(.text.IMB_moviecache_destructor)
. = ALIGN(0x1000);
*(.text.get_item_size)
. = ALIGN(0x1000);
*(.text.IMB_get_size_in_memory)
. = ALIGN(0x1000);
*(.text.get_item_priority)
. = ALIGN(0x1000);
*(.text.get_item_destroyable)
. = ALIGN(0x1000);
*(.text.moviecache_hashhash.59666)
. = ALIGN(0x1000);
*(.text.moviecache_hashcmp.59667)
. = ALIGN(0x1000);
*(.text.moviecache_keyfree)
. = ALIGN(0x1000);
*(.text.moviecache_valfree)
. = ALIGN(0x1000);
*(.text.compare_int)
. = ALIGN(0x1000);
*(.text.imb_is_a_png)
. = ALIGN(0x1000);
*(.text.imb_savepng .text.png_destroy_write_struct .text.png_write_destroy)
. = ALIGN(0x1000);
*(.text.deflate .text._tr_align)
. = ALIGN(0x1000);
*(.text.deflateEnd)
. = ALIGN(0x1000);
*(.text._tr_init)
. = ALIGN(0x1000);
*(.text.deflateInit2_ .text.deflateReset)
. = ALIGN(0x1000);
*(.text.png_write_chunk .text.png_check_keyword .text.png_text_compress .text.png_write_compressed_data_out .text.png_write_tEXt .text.png_write_zTXt .text.png_write_iTXt .text.png_write_tIME)
. = ALIGN(0x1000);
*(.text.png_zlib_release .text.png_zlib_claim .text.png_safecat)
. = ALIGN(0x1000);
*(.text.png_write_IEND .text.png_write_end)
. = ALIGN(0x1000);
*(.text.png_write_IHDR .text.png_write_PLTE .text.png_write_gAMA_fixed .text.png_write_sRGB .text.png_write_iCCP .text.png_write_sPLT .text.png_write_sBIT .text.png_write_cHRM_fixed .text.png_write_tRNS .text.png_write_bKGD .text.png_write_hIST .text.png_write_oFFs .text.png_write_pCAL .text.png_write_sCAL_s .text.png_write_pHYs .text.png_write_info_before_PLTE .text.png_write_info)
. = ALIGN(0x1000);
*(.text.png_write_IDAT .text.png_write_start_row .text.png_write_finish_row .text.png_do_write_interlace .text.png_write_find_filter .text.png_write_row .text.png_write_flush .text.png_do_write_transformations .text.png_do_pack .text.png_do_shift .text.png_do_write_swap_alpha .text.png_do_write_intrapixel)
. = ALIGN(0x1000);
*(.text.png_create_write_struct_2)
. = ALIGN(0x1000);
*(.text.channel_colormanage_noop)
. = ALIGN(0x1000);
*(.text.WriteData)
. = ALIGN(0x1000);
*(.text.Flush)
. = ALIGN(0x1000);
*(.text.imb_loadpng)
. = ALIGN(0x1000);
*(.text.png_set_text_2)
. = ALIGN(0x1000);
*(.text.png_check_IHDR)
. = ALIGN(0x1000);
*(.text.png_free_data)
. = ALIGN(0x1000);
*(.text.png_user_version_check)
. = ALIGN(0x1000);
*(.text.png_do_invert .text.png_do_strip_channel .text.png_do_bgr .text.png_do_check_palette_indexes)
. = ALIGN(0x1000);
*(.text.png_check_cHRM_fixed)
. = ALIGN(0x1000);
*(.text.inflate)
. = ALIGN(0x1000);
*(.text.inflate_table .text.inflate_fast)
. = ALIGN(0x1000);
*(.text.updatewindow)
. = ALIGN(0x1000);
*(.text.png_chunk_error)
. = ALIGN(0x1000);
*(.text.png_format_buffer)
. = ALIGN(0x1000);
*(.text.png_set_hIST .text.png_set_pCAL .text.png_set_PLTE .text.png_set_iCCP .text.png_set_tRNS .text.png_set_sPLT .text.png_set_unknown_chunks .text.png_decompress_chunk .text.png_handle_IHDR .text.png_handle_PLTE .text.png_handle_gAMA .text.png_handle_sBIT .text.png_handle_cHRM .text.png_handle_sRGB .text.png_handle_iCCP .text.png_handle_sPLT .text.png_handle_tRNS .text.png_handle_bKGD .text.png_handle_hIST .text.png_handle_pHYs .text.png_handle_oFFs .text.png_handle_pCAL .text.png_handle_sCAL .text.png_handle_tIME .text.png_handle_tEXt .text.png_handle_zTXt .text.png_handle_iTXt .text.png_handle_unknown)
. = ALIGN(0x1000);
*(.text.png_set_sCAL_s)
. = ALIGN(0x1000);
*(.text.png_check_fp_number)
. = ALIGN(0x1000);
*(.text.png_XYZ_from_xy)
. = ALIGN(0x1000);
*(.text.png_read_chunk_header)
. = ALIGN(0x1000);
*(.text.png_crc_finish)
. = ALIGN(0x1000);
*(.text.png_read_end)
. = ALIGN(0x1000);
*(.text.png_read_finish_row .text.png_read_row .text.png_do_read_intrapixel)
. = ALIGN(0x1000);
*(.text.png_combine_row)
. = ALIGN(0x1000);
*(.text.png_do_read_interlace .text.png_do_read_transformations .text.png_do_expand_palette .text.png_do_expand .text.png_do_rgb_to_gray .text.png_do_gray_to_rgb .text.png_do_compose .text.png_do_gamma .text.png_do_quantize .text.png_do_unshift .text.png_do_unpack .text.png_do_read_filler .text.png_do_read_swap_alpha)
. = ALIGN(0x1000);
*(.text.png_destroy_gamma_table)
. = ALIGN(0x1000);
*(.text.png_build_gamma_table .text.png_build_16bit_table .text.png_read_start_row .text.png_init_read_transformations)
. = ALIGN(0x1000);
*(.text.png_read_image)
. = ALIGN(0x1000);
*(.text.png_read_sig .text.png_read_info)
. = ALIGN(0x1000);
*(.text.png_read_destroy)
. = ALIGN(0x1000);
*(.text.png_create_read_struct_2)
. = ALIGN(0x1000);
*(.text.imb_png_error)
. = ALIGN(0x1000);
*(.text.imb_png_warning)
. = ALIGN(0x1000);
*(.text.ReadData)
. = ALIGN(0x1000);
*(.text.blend_color_overlay_byte)
. = ALIGN(0x1000);
*(.text.blend_color_hardlight_byte)
. = ALIGN(0x1000);
*(.text.blend_color_vividlight_byte)
. = ALIGN(0x1000);
*(.text.blend_color_color_byte)
. = ALIGN(0x1000);
*(.text.blend_color_hue_byte)
. = ALIGN(0x1000);
*(.text.blend_color_saturation_byte)
. = ALIGN(0x1000);
*(.text.blend_color_luminosity_byte)
. = ALIGN(0x1000);
*(.text.blend_color_vividlight_float)
. = ALIGN(0x1000);
*(.text.blend_color_color_float)
. = ALIGN(0x1000);
*(.text.blend_color_hue_float)
. = ALIGN(0x1000);
*(.text.blend_color_saturation_float)
. = ALIGN(0x1000);
*(.text.blend_color_luminosity_float)
. = ALIGN(0x1000);
*(.text.blend_color_exclusion_byte)
. = ALIGN(0x1000);
*(.text.blend_color_difference_byte)
. = ALIGN(0x1000);
*(.text.blend_color_linearlight_byte)
. = ALIGN(0x1000);
*(.text.blend_color_pinlight_byte)
. = ALIGN(0x1000);
*(.text.blend_color_softlight_byte)
. = ALIGN(0x1000);
*(.text.blend_color_screen_byte)
. = ALIGN(0x1000);
*(.text.blend_color_dodge_byte)
. = ALIGN(0x1000);
*(.text.blend_color_linearburn_byte)
. = ALIGN(0x1000);
*(.text.blend_color_burn_byte)
. = ALIGN(0x1000);
*(.text.blend_color_add_alpha_byte)
. = ALIGN(0x1000);
*(.text.blend_color_erase_alpha_byte)
. = ALIGN(0x1000);
*(.text.blend_color_darken_byte)
. = ALIGN(0x1000);
*(.text.blend_color_lighten_byte)
. = ALIGN(0x1000);
*(.text.blend_color_mul_byte)
. = ALIGN(0x1000);
*(.text.blend_color_sub_byte)
. = ALIGN(0x1000);
*(.text.blend_color_add_byte)
. = ALIGN(0x1000);
*(.text.blend_color_mix_byte)
. = ALIGN(0x1000);
*(.text.blend_color_exclusion_float)
. = ALIGN(0x1000);
*(.text.blend_color_difference_float)
. = ALIGN(0x1000);
*(.text.blend_color_linearlight_float)
. = ALIGN(0x1000);
*(.text.blend_color_pinlight_float)
. = ALIGN(0x1000);
*(.text.blend_color_softlight_float)
. = ALIGN(0x1000);
*(.text.blend_color_screen_float)
. = ALIGN(0x1000);
*(.text.blend_color_dodge_float)
. = ALIGN(0x1000);
*(.text.blend_color_linearburn_float)
. = ALIGN(0x1000);
*(.text.blend_color_burn_float)
. = ALIGN(0x1000);
*(.text.blend_color_hardlight_float)
. = ALIGN(0x1000);
*(.text.blend_color_overlay_float)
. = ALIGN(0x1000);
*(.text.blend_color_add_alpha_float)
. = ALIGN(0x1000);
*(.text.blend_color_erase_alpha_float)
. = ALIGN(0x1000);
*(.text.blend_color_darken_float)
. = ALIGN(0x1000);
*(.text.blend_color_lighten_float)
. = ALIGN(0x1000);
*(.text.blend_color_mul_float)
. = ALIGN(0x1000);
*(.text.blend_color_sub_float)
. = ALIGN(0x1000);
*(.text.blend_color_add_float)
. = ALIGN(0x1000);
*(.text.blend_color_mix_float)
. = ALIGN(0x1000);
*(.text.scale_thread_init)
. = ALIGN(0x1000);
*(.text.do_scale_thread)
. = ALIGN(0x1000);
*(.text.bilinear_interpolation.60749)
. = ALIGN(0x1000);
*(.text.imb_savetarga .text.makebody_tga)
. = ALIGN(0x1000);
*(.text.tga_out1)
. = ALIGN(0x1000);
*(.text.tga_out2)
. = ALIGN(0x1000);
*(.text.tga_out3)
. = ALIGN(0x1000);
*(.text.tga_out4)
. = ALIGN(0x1000);
*(.text.imb_is_a_targa)
. = ALIGN(0x1000);
*(.text.imb_loadtarga .text.decodetarga)
. = ALIGN(0x1000);
*(.text.imb_addrectImBuf)
. = ALIGN(0x1000);
*(.text.BLI_ghash_remove)
. = ALIGN(0x1000);
*(.text.imb_tile_cache_tile_free)
. = ALIGN(0x1000);
*(.text.IMB_freeImBuf .text.IMB_moviecache_free)
. = ALIGN(0x1000);
*(.text.keyhash)
. = ALIGN(0x1000);
*(.text.keycmp)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_ptrhash)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_ptrcmp)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_uinthash_v4)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_uinthash_v4_cmp)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_inthash_p)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_intcmp)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_strhash_p)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_strcmp)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_pairhash)
. = ALIGN(0x1000);
*(.text.BLI_ghashutil_paircmp)
. = ALIGN(0x1000);
*(.text.range_compare)
. = ALIGN(0x1000);
*(.text.box_areasort)
. = ALIGN(0x1000);
*(.text.vertex_sort)
. = ALIGN(0x1000);
*(.text.pointref_cmp_yx)
. = ALIGN(0x1000);
*(.text.delete_single_file)
. = ALIGN(0x1000);
*(.text.delete_callback_post)
. = ALIGN(0x1000);
*(.text.copy_single_file)
. = ALIGN(0x1000);
*(.text.copy_callback_pre)
. = ALIGN(0x1000);
*(.text.linearrgb_to_srgb)
. = ALIGN(0x1000);
*(.text.dist_Real)
. = ALIGN(0x1000);
*(.text.dist_Squared)
. = ALIGN(0x1000);
*(.text.dist_Manhattan)
. = ALIGN(0x1000);
*(.text.dist_Chebychev)
. = ALIGN(0x1000);
*(.text.dist_MinkovskyH)
. = ALIGN(0x1000);
*(.text.dist_Minkovsky4)
. = ALIGN(0x1000);
*(.text.dist_Minkovsky)
. = ALIGN(0x1000);
*(.text.cellNoise)
. = ALIGN(0x1000);
*(.text.cellNoiseU)
. = ALIGN(0x1000);
*(.text.voronoi_Cr)
. = ALIGN(0x1000);
*(.text.voronoi_F1F2)
. = ALIGN(0x1000);
*(.text.voronoi_F4)
. = ALIGN(0x1000);
*(.text.voronoi_F3)
. = ALIGN(0x1000);
*(.text.voronoi_F2)
. = ALIGN(0x1000);
*(.text.voronoi_F1)
. = ALIGN(0x1000);
*(.text.newPerlinU)
. = ALIGN(0x1000);
*(.text.newPerlin)
. = ALIGN(0x1000);
*(.text.orgPerlinNoiseU)
. = ALIGN(0x1000);
*(.text.mg_fBm)
. = ALIGN(0x1000);
*(.text.orgBlenderNoiseS)
. = ALIGN(0x1000);
*(.text.orgBlenderNoise)
. = ALIGN(0x1000);
*(.text.orgPerlinNoise)
. = ALIGN(0x1000);
*(.text.noise3_perlin)
. = ALIGN(0x1000);
*(.text.voronoi_F1S)
. = ALIGN(0x1000);
*(.text.voronoi_F2S)
. = ALIGN(0x1000);
*(.text.voronoi_F3S)
. = ALIGN(0x1000);
*(.text.voronoi_F4S)
. = ALIGN(0x1000);
*(.text.voronoi_F1F2S)
. = ALIGN(0x1000);
*(.text.voronoi_CrS)
. = ALIGN(0x1000);
*(.text.mg_MultiFractal)
. = ALIGN(0x1000);
*(.text.mg_HybridMultiFractal)
. = ALIGN(0x1000);
*(.text.mg_RidgedMultiFractal)
. = ALIGN(0x1000);
*(.text.uniquename_unique_check)
. = ALIGN(0x1000);
*(.text.vergpoly)
. = ALIGN(0x1000);
*(.text.vergscdata)
. = ALIGN(0x1000);
*(.text.BLI_sortutil_cmp_float)
. = ALIGN(0x1000);
*(.text.BLI_sortutil_cmp_float_reverse)
. = ALIGN(0x1000);
*(.text.bli_compare)
. = ALIGN(0x1000);
*(.text.BLI_natstrcmp)
. = ALIGN(0x1000);
*(.text.parallel_range_func)
. = ALIGN(0x1000);
*(.text.BLI_lock_malloc_thread)
. = ALIGN(0x1000);
*(.text.BLI_unlock_malloc_thread)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_ButtonsD2Ev)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_ButtonsD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK13GHOST_Buttons3getE17GHOST_TButtonMask)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_Buttons3setE17GHOST_TButtonMaskb)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_Buttons5clearEv)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_ButtonsC2Ev)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_IEventConsumerD2Ev)
. = ALIGN(0x1000);
*(.text._ZN27GHOST_CallbackEventConsumerD0Ev)
. = ALIGN(0x1000);
*(.text._ZN27GHOST_CallbackEventConsumer12processEventEP12GHOST_IEvent)
. = ALIGN(0x1000);
*(.text._ZN27GHOST_CallbackEventConsumerC2EPFiP19GHOST_EventHandle__PvES2_)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_ContextD2Ev)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNoneD0Ev)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone11swapBuffersEv)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone22activateDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone24initializeDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone20updateDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone20releaseNativeHandlesEv)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone15setSwapIntervalEi)
. = ALIGN(0x1000);
*(.text._ZN17GHOST_ContextNone15getSwapIntervalERi)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_ContextD0Ev)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_Context20updateDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_Context15setSwapIntervalEi)
. = ALIGN(0x1000);
*(.text._ZN13GHOST_Context15getSwapIntervalERi)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_DisplayManagerD2Ev)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_DisplayManagerD0Ev)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_DisplayManager10initializeEv .text._ZN20GHOST_DisplayManager18initializeSettingsEv .text._ZNSt6vectorIS_I20GHOST_DisplaySettingSaIS0_EESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_DisplayManager14getNumDisplaysERh)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_DisplayManager21getNumDisplaySettingsEhRi)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_DisplayManager17getDisplaySettingEhiR20GHOST_DisplaySetting)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_DisplayManager24getCurrentDisplaySettingEhR20GHOST_DisplaySetting)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_DisplayManager24setCurrentDisplaySettingEhRK20GHOST_DisplaySetting)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_DisplayManagerC2Ev)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManagerD0Ev)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManagerD2Ev)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager12getNumEventsEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager12getNumEventsE16GHOST_TEventType)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager9peekEventEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager9pushEventEP12GHOST_IEvent .text._ZNSt5dequeIP12GHOST_IEventSaIS1_EE17_M_reallocate_mapEmb)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager13dispatchEventEP12GHOST_IEvent)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager13dispatchEventEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager14dispatchEventsEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager11addConsumerEP20GHOST_IEventConsumer)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager14removeConsumerEP20GHOST_IEventConsumer)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager18removeWindowEventsEP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager16removeTypeEventsE16GHOST_TEventTypeP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZNSt5dequeIP12GHOST_IEventSaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager8popEventEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManager13disposeEventsEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_EventManagerC2Ev)
. = ALIGN(0x1000);
*(.text._ZN24GHOST_DisplayManagerNULLD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK24GHOST_DisplayManagerNULL14getNumDisplaysERh)
. = ALIGN(0x1000);
*(.text._ZNK24GHOST_DisplayManagerNULL21getNumDisplaySettingsEhRi)
. = ALIGN(0x1000);
*(.text._ZNK24GHOST_DisplayManagerNULL17getDisplaySettingEhiR20GHOST_DisplaySetting)
. = ALIGN(0x1000);
*(.text._ZNK24GHOST_DisplayManagerNULL24getCurrentDisplaySettingEhR20GHOST_DisplaySetting)
. = ALIGN(0x1000);
*(.text._ZN24GHOST_DisplayManagerNULL24setCurrentDisplaySettingEhRK20GHOST_DisplaySetting)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_SystemNULLD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL15getMilliSecondsEv)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL14getNumDisplaysEv)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL24getMainDisplayDimensionsERjS0_)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL23getAllDisplayDimensionsERjS0_)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_SystemNULL12createWindowERK10STR_Stringiijj18GHOST_TWindowState25GHOST_TDrawingContextTypebbti)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_SystemNULL13processEventsEb)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL17getCursorPositionERiS0_)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_SystemNULL17setCursorPositionEii)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_SystemNULL13toggleConsoleEi)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL12getClipboardEb)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL12putClipboardEPcb)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_SystemNULL4initEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System15getTimerManagerEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System15getEventManagerEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System16getWindowManagerEv)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL15getModifierKeysER18GHOST_ModifierKeys)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_SystemNULL10getButtonsER13GHOST_Buttons)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULLD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL8getValidEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window21getDrawingContextTypeEv)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL8setTitleERK10STR_String)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL8getTitleER10STR_String)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL15getWindowBoundsER10GHOST_Rect)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL15getClientBoundsER10GHOST_Rect)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL14setClientWidthEj)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL15setClientHeightEj)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL13setClientSizeEjj)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL14screenToClientEiiRiS0_)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL14clientToScreenEiiRiS0_)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL8getStateEv)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL8setStateE18GHOST_TWindowState)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL8setOrderE18GHOST_TWindowOrder)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL11swapBuffersEv)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL22activateDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL10invalidateEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window11getUserDataEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window11setUserDataEPv)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL13GetTabletDataEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window14setProgressBarEf)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window14endProgressBarEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window14getCursorShapeEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window19getCursorVisibilityEv)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL15beginFullScreenEv)
. = ALIGN(0x1000);
*(.text._ZNK16GHOST_WindowNULL13endFullScreenEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window18getNativePixelSizeEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window17getCursorGrabModeEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window23getCursorGrabModeIsWarpEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window20getCursorGrabInitPosERiS0_)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window18getCursorGrabAccumERiS0_)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window18setCursorGrabAccumEii)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL17newDrawingContextE25GHOST_TDrawingContextType)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL25setWindowCursorVisibilityEb)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL19setWindowCursorGrabE21GHOST_TGrabCursorMode)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL20setWindowCursorShapeE21GHOST_TStandardCursor)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL26setWindowCustomCursorShapeEPA2_hS1_ii)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_WindowNULL26setWindowCustomCursorShapeEPhS0_iiiiii)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_ModifierKeysD2Ev)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_ModifierKeysD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK18GHOST_ModifierKeys3getE22GHOST_TModifierKeyMask)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_ModifierKeys3setE22GHOST_TModifierKeyMaskb)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_ModifierKeys5clearEv)
. = ALIGN(0x1000);
*(.text._ZNK18GHOST_ModifierKeys6equalsERKS_)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_ModifierKeysC2Ev)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_RectD2Ev)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_RectD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect8getWidthEv)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect9getHeightEv)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect3setEiiii)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect7isEmptyEv)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect7isValidEv)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect5insetEi)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect9unionRectERKS_)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect10unionPointEii)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect9wrapPointERiS0_i)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect8isInsideEii)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect13getVisibilityERS_)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect9setCenterEii)
. = ALIGN(0x1000);
*(.text._ZN10GHOST_Rect9setCenterEiiii)
. = ALIGN(0x1000);
*(.text._ZNK10GHOST_Rect4clipERS_)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_SystemD2Ev)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_SystemD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System15getMilliSecondsEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System12installTimerEyyPFvP16GHOST_ITimerTaskyEPv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System11removeTimerEP16GHOST_ITimerTask)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System13disposeWindowEP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System11validWindowEP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System15beginFullScreenERK20GHOST_DisplaySettingPP13GHOST_IWindowbt)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System16updateFullScreenERK20GHOST_DisplaySettingPP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System13endFullScreenEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System13getFullScreenEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System14useNativePixelEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System14dispatchEventsEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System16addEventConsumerEP20GHOST_IEventConsumer)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System19removeEventConsumerEP20GHOST_IEventConsumer)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System19getModifierKeyStateE22GHOST_TModifierKeyMaskRb)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System14getButtonStateE17GHOST_TButtonMaskRb)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_System11confirmQuitEP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System4initEv)
. = ALIGN(0x1000);
*(.text._ZNSt11_Deque_baseIP12GHOST_IEventSaIS1_EE17_M_initialize_mapEm)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System4exitEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System9pushEventEP12GHOST_IEvent)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_System22createFullScreenWindowEPP12GHOST_WindowRK20GHOST_DisplaySettingbt)
. = ALIGN(0x1000);
*(.text._ZN16GHOST_ITimerTaskD2Ev)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTaskD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK15GHOST_TimerTask12getTimerProcEv)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTask12setTimerProcEPFvP16GHOST_ITimerTaskyE)
. = ALIGN(0x1000);
*(.text._ZNK15GHOST_TimerTask11getUserDataEv)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTask11setUserDataEPv)
. = ALIGN(0x1000);
*(.text._ZNK15GHOST_TimerTask8getStartEv)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTask8setStartEy)
. = ALIGN(0x1000);
*(.text._ZNK15GHOST_TimerTask11getIntervalEv)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTask11setIntervalEy)
. = ALIGN(0x1000);
*(.text._ZNK15GHOST_TimerTask7getNextEv)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTask7setNextEy)
. = ALIGN(0x1000);
*(.text._ZNK15GHOST_TimerTask10getAuxDataEv)
. = ALIGN(0x1000);
*(.text._ZN15GHOST_TimerTask10setAuxDataEj)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManagerD2Ev)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManagerD0Ev)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager12getNumTimersEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager13getTimerFoundEP15GHOST_TimerTask)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager8addTimerEP15GHOST_TimerTask)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager11removeTimerEP15GHOST_TimerTask)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager12nextFireTimeEv)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager10fireTimersEy)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManager9fireTimerEyP15GHOST_TimerTask)
. = ALIGN(0x1000);
*(.text._ZN18GHOST_TimerManagerC2Ev)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_WindowD2Ev)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_WindowD0Ev)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window8getValidEv)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window11getOSWindowEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window21setDrawingContextTypeE25GHOST_TDrawingContextType)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window22setAcceptDragOperationEb)
. = ALIGN(0x1000);
*(.text._ZNK12GHOST_Window22canAcceptDragOperationEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window16setModifiedStateEb)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window16getModifiedStateEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window11swapBuffersEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window15setSwapIntervalEi)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window15getSwapIntervalERi)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window17getNumOfAASamplesEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window22activateDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window14setCursorShapeE21GHOST_TStandardCursor)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window20setCustomCursorShapeEPA2_hS1_ii)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window20setCustomCursorShapeEPhS0_iiiiii)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window19setCursorVisibilityEb)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window13setCursorGrabE21GHOST_TGrabCursorModeP10GHOST_RectPi)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window19getCursorGrabBoundsER10GHOST_Rect)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window20updateDrawingContextEv)
. = ALIGN(0x1000);
*(.text._ZN12GHOST_Window19setWindowCursorGrabE21GHOST_TGrabCursorMode)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManagerD2Ev)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManagerD0Ev)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager9addWindowEP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager12removeWindowEPK13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZNK19GHOST_WindowManager14getWindowFoundEPK13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZNK19GHOST_WindowManager13getFullScreenEv)
. = ALIGN(0x1000);
*(.text._ZNK19GHOST_WindowManager19getFullScreenWindowEv)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager15beginFullScreenEP13GHOST_IWindowb)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager13endFullScreenEv)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager15setActiveWindowEP13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZNK19GHOST_WindowManager15getActiveWindowEv)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager17setWindowInactiveEPK13GHOST_IWindow)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManager31getWindowAssociatedWithOSWindowEPv)
. = ALIGN(0x1000);
*(.text._ZN19GHOST_WindowManagerC2Ev)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_SystemPathsX11D2Ev)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_SystemPathsX11D0Ev)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_SystemPathsX1112getSystemDirEiPKc)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_SystemPathsX1110getUserDirEiPKc)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_SystemPathsX1112getBinaryDirEv)
. = ALIGN(0x1000);
*(.text._ZNK20GHOST_SystemPathsX1122addToSystemRecentFilesEPKc)
. = ALIGN(0x1000);
*(.text._ZN20GHOST_SystemPathsX11C2Ev)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Ev)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Ec)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Eci)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2EPKc)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2EPKci)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2ERKS_)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2ERKS_i)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2EPKciS1_i)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Ei)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Em)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Ef)
. = ALIGN(0x1000);
*(.text._ZN10STR_StringC2Ed)
. = ALIGN(0x1000);
*(.text._ZN28MEM_CacheLimiterHandleCClassD2Ev)
. = ALIGN(0x1000);
*(.text.__clang_call_terminate)
. = ALIGN(0x1000);
*(.text._ZN22MEM_CacheLimiterCClassD2Ev)
. = ALIGN(0x1000);
*(.text.MEM_guarded_check_memory_integrity)
. = ALIGN(0x1000);
*(.text.MEM_guarded_set_error_callback)
. = ALIGN(0x1000);
*(.text.MEM_guarded_set_lock_callback)
. = ALIGN(0x1000);
*(.text.MEM_guarded_set_memory_debug)
. = ALIGN(0x1000);
*(.text.MEM_guarded_allocN_len)
. = ALIGN(0x1000);
*(.text.MEM_guarded_dupallocN)
. = ALIGN(0x1000);
*(.text.MEM_guarded_mapallocN)
. = ALIGN(0x1000);
*(.text.MEM_guarded_reallocN_id)
. = ALIGN(0x1000);
*(.text.MEM_guarded_recallocN_id)
. = ALIGN(0x1000);
*(.text.MEM_guarded_freeN)
. = ALIGN(0x1000);
*(.text.MEM_guarded_mallocN)
. = ALIGN(0x1000);
*(.text.check_memlist)
. = ALIGN(0x1000);
*(.text.MEM_guarded_mallocN_aligned)
. = ALIGN(0x1000);
*(.text.MEM_guarded_callocN)
. = ALIGN(0x1000);
*(.text.MEM_guarded_printmemlist_stats)
. = ALIGN(0x1000);
*(.text.compare_name.62122)
. = ALIGN(0x1000);
*(.text.compare_len)
. = ALIGN(0x1000);
*(.text.MEM_guarded_callbackmemlist)
. = ALIGN(0x1000);
*(.text.MEM_guarded_printmemlist)
. = ALIGN(0x1000);
*(.text.MEM_guarded_printmemlist_pydict)
. = ALIGN(0x1000);
*(.text.print_error)
. = ALIGN(0x1000);
*(.text.MEM_guarded_get_peak_memory)
. = ALIGN(0x1000);
*(.text.MEM_guarded_reset_peak_memory)
. = ALIGN(0x1000);
*(.text.MEM_guarded_get_memory_in_use)
. = ALIGN(0x1000);
*(.text.MEM_guarded_get_mapped_memory_in_use)
. = ALIGN(0x1000);
*(.text.MEM_guarded_get_memory_blocks_in_use)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_allocN_len)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_dupallocN)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_mapallocN)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_mallocN_aligned)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_mallocN)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_reallocN_id)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_recallocN_id)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_freeN)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_callocN)
. = ALIGN(0x1000);
*(.text.print_error.62163)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_printmemlist_pydict)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_printmemlist)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_callbackmemlist)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_printmemlist_stats)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_set_error_callback)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_check_memory_integrity)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_set_lock_callback)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_set_memory_debug)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_get_memory_in_use)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_get_mapped_memory_in_use)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_get_memory_blocks_in_use)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_reset_peak_memory)
. = ALIGN(0x1000);
*(.text.MEM_lockfree_get_peak_memory)
. = ALIGN(0x1000);
*(.text.OCIO_displayTransformSetLooksOverrideEnabled)
. = ALIGN(0x1000);
*(.text.OCIO_setupGLSLDraw)
. = ALIGN(0x1000);
*(.text._ZN9IOCIOImplD2Ev)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImplD0Ev)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl16getCurrentConfigEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl16setCurrentConfigEPKP23OCIO_ConstConfigRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl19configCreateFromEnvEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl20configCreateFromFileEPKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl13configReleaseEPP23OCIO_ConstConfigRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl23configGetNumColorSpacesEPP23OCIO_ConstConfigRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl30configGetColorSpaceNameByIndexEPP23OCIO_ConstConfigRcPtr__i)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl19configGetColorSpaceEPP23OCIO_ConstConfigRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl27configGetIndexForColorSpaceEPP23OCIO_ConstConfigRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl22colorSpaceIsInvertibleEPP27OCIO_ConstColorSpaceRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl16colorSpaceIsDataEPP27OCIO_ConstColorSpaceRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl17colorSpaceReleaseEPP27OCIO_ConstColorSpaceRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl23configGetDefaultDisplayEPP23OCIO_ConstConfigRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl20configGetNumDisplaysEPP23OCIO_ConstConfigRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl16configGetDisplayEPP23OCIO_ConstConfigRcPtr__i)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl20configGetDefaultViewEPP23OCIO_ConstConfigRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl17configGetNumViewsEPP23OCIO_ConstConfigRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl13configGetViewEPP23OCIO_ConstConfigRcPtr__PKci)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl30configGetDisplayColorSpaceNameEPP23OCIO_ConstConfigRcPtr__PKcS4_)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl17configGetNumLooksEPP23OCIO_ConstConfigRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl24configGetLookNameByIndexEPP23OCIO_ConstConfigRcPtr__i)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl13configGetLookEPP23OCIO_ConstConfigRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl19lookGetProcessSpaceEPP21OCIO_ConstLookRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl11lookReleaseEPP21OCIO_ConstLookRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl27configGetProcessorWithNamesEPP23OCIO_ConstConfigRcPtr__PKcS4_)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl18configGetProcessorEPP23OCIO_ConstConfigRcPtr__PP26OCIO_ConstTransformRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl14processorApplyEPP26OCIO_ConstProcessorRcPtr__PP22OCIO_PackedImageDesc__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl24processorApply_predivideEPP26OCIO_ConstProcessorRcPtr__PP22OCIO_PackedImageDesc__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl17processorApplyRGBEPP26OCIO_ConstProcessorRcPtr__Pf)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl18processorApplyRGBAEPP26OCIO_ConstProcessorRcPtr__Pf)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl28processorApplyRGBA_predivideEPP26OCIO_ConstProcessorRcPtr__Pf)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl16processorReleaseEPP26OCIO_ConstProcessorRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl17colorSpaceGetNameEPP27OCIO_ConstColorSpaceRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl24colorSpaceGetDescriptionEPP27OCIO_ConstColorSpaceRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl19colorSpaceGetFamilyEPP27OCIO_ConstColorSpaceRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl22createDisplayTransformEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl38displayTransformSetInputColorSpaceNameEPP28OCIO_DisplayTransformRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl26displayTransformSetDisplayEPP28OCIO_DisplayTransformRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl23displayTransformSetViewEPP28OCIO_DisplayTransformRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl28displayTransformSetDisplayCCEPP28OCIO_DisplayTransformRcPtr__PP26OCIO_ConstTransformRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl27displayTransformSetLinearCCEPP28OCIO_DisplayTransformRcPtr__PP26OCIO_ConstTransformRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl32displayTransformSetLooksOverrideEPP28OCIO_DisplayTransformRcPtr__PKc)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl39displayTransformSetLooksOverrideEnabledEPP28OCIO_DisplayTransformRcPtr__b)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl23displayTransformReleaseEPP28OCIO_DisplayTransformRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl26createOCIO_PackedImageDescEPfllllll)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl27OCIO_PackedImageDescReleaseEPP22OCIO_PackedImageDesc__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl23createExponentTransformEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl25exponentTransformSetValueEPP29OCIO_ExponentTransformRcPtr__PKf)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl24exponentTransformReleaseEPP29OCIO_ExponentTransformRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl21createMatrixTransformEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl23matrixTransformSetValueEPP27OCIO_MatrixTransformRcPtr__PKfS4_)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl22matrixTransformReleaseEPP27OCIO_MatrixTransformRcPtr__)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl20matrixTransformScaleEPfS0_PKf)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl15supportGLSLDrawEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl13setupGLSLDrawEPP18OCIO_GLSLDrawStatePP26OCIO_ConstProcessorRcPtr__P25OCIO_CurveMappingSettingsfb)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl14finishGLSLDrawEP18OCIO_GLSLDrawState)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl11freeGLStateEP18OCIO_GLSLDrawState)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl16getVersionStringEv)
. = ALIGN(0x1000);
*(.text._ZN12FallbackImpl13getVersionHexEv)
. = ALIGN(0x1000);
*(.text._GLOBAL__sub_I_range_tree_c_api.cc)
. = ALIGN(0x1000);
*(.text.deflate_stored)
. = ALIGN(0x1000);
*(.text.deflate_fast)
. = ALIGN(0x1000);
*(.text.deflate_slow)
. = ALIGN(0x1000);
*(.text.adler32)
. = ALIGN(0x1000);
*(.text.crc32)
. = ALIGN(0x1000);
*(.text.fill_window)
. = ALIGN(0x1000);
*(.text._tr_stored_block .text._tr_flush_block .text.build_tree .text.compress_block .text.send_tree)
. = ALIGN(0x1000);
*(.text.longest_match)
. = ALIGN(0x1000);
*(.text.zcalloc)
. = ALIGN(0x1000);
*(.text.zcfree)
. = ALIGN(0x1000);
*(.text.png_zalloc)
. = ALIGN(0x1000);
*(.text.png_warning)
. = ALIGN(0x1000);
*(.text.png_zfree)
. = ALIGN(0x1000);
*(.text.png_read_filter_row_sub)
. = ALIGN(0x1000);
*(.text.png_read_filter_row_up)
. = ALIGN(0x1000);
*(.text.png_read_filter_row_avg)
. = ALIGN(0x1000);
*(.text.png_read_filter_row_paeth_1byte_pixel)
. = ALIGN(0x1000);
*(.text.png_read_filter_row_paeth_multibyte_pixel)
. = ALIGN(0x1000);
*(.text.png_push_fill_buffer)
. = ALIGN(0x1000);
*(.text.png_default_read_data)
. = ALIGN(0x1000);
*(.text.png_default_write_data)
. = ALIGN(0x1000);
*(.text.png_error .text.png_default_error .text.png_longjmp)
. = ALIGN(0x1000);
*(.text.png_default_flush)
. = ALIGN(0x1000);
*(.text.*)
/* .gnu.warning sections are handled specially by elf32.em.  */
*(.gnu.warning)
}
.fini ALIGN(0x1000):
{
KEEP (*(SORT_NONE(.fini)))
}
PROVIDE (__etext = .);
PROVIDE (_etext = .);
PROVIDE (etext = .);
.rodata         : { *(.rodata .rodata.* .gnu.linkonce.r.*) }
.rodata1        : { *(.rodata1) }
.eh_frame_hdr : { *(.eh_frame_hdr) *(.eh_frame_entry .eh_frame_entry.*) }
.eh_frame       : ONLY_IF_RO { KEEP (*(.eh_frame)) *(.eh_frame.*) }
.gcc_except_table   : ONLY_IF_RO { *(.gcc_except_table
.gcc_except_table.*) }
.gnu_extab   : ONLY_IF_RO { *(.gnu_extab*) }
/* These sections are generated by the Sun/Oracle C++ compiler.  */
.exception_ranges   : ONLY_IF_RO { *(.exception_ranges
.exception_ranges*) }
/* Adjust the address for the data segment.  We want to adjust up to
the same address within the page on the next page up.  */
. = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE));
/* Exception handling  */
.eh_frame       : ONLY_IF_RW { KEEP (*(.eh_frame)) *(.eh_frame.*) }
.gnu_extab      : ONLY_IF_RW { *(.gnu_extab) }
.gcc_except_table   : ONLY_IF_RW { *(.gcc_except_table .gcc_except_table.*) }
.exception_ranges   : ONLY_IF_RW { *(.exception_ranges .exception_ranges*) }
/* Thread Local Storage sections  */
.tdata	  : { *(.tdata .tdata.* .gnu.linkonce.td.*) }
.tbss		  : { *(.tbss .tbss.* .gnu.linkonce.tb.*) *(.tcommon) }
.preinit_array     :
{
PROVIDE_HIDDEN (__preinit_array_start = .);
KEEP (*(.preinit_array))
PROVIDE_HIDDEN (__preinit_array_end = .);
}
.init_array     :
{
PROVIDE_HIDDEN (__init_array_start = .);
KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))
KEEP (*(.init_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors))
PROVIDE_HIDDEN (__init_array_end = .);
}
.fini_array     :
{
PROVIDE_HIDDEN (__fini_array_start = .);
KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))
KEEP (*(.fini_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors))
PROVIDE_HIDDEN (__fini_array_end = .);
}
.ctors          :
{
/* gcc uses crtbegin.o to find the start of
the constructors, so we make sure it is
first.  Because this is a wildcard, it
doesn't matter if the user does not
actually link against crtbegin.o; the
linker won't look for a file to match a
wildcard.  The wildcard also means that it
doesn't matter which directory crtbegin.o
is in.  */
KEEP (*crtbegin.o(.ctors))
KEEP (*crtbegin?.o(.ctors))
/* We don't want to include the .ctor section from
the crtend.o file until after the sorted ctors.
The .ctor section from the crtend file contains the
end of ctors marker and it must be last */
KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .ctors))
KEEP (*(SORT(.ctors.*)))
KEEP (*(.ctors))
}
.dtors          :
{
KEEP (*crtbegin.o(.dtors))
KEEP (*crtbegin?.o(.dtors))
KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .dtors))
KEEP (*(SORT(.dtors.*)))
KEEP (*(.dtors))
}
.jcr            : { KEEP (*(.jcr)) }
.data.rel.ro : { *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*) *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*) }
.dynamic        : { *(.dynamic) }
.got            : { *(.got.plt) *(.igot.plt) *(.got) *(.igot) }
. = DATA_SEGMENT_RELRO_END (0, .);
.data           :
{
*(.data .data.* .gnu.linkonce.d.*)
SORT(CONSTRUCTORS)
}
.data1          : { *(.data1) }
_edata = .; PROVIDE (edata = .);
. = .;
__bss_start = .;
.bss            :
{
*(.dynbss)
*(.bss .bss.* .gnu.linkonce.b.*)
*(COMMON)
/* Align here to ensure that the .bss section occupies space up to
_end.  Align after .bss to ensure correct alignment even if the
.bss section disappears because there are no input sections.
FIXME: Why do we need it? When there is no .bss section, we don't
pad the .data section.  */
. = ALIGN(. != 0 ? 64 / 8 : 1);
}
.lbss   :
{
*(.dynlbss)
*(.lbss .lbss.* .gnu.linkonce.lb.*)
*(LARGE_COMMON)
}
. = ALIGN(64 / 8);
. = SEGMENT_START("ldata-segment", .);
.lrodata   ALIGN(CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 1)) :
{
*(.lrodata .lrodata.* .gnu.linkonce.lr.*)
}
.ldata   ALIGN(CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 1)) :
{
*(.ldata .ldata.* .gnu.linkonce.l.*)
. = ALIGN(. != 0 ? 64 / 8 : 1);
}
. = ALIGN(64 / 8);
_end = .; PROVIDE (end = .);
. = DATA_SEGMENT_END (.);
/* Stabs debugging sections.  */
.stab          0 : { *(.stab) }
.stabstr       0 : { *(.stabstr) }
.stab.excl     0 : { *(.stab.excl) }
.stab.exclstr  0 : { *(.stab.exclstr) }
.stab.index    0 : { *(.stab.index) }
.stab.indexstr 0 : { *(.stab.indexstr) }
.comment       0 : { *(.comment) }
/* DWARF debug sections.
Symbols in the DWARF debugging sections are relative to the beginning
of the section so we begin them at 0.  */
/* DWARF 1 */
.debug          0 : { *(.debug) }
.line           0 : { *(.line) }
/* GNU DWARF 1 extensions */
.debug_srcinfo  0 : { *(.debug_srcinfo) }
.debug_sfnames  0 : { *(.debug_sfnames) }
/* DWARF 1.1 and DWARF 2 */
.debug_aranges  0 : { *(.debug_aranges) }
.debug_pubnames 0 : { *(.debug_pubnames) }
/* DWARF 2 */
.debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }
.debug_abbrev   0 : { *(.debug_abbrev) }
.debug_line     0 : { *(.debug_line .debug_line.* .debug_line_end ) }
.debug_frame    0 : { *(.debug_frame) }
.debug_str      0 : { *(.debug_str) }
.debug_loc      0 : { *(.debug_loc) }
.debug_macinfo  0 : { *(.debug_macinfo) }
/* SGI/MIPS DWARF 2 extensions */
.debug_weaknames 0 : { *(.debug_weaknames) }
.debug_funcnames 0 : { *(.debug_funcnames) }
.debug_typenames 0 : { *(.debug_typenames) }
.debug_varnames  0 : { *(.debug_varnames) }
/* DWARF 3 */
.debug_pubtypes 0 : { *(.debug_pubtypes) }
.debug_ranges   0 : { *(.debug_ranges) }
/* DWARF Extension.  */
.debug_macro    0 : { *(.debug_macro) }
.debug_addr     0 : { *(.debug_addr) }
.gnu.attributes 0 : { KEEP (*(.gnu.attributes)) }
/DISCARD/ : { *(.note.GNU-stack) *(.gnu_debuglink) *(.gnu.lto_*) }
}
